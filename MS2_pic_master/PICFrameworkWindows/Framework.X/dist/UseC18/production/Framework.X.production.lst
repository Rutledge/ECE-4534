

Microchip Technology PIC18 LITE Macro Assembler V1.20 build 52243 
                                                                                               Wed Oct 16 21:03:53 2013

Microchip Technology Omniscient Code Generator (Lite mode) build 52243
     1                           	processor	18F45J10
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    14                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    50                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    51                           	psect	text33,global,reloc=2,class=CODE,delta=1
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1
    53                           	psect	text35,global,reloc=2,class=CODE,delta=1
    54                           	psect	text36,global,reloc=2,class=CODE,delta=1
    55                           	psect	text37,global,reloc=2,class=CODE,delta=1
    56                           	psect	text38,global,reloc=2,class=CODE,delta=1
    57                           	psect	text39,global,reloc=2,class=CODE,delta=1
    58                           	psect	text40,global,reloc=2,class=CODE,delta=1
    59                           	psect	text41,global,reloc=2,class=CODE,delta=1
    60                           	psect	text42,global,reloc=2,class=CODE,delta=1
    61                           	psect	text43,global,reloc=2,class=CODE,delta=1
    62                           	psect	text44,global,reloc=2,class=CODE,delta=1
    63                           	psect	text45,global,reloc=2,class=CODE,delta=1
    64                           	psect	text46,global,reloc=2,class=CODE,delta=1
    65                           	psect	text47,global,reloc=2,class=CODE,delta=1
    66                           	psect	text48,global,reloc=2,class=CODE,delta=1
    67                           	psect	text49,global,reloc=2,class=CODE,delta=1
    68                           	psect	text50,global,reloc=2,class=CODE,delta=1
    69                           	psect	text51,global,reloc=2,class=CODE,delta=1
    70                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    71                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    72  0000                     
    73                           	psect	idataCOMRAM
    74  001828                     __pidataCOMRAM:
    75                           	opt stack 0
    76                           
    77                           ;initializer for _first_time
    78  001828  0001               	dw	1
    79                           
    80                           ;initializer for _test
    81  00182A  01                 	db	1
    82  0000                     _ADRESH	set	4036
    83  0000                     _ADRESL	set	4035
    84  0000                     _INTCONbits	set	4082
    85  0000                     _IPR1bits	set	3999
    86  0000                     _LATB	set	3978
    87  0000                     _LATBbits	set	3978
    88  0000                     _OSCCON	set	4051
    89  0000                     _OSCCONbits	set	4051
    90  0000                     _OSCTUNEbits	set	3995
    91  0000                     _PIE1bits	set	3997
    92  0000                     _PIR1bits	set	3998
    93  0000                     _RCONbits	set	4048
    94  0000                     _RCREG	set	4014
    95  0000                     _RCSTA	set	4011
    96  0000                     _RCSTAbits	set	4011
    97  0000                     _SPBRG	set	4015
    98  0000                     _SPBRGH	set	4016
    99  0000                     _SSP1CON1	set	4038
   100  0000                     _SSP1CON2	set	4037
   101  0000                     _SSP1CON2bits	set	4037
   102  0000                     _SSP1STAT	set	4039
   103  0000                     _SSP1STATbits	set	4039
   104  0000                     _SSPADD	set	4040
   105  0000                     _SSPBUF	set	4041
   106  0000                     _SSPCON1	set	4038
   107  0000                     _SSPCON1bits	set	4038
   108  0000                     _SSPCON2	set	4037
   109  0000                     _SSPCON2bits	set	4037
   110  0000                     _SSPSTAT	set	4039
   111  0000                     _SSPSTATbits	set	4039
   112  0000                     _T1CON	set	4045
   113  0000                     _T1CONbits	set	4045
   114  0000                     _TMR0H	set	4055
   115  0000                     _TMR0L	set	4054
   116  0000                     _TMR1H	set	4047
   117  0000                     _TMR1L	set	4046
   118  0000                     _TRISA	set	3986
   119  0000                     _TRISB	set	3987
   120  0000                     _TRISCbits	set	3988
   121  0000                     _TXREG	set	4013
   122  0000                     _TXSTA	set	4012
   123  0000                     _TXSTAbits	set	4012
   124  0000                     _LATA0	set	31816
   125  0000                     _LATA1	set	31817
   126  0000                     _LATA2	set	31818
   127  0000                     _LATA3	set	31819
   128  0000                     _LATA5	set	31821
   129                           
   130                           	psect	nvCOMRAM
   131  000062                     __pnvCOMRAM:
   132                           	opt stack 0
   133  000062                     _uc_ptr:
   134                           	opt stack 0
   135  000062                     	ds	2
   136                           
   137                           	psect	nvBANK0
   138  0000AF                     __pnvBANK0:
   139                           	opt stack 0
   140  0000AF                     _ic_ptr:
   141                           	opt stack 0
   142  0000AF                     	ds	2
   143                           
   144                           ; #config settings
   145  0000                     
   146                           	psect	cinit
   147  001376                     __pcinit:
   148                           	opt stack 0
   149  001376                     start_initialization:
   150                           	opt stack 0
   151  001376                     __initialization:
   152                           	opt stack 0
   153                           
   154                           ; Clear objects allocated to BANK2 (54 bytes)
   155  001376  EE02  F04C         	lfsr	0,__pbssBANK2
   156  00137A  0E36               	movlw	54
   157  00137C                     clear_0:
   158  00137C  6AEE               	clrf	postinc0,c
   159  00137E  06E8               	decf	wreg,f,c
   160  001380  E1FD               	bnz	clear_0
   161                           
   162                           ; Clear objects allocated to BANK1 (212 bytes)
   163  001382  EE01  F000         	lfsr	0,__pbssBANK1
   164  001386  0ED4               	movlw	212
   165  001388                     clear_1:
   166  001388  6AEE               	clrf	postinc0,c
   167  00138A  06E8               	decf	wreg,f,c
   168  00138C  E1FD               	bnz	clear_1
   169                           
   170                           ; Clear objects allocated to BANK0 (3 bytes)
   171  00138E  0100               	movlb	0
   172  001390  6BAE               	clrf	(__pbssBANK0+2)& (0+255),b
   173  001392  6BAD               	clrf	(__pbssBANK0+1)& (0+255),b
   174  001394  6BAC               	clrf	__pbssBANK0& (0+255),b
   175                           
   176                           ; Clear objects allocated to COMRAM (38 bytes)
   177  001396  EE00  F039         	lfsr	0,__pbssCOMRAM
   178  00139A  0E26               	movlw	38
   179  00139C                     clear_2:
   180  00139C  6AEE               	clrf	postinc0,c
   181  00139E  06E8               	decf	wreg,f,c
   182  0013A0  E1FD               	bnz	clear_2
   183                           
   184                           ; Initialize objects allocated to COMRAM (3 bytes)
   185                           ; load TBLPTR registers with __pidataCOMRAM
   186  0013A2  0E28               	movlw	low __pidataCOMRAM
   187  0013A4  6EF6               	movwf	tblptrl,c
   188  0013A6  0E18               	movlw	high __pidataCOMRAM
   189  0013A8  6EF7               	movwf	tblptrh,c
   190  0013AA  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   191  0013AC  6EF8               	movwf	tblptru,c
   192  0013AE  0009               	tblrd		*+	;fetch initializer
   193  0013B0  CFF5 F05F          	movff	tablat,__pdataCOMRAM
   194  0013B4  0009               	tblrd		*+	;fetch initializer
   195  0013B6  CFF5 F060          	movff	tablat,__pdataCOMRAM+1
   196  0013BA  0009               	tblrd		*+	;fetch initializer
   197  0013BC  CFF5 F061          	movff	tablat,__pdataCOMRAM+2
   198  0013C0                     end_of_initialization:
   199                           	opt stack 0
   200  0013C0                     __end_of__initialization:
   201                           	opt stack 0
   202  0013C0  0E00               	movlw	low (__Lmediumconst shr (0+16))
   203  0013C2  6EF8               	movwf	tblptru,c
   204  0013C4  0100               	movlb	0
   205  0013C6  EF67  F000         	goto	_main	;jump to C main() function
   206                           tblptru	equ	0xFF8
   207                           tblptrh	equ	0xFF7
   208                           tblptrl	equ	0xFF6
   209                           tablat	equ	0xFF5
   210                           postinc0	equ	0xFEE
   211                           wreg	equ	0xFE8
   212                           
   213                           	psect	bssCOMRAM
   214  000039                     __pbssCOMRAM:
   215                           	opt stack 0
   216  000039                     _msgbuffer:
   217                           	opt stack 0
   218  000039                     	ds	11
   219  000044                     _bufferForUART:
   220                           	opt stack 0
   221  000044                     	ds	4
   222  000048                     _ADCValue:
   223                           	opt stack 0
   224  000048                     	ds	2
   225  00004A                     _buflen1:
   226                           	opt stack 0
   227  00004A                     	ds	2
   228  00004C                     _counter2:
   229                           	opt stack 0
   230  00004C                     	ds	2
   231  00004E                     _length:
   232                           	opt stack 0
   233  00004E                     	ds	2
   234  000050                     _message3:
   235                           	opt stack 0
   236  000050                     	ds	2
   237  000052                     _MQ_Main_Willing_to_block:
   238                           	opt stack 0
   239  000052                     	ds	1
   240  000053                     _USART_Status:
   241                           	opt stack 0
   242  000053                     	ds	1
   243  000054                     _count:
   244                           	opt stack 0
   245  000054                     	ds	1
   246  000055                     _last_reg_recvd:
   247                           	opt stack 0
   248  000055                     	ds	1
   249  000056                     _magnitude:
   250                           	opt stack 0
   251  000056                     	ds	1
   252  000057                     _message:
   253                           	opt stack 0
   254  000057                     	ds	1
   255  000058                     _motor_direction:
   256                           	opt stack 0
   257  000058                     	ds	1
   258  000059                     _msgtype:
   259                           	opt stack 0
   260  000059                     	ds	1
   261  00005A                     _testbuffer3:
   262                           	opt stack 0
   263  00005A                     	ds	1
   264  00005B                     _testbuffer4:
   265                           	opt stack 0
   266  00005B                     	ds	1
   267  00005C                     _testbuffer5:
   268                           	opt stack 0
   269  00005C                     	ds	1
   270  00005D                     _testbuffer6:
   271                           	opt stack 0
   272  00005D                     	ds	1
   273  00005E                     _time:
   274                           	opt stack 0
   275  00005E                     	ds	1
   276                           tblptru	equ	0xFF8
   277                           tblptrh	equ	0xFF7
   278                           tblptrl	equ	0xFF6
   279                           tablat	equ	0xFF5
   280                           postinc0	equ	0xFEE
   281                           wreg	equ	0xFE8
   282                           
   283                           	psect	dataCOMRAM
   284  00005F                     __pdataCOMRAM:
   285                           	opt stack 0
   286  00005F                     _first_time:
   287                           	opt stack 0
   288  00005F                     	ds	2
   289  000061                     _test:
   290                           	opt stack 0
   291  000061                     	ds	1
   292                           tblptru	equ	0xFF8
   293                           tblptrh	equ	0xFF7
   294                           tblptrl	equ	0xFF6
   295                           tablat	equ	0xFF5
   296                           postinc0	equ	0xFEE
   297                           wreg	equ	0xFE8
   298                           
   299                           	psect	bssBANK0
   300  0000AC                     __pbssBANK0:
   301                           	opt stack 0
   302  0000AC                     _counter:
   303                           	opt stack 0
   304  0000AC                     	ds	2
   305  0000AE                     _buffertest:
   306                           	opt stack 0
   307  0000AE                     	ds	1
   308                           tblptru	equ	0xFF8
   309                           tblptrh	equ	0xFF7
   310                           tblptrl	equ	0xFF6
   311                           tablat	equ	0xFF5
   312                           postinc0	equ	0xFEE
   313                           wreg	equ	0xFE8
   314                           
   315                           	psect	bssBANK1
   316  000100                     __pbssBANK1:
   317                           	opt stack 0
   318  000100                     _testbuffer:
   319                           	opt stack 0
   320  000100                     	ds	50
   321  000132                     _FromMainLow_MQ:
   322                           	opt stack 0
   323  000132                     	ds	54
   324  000168                     _ToMainHigh_MQ:
   325                           	opt stack 0
   326  000168                     	ds	54
   327  00019E                     _ToMainLow_MQ:
   328                           	opt stack 0
   329  00019E                     	ds	54
   330                           tblptru	equ	0xFF8
   331                           tblptrh	equ	0xFF7
   332                           tblptrl	equ	0xFF6
   333                           tablat	equ	0xFF5
   334                           postinc0	equ	0xFEE
   335                           wreg	equ	0xFE8
   336                           
   337                           	psect	bssBANK2
   338  00024C                     __pbssBANK2:
   339                           	opt stack 0
   340  00024C                     _FromMainHigh_MQ:
   341                           	opt stack 0
   342  00024C                     	ds	54
   343                           tblptru	equ	0xFF8
   344                           tblptrh	equ	0xFF7
   345                           tblptrl	equ	0xFF6
   346                           tablat	equ	0xFF5
   347                           postinc0	equ	0xFEE
   348                           wreg	equ	0xFE8
   349                           
   350                           	psect	cstackBANK2
   351  000200                     __pcstackBANK2:
   352                           	opt stack 0
   353  000200                     main@testbuffer1:
   354                           	opt stack 0
   355                           
   356                           ; 1 bytes @ 0x0
   357  000200                     	ds	1
   358  000201                     main@testbuffer2:
   359                           	opt stack 0
   360                           
   361                           ; 1 bytes @ 0x1
   362  000201                     	ds	1
   363  000202                     main@testbuffer3:
   364                           	opt stack 0
   365                           
   366                           ; 1 bytes @ 0x2
   367  000202                     	ds	1
   368  000203                     main@testbuffer4:
   369                           	opt stack 0
   370                           
   371                           ; 1 bytes @ 0x3
   372  000203                     	ds	1
   373  000204                     main@testbuffer5:
   374                           	opt stack 0
   375                           
   376                           ; 1 bytes @ 0x4
   377  000204                     	ds	1
   378  000205                     main@motorthread_data:
   379                           	opt stack 0
   380                           
   381                           ; 4 bytes @ 0x5
   382  000205                     	ds	4
   383  000209                     main@uthread_data:
   384                           	opt stack 0
   385                           
   386                           ; 2 bytes @ 0x9
   387  000209                     	ds	2
   388  00020B                     main@t0thread_data:
   389                           	opt stack 0
   390                           
   391                           ; 2 bytes @ 0xB
   392  00020B                     	ds	2
   393  00020D                     main@last_reg_recvd:
   394                           	opt stack 0
   395                           
   396                           ; 1 bytes @ 0xD
   397  00020D                     	ds	1
   398  00020E                     main@msgbuffer:
   399                           	opt stack 0
   400                           
   401                           ; 11 bytes @ 0xE
   402  00020E                     	ds	11
   403  000219                     main@test_var:
   404                           	opt stack 0
   405                           
   406                           ; 2 bytes @ 0x19
   407  000219                     	ds	2
   408  00021B                     main@t1thread_data:
   409                           	opt stack 0
   410                           
   411                           ; 2 bytes @ 0x1B
   412  00021B                     	ds	2
   413  00021D                     main@msgtype:
   414                           	opt stack 0
   415                           
   416                           ; 1 bytes @ 0x1D
   417  00021D                     	ds	1
   418  00021E                     main@length:
   419                           	opt stack 0
   420                           
   421                           ; 1 bytes @ 0x1E
   422  00021E                     	ds	1
   423  00021F                     main@uc:
   424                           	opt stack 0
   425                           
   426                           ; 16 bytes @ 0x1F
   427  00021F                     	ds	16
   428  00022F                     main@ic:
   429                           	opt stack 0
   430                           
   431                           ; 29 bytes @ 0x2F
   432  00022F                     	ds	29
   433                           tblptru	equ	0xFF8
   434                           tblptrh	equ	0xFF7
   435                           tblptrl	equ	0xFF6
   436                           tablat	equ	0xFF5
   437                           postinc0	equ	0xFEE
   438                           wreg	equ	0xFE8
   439                           
   440                           	psect	cstackBANK0
   441  000080                     __pcstackBANK0:
   442                           	opt stack 0
   443  000080                     ??_InterruptHandlerHigh:
   444                           
   445                           ; 0 bytes @ 0x0
   446  000080                     	ds	14
   447  00008E                     ?_init_uart_recv:
   448                           	opt stack 0
   449  00008E                     ?_init_i2c:
   450                           	opt stack 0
   451  00008E                     ?_init_timer1_lthread:
   452                           	opt stack 0
   453  00008E                     ?_OpenTimer1:
   454                           	opt stack 0
   455  00008E                     ?_OpenUSART:
   456                           	opt stack 0
   457  00008E                     ?_putIntoUARTBuffer:
   458                           	opt stack 0
   459  00008E                     ?_start_i2c_slave_reply:
   460                           	opt stack 0
   461  00008E                     ?_Delay1KTCYx:
   462                           	opt stack 0
   463  00008E                     ?_OpenI2C1:
   464                           	opt stack 0
   465  00008E                     ?_WriteUSART:
   466                           	opt stack 0
   467  00008E                     ?_init_queue:
   468                           	opt stack 0
   469  00008E                     ?_check_msg:
   470                           	opt stack 0
   471  00008E                     ?_timer0_lthread:
   472                           	opt stack 0
   473  00008E                     ?_timer1_lthread:
   474                           	opt stack 0
   475  00008E                     ?_motor_control_thread:
   476                           	opt stack 0
   477  00008E                     ?_memcpy:
   478                           	opt stack 0
   479  00008E                     ?_in_high_int:
   480                           	opt stack 0
   481  00008E                     start_i2c_slave_reply@length:
   482                           	opt stack 0
   483  00008E                     OpenTimer1@config:
   484                           	opt stack 0
   485  00008E                     OpenUSART@config:
   486                           	opt stack 0
   487  00008E                     WriteUSART@data:
   488                           	opt stack 0
   489  00008E                     OpenI2C1@sync_mode:
   490                           	opt stack 0
   491  00008E                     Delay1KTCYx@unit:
   492                           	opt stack 0
   493  00008E                     init_queue@qptr:
   494                           	opt stack 0
   495  00008E                     check_msg@qptr:
   496                           	opt stack 0
   497  00008E                     init_i2c@ic:
   498                           	opt stack 0
   499  00008E                     putIntoUARTBuffer@buffer:
   500                           	opt stack 0
   501  00008E                     init_uart_recv@uc:
   502                           	opt stack 0
   503  00008E                     init_timer1_lthread@tptr:
   504                           	opt stack 0
   505  00008E                     memcpy@d1:
   506                           	opt stack 0
   507                           
   508                           ; 2 bytes @ 0xE
   509  00008E                     	ds	1
   510  00008F                     ?_uart_lthread:
   511                           	opt stack 0
   512  00008F                     OpenI2C1@slew:
   513                           	opt stack 0
   514  00008F                     start_i2c_slave_reply@msg:
   515                           	opt stack 0
   516  00008F                     OpenUSART@spbrg:
   517                           	opt stack 0
   518                           
   519                           ; 2 bytes @ 0xF
   520  00008F                     	ds	1
   521  000090                     ?_i2c_configure_master:
   522                           	opt stack 0
   523  000090                     ??_init_queue:
   524  000090                     ??_check_msg:
   525  000090                     ?_in_low_int:
   526                           	opt stack 0
   527  000090                     i2c_configure_master@slave_addr:
   528                           	opt stack 0
   529  000090                     memcpy@s1:
   530                           	opt stack 0
   531                           
   532                           ; 2 bytes @ 0x10
   533  000090                     	ds	1
   534  000091                     ??_i2c_configure_master:
   535  000091                     ??_start_i2c_slave_reply:
   536  000091                     init_queue@i:
   537                           	opt stack 0
   538  000091                     uart_lthread@msgtype:
   539                           	opt stack 0
   540                           
   541                           ; 2 bytes @ 0x11
   542  000091                     	ds	1
   543  000092                     ??_init_queues:
   544  000092                     ?_in_main:
   545                           	opt stack 0
   546  000092                     memcpy@n:
   547                           	opt stack 0
   548                           
   549                           ; 2 bytes @ 0x12
   550  000092                     	ds	1
   551  000093                     i2c_configure_master@i:
   552                           	opt stack 0
   553  000093                     uart_lthread@length:
   554                           	opt stack 0
   555                           
   556                           ; 2 bytes @ 0x13
   557  000093                     	ds	1
   558  000094                     ??_block_on_To_msgqueues:
   559  000094                     timer0_lthread@msgbuffer:
   560                           	opt stack 0
   561  000094                     motor_control_thread@msgbuffer:
   562                           	opt stack 0
   563  000094                     memcpy@d:
   564                           	opt stack 0
   565                           
   566                           ; 2 bytes @ 0x14
   567  000094                     	ds	1
   568  000095                     uart_lthread@msgbuffer:
   569                           	opt stack 0
   570                           
   571                           ; 2 bytes @ 0x15
   572  000095                     	ds	1
   573  000096                     ??_motor_control_thread:
   574  000096                     timer0_lthread@msgval:
   575                           	opt stack 0
   576  000096                     memcpy@s:
   577                           	opt stack 0
   578                           
   579                           ; 2 bytes @ 0x16
   580  000096                     	ds	1
   581  000097                     ??_uart_lthread:
   582                           
   583                           ; 0 bytes @ 0x17
   584  000097                     	ds	1
   585  000098                     ?_recv_msg:
   586                           	opt stack 0
   587  000098                     recv_msg@qptr:
   588                           	opt stack 0
   589  000098                     motor_control_thread@i:
   590                           	opt stack 0
   591                           
   592                           ; 2 bytes @ 0x18
   593  000098                     	ds	2
   594  00009A                     recv_msg@maxlength:
   595                           	opt stack 0
   596  00009A                     uart_lthread@i:
   597                           	opt stack 0
   598                           
   599                           ; 1 bytes @ 0x1A
   600  00009A                     	ds	1
   601  00009B                     recv_msg@msgtype:
   602                           	opt stack 0
   603                           
   604                           ; 2 bytes @ 0x1B
   605  00009B                     	ds	2
   606  00009D                     recv_msg@data:
   607                           	opt stack 0
   608                           
   609                           ; 2 bytes @ 0x1D
   610  00009D                     	ds	2
   611  00009F                     ??_recv_msg:
   612                           
   613                           ; 0 bytes @ 0x1F
   614  00009F                     	ds	2
   615  0000A1                     recv_msg@slot:
   616                           	opt stack 0
   617                           
   618                           ; 1 bytes @ 0x21
   619  0000A1                     	ds	1
   620  0000A2                     recv_msg@tlength:
   621                           	opt stack 0
   622                           
   623                           ; 2 bytes @ 0x22
   624  0000A2                     	ds	2
   625  0000A4                     recv_msg@qmsg:
   626                           	opt stack 0
   627                           
   628                           ; 2 bytes @ 0x24
   629  0000A4                     	ds	2
   630  0000A6                     ?_ToMainHigh_recvmsg:
   631                           	opt stack 0
   632  0000A6                     ?_ToMainLow_recvmsg:
   633                           	opt stack 0
   634  0000A6                     ToMainLow_recvmsg@maxlength:
   635                           	opt stack 0
   636  0000A6                     ToMainHigh_recvmsg@maxlength:
   637                           	opt stack 0
   638                           
   639                           ; 1 bytes @ 0x26
   640  0000A6                     	ds	1
   641  0000A7                     ToMainLow_recvmsg@msgtype:
   642                           	opt stack 0
   643  0000A7                     ToMainHigh_recvmsg@msgtype:
   644                           	opt stack 0
   645                           
   646                           ; 2 bytes @ 0x27
   647  0000A7                     	ds	2
   648  0000A9                     ToMainLow_recvmsg@data:
   649                           	opt stack 0
   650  0000A9                     ToMainHigh_recvmsg@data:
   651                           	opt stack 0
   652                           
   653                           ; 2 bytes @ 0x29
   654  0000A9                     	ds	2
   655  0000AB                     ??_main:
   656                           
   657                           ; 0 bytes @ 0x2B
   658  0000AB                     	ds	1
   659                           tblptru	equ	0xFF8
   660                           tblptrh	equ	0xFF7
   661                           tblptrl	equ	0xFF6
   662                           tablat	equ	0xFF5
   663                           postinc0	equ	0xFEE
   664                           wreg	equ	0xFE8
   665                           
   666                           	psect	cstackCOMRAM
   667  000001                     __pcstackCOMRAM:
   668                           	opt stack 0
   669  000001                     ??_uart_tx_int_handler:
   670  000001                     ?_i2c_master_recv:
   671                           	opt stack 0
   672  000001                     i2c_master_recv@length:
   673                           	opt stack 0
   674                           
   675                           ; 1 bytes @ 0x0
   676  000001                     	ds	1
   677  000002                     ??_timer1_int_handler:
   678  000002                     uart_tx_int_handler@testbuffer:
   679                           	opt stack 0
   680                           
   681                           ; 1 bytes @ 0x1
   682  000002                     	ds	1
   683  000003                     ??_InterruptHandlerLow:
   684                           
   685                           ; 0 bytes @ 0x2
   686  000003                     	ds	17
   687  000014                     ?_WriteTimer0:
   688                           	opt stack 0
   689  000014                     ?i2_check_msg:
   690                           	opt stack 0
   691  000014                     ?_ReadADC:
   692                           	opt stack 0
   693  000014                     ?i2_in_high_int:
   694                           	opt stack 0
   695  000014                     ?i2_memcpy:
   696                           	opt stack 0
   697  000014                     ReadUSART@data:
   698                           	opt stack 0
   699  000014                     WriteTimer0@timer0:
   700                           	opt stack 0
   701  000014                     i2check_msg@qptr:
   702                           	opt stack 0
   703  000014                     i2memcpy@d1:
   704                           	opt stack 0
   705                           
   706                           ; 2 bytes @ 0x13
   707  000014                     	ds	2
   708  000016                     ??i2_check_msg:
   709  000016                     ?i2_in_low_int:
   710                           	opt stack 0
   711  000016                     WriteTimer0@timer:
   712                           	opt stack 0
   713  000016                     i2memcpy@s1:
   714                           	opt stack 0
   715                           
   716                           ; 2 bytes @ 0x15
   717  000016                     	ds	2
   718  000018                     i2memcpy@n:
   719                           	opt stack 0
   720                           
   721                           ; 2 bytes @ 0x17
   722  000018                     	ds	2
   723  00001A                     i2memcpy@d:
   724                           	opt stack 0
   725                           
   726                           ; 2 bytes @ 0x19
   727  00001A                     	ds	2
   728  00001C                     i2memcpy@s:
   729                           	opt stack 0
   730                           
   731                           ; 2 bytes @ 0x1B
   732  00001C                     	ds	2
   733  00001E                     ?_send_msg:
   734                           	opt stack 0
   735  00001E                     ?i2_recv_msg:
   736                           	opt stack 0
   737  00001E                     send_msg@qptr:
   738                           	opt stack 0
   739  00001E                     i2recv_msg@qptr:
   740                           	opt stack 0
   741                           
   742                           ; 2 bytes @ 0x1D
   743  00001E                     	ds	2
   744  000020                     send_msg@length:
   745                           	opt stack 0
   746  000020                     i2recv_msg@maxlength:
   747                           	opt stack 0
   748                           
   749                           ; 1 bytes @ 0x1F
   750  000020                     	ds	1
   751  000021                     send_msg@msgtype:
   752                           	opt stack 0
   753  000021                     i2recv_msg@msgtype:
   754                           	opt stack 0
   755                           
   756                           ; 2 bytes @ 0x20
   757  000021                     	ds	1
   758  000022                     send_msg@data:
   759                           	opt stack 0
   760                           
   761                           ; 2 bytes @ 0x21
   762  000022                     	ds	1
   763  000023                     i2recv_msg@data:
   764                           	opt stack 0
   765                           
   766                           ; 2 bytes @ 0x22
   767  000023                     	ds	1
   768  000024                     ??_send_msg:
   769                           
   770                           ; 0 bytes @ 0x23
   771  000024                     	ds	1
   772  000025                     ??i2_recv_msg:
   773  000025                     send_msg@tlength:
   774                           	opt stack 0
   775                           
   776                           ; 2 bytes @ 0x24
   777  000025                     	ds	2
   778  000027                     send_msg@slot:
   779                           	opt stack 0
   780  000027                     i2recv_msg@slot:
   781                           	opt stack 0
   782                           
   783                           ; 1 bytes @ 0x26
   784  000027                     	ds	1
   785  000028                     send_msg@qmsg:
   786                           	opt stack 0
   787  000028                     i2recv_msg@tlength:
   788                           	opt stack 0
   789                           
   790                           ; 2 bytes @ 0x27
   791  000028                     	ds	2
   792  00002A                     ?_ToMainLow_sendmsg:
   793                           	opt stack 0
   794  00002A                     ?_ToMainHigh_sendmsg:
   795                           	opt stack 0
   796  00002A                     ToMainLow_sendmsg@length:
   797                           	opt stack 0
   798  00002A                     ToMainHigh_sendmsg@length:
   799                           	opt stack 0
   800  00002A                     i2recv_msg@qmsg:
   801                           	opt stack 0
   802                           
   803                           ; 2 bytes @ 0x29
   804  00002A                     	ds	1
   805  00002B                     ToMainLow_sendmsg@msgtype:
   806                           	opt stack 0
   807  00002B                     ToMainHigh_sendmsg@msgtype:
   808                           	opt stack 0
   809                           
   810                           ; 1 bytes @ 0x2A
   811  00002B                     	ds	1
   812  00002C                     ?_FromMainHigh_recvmsg:
   813                           	opt stack 0
   814  00002C                     FromMainHigh_recvmsg@maxlength:
   815                           	opt stack 0
   816  00002C                     ToMainLow_sendmsg@data:
   817                           	opt stack 0
   818  00002C                     ToMainHigh_sendmsg@data:
   819                           	opt stack 0
   820                           
   821                           ; 2 bytes @ 0x2B
   822  00002C                     	ds	1
   823  00002D                     FromMainHigh_recvmsg@msgtype:
   824                           	opt stack 0
   825                           
   826                           ; 2 bytes @ 0x2C
   827  00002D                     	ds	1
   828  00002E                     ??_i2c_master_handler:
   829  00002E                     ??_uart_recv_int_handler:
   830  00002E                     
   831                           ; 0 bytes @ 0x2D
   832  00002E                     	ds	1
   833  00002F                     FromMainHigh_recvmsg@data:
   834                           	opt stack 0
   835                           
   836                           ; 2 bytes @ 0x2E
   837  00002F                     	ds	2
   838  000031                     ??_timer0_int_handler:
   839  000031                     
   840                           ; 0 bytes @ 0x30
   841  000031                     	ds	2
   842  000033                     timer0_int_handler@length:
   843                           	opt stack 0
   844                           
   845                           ; 2 bytes @ 0x32
   846  000033                     	ds	1
   847  000034                     i2c_master_handler@data_written:
   848                           	opt stack 0
   849                           
   850                           ; 1 bytes @ 0x33
   851  000034                     	ds	1
   852  000035                     i2c_master_handler@msg_sent:
   853                           	opt stack 0
   854  000035                     timer0_int_handler@msgtype:
   855                           	opt stack 0
   856                           
   857                           ; 2 bytes @ 0x34
   858  000035                     	ds	1
   859  000036                     i2c_master_handler@i2c_data:
   860                           	opt stack 0
   861                           
   862                           ; 1 bytes @ 0x35
   863  000036                     	ds	1
   864  000037                     i2c_master_handler@overrun_error:
   865                           	opt stack 0
   866  000037                     timer0_int_handler@val:
   867                           	opt stack 0
   868                           
   869                           ; 2 bytes @ 0x36
   870  000037                     	ds	1
   871  000038                     i2c_master_handler@data_read:
   872                           	opt stack 0
   873                           
   874                           ; 1 bytes @ 0x37
   875  000038                     	ds	1
   876                           tblptru	equ	0xFF8
   877                           tblptrh	equ	0xFF7
   878                           tblptrl	equ	0xFF6
   879                           tablat	equ	0xFF5
   880                           postinc0	equ	0xFEE
   881                           wreg	equ	0xFE8
   882                           
   883 ;;
   884 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   885 ;;
   886 ;; *************** function _main *****************
   887 ;; Defined at:
   888 ;;		line 88 in file "../src/main.c"
   889 ;; Parameters:    Size  Location     Type
   890 ;;		None
   891 ;; Auto vars:     Size  Location     Type
   892 ;;  testbuffer5     1    4[BANK2 ] unsigned char 
   893 ;;  testbuffer4     1    3[BANK2 ] unsigned char 
   894 ;;  testbuffer3     1    2[BANK2 ] unsigned char 
   895 ;;  testbuffer2     1    1[BANK2 ] unsigned char 
   896 ;;  testbuffer1     1    0[BANK2 ] unsigned char 
   897 ;;  ic             29   47[BANK2 ] struct __i2c_comm
   898 ;;  uc             16   31[BANK2 ] struct __uart_comm
   899 ;;  msgbuffer      11   14[BANK2 ] unsigned char [11]
   900 ;;  motorthread_    4    5[BANK2 ] struct __motor_control_t
   901 ;;  t1thread_dat    2   27[BANK2 ] struct __timer1_thread_s
   902 ;;  test_var        2   25[BANK2 ] int 
   903 ;;  t0thread_dat    2   11[BANK2 ] struct __timer0_thread_s
   904 ;;  uthread_data    2    9[BANK2 ] struct __uart_thread_str
   905 ;;  length          1   30[BANK2 ] char 
   906 ;;  msgtype         1   29[BANK2 ] unsigned char 
   907 ;;  last_reg_rec    1   13[BANK2 ] unsigned char 
   908 ;;  i               1    0        unsigned char 
   909 ;;  c               1    0        unsigned char 
   910 ;; Return value:  Size  Location     Type
   911 ;;		None               void
   912 ;; Registers used:
   913 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   914 ;; Tracked objects:
   915 ;;		On entry : 0/0
   916 ;;		On exit  : 0/0
   917 ;;		Unchanged: 0/0
   918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
   919 ;;      Params:         0       0       0       0       0
   920 ;;      Locals:         0       0       0      76       0
   921 ;;      Temps:          0       1       0       0       0
   922 ;;      Totals:         0       1       0      76       0
   923 ;;Total ram usage:       77 bytes
   924 ;; Hardware stack levels required when called:   12
   925 ;; This function calls:
   926 ;;		_enable_interrupts
   927 ;;		_init_uart_recv
   928 ;;		_init_i2c
   929 ;;		_i2c_configure_master
   930 ;;		_init_timer1_lthread
   931 ;;		_init_queues
   932 ;;		_OpenTimer1
   933 ;;		_OpenUSART
   934 ;;		_block_on_To_msgqueues
   935 ;;		_ToMainHigh_recvmsg
   936 ;;		_uart_lthread
   937 ;;		_timer0_lthread
   938 ;;		_putIntoUARTBuffer
   939 ;;		_start_i2c_slave_reply
   940 ;;		_ToMainLow_recvmsg
   941 ;;		_timer1_lthread
   942 ;;		_motor_control_thread
   943 ;; This function is called by:
   944 ;;		Startup code after reset
   945 ;; This function uses a non-reentrant model
   946 ;;
   947                           
   948                           	psect	text0
   949  0000CE                     __ptext0:
   950                           	opt stack 0
   951  0000CE                     _main:
   952                           	opt stack 19
   953                           
   954                           ;main.c: 89: char c;
   955                           ;main.c: 90: signed char length;
   956                           ;main.c: 91: unsigned char msgtype;
   957                           ;main.c: 92: int test_var = 0;
   958                           
   959                           ; BSR set to: 0
   960                           ;incstack = 0
   961                           ;incstack = 0
   962  0000CE  0E00               	movlw	0
   963  0000D0  0102               	movlb	2	; () banked
   964  0000D2  0102               	movlb	2	; () banked
   965  0000D4  6F1A               	movwf	(main@test_var+1)& (0+255),b
   966  0000D6  0E00               	movlw	0
   967  0000D8  0102               	movlb	2	; () banked
   968  0000DA  6F19               	movwf	main@test_var& (0+255),b
   969                           
   970                           ;main.c: 93: unsigned char last_reg_recvd;
   971                           ;main.c: 94: uart_comm uc;
   972                           ;main.c: 95: i2c_comm ic;
   973                           ;main.c: 96: unsigned char msgbuffer[10 + 1];
   974                           ;main.c: 97: unsigned char i;
   975                           ;main.c: 98: uart_thread_struct uthread_data;
   976                           ;main.c: 99: timer1_thread_struct t1thread_data;
   977                           ;main.c: 100: timer0_thread_struct t0thread_data;
   978                           ;main.c: 101: motor_control_thread_struct motorthread_data;
   979                           ;main.c: 108: OSCCON = 0x82;
   980  0000DC  0E82               	movlw	130
   981  0000DE  6ED3               	movwf	4051,c	;volatile
   982                           
   983                           ; BSR set to: 2
   984                           ;main.c: 109: OSCTUNEbits.PLLEN = 0;
   985  0000E0  9C9B               	bcf	3995,6,c	;volatile
   986                           
   987                           ; BSR set to: 2
   988                           ;main.c: 113: init_uart_recv(&uc);
   989  0000E2  0102               	movlb	2	; () banked
   990  0000E4  0E02               	movlw	high main@uc
   991  0000E6  0100               	movlb	0	; () banked
   992  0000E8  0100               	movlb	0	; () banked
   993  0000EA  6F8F               	movwf	(?_init_uart_recv+1)& (0+255),b
   994  0000EC  0102               	movlb	2	; () banked
   995  0000EE  0E1F               	movlw	low main@uc
   996  0000F0  0100               	movlb	0	; () banked
   997  0000F2  6F8E               	movwf	?_init_uart_recv& (0+255),b
   998  0000F4  EC98  F00A         	call	_init_uart_recv	;wreg free
   999                           
  1000                           ;main.c: 116: init_i2c(&ic);
  1001  0000F8  0102               	movlb	2	; () banked
  1002  0000FA  0E02               	movlw	high main@ic
  1003  0000FC  0100               	movlb	0	; () banked
  1004  0000FE  0100               	movlb	0	; () banked
  1005  000100  6F8F               	movwf	(?_init_i2c+1)& (0+255),b
  1006  000102  0102               	movlb	2	; () banked
  1007  000104  0E2F               	movlw	low main@ic
  1008  000106  0100               	movlb	0	; () banked
  1009  000108  6F8E               	movwf	?_init_i2c& (0+255),b
  1010  00010A  EC15  F009         	call	_init_i2c	;wreg free
  1011                           
  1012                           ;main.c: 117: i2c_configure_master(0x2A);
  1013  00010E  0100               	movlb	0	; () banked
  1014  000110  6FAB               	movwf	??_main& (0+255),b
  1015  000112  0E2A               	movlw	42
  1016  000114  0100               	movlb	0	; () banked
  1017  000116  0100               	movlb	0	; () banked
  1018  000118  6F90               	movwf	?_i2c_configure_master& (0+255),b
  1019  00011A  0100               	movlb	0	; () banked
  1020  00011C  51AB               	movf	??_main& (0+255),w,b
  1021  00011E  EC0F  F008         	call	_i2c_configure_master	;wreg free
  1022                           
  1023                           ;main.c: 120: init_timer1_lthread(&t1thread_data);
  1024  000122  0102               	movlb	2	; () banked
  1025  000124  0E02               	movlw	high main@t1thread_data
  1026  000126  0100               	movlb	0	; () banked
  1027  000128  0100               	movlb	0	; () banked
  1028  00012A  6F8F               	movwf	(?_init_timer1_lthread+1)& (0+255),b
  1029  00012C  0102               	movlb	2	; () banked
  1030  00012E  0E1B               	movlw	low main@t1thread_data
  1031  000130  0100               	movlb	0	; () banked
  1032  000132  6F8E               	movwf	?_init_timer1_lthread& (0+255),b
  1033  000134  ECD7  F00B         	call	_init_timer1_lthread	;wreg free
  1034                           
  1035                           ;main.c: 123: init_queues();
  1036  000138  EC88  F009         	call	_init_queues	;wreg free
  1037                           
  1038                           ;main.c: 126: TRISB = 0x0;
  1039  00013C  0E00               	movlw	0
  1040  00013E  6E93               	movwf	3987,c	;volatile
  1041                           
  1042                           ;main.c: 127: LATB = 0x0;
  1043  000140  0E00               	movlw	0
  1044  000142  6E8A               	movwf	3978,c	;volatile
  1045                           
  1046                           ;main.c: 141: OpenTimer1(0b11111111 & 0b11111111 & 0b11111111 & 0b11111101 & 0b11110111 
      +                          & 0b11111111);
  1047  000144  0100               	movlb	0	; () banked
  1048  000146  6FAB               	movwf	??_main& (0+255),b
  1049  000148  0EF5               	movlw	245
  1050  00014A  0100               	movlb	0	; () banked
  1051  00014C  0100               	movlb	0	; () banked
  1052  00014E  6F8E               	movwf	?_OpenTimer1& (0+255),b
  1053  000150  0100               	movlb	0	; () banked
  1054  000152  51AB               	movf	??_main& (0+255),w,b
  1055  000154  ECD0  F00A         	call	_OpenTimer1	;wreg free
  1056                           
  1057                           ;main.c: 151: enable_interrupts();
  1058  000158  EC08  F00C         	call	_enable_interrupts	;wreg free
  1059                           
  1060                           ;main.c: 153: OpenUSART( 0b01111111 & 0b11111111 & 0b11111110 & 0b11111101 & 0b11111111 
      +                          & 0b11111111 & 0b11011111, 38);
  1061  00015C  0100               	movlb	0	; () banked
  1062  00015E  6FAB               	movwf	??_main& (0+255),b
  1063  000160  0E5C               	movlw	92
  1064  000162  0100               	movlb	0	; () banked
  1065  000164  0100               	movlb	0	; () banked
  1066  000166  6F8E               	movwf	?_OpenUSART& (0+255),b
  1067  000168  0100               	movlb	0	; () banked
  1068  00016A  51AB               	movf	??_main& (0+255),w,b
  1069  00016C  0E00               	movlw	0
  1070  00016E  0100               	movlb	0	; () banked
  1071  000170  0100               	movlb	0	; () banked
  1072  000172  6F90               	movwf	(?_OpenUSART+2)& (0+255),b
  1073  000174  0E26               	movlw	38
  1074  000176  0100               	movlb	0	; () banked
  1075  000178  6F8F               	movwf	(?_OpenUSART+1)& (0+255),b
  1076  00017A  EC97  F008         	call	_OpenUSART	;wreg free
  1077                           
  1078                           ;main.c: 162: IPR1bits.TMR1IP = 0;
  1079  00017E  909F               	bcf	3999,0,c	;volatile
  1080                           
  1081                           ;main.c: 166: IPR1bits.RCIP = 1;
  1082  000180  8A9F               	bsf	3999,5,c	;volatile
  1083                           
  1084                           ;main.c: 170: IPR1bits.TXIP = 0;
  1085  000182  989F               	bcf	3999,4,c	;volatile
  1086                           
  1087                           ;main.c: 174: IPR1bits.SSPIP = 1;
  1088  000184  869F               	bsf	3999,3,c	;volatile
  1089                           
  1090                           ;main.c: 182: PIE1bits.RCIE = 1;
  1091  000186  8A9D               	bsf	3997,5,c	;volatile
  1092                           
  1093                           ;main.c: 185: PIE1bits.TXIE = 0;
  1094  000188  989D               	bcf	3997,4,c	;volatile
  1095                           
  1096                           ;main.c: 189: PIE1bits.SSPIE = 1;
  1097  00018A  869D               	bsf	3997,3,c	;volatile
  1098                           
  1099                           ;main.c: 193: TRISA = 0;
  1100  00018C  0E00               	movlw	0
  1101  00018E  6E92               	movwf	3986,c	;volatile
  1102                           
  1103                           ;main.c: 251: LATA0 = 1;
  1104  000190  8089               	bsf	3977,0,c	;volatile
  1105                           
  1106                           ;main.c: 252: LATA1 = 0;
  1107  000192  9289               	bcf	3977,1,c	;volatile
  1108                           
  1109                           ;main.c: 253: LATA2 = 0;
  1110  000194  9489               	bcf	3977,2,c	;volatile
  1111                           
  1112                           ;main.c: 254: LATA3 = 0;
  1113  000196  9689               	bcf	3977,3,c	;volatile
  1114                           
  1115                           ;main.c: 255: LATA5 = 0;
  1116  000198  9A89               	bcf	3977,5,c	;volatile
  1117  00019A                     l3068:
  1118                           
  1119                           ;main.c: 264: block_on_To_msgqueues();
  1120  00019A  EC0C  F007         	call	_block_on_To_msgqueues	;wreg free
  1121                           
  1122                           ;main.c: 271: length = ToMainHigh_recvmsg(10, &msgtype, (void *) msgbuffer);
  1123  00019E  0100               	movlb	0	; () banked
  1124  0001A0  6FAB               	movwf	??_main& (0+255),b
  1125  0001A2  0E0A               	movlw	10
  1126  0001A4  0100               	movlb	0	; () banked
  1127  0001A6  0100               	movlb	0	; () banked
  1128  0001A8  6FA6               	movwf	?_ToMainHigh_recvmsg& (0+255),b
  1129  0001AA  0100               	movlb	0	; () banked
  1130  0001AC  51AB               	movf	??_main& (0+255),w,b
  1131  0001AE  0102               	movlb	2	; () banked
  1132  0001B0  0E02               	movlw	high main@msgtype
  1133  0001B2  0100               	movlb	0	; () banked
  1134  0001B4  0100               	movlb	0	; () banked
  1135  0001B6  6FA8               	movwf	(?_ToMainHigh_recvmsg+2)& (0+255),b
  1136  0001B8  0102               	movlb	2	; () banked
  1137  0001BA  0E1D               	movlw	low main@msgtype
  1138  0001BC  0100               	movlb	0	; () banked
  1139  0001BE  6FA7               	movwf	(?_ToMainHigh_recvmsg+1)& (0+255),b
  1140  0001C0  0102               	movlb	2	; () banked
  1141  0001C2  0E02               	movlw	high main@msgbuffer
  1142  0001C4  0100               	movlb	0	; () banked
  1143  0001C6  0100               	movlb	0	; () banked
  1144  0001C8  6FAA               	movwf	(?_ToMainHigh_recvmsg+4)& (0+255),b
  1145  0001CA  0102               	movlb	2	; () banked
  1146  0001CC  0E0E               	movlw	low main@msgbuffer
  1147  0001CE  0100               	movlb	0	; () banked
  1148  0001D0  6FA9               	movwf	(?_ToMainHigh_recvmsg+3)& (0+255),b
  1149  0001D2  EC47  F00B         	call	_ToMainHigh_recvmsg	;wreg free
  1150  0001D6  0102               	movlb	2	; () banked
  1151  0001D8  0102               	movlb	2	; () banked
  1152  0001DA  6F1E               	movwf	main@length& (0+255),b
  1153                           
  1154                           ; BSR set to: 2
  1155                           ;main.c: 272: if (length < 0) {
  1156  0001DC  0102               	movlb	2	; () banked
  1157  0001DE  0102               	movlb	2	; () banked
  1158  0001E0  BF1E               	btfsc	main@length& (0+255),7,b
  1159  0001E2  D0D6               	goto	l3106
  1160  0001E4  D0C3               	goto	l3104
  1161  0001E6                     l3076:
  1162                           
  1163                           ; BSR set to: 2
  1164                           ;main.c: 280: {
  1165                           ;main.c: 281: uart_lthread(&uthread_data, msgtype, length, msgbuffer);
  1166  0001E6  0102               	movlb	2	; () banked
  1167  0001E8  0E02               	movlw	high main@uthread_data
  1168  0001EA  0100               	movlb	0	; () banked
  1169  0001EC  0100               	movlb	0	; () banked
  1170  0001EE  6F90               	movwf	(?_uart_lthread+1)& (0+255),b
  1171  0001F0  0102               	movlb	2	; () banked
  1172  0001F2  0E09               	movlw	low main@uthread_data
  1173  0001F4  0100               	movlb	0	; () banked
  1174  0001F6  6F8F               	movwf	?_uart_lthread& (0+255),b
  1175  0001F8  0102               	movlb	2	; () banked
  1176  0001FA  0100               	movlb	0	; () banked
  1177  0001FC  C21D  F091         	movff	main@msgtype,?_uart_lthread+2
  1178  000200  0100               	movlb	0	; () banked
  1179  000202  0100               	movlb	0	; () banked
  1180  000204  6B92               	clrf	(?_uart_lthread+3)& (0+255),b
  1181  000206  0102               	movlb	2	; () banked
  1182  000208  0102               	movlb	2	; () banked
  1183  00020A  511E               	movf	main@length& (0+255),w,b
  1184  00020C  0100               	movlb	0	; () banked
  1185  00020E  0100               	movlb	0	; () banked
  1186  000210  6F93               	movwf	(?_uart_lthread+4)& (0+255),b
  1187  000212  0100               	movlb	0	; () banked
  1188  000214  6B94               	clrf	(?_uart_lthread+5)& (0+255),b
  1189  000216  0100               	movlb	0	; () banked
  1190  000218  BF93               	btfsc	(?_uart_lthread+4)& (0+255),7,b
  1191  00021A  0794               	decf	(?_uart_lthread+5)& (0+255),f,b
  1192  00021C  0102               	movlb	2	; () banked
  1193  00021E  0E02               	movlw	high main@msgbuffer
  1194  000220  0100               	movlb	0	; () banked
  1195  000222  0100               	movlb	0	; () banked
  1196  000224  6F96               	movwf	(?_uart_lthread+7)& (0+255),b
  1197  000226  0102               	movlb	2	; () banked
  1198  000228  0E0E               	movlw	low main@msgbuffer
  1199  00022A  0100               	movlb	0	; () banked
  1200  00022C  6F95               	movwf	(?_uart_lthread+6)& (0+255),b
  1201  00022E  EC4C  F006         	call	_uart_lthread	;wreg free
  1202  000232                     l3078:
  1203                           
  1204                           ;main.c: 284: {
  1205                           ;main.c: 285: timer0_lthread(&t0thread_data, msgtype, length, msgbuffer);
  1206  000232  0102               	movlb	2	; () banked
  1207  000234  0E02               	movlw	high main@t0thread_data
  1208  000236  0100               	movlb	0	; () banked
  1209  000238  0100               	movlb	0	; () banked
  1210  00023A  6F8F               	movwf	(?_timer0_lthread+1)& (0+255),b
  1211  00023C  0102               	movlb	2	; () banked
  1212  00023E  0E0B               	movlw	low main@t0thread_data
  1213  000240  0100               	movlb	0	; () banked
  1214  000242  6F8E               	movwf	?_timer0_lthread& (0+255),b
  1215  000244  0102               	movlb	2	; () banked
  1216  000246  0100               	movlb	0	; () banked
  1217  000248  C21D  F090         	movff	main@msgtype,?_timer0_lthread+2
  1218  00024C  0100               	movlb	0	; () banked
  1219  00024E  0100               	movlb	0	; () banked
  1220  000250  6B91               	clrf	(?_timer0_lthread+3)& (0+255),b
  1221  000252  0102               	movlb	2	; () banked
  1222  000254  0102               	movlb	2	; () banked
  1223  000256  511E               	movf	main@length& (0+255),w,b
  1224  000258  0100               	movlb	0	; () banked
  1225  00025A  0100               	movlb	0	; () banked
  1226  00025C  6F92               	movwf	(?_timer0_lthread+4)& (0+255),b
  1227  00025E  0100               	movlb	0	; () banked
  1228  000260  6B93               	clrf	(?_timer0_lthread+5)& (0+255),b
  1229  000262  0100               	movlb	0	; () banked
  1230  000264  BF92               	btfsc	(?_timer0_lthread+4)& (0+255),7,b
  1231  000266  0793               	decf	(?_timer0_lthread+5)& (0+255),f,b
  1232  000268  0102               	movlb	2	; () banked
  1233  00026A  0E02               	movlw	high main@msgbuffer
  1234  00026C  0100               	movlb	0	; () banked
  1235  00026E  0100               	movlb	0	; () banked
  1236  000270  6F95               	movwf	(?_timer0_lthread+7)& (0+255),b
  1237  000272  0102               	movlb	2	; () banked
  1238  000274  0E0E               	movlw	low main@msgbuffer
  1239  000276  0100               	movlb	0	; () banked
  1240  000278  6F94               	movwf	(?_timer0_lthread+6)& (0+255),b
  1241  00027A  ECFE  F00B         	call	_timer0_lthread	;wreg free
  1242                           
  1243                           ;main.c: 286: break;
  1244  00027E  D088               	goto	l3106
  1245  000280                     l129:
  1246                           
  1247                           ;main.c: 289: case 41:
  1248                           ;main.c: 290: {
  1249                           ;main.c: 293: last_reg_recvd = msgbuffer[0];
  1250  000280  C20E  F20D         	movff	main@msgbuffer,main@last_reg_recvd
  1251                           
  1252                           ;main.c: 294: char testbuffer1 = msgbuffer[1];
  1253  000284  C20F  F200         	movff	main@msgbuffer+1,main@testbuffer1
  1254                           
  1255                           ;main.c: 295: char testbuffer2 = msgbuffer[2];
  1256  000288  C210  F201         	movff	main@msgbuffer+2,main@testbuffer2
  1257                           
  1258                           ;main.c: 296: char testbuffer3 = msgbuffer[3];
  1259  00028C  C211  F202         	movff	main@msgbuffer+3,main@testbuffer3
  1260                           
  1261                           ;main.c: 297: char testbuffer4 =msgbuffer[4];
  1262  000290  C212  F203         	movff	main@msgbuffer+4,main@testbuffer4
  1263                           
  1264                           ;main.c: 298: char testbuffer5 = msgbuffer[5];
  1265  000294  C213  F204         	movff	main@msgbuffer+5,main@testbuffer5
  1266                           
  1267                           ;main.c: 301: putIntoUARTBuffer(msgbuffer);
  1268  000298  0102               	movlb	2	; () banked
  1269  00029A  0E02               	movlw	high main@msgbuffer
  1270  00029C  0100               	movlb	0	; () banked
  1271  00029E  0100               	movlb	0	; () banked
  1272  0002A0  6F8F               	movwf	(?_putIntoUARTBuffer+1)& (0+255),b
  1273  0002A2  0102               	movlb	2	; () banked
  1274  0002A4  0E0E               	movlw	low main@msgbuffer
  1275  0002A6  0100               	movlb	0	; () banked
  1276  0002A8  6F8E               	movwf	?_putIntoUARTBuffer& (0+255),b
  1277  0002AA  EC74  F005         	call	_putIntoUARTBuffer	;wreg free
  1278                           
  1279                           ;main.c: 304: PIE1bits.TXIE = 1;
  1280  0002AE  889D               	bsf	3997,4,c	;volatile
  1281                           
  1282                           ;main.c: 305: break;
  1283  0002B0  D06F               	goto	l3106
  1284  0002B2                     l3084:
  1285                           
  1286                           ;main.c: 318: {
  1287                           ;main.c: 319: length = 2;
  1288  0002B2  0100               	movlb	0	; () banked
  1289  0002B4  6FAB               	movwf	??_main& (0+255),b
  1290  0002B6  0E02               	movlw	2
  1291  0002B8  0102               	movlb	2	; () banked
  1292  0002BA  0102               	movlb	2	; () banked
  1293  0002BC  6F1E               	movwf	main@length& (0+255),b
  1294  0002BE  0100               	movlb	0	; () banked
  1295  0002C0  51AB               	movf	??_main& (0+255),w,b
  1296                           
  1297                           ;main.c: 322: msgbuffer[1] = 0xAA;
  1298  0002C2  0100               	movlb	0	; () banked
  1299  0002C4  6FAB               	movwf	??_main& (0+255),b
  1300  0002C6  0EAA               	movlw	170
  1301  0002C8  0102               	movlb	2	; () banked
  1302  0002CA  0102               	movlb	2	; () banked
  1303  0002CC  6F0F               	movwf	(main@msgbuffer+1)& (0+255),b
  1304  0002CE  0100               	movlb	0	; () banked
  1305  0002D0  51AB               	movf	??_main& (0+255),w,b
  1306                           
  1307                           ; BSR set to: 0
  1308                           ;main.c: 326: test_var++;
  1309  0002D2  0102               	movlb	2	; () banked
  1310  0002D4  0102               	movlb	2	; () banked
  1311  0002D6  4B19               	infsnz	main@test_var& (0+255),f,b
  1312  0002D8  2B1A               	incf	(main@test_var+1)& (0+255),f,b
  1313                           
  1314                           ; BSR set to: 2
  1315                           ;main.c: 327: if(test_var > 299)
  1316  0002DA  0102               	movlb	2	; () banked
  1317  0002DC  0102               	movlb	2	; () banked
  1318  0002DE  511A               	movf	(main@test_var+1)& (0+255),w,b
  1319  0002E0  0A80               	xorlw	128
  1320  0002E2  0F7F               	addlw	-129
  1321  0002E4  0E2C               	movlw	44
  1322  0002E6  B4D8               	btfsc	status,2,c
  1323  0002E8  5D19               	subwf	main@test_var& (0+255),w,b
  1324  0002EA  A0D8               	btfss	status,0,c
  1325  0002EC  D031               	goto	l3100
  1326                           
  1327                           ; BSR set to: 2
  1328                           ;main.c: 328: test_var = 0;
  1329  0002EE  0E00               	movlw	0
  1330  0002F0  0102               	movlb	2	; () banked
  1331  0002F2  0102               	movlb	2	; () banked
  1332  0002F4  6F1A               	movwf	(main@test_var+1)& (0+255),b
  1333  0002F6  0E00               	movlw	0
  1334  0002F8  0102               	movlb	2	; () banked
  1335  0002FA  6F19               	movwf	main@test_var& (0+255),b
  1336  0002FC  D029               	goto	l3100
  1337  0002FE                     l3092:
  1338                           
  1339                           ; BSR set to: 2
  1340                           ;main.c: 333: {
  1341                           ;main.c: 334: length = 1;
  1342  0002FE  0100               	movlb	0	; () banked
  1343  000300  6FAB               	movwf	??_main& (0+255),b
  1344  000302  0E01               	movlw	1
  1345  000304  0102               	movlb	2	; () banked
  1346  000306  0102               	movlb	2	; () banked
  1347  000308  6F1E               	movwf	main@length& (0+255),b
  1348  00030A  0100               	movlb	0	; () banked
  1349  00030C  51AB               	movf	??_main& (0+255),w,b
  1350                           
  1351                           ;main.c: 335: msgbuffer[0] = 0x3A;
  1352  00030E  0100               	movlb	0	; () banked
  1353  000310  6FAB               	movwf	??_main& (0+255),b
  1354  000312  0E3A               	movlw	58
  1355  000314  D00B               	goto	L1
  1356  000316                     l3094:
  1357                           
  1358                           ;main.c: 339: {
  1359                           ;main.c: 340: length = 1;
  1360  000316  0100               	movlb	0	; () banked
  1361  000318  6FAB               	movwf	??_main& (0+255),b
  1362  00031A  0E01               	movlw	1
  1363  00031C  0102               	movlb	2	; () banked
  1364  00031E  0102               	movlb	2	; () banked
  1365  000320  6F1E               	movwf	main@length& (0+255),b
  1366  000322  0100               	movlb	0	; () banked
  1367  000324  51AB               	movf	??_main& (0+255),w,b
  1368                           
  1369                           ;main.c: 341: msgbuffer[0] = 0xA3;
  1370  000326  0100               	movlb	0	; () banked
  1371  000328  6FAB               	movwf	??_main& (0+255),b
  1372  00032A  0EA3               	movlw	163
  1373  00032C                     L1:
  1374  00032C  0102               	movlb	2	; () banked
  1375  00032E  0102               	movlb	2	; () banked
  1376  000330  6F0E               	movwf	main@msgbuffer& (0+255),b
  1377  000332  0100               	movlb	0	; () banked
  1378  000334  51AB               	movf	??_main& (0+255),w,b
  1379                           
  1380                           ;main.c: 342: break;
  1381  000336  D00C               	goto	l3100
  1382  000338                     l3098:
  1383  000338  0102               	movlb	2	; () banked
  1384  00033A  0102               	movlb	2	; () banked
  1385  00033C  510D               	movf	main@last_reg_recvd& (0+255),w,b
  1386                           
  1387                           ; Switch size 1, requested type "space"
  1388                           ; Number of cases is 3, Range of values is 168 to 170
  1389                           ; switch strategies available:
  1390                           ; Name         Instructions Cycles
  1391                           ; simple_byte           10     6 (average)
  1392                           ;	Chosen strategy is simple_byte
  1393  00033E  0AA8               	xorlw	168	; case 168
  1394  000340  B4D8               	btfsc	status,2,c
  1395  000342  D7DD               	goto	l3092
  1396  000344  0A01               	xorlw	1	; case 169
  1397  000346  B4D8               	btfsc	status,2,c
  1398  000348  D7E6               	goto	l3094
  1399  00034A  0A03               	xorlw	3	; case 170
  1400  00034C  B4D8               	btfsc	status,2,c
  1401  00034E  D7B1               	goto	l3084
  1402  000350                     l3100:
  1403                           
  1404                           ;main.c: 345: start_i2c_slave_reply(length, msgbuffer);
  1405  000350  C21E  F08E         	movff	main@length,?_start_i2c_slave_reply
  1406  000354  0102               	movlb	2	; () banked
  1407  000356  0E02               	movlw	high main@msgbuffer
  1408  000358  0100               	movlb	0	; () banked
  1409  00035A  0100               	movlb	0	; () banked
  1410  00035C  6F90               	movwf	(?_start_i2c_slave_reply+2)& (0+255),b
  1411  00035E  0102               	movlb	2	; () banked
  1412  000360  0E0E               	movlw	low main@msgbuffer
  1413  000362  0100               	movlb	0	; () banked
  1414  000364  6F8F               	movwf	(?_start_i2c_slave_reply+1)& (0+255),b
  1415  000366  EC74  F004         	call	_start_i2c_slave_reply	;wreg free
  1416                           
  1417                           ;main.c: 346: break;
  1418  00036A  D012               	goto	l3106
  1419  00036C                     l3104:
  1420  00036C  0102               	movlb	2	; () banked
  1421  00036E  0102               	movlb	2	; () banked
  1422  000370  511D               	movf	main@msgtype& (0+255),w,b
  1423                           
  1424                           ; Switch size 1, requested type "space"
  1425                           ; Number of cases is 5, Range of values is 10 to 61
  1426                           ; switch strategies available:
  1427                           ; Name         Instructions Cycles
  1428                           ; simple_byte           16     9 (average)
  1429                           ;	Chosen strategy is simple_byte
  1430  000372  0A0A               	xorlw	10	; case 10
  1431  000374  B4D8               	btfsc	status,2,c
  1432  000376  D75D               	goto	l3078
  1433  000378  0A22               	xorlw	34	; case 40
  1434  00037A  B4D8               	btfsc	status,2,c
  1435  00037C  D781               	goto	l129
  1436  00037E  0A01               	xorlw	1	; case 41
  1437  000380  B4D8               	btfsc	status,2,c
  1438  000382  D77E               	goto	l129
  1439  000384  0A03               	xorlw	3	; case 42
  1440  000386  B4D8               	btfsc	status,2,c
  1441  000388  D7D7               	goto	l3098
  1442  00038A  0A17               	xorlw	23	; case 61
  1443  00038C  B4D8               	btfsc	status,2,c
  1444  00038E  D72B               	goto	l3076
  1445  000390                     l3106:
  1446                           
  1447                           ;main.c: 354: }
  1448                           ;main.c: 357: length = ToMainLow_recvmsg(10, &msgtype, (void *) msgbuffer);
  1449  000390  0100               	movlb	0	; () banked
  1450  000392  6FAB               	movwf	??_main& (0+255),b
  1451  000394  0E0A               	movlw	10
  1452  000396  0100               	movlb	0	; () banked
  1453  000398  0100               	movlb	0	; () banked
  1454  00039A  6FA6               	movwf	?_ToMainLow_recvmsg& (0+255),b
  1455  00039C  0100               	movlb	0	; () banked
  1456  00039E  51AB               	movf	??_main& (0+255),w,b
  1457  0003A0  0102               	movlb	2	; () banked
  1458  0003A2  0E02               	movlw	high main@msgtype
  1459  0003A4  0100               	movlb	0	; () banked
  1460  0003A6  0100               	movlb	0	; () banked
  1461  0003A8  6FA8               	movwf	(?_ToMainLow_recvmsg+2)& (0+255),b
  1462  0003AA  0102               	movlb	2	; () banked
  1463  0003AC  0E1D               	movlw	low main@msgtype
  1464  0003AE  0100               	movlb	0	; () banked
  1465  0003B0  6FA7               	movwf	(?_ToMainLow_recvmsg+1)& (0+255),b
  1466  0003B2  0102               	movlb	2	; () banked
  1467  0003B4  0E02               	movlw	high main@msgbuffer
  1468  0003B6  0100               	movlb	0	; () banked
  1469  0003B8  0100               	movlb	0	; () banked
  1470  0003BA  6FAA               	movwf	(?_ToMainLow_recvmsg+4)& (0+255),b
  1471  0003BC  0102               	movlb	2	; () banked
  1472  0003BE  0E0E               	movlw	low main@msgbuffer
  1473  0003C0  0100               	movlb	0	; () banked
  1474  0003C2  6FA9               	movwf	(?_ToMainLow_recvmsg+3)& (0+255),b
  1475  0003C4  EC31  F00B         	call	_ToMainLow_recvmsg	;wreg free
  1476  0003C8  0102               	movlb	2	; () banked
  1477  0003CA  0102               	movlb	2	; () banked
  1478  0003CC  6F1E               	movwf	main@length& (0+255),b
  1479                           
  1480                           ; BSR set to: 2
  1481                           ;main.c: 358: if (length < 0) {
  1482  0003CE  0102               	movlb	2	; () banked
  1483  0003D0  0102               	movlb	2	; () banked
  1484  0003D2  BF1E               	btfsc	main@length& (0+255),7,b
  1485  0003D4  D6E2               	goto	l3068
  1486  0003D6  D04E               	goto	l3118
  1487  0003D8                     l3112:
  1488                           
  1489                           ; BSR set to: 2
  1490                           ;main.c: 366: {
  1491                           ;main.c: 367: timer1_lthread(&t1thread_data, msgtype, length, msgbuffer);
  1492  0003D8  0102               	movlb	2	; () banked
  1493  0003DA  0E02               	movlw	high main@t1thread_data
  1494  0003DC  0100               	movlb	0	; () banked
  1495  0003DE  0100               	movlb	0	; () banked
  1496  0003E0  6F8F               	movwf	(?_timer1_lthread+1)& (0+255),b
  1497  0003E2  0102               	movlb	2	; () banked
  1498  0003E4  0E1B               	movlw	low main@t1thread_data
  1499  0003E6  0100               	movlb	0	; () banked
  1500  0003E8  6F8E               	movwf	?_timer1_lthread& (0+255),b
  1501  0003EA  0102               	movlb	2	; () banked
  1502  0003EC  0100               	movlb	0	; () banked
  1503  0003EE  C21D  F090         	movff	main@msgtype,?_timer1_lthread+2
  1504  0003F2  0100               	movlb	0	; () banked
  1505  0003F4  0100               	movlb	0	; () banked
  1506  0003F6  6B91               	clrf	(?_timer1_lthread+3)& (0+255),b
  1507  0003F8  0102               	movlb	2	; () banked
  1508  0003FA  0102               	movlb	2	; () banked
  1509  0003FC  511E               	movf	main@length& (0+255),w,b
  1510  0003FE  0100               	movlb	0	; () banked
  1511  000400  0100               	movlb	0	; () banked
  1512  000402  6F92               	movwf	(?_timer1_lthread+4)& (0+255),b
  1513  000404  0100               	movlb	0	; () banked
  1514  000406  6B93               	clrf	(?_timer1_lthread+5)& (0+255),b
  1515  000408  0100               	movlb	0	; () banked
  1516  00040A  BF92               	btfsc	(?_timer1_lthread+4)& (0+255),7,b
  1517  00040C  0793               	decf	(?_timer1_lthread+5)& (0+255),f,b
  1518  00040E  0102               	movlb	2	; () banked
  1519  000410  0E02               	movlw	high main@msgbuffer
  1520  000412  0100               	movlb	0	; () banked
  1521  000414  0100               	movlb	0	; () banked
  1522  000416  6F95               	movwf	(?_timer1_lthread+7)& (0+255),b
  1523  000418  0102               	movlb	2	; () banked
  1524  00041A  0E0E               	movlw	low main@msgbuffer
  1525  00041C  0100               	movlb	0	; () banked
  1526  00041E  6F94               	movwf	(?_timer1_lthread+6)& (0+255),b
  1527  000420  EC12  F00C         	call	_timer1_lthread	;wreg free
  1528                           
  1529                           ;main.c: 368: break;
  1530  000424  D6BA               	goto	l3068
  1531  000426                     l3114:
  1532                           
  1533                           ;main.c: 371: {
  1534                           ;main.c: 372: motor_control_thread(&motorthread_data, msgtype, length, msgbuffer);
  1535  000426  0102               	movlb	2	; () banked
  1536  000428  0E02               	movlw	high main@motorthread_data
  1537  00042A  0100               	movlb	0	; () banked
  1538  00042C  0100               	movlb	0	; () banked
  1539  00042E  6F8F               	movwf	(?_motor_control_thread+1)& (0+255),b
  1540  000430  0102               	movlb	2	; () banked
  1541  000432  0E05               	movlw	low main@motorthread_data
  1542  000434  0100               	movlb	0	; () banked
  1543  000436  6F8E               	movwf	?_motor_control_thread& (0+255),b
  1544  000438  0102               	movlb	2	; () banked
  1545  00043A  0100               	movlb	0	; () banked
  1546  00043C  C21D  F090         	movff	main@msgtype,?_motor_control_thread+2
  1547  000440  0100               	movlb	0	; () banked
  1548  000442  0100               	movlb	0	; () banked
  1549  000444  6B91               	clrf	(?_motor_control_thread+3)& (0+255),b
  1550  000446  0102               	movlb	2	; () banked
  1551  000448  0102               	movlb	2	; () banked
  1552  00044A  511E               	movf	main@length& (0+255),w,b
  1553  00044C  0100               	movlb	0	; () banked
  1554  00044E  0100               	movlb	0	; () banked
  1555  000450  6F92               	movwf	(?_motor_control_thread+4)& (0+255),b
  1556  000452  0100               	movlb	0	; () banked
  1557  000454  6B93               	clrf	(?_motor_control_thread+5)& (0+255),b
  1558  000456  0100               	movlb	0	; () banked
  1559  000458  BF92               	btfsc	(?_motor_control_thread+4)& (0+255),7,b
  1560  00045A  0793               	decf	(?_motor_control_thread+5)& (0+255),f,b
  1561  00045C  0102               	movlb	2	; () banked
  1562  00045E  0E02               	movlw	high main@msgbuffer
  1563  000460  0100               	movlb	0	; () banked
  1564  000462  0100               	movlb	0	; () banked
  1565  000464  6F95               	movwf	(?_motor_control_thread+7)& (0+255),b
  1566  000466  0102               	movlb	2	; () banked
  1567  000468  0E0E               	movlw	low main@msgbuffer
  1568  00046A  0100               	movlb	0	; () banked
  1569  00046C  6F94               	movwf	(?_motor_control_thread+6)& (0+255),b
  1570  00046E  ECF9  F004         	call	_motor_control_thread	;wreg free
  1571                           
  1572                           ;main.c: 373: break;
  1573  000472  D693               	goto	l3068
  1574  000474                     l3118:
  1575  000474  0102               	movlb	2	; () banked
  1576  000476  0102               	movlb	2	; () banked
  1577  000478  511D               	movf	main@msgtype& (0+255),w,b
  1578                           
  1579                           ; Switch size 1, requested type "space"
  1580                           ; Number of cases is 4, Range of values is 11 to 60
  1581                           ; switch strategies available:
  1582                           ; Name         Instructions Cycles
  1583                           ; simple_byte           13     7 (average)
  1584                           ;	Chosen strategy is simple_byte
  1585  00047A  0A0B               	xorlw	11	; case 11
  1586  00047C  B4D8               	btfsc	status,2,c
  1587  00047E  D7AC               	goto	l3112
  1588  000480  0A15               	xorlw	21	; case 30
  1589  000482  B4D8               	btfsc	status,2,c
  1590  000484  D68A               	goto	l3068
  1591  000486  0A01               	xorlw	1	; case 31
  1592  000488  B4D8               	btfsc	status,2,c
  1593  00048A  D687               	goto	l3068
  1594  00048C  0A23               	xorlw	35	; case 60
  1595  00048E  B4D8               	btfsc	status,2,c
  1596  000490  D7CA               	goto	l3114
  1597  000492  D683               	goto	l3068
  1598  000494                     __end_of_main:
  1599                           	opt stack 0
  1600                           tblptru	equ	0xFF8
  1601                           tblptrh	equ	0xFF7
  1602                           tblptrl	equ	0xFF6
  1603                           tablat	equ	0xFF5
  1604                           postinc0	equ	0xFEE
  1605                           wreg	equ	0xFE8
  1606                           status	equ	0xFD8
  1607                           
  1608 ;; *************** function _motor_control_thread *****************
  1609 ;; Defined at:
  1610 ;;		line 15 in file "../src/motor_control_thread.c"
  1611 ;; Parameters:    Size  Location     Type
  1612 ;;  mptr            2   14[BANK0 ] PTR struct __motor_contr
  1613 ;;		 -> main@motorthread_data(4), 
  1614 ;;  msgtype         2   16[BANK0 ] int 
  1615 ;;  length          2   18[BANK0 ] int 
  1616 ;;  msgbuffer       2   20[BANK0 ] PTR unsigned char 
  1617 ;;		 -> main@msgbuffer(11), 
  1618 ;; Auto vars:     Size  Location     Type
  1619 ;;  i               2   24[BANK0 ] int 
  1620 ;; Return value:  Size  Location     Type
  1621 ;;                  2   14[BANK0 ] int 
  1622 ;; Registers used:
  1623 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  1624 ;; Tracked objects:
  1625 ;;		On entry : 0/0
  1626 ;;		On exit  : 0/0
  1627 ;;		Unchanged: 0/0
  1628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1629 ;;      Params:         0       8       0       0       0
  1630 ;;      Locals:         0       2       0       0       0
  1631 ;;      Temps:          0       2       0       0       0
  1632 ;;      Totals:         0      12       0       0       0
  1633 ;;Total ram usage:       12 bytes
  1634 ;; Hardware stack levels used:    1
  1635 ;; Hardware stack levels required when called:    8
  1636 ;; This function calls:
  1637 ;;		Nothing
  1638 ;; This function is called by:
  1639 ;;		_main
  1640 ;; This function uses a non-reentrant model
  1641 ;;
  1642                           
  1643                           	psect	text1
  1644  0009F2                     __ptext1:
  1645                           	opt stack 0
  1646  0009F2                     _motor_control_thread:
  1647                           	opt stack 22
  1648                           
  1649                           ;motor_control_thread.c: 18: LATA0 = 0;
  1650                           
  1651                           ; BSR set to: 2
  1652                           ;incstack = 0
  1653                           ;incstack = 0
  1654  0009F2  9089               	bcf	3977,0,c	;volatile
  1655                           
  1656                           ;motor_control_thread.c: 19: LATA5 = 1;
  1657  0009F4  8A89               	bsf	3977,5,c	;volatile
  1658                           
  1659                           ;motor_control_thread.c: 21: int i = 0;
  1660  0009F6  0E00               	movlw	0
  1661  0009F8  0100               	movlb	0	; () banked
  1662  0009FA  0100               	movlb	0	; () banked
  1663  0009FC  6F99               	movwf	(motor_control_thread@i+1)& (0+255),b
  1664  0009FE  0E00               	movlw	0
  1665  000A00  0100               	movlb	0	; () banked
  1666  000A02  6F98               	movwf	motor_control_thread@i& (0+255),b
  1667                           
  1668                           ; BSR set to: 0
  1669                           ;motor_control_thread.c: 26: testbuffer[counter] = msgbuffer[0];
  1670  000A04  C094  FFD9         	movff	motor_control_thread@msgbuffer,fsr2l
  1671  000A08  C095  FFDA         	movff	motor_control_thread@msgbuffer+1,fsr2h
  1672  000A0C  0101               	movlb	1	; () banked
  1673  000A0E  0E00               	movlw	low _testbuffer
  1674  000A10  0100               	movlb	0	; () banked
  1675  000A12  0100               	movlb	0	; () banked
  1676  000A14  25AC               	addwf	_counter& (0+255),w,b
  1677  000A16  6EE1               	movwf	fsr1l,c
  1678  000A18  0101               	movlb	1	; () banked
  1679  000A1A  0E01               	movlw	high _testbuffer
  1680  000A1C  0100               	movlb	0	; () banked
  1681  000A1E  0100               	movlb	0	; () banked
  1682  000A20  21AD               	addwfc	(_counter+1)& (0+255),w,b
  1683  000A22  6EE2               	movwf	fsr1h,c
  1684  000A24  CFDF FFE7          	movff	indf2,indf1
  1685                           
  1686                           ; BSR set to: 0
  1687                           ;motor_control_thread.c: 27: testbuffer[counter+1] = msgbuffer[1];
  1688  000A28  0100               	movlb	0	; () banked
  1689  000A2A  EE20 F001          	lfsr	2,1
  1690  000A2E  0100               	movlb	0	; () banked
  1691  000A30  5194               	movf	motor_control_thread@msgbuffer& (0+255),w,b
  1692  000A32  26D9               	addwf	fsr2l,f,c
  1693  000A34  0100               	movlb	0	; () banked
  1694  000A36  5195               	movf	(motor_control_thread@msgbuffer+1)& (0+255),w,b
  1695  000A38  22DA               	addwfc	fsr2h,f,c
  1696  000A3A  0E01               	movlw	1
  1697  000A3C  0100               	movlb	0	; () banked
  1698  000A3E  0100               	movlb	0	; () banked
  1699  000A40  25AC               	addwf	_counter& (0+255),w,b
  1700  000A42  0100               	movlb	0	; () banked
  1701  000A44  6F96               	movwf	??_motor_control_thread& (0+255),b
  1702  000A46  0E00               	movlw	0
  1703  000A48  0100               	movlb	0	; () banked
  1704  000A4A  0100               	movlb	0	; () banked
  1705  000A4C  21AD               	addwfc	(_counter+1)& (0+255),w,b
  1706  000A4E  0100               	movlb	0	; () banked
  1707  000A50  6F97               	movwf	(??_motor_control_thread+1)& (0+255),b
  1708  000A52  0101               	movlb	1	; () banked
  1709  000A54  0E00               	movlw	low _testbuffer
  1710  000A56  0100               	movlb	0	; () banked
  1711  000A58  2596               	addwf	??_motor_control_thread& (0+255),w,b
  1712  000A5A  6EE1               	movwf	fsr1l,c
  1713  000A5C  0101               	movlb	1	; () banked
  1714  000A5E  0E01               	movlw	high _testbuffer
  1715  000A60  0100               	movlb	0	; () banked
  1716  000A62  2197               	addwfc	(??_motor_control_thread+1)& (0+255),w,b
  1717  000A64  6EE2               	movwf	fsr1h,c
  1718  000A66  CFDF FFE7          	movff	indf2,indf1
  1719                           
  1720                           ; BSR set to: 0
  1721                           ;motor_control_thread.c: 28: testbuffer[counter+2] = msgbuffer[2];
  1722  000A6A  0100               	movlb	0	; () banked
  1723  000A6C  EE20 F002          	lfsr	2,2
  1724  000A70  0100               	movlb	0	; () banked
  1725  000A72  5194               	movf	motor_control_thread@msgbuffer& (0+255),w,b
  1726  000A74  26D9               	addwf	fsr2l,f,c
  1727  000A76  0100               	movlb	0	; () banked
  1728  000A78  5195               	movf	(motor_control_thread@msgbuffer+1)& (0+255),w,b
  1729  000A7A  22DA               	addwfc	fsr2h,f,c
  1730  000A7C  0E02               	movlw	2
  1731  000A7E  0100               	movlb	0	; () banked
  1732  000A80  0100               	movlb	0	; () banked
  1733  000A82  25AC               	addwf	_counter& (0+255),w,b
  1734  000A84  0100               	movlb	0	; () banked
  1735  000A86  6F96               	movwf	??_motor_control_thread& (0+255),b
  1736  000A88  0E00               	movlw	0
  1737  000A8A  0100               	movlb	0	; () banked
  1738  000A8C  0100               	movlb	0	; () banked
  1739  000A8E  21AD               	addwfc	(_counter+1)& (0+255),w,b
  1740  000A90  0100               	movlb	0	; () banked
  1741  000A92  6F97               	movwf	(??_motor_control_thread+1)& (0+255),b
  1742  000A94  0101               	movlb	1	; () banked
  1743  000A96  0E00               	movlw	low _testbuffer
  1744  000A98  0100               	movlb	0	; () banked
  1745  000A9A  2596               	addwf	??_motor_control_thread& (0+255),w,b
  1746  000A9C  6EE1               	movwf	fsr1l,c
  1747  000A9E  0101               	movlb	1	; () banked
  1748  000AA0  0E01               	movlw	high _testbuffer
  1749  000AA2  0100               	movlb	0	; () banked
  1750  000AA4  2197               	addwfc	(??_motor_control_thread+1)& (0+255),w,b
  1751  000AA6  6EE2               	movwf	fsr1h,c
  1752  000AA8  CFDF FFE7          	movff	indf2,indf1
  1753                           
  1754                           ; BSR set to: 0
  1755                           ;motor_control_thread.c: 29: counter = counter + 3;
  1756  000AAC  0E03               	movlw	3
  1757  000AAE  0100               	movlb	0	; () banked
  1758  000AB0  0100               	movlb	0	; () banked
  1759  000AB2  25AC               	addwf	_counter& (0+255),w,b
  1760  000AB4  0100               	movlb	0	; () banked
  1761  000AB6  0100               	movlb	0	; () banked
  1762  000AB8  6FAC               	movwf	_counter& (0+255),b
  1763  000ABA  0E00               	movlw	0
  1764  000ABC  0100               	movlb	0	; () banked
  1765  000ABE  0100               	movlb	0	; () banked
  1766  000AC0  21AD               	addwfc	(_counter+1)& (0+255),w,b
  1767  000AC2  0100               	movlb	0	; () banked
  1768  000AC4  6FAD               	movwf	(_counter+1)& (0+255),b
  1769                           
  1770                           ; BSR set to: 0
  1771                           ;motor_control_thread.c: 30: if (counter == 45)
  1772  000AC6  0100               	movlb	0	; () banked
  1773  000AC8  0100               	movlb	0	; () banked
  1774  000ACA  51AC               	movf	_counter& (0+255),w,b
  1775  000ACC  0A2D               	xorlw	45
  1776  000ACE  11AD               	iorwf	(_counter+1)& (0+255),w,b
  1777  000AD0  A4D8               	btfss	status,2,c
  1778  000AD2  D007               	goto	l3308
  1779                           
  1780                           ; BSR set to: 0
  1781                           ;motor_control_thread.c: 31: counter = 0;
  1782  000AD4  0E00               	movlw	0
  1783  000AD6  0100               	movlb	0	; () banked
  1784  000AD8  0100               	movlb	0	; () banked
  1785  000ADA  6FAD               	movwf	(_counter+1)& (0+255),b
  1786  000ADC  0E00               	movlw	0
  1787  000ADE  0100               	movlb	0	; () banked
  1788  000AE0  6FAC               	movwf	_counter& (0+255),b
  1789  000AE2                     l3308:
  1790                           
  1791                           ; BSR set to: 0
  1792                           ;motor_control_thread.c: 33: LATA0 = 1;
  1793  000AE2  8089               	bsf	3977,0,c	;volatile
  1794                           
  1795                           ; BSR set to: 0
  1796                           ;motor_control_thread.c: 34: LATA5 = 0;
  1797  000AE4  9A89               	bcf	3977,5,c	;volatile
  1798                           
  1799                           ; BSR set to: 0
  1800  000AE6  0012               	return	
  1801  000AE8                     __end_of_motor_control_thread:
  1802                           	opt stack 0
  1803                           tblptru	equ	0xFF8
  1804                           tblptrh	equ	0xFF7
  1805                           tblptrl	equ	0xFF6
  1806                           tablat	equ	0xFF5
  1807                           postinc0	equ	0xFEE
  1808                           wreg	equ	0xFE8
  1809                           indf1	equ	0xFE7
  1810                           fsr1h	equ	0xFE2
  1811                           fsr1l	equ	0xFE1
  1812                           indf2	equ	0xFDF
  1813                           fsr2h	equ	0xFDA
  1814                           fsr2l	equ	0xFD9
  1815                           status	equ	0xFD8
  1816                           
  1817 ;; *************** function _timer1_lthread *****************
  1818 ;; Defined at:
  1819 ;;		line 20 in file "../src/timer1_thread.c"
  1820 ;; Parameters:    Size  Location     Type
  1821 ;;  tptr            2   14[BANK0 ] PTR struct __timer1_thre
  1822 ;;		 -> main@t1thread_data(2), 
  1823 ;;  msgtype         2   16[BANK0 ] int 
  1824 ;;  length          2   18[BANK0 ] int 
  1825 ;;  msgbuffer       2   20[BANK0 ] PTR unsigned char 
  1826 ;;		 -> main@msgbuffer(11), 
  1827 ;; Auto vars:     Size  Location     Type
  1828 ;;  retval          1    0        char 
  1829 ;; Return value:  Size  Location     Type
  1830 ;;                  2   14[BANK0 ] int 
  1831 ;; Registers used:
  1832 ;;		None
  1833 ;; Tracked objects:
  1834 ;;		On entry : 0/0
  1835 ;;		On exit  : 0/0
  1836 ;;		Unchanged: 0/0
  1837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1838 ;;      Params:         0       8       0       0       0
  1839 ;;      Locals:         0       0       0       0       0
  1840 ;;      Temps:          0       0       0       0       0
  1841 ;;      Totals:         0       8       0       0       0
  1842 ;;Total ram usage:        8 bytes
  1843 ;; Hardware stack levels used:    1
  1844 ;; Hardware stack levels required when called:    8
  1845 ;; This function calls:
  1846 ;;		Nothing
  1847 ;; This function is called by:
  1848 ;;		_main
  1849 ;; This function uses a non-reentrant model
  1850 ;;
  1851                           
  1852                           	psect	text2
  1853  001824                     __ptext2:
  1854                           	opt stack 0
  1855  001824                     _timer1_lthread:
  1856                           	opt stack 22
  1857                           
  1858                           ;timer1_thread.c: 21: signed char retval;
  1859                           ;timer1_thread.c: 25: PIE1bits.TXIE = 1;
  1860                           
  1861                           ; BSR set to: 0
  1862                           ;incstack = 0
  1863                           ;incstack = 0
  1864  001824  889D               	bsf	3997,4,c	;volatile
  1865  001826  0012               	return	
  1866  001828                     __end_of_timer1_lthread:
  1867                           	opt stack 0
  1868                           tblptru	equ	0xFF8
  1869                           tblptrh	equ	0xFF7
  1870                           tblptrl	equ	0xFF6
  1871                           tablat	equ	0xFF5
  1872                           postinc0	equ	0xFEE
  1873                           wreg	equ	0xFE8
  1874                           indf1	equ	0xFE7
  1875                           fsr1h	equ	0xFE2
  1876                           fsr1l	equ	0xFE1
  1877                           indf2	equ	0xFDF
  1878                           fsr2h	equ	0xFDA
  1879                           fsr2l	equ	0xFD9
  1880                           status	equ	0xFD8
  1881                           
  1882 ;; *************** function _ToMainLow_recvmsg *****************
  1883 ;; Defined at:
  1884 ;;		line 112 in file "../src/messages.c"
  1885 ;; Parameters:    Size  Location     Type
  1886 ;;  maxlength       1   38[BANK0 ] unsigned char 
  1887 ;;  msgtype         2   39[BANK0 ] PTR unsigned char 
  1888 ;;		 -> main@msgtype(1), 
  1889 ;;  data            2   41[BANK0 ] PTR void 
  1890 ;;		 -> main@msgbuffer(11), 
  1891 ;; Auto vars:     Size  Location     Type
  1892 ;;		None
  1893 ;; Return value:  Size  Location     Type
  1894 ;;                  1    wreg      char 
  1895 ;; Registers used:
  1896 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1897 ;; Tracked objects:
  1898 ;;		On entry : 0/0
  1899 ;;		On exit  : 0/0
  1900 ;;		Unchanged: 0/0
  1901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1902 ;;      Params:         0       5       0       0       0
  1903 ;;      Locals:         0       0       0       0       0
  1904 ;;      Temps:          0       0       0       0       0
  1905 ;;      Totals:         0       5       0       0       0
  1906 ;;Total ram usage:        5 bytes
  1907 ;; Hardware stack levels used:    1
  1908 ;; Hardware stack levels required when called:   10
  1909 ;; This function calls:
  1910 ;;		_recv_msg
  1911 ;; This function is called by:
  1912 ;;		_main
  1913 ;; This function uses a non-reentrant model
  1914 ;;
  1915                           
  1916                           	psect	text3
  1917  001662                     __ptext3:
  1918                           	opt stack 0
  1919  001662                     _ToMainLow_recvmsg:
  1920                           	opt stack 20
  1921                           
  1922                           ;messages.c: 118: return (recv_msg(&ToMainLow_MQ, maxlength, msgtype, data));
  1923                           
  1924                           ;incstack = 0
  1925                           ;incstack = 0
  1926  001662  0101               	movlb	1	; () banked
  1927  001664  0E01               	movlw	high _ToMainLow_MQ
  1928  001666  0100               	movlb	0	; () banked
  1929  001668  0100               	movlb	0	; () banked
  1930  00166A  6F99               	movwf	(?_recv_msg+1)& (0+255),b
  1931  00166C  0101               	movlb	1	; () banked
  1932  00166E  0E9E               	movlw	low _ToMainLow_MQ
  1933  001670  0100               	movlb	0	; () banked
  1934  001672  6F98               	movwf	?_recv_msg& (0+255),b
  1935  001674  C0A6  F09A         	movff	ToMainLow_recvmsg@maxlength,?_recv_msg+2
  1936  001678  C0A7  F09B         	movff	ToMainLow_recvmsg@msgtype,?_recv_msg+3
  1937  00167C  C0A8  F09C         	movff	ToMainLow_recvmsg@msgtype+1,?_recv_msg+4
  1938  001680  C0A9  F09D         	movff	ToMainLow_recvmsg@data,?_recv_msg+5
  1939  001684  C0AA  F09E         	movff	ToMainLow_recvmsg@data+1,?_recv_msg+6
  1940  001688  ECDE  F003         	call	_recv_msg	;wreg free
  1941  00168C  0012               	return	
  1942  00168E                     __end_of_ToMainLow_recvmsg:
  1943                           	opt stack 0
  1944                           tblptru	equ	0xFF8
  1945                           tblptrh	equ	0xFF7
  1946                           tblptrl	equ	0xFF6
  1947                           tablat	equ	0xFF5
  1948                           postinc0	equ	0xFEE
  1949                           wreg	equ	0xFE8
  1950                           indf1	equ	0xFE7
  1951                           fsr1h	equ	0xFE2
  1952                           fsr1l	equ	0xFE1
  1953                           indf2	equ	0xFDF
  1954                           fsr2h	equ	0xFDA
  1955                           fsr2l	equ	0xFD9
  1956                           status	equ	0xFD8
  1957                           
  1958 ;; *************** function _start_i2c_slave_reply *****************
  1959 ;; Defined at:
  1960 ;;		line 238 in file "../src/my_i2c.c"
  1961 ;; Parameters:    Size  Location     Type
  1962 ;;  length          1   14[BANK0 ] unsigned char 
  1963 ;;  msg             2   15[BANK0 ] PTR unsigned char 
  1964 ;;		 -> main@msgbuffer(11), 
  1965 ;; Auto vars:     Size  Location     Type
  1966 ;;		None
  1967 ;; Return value:  Size  Location     Type
  1968 ;;		None               void
  1969 ;; Registers used:
  1970 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1971 ;; Tracked objects:
  1972 ;;		On entry : 0/0
  1973 ;;		On exit  : 0/0
  1974 ;;		Unchanged: 0/0
  1975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1976 ;;      Params:         0       3       0       0       0
  1977 ;;      Locals:         0       0       0       0       0
  1978 ;;      Temps:          0       2       0       0       0
  1979 ;;      Totals:         0       5       0       0       0
  1980 ;;Total ram usage:        5 bytes
  1981 ;; Hardware stack levels used:    1
  1982 ;; Hardware stack levels required when called:    8
  1983 ;; This function calls:
  1984 ;;		Nothing
  1985 ;; This function is called by:
  1986 ;;		_main
  1987 ;; This function uses a non-reentrant model
  1988 ;;
  1989                           
  1990                           	psect	text4
  1991  0008E8                     __ptext4:
  1992                           	opt stack 0
  1993  0008E8                     _start_i2c_slave_reply:
  1994                           	opt stack 22
  1995                           
  1996                           ;my_i2c.c: 240: for (ic_ptr->outbuflen = 0; ic_ptr->outbuflen < length; ic_ptr->outbufle
      +                          n++) {
  1997                           
  1998                           ;incstack = 0
  1999                           ;incstack = 0
  2000  0008E8  0100               	movlb	0	; () banked
  2001  0008EA  EE20 F01A          	lfsr	2,26
  2002  0008EE  0100               	movlb	0	; () banked
  2003  0008F0  51AF               	movf	_ic_ptr& (0+255),w,b
  2004  0008F2  26D9               	addwf	fsr2l,f,c
  2005  0008F4  0100               	movlb	0	; () banked
  2006  0008F6  51B0               	movf	(_ic_ptr+1)& (0+255),w,b
  2007  0008F8  22DA               	addwfc	fsr2h,f,c
  2008  0008FA  0E00               	movlw	0
  2009  0008FC  6EDF               	movwf	indf2,c
  2010  0008FE  D042               	goto	l3280
  2011  000900                     l3276:
  2012                           
  2013                           ; BSR set to: 0
  2014                           ;my_i2c.c: 241: ic_ptr->outbuffer[ic_ptr->outbuflen] = msg[ic_ptr->outbuflen];
  2015  000900  0100               	movlb	0	; () banked
  2016  000902  EE20 F01A          	lfsr	2,26
  2017  000906  0100               	movlb	0	; () banked
  2018  000908  51AF               	movf	_ic_ptr& (0+255),w,b
  2019  00090A  26D9               	addwf	fsr2l,f,c
  2020  00090C  0100               	movlb	0	; () banked
  2021  00090E  51B0               	movf	(_ic_ptr+1)& (0+255),w,b
  2022  000910  22DA               	addwfc	fsr2h,f,c
  2023  000912  50DF               	movf	indf2,w,c
  2024  000914  0100               	movlb	0	; () banked
  2025  000916  6F91               	movwf	??_start_i2c_slave_reply& (0+255),b
  2026  000918  0100               	movlb	0	; () banked
  2027  00091A  5191               	movf	??_start_i2c_slave_reply& (0+255),w,b
  2028  00091C  0D01               	mullw	1
  2029  00091E  50F3               	movf	prodl,w,c
  2030  000920  0100               	movlb	0	; () banked
  2031  000922  0100               	movlb	0	; () banked
  2032  000924  258F               	addwf	start_i2c_slave_reply@msg& (0+255),w,b
  2033  000926  6ED9               	movwf	fsr2l,c
  2034  000928  50F4               	movf	prodh,w,c
  2035  00092A  0100               	movlb	0	; () banked
  2036  00092C  0100               	movlb	0	; () banked
  2037  00092E  2190               	addwfc	(start_i2c_slave_reply@msg+1)& (0+255),w,b
  2038  000930  6EDA               	movwf	fsr2h,c
  2039  000932  0100               	movlb	0	; () banked
  2040  000934  EE10 F01A          	lfsr	1,26
  2041  000938  0100               	movlb	0	; () banked
  2042  00093A  51AF               	movf	_ic_ptr& (0+255),w,b
  2043  00093C  26E1               	addwf	fsr1l,f,c
  2044  00093E  0100               	movlb	0	; () banked
  2045  000940  51B0               	movf	(_ic_ptr+1)& (0+255),w,b
  2046  000942  22E2               	addwfc	fsr1h,f,c
  2047  000944  50E7               	movf	indf1,w,c
  2048  000946  0100               	movlb	0	; () banked
  2049  000948  6F92               	movwf	(??_start_i2c_slave_reply+1)& (0+255),b
  2050  00094A  0100               	movlb	0	; () banked
  2051  00094C  5192               	movf	(??_start_i2c_slave_reply+1)& (0+255),w,b
  2052  00094E  0D01               	mullw	1
  2053  000950  0E10               	movlw	16
  2054  000952  26F3               	addwf	prodl,f,c
  2055  000954  0E00               	movlw	0
  2056  000956  22F4               	addwfc	prodh,f,c
  2057  000958  50F3               	movf	prodl,w,c
  2058  00095A  0100               	movlb	0	; () banked
  2059  00095C  0100               	movlb	0	; () banked
  2060  00095E  25AF               	addwf	_ic_ptr& (0+255),w,b
  2061  000960  6EE1               	movwf	fsr1l,c
  2062  000962  50F4               	movf	prodh,w,c
  2063  000964  0100               	movlb	0	; () banked
  2064  000966  0100               	movlb	0	; () banked
  2065  000968  21B0               	addwfc	(_ic_ptr+1)& (0+255),w,b
  2066  00096A  6EE2               	movwf	fsr1h,c
  2067  00096C  CFDF FFE7          	movff	indf2,indf1
  2068                           
  2069                           ; BSR set to: 0
  2070  000970  0100               	movlb	0	; () banked
  2071  000972  EE20 F01A          	lfsr	2,26
  2072  000976  0100               	movlb	0	; () banked
  2073  000978  51AF               	movf	_ic_ptr& (0+255),w,b
  2074  00097A  26D9               	addwf	fsr2l,f,c
  2075  00097C  0100               	movlb	0	; () banked
  2076  00097E  51B0               	movf	(_ic_ptr+1)& (0+255),w,b
  2077  000980  22DA               	addwfc	fsr2h,f,c
  2078  000982  2ADF               	incf	indf2,f,c
  2079  000984                     l3280:
  2080                           
  2081                           ; BSR set to: 0
  2082  000984  0100               	movlb	0	; () banked
  2083  000986  EE20 F01A          	lfsr	2,26
  2084  00098A  0100               	movlb	0	; () banked
  2085  00098C  51AF               	movf	_ic_ptr& (0+255),w,b
  2086  00098E  26D9               	addwf	fsr2l,f,c
  2087  000990  0100               	movlb	0	; () banked
  2088  000992  51B0               	movf	(_ic_ptr+1)& (0+255),w,b
  2089  000994  22DA               	addwfc	fsr2h,f,c
  2090  000996  50DF               	movf	indf2,w,c
  2091  000998  0100               	movlb	0	; () banked
  2092  00099A  6F91               	movwf	??_start_i2c_slave_reply& (0+255),b
  2093  00099C  0100               	movlb	0	; () banked
  2094  00099E  0100               	movlb	0	; () banked
  2095  0009A0  518E               	movf	start_i2c_slave_reply@length& (0+255),w,b
  2096  0009A2  0100               	movlb	0	; () banked
  2097  0009A4  5D91               	subwf	??_start_i2c_slave_reply& (0+255),w,b
  2098  0009A6  A0D8               	btfss	status,0,c
  2099  0009A8  D7AB               	goto	l3276
  2100                           
  2101                           ; BSR set to: 0
  2102                           ;my_i2c.c: 242: }
  2103                           ;my_i2c.c: 243: ic_ptr->outbuflen = length;
  2104                           
  2105                           ; BSR set to: 0
  2106  0009AA  0100               	movlb	0	; () banked
  2107  0009AC  EE20 F01A          	lfsr	2,26
  2108  0009B0  0100               	movlb	0	; () banked
  2109  0009B2  51AF               	movf	_ic_ptr& (0+255),w,b
  2110  0009B4  26D9               	addwf	fsr2l,f,c
  2111  0009B6  0100               	movlb	0	; () banked
  2112  0009B8  51B0               	movf	(_ic_ptr+1)& (0+255),w,b
  2113  0009BA  22DA               	addwfc	fsr2h,f,c
  2114  0009BC  0100               	movlb	0	; () banked
  2115  0009BE  C08E  FFDF         	movff	start_i2c_slave_reply@length,indf2
  2116                           
  2117                           ;my_i2c.c: 244: ic_ptr->outbufind = 1;
  2118  0009C2  0100               	movlb	0	; () banked
  2119  0009C4  EE20 F01B          	lfsr	2,27
  2120  0009C8  0100               	movlb	0	; () banked
  2121  0009CA  51AF               	movf	_ic_ptr& (0+255),w,b
  2122  0009CC  26D9               	addwf	fsr2l,f,c
  2123  0009CE  0100               	movlb	0	; () banked
  2124  0009D0  51B0               	movf	(_ic_ptr+1)& (0+255),w,b
  2125  0009D2  22DA               	addwfc	fsr2h,f,c
  2126  0009D4  0E01               	movlw	1
  2127  0009D6  6EDF               	movwf	indf2,c
  2128                           
  2129                           ;my_i2c.c: 247: SSPBUF = ic_ptr->outbuffer[0];
  2130  0009D8  0100               	movlb	0	; () banked
  2131  0009DA  EE20 F010          	lfsr	2,16
  2132  0009DE  0100               	movlb	0	; () banked
  2133  0009E0  51AF               	movf	_ic_ptr& (0+255),w,b
  2134  0009E2  26D9               	addwf	fsr2l,f,c
  2135  0009E4  0100               	movlb	0	; () banked
  2136  0009E6  51B0               	movf	(_ic_ptr+1)& (0+255),w,b
  2137  0009E8  22DA               	addwfc	fsr2h,f,c
  2138  0009EA  50DF               	movf	indf2,w,c
  2139  0009EC  6EC9               	movwf	4041,c	;volatile
  2140                           
  2141                           ; BSR set to: 0
  2142                           ;my_i2c.c: 250: SSPCON1bits.CKP = 1;
  2143  0009EE  88C6               	bsf	4038,4,c	;volatile
  2144                           
  2145                           ; BSR set to: 0
  2146  0009F0  0012               	return	
  2147  0009F2                     __end_of_start_i2c_slave_reply:
  2148                           	opt stack 0
  2149                           tblptru	equ	0xFF8
  2150                           tblptrh	equ	0xFF7
  2151                           tblptrl	equ	0xFF6
  2152                           tablat	equ	0xFF5
  2153                           prodh	equ	0xFF4
  2154                           prodl	equ	0xFF3
  2155                           postinc0	equ	0xFEE
  2156                           wreg	equ	0xFE8
  2157                           indf1	equ	0xFE7
  2158                           fsr1h	equ	0xFE2
  2159                           fsr1l	equ	0xFE1
  2160                           indf2	equ	0xFDF
  2161                           fsr2h	equ	0xFDA
  2162                           fsr2l	equ	0xFD9
  2163                           status	equ	0xFD8
  2164                           
  2165 ;; *************** function _putIntoUARTBuffer *****************
  2166 ;; Defined at:
  2167 ;;		line 39 in file "../src/my_uart.c"
  2168 ;; Parameters:    Size  Location     Type
  2169 ;;  buffer          2   14[BANK0 ] PTR unsigned char 
  2170 ;;		 -> main@msgbuffer(11), 
  2171 ;; Auto vars:     Size  Location     Type
  2172 ;;		None
  2173 ;; Return value:  Size  Location     Type
  2174 ;;		None               void
  2175 ;; Registers used:
  2176 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2177 ;; Tracked objects:
  2178 ;;		On entry : 0/0
  2179 ;;		On exit  : 0/0
  2180 ;;		Unchanged: 0/0
  2181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2182 ;;      Params:         0       2       0       0       0
  2183 ;;      Locals:         0       0       0       0       0
  2184 ;;      Temps:          0       0       0       0       0
  2185 ;;      Totals:         0       2       0       0       0
  2186 ;;Total ram usage:        2 bytes
  2187 ;; Hardware stack levels used:    1
  2188 ;; Hardware stack levels required when called:    8
  2189 ;; This function calls:
  2190 ;;		Nothing
  2191 ;; This function is called by:
  2192 ;;		_main
  2193 ;; This function uses a non-reentrant model
  2194 ;;
  2195                           
  2196                           	psect	text5
  2197  000AE8                     __ptext5:
  2198                           	opt stack 0
  2199  000AE8                     _putIntoUARTBuffer:
  2200                           	opt stack 22
  2201                           
  2202                           ;my_uart.c: 46: uc_ptr->buffer[0] = buffer[0];
  2203                           
  2204                           ; BSR set to: 0
  2205                           ;incstack = 0
  2206                           ;incstack = 0
  2207  000AE8  C08E  FFD9         	movff	putIntoUARTBuffer@buffer,fsr2l
  2208  000AEC  C08F  FFDA         	movff	putIntoUARTBuffer@buffer+1,fsr2h
  2209  000AF0  C062  FFE1         	movff	_uc_ptr,fsr1l
  2210  000AF4  C063  FFE2         	movff	_uc_ptr+1,fsr1h
  2211  000AF8  CFDF FFE7          	movff	indf2,indf1
  2212                           
  2213                           ;my_uart.c: 47: uc_ptr->buffer[1] = buffer[1];
  2214  000AFC  0100               	movlb	0	; () banked
  2215  000AFE  EE20 F001          	lfsr	2,1
  2216  000B02  0100               	movlb	0	; () banked
  2217  000B04  518E               	movf	putIntoUARTBuffer@buffer& (0+255),w,b
  2218  000B06  26D9               	addwf	fsr2l,f,c
  2219  000B08  0100               	movlb	0	; () banked
  2220  000B0A  518F               	movf	(putIntoUARTBuffer@buffer+1)& (0+255),w,b
  2221  000B0C  22DA               	addwfc	fsr2h,f,c
  2222  000B0E  EE10 F001          	lfsr	1,1
  2223  000B12  5062               	movf	_uc_ptr,w,c
  2224  000B14  26E1               	addwf	fsr1l,f,c
  2225  000B16  5063               	movf	_uc_ptr+1,w,c
  2226  000B18  22E2               	addwfc	fsr1h,f,c
  2227  000B1A  CFDF FFE7          	movff	indf2,indf1
  2228                           
  2229                           ; BSR set to: 0
  2230                           ;my_uart.c: 48: uc_ptr->buffer[2] = buffer[2];
  2231  000B1E  0100               	movlb	0	; () banked
  2232  000B20  EE20 F002          	lfsr	2,2
  2233  000B24  0100               	movlb	0	; () banked
  2234  000B26  518E               	movf	putIntoUARTBuffer@buffer& (0+255),w,b
  2235  000B28  26D9               	addwf	fsr2l,f,c
  2236  000B2A  0100               	movlb	0	; () banked
  2237  000B2C  518F               	movf	(putIntoUARTBuffer@buffer+1)& (0+255),w,b
  2238  000B2E  22DA               	addwfc	fsr2h,f,c
  2239  000B30  EE10 F002          	lfsr	1,2
  2240  000B34  5062               	movf	_uc_ptr,w,c
  2241  000B36  26E1               	addwf	fsr1l,f,c
  2242  000B38  5063               	movf	_uc_ptr+1,w,c
  2243  000B3A  22E2               	addwfc	fsr1h,f,c
  2244  000B3C  CFDF FFE7          	movff	indf2,indf1
  2245                           
  2246                           ; BSR set to: 0
  2247                           ;my_uart.c: 49: uc_ptr->buffer[3] = buffer[3];
  2248  000B40  0100               	movlb	0	; () banked
  2249  000B42  EE20 F003          	lfsr	2,3
  2250  000B46  0100               	movlb	0	; () banked
  2251  000B48  518E               	movf	putIntoUARTBuffer@buffer& (0+255),w,b
  2252  000B4A  26D9               	addwf	fsr2l,f,c
  2253  000B4C  0100               	movlb	0	; () banked
  2254  000B4E  518F               	movf	(putIntoUARTBuffer@buffer+1)& (0+255),w,b
  2255  000B50  22DA               	addwfc	fsr2h,f,c
  2256  000B52  EE10 F003          	lfsr	1,3
  2257  000B56  5062               	movf	_uc_ptr,w,c
  2258  000B58  26E1               	addwf	fsr1l,f,c
  2259  000B5A  5063               	movf	_uc_ptr+1,w,c
  2260  000B5C  22E2               	addwfc	fsr1h,f,c
  2261  000B5E  CFDF FFE7          	movff	indf2,indf1
  2262                           
  2263                           ; BSR set to: 0
  2264                           ;my_uart.c: 50: uc_ptr->buffer[4] = buffer[4];
  2265  000B62  0100               	movlb	0	; () banked
  2266  000B64  EE20 F004          	lfsr	2,4
  2267  000B68  0100               	movlb	0	; () banked
  2268  000B6A  518E               	movf	putIntoUARTBuffer@buffer& (0+255),w,b
  2269  000B6C  26D9               	addwf	fsr2l,f,c
  2270  000B6E  0100               	movlb	0	; () banked
  2271  000B70  518F               	movf	(putIntoUARTBuffer@buffer+1)& (0+255),w,b
  2272  000B72  22DA               	addwfc	fsr2h,f,c
  2273  000B74  EE10 F004          	lfsr	1,4
  2274  000B78  5062               	movf	_uc_ptr,w,c
  2275  000B7A  26E1               	addwf	fsr1l,f,c
  2276  000B7C  5063               	movf	_uc_ptr+1,w,c
  2277  000B7E  22E2               	addwfc	fsr1h,f,c
  2278  000B80  CFDF FFE7          	movff	indf2,indf1
  2279                           
  2280                           ; BSR set to: 0
  2281                           ;my_uart.c: 51: uc_ptr->buffer[5] = buffer[5];
  2282  000B84  0100               	movlb	0	; () banked
  2283  000B86  EE20 F005          	lfsr	2,5
  2284  000B8A  0100               	movlb	0	; () banked
  2285  000B8C  518E               	movf	putIntoUARTBuffer@buffer& (0+255),w,b
  2286  000B8E  26D9               	addwf	fsr2l,f,c
  2287  000B90  0100               	movlb	0	; () banked
  2288  000B92  518F               	movf	(putIntoUARTBuffer@buffer+1)& (0+255),w,b
  2289  000B94  22DA               	addwfc	fsr2h,f,c
  2290  000B96  EE10 F005          	lfsr	1,5
  2291  000B9A  5062               	movf	_uc_ptr,w,c
  2292  000B9C  26E1               	addwf	fsr1l,f,c
  2293  000B9E  5063               	movf	_uc_ptr+1,w,c
  2294  000BA0  22E2               	addwfc	fsr1h,f,c
  2295  000BA2  CFDF FFE7          	movff	indf2,indf1
  2296                           
  2297                           ; BSR set to: 0
  2298                           ;my_uart.c: 52: uc_ptr->buflen = 6;
  2299  000BA6  EE20 F006          	lfsr	2,6
  2300  000BAA  5062               	movf	_uc_ptr,w,c
  2301  000BAC  26D9               	addwf	fsr2l,f,c
  2302  000BAE  5063               	movf	_uc_ptr+1,w,c
  2303  000BB0  22DA               	addwfc	fsr2h,f,c
  2304  000BB2  0E06               	movlw	6
  2305  000BB4  6EDF               	movwf	indf2,c
  2306                           
  2307                           ; BSR set to: 0
  2308                           ;my_uart.c: 53: uc_ptr->bufind = 0;
  2309  000BB6  EE20 F00F          	lfsr	2,15
  2310  000BBA  5062               	movf	_uc_ptr,w,c
  2311  000BBC  26D9               	addwf	fsr2l,f,c
  2312  000BBE  5063               	movf	_uc_ptr+1,w,c
  2313  000BC0  22DA               	addwfc	fsr2h,f,c
  2314  000BC2  0E00               	movlw	0
  2315  000BC4  6EDF               	movwf	indf2,c
  2316                           
  2317                           ; BSR set to: 0
  2318  000BC6  0012               	return	
  2319  000BC8                     __end_of_putIntoUARTBuffer:
  2320                           	opt stack 0
  2321                           tblptru	equ	0xFF8
  2322                           tblptrh	equ	0xFF7
  2323                           tblptrl	equ	0xFF6
  2324                           tablat	equ	0xFF5
  2325                           prodh	equ	0xFF4
  2326                           prodl	equ	0xFF3
  2327                           postinc0	equ	0xFEE
  2328                           wreg	equ	0xFE8
  2329                           indf1	equ	0xFE7
  2330                           fsr1h	equ	0xFE2
  2331                           fsr1l	equ	0xFE1
  2332                           indf2	equ	0xFDF
  2333                           fsr2h	equ	0xFDA
  2334                           fsr2l	equ	0xFD9
  2335                           status	equ	0xFD8
  2336                           
  2337 ;; *************** function _timer0_lthread *****************
  2338 ;; Defined at:
  2339 ;;		line 9 in file "../src/timer0_thread.c"
  2340 ;; Parameters:    Size  Location     Type
  2341 ;;  tptr            2   14[BANK0 ] PTR struct __timer0_thre
  2342 ;;		 -> main@t0thread_data(2), 
  2343 ;;  msgtype         2   16[BANK0 ] int 
  2344 ;;  length          2   18[BANK0 ] int 
  2345 ;;  msgbuffer       2   20[BANK0 ] PTR unsigned char 
  2346 ;;		 -> main@msgbuffer(11), 
  2347 ;; Auto vars:     Size  Location     Type
  2348 ;;  msgval          2   22[BANK0 ] PTR unsigned int 
  2349 ;;		 -> main@msgbuffer(11), 
  2350 ;; Return value:  Size  Location     Type
  2351 ;;                  2   14[BANK0 ] int 
  2352 ;; Registers used:
  2353 ;;		None
  2354 ;; Tracked objects:
  2355 ;;		On entry : 0/0
  2356 ;;		On exit  : 0/0
  2357 ;;		Unchanged: 0/0
  2358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2359 ;;      Params:         0       8       0       0       0
  2360 ;;      Locals:         0       2       0       0       0
  2361 ;;      Temps:          0       0       0       0       0
  2362 ;;      Totals:         0      10       0       0       0
  2363 ;;Total ram usage:       10 bytes
  2364 ;; Hardware stack levels used:    1
  2365 ;; Hardware stack levels required when called:    8
  2366 ;; This function calls:
  2367 ;;		Nothing
  2368 ;; This function is called by:
  2369 ;;		_main
  2370 ;; This function uses a non-reentrant model
  2371 ;;
  2372                           
  2373                           	psect	text6
  2374  0017FC                     __ptext6:
  2375                           	opt stack 0
  2376  0017FC                     _timer0_lthread:
  2377                           	opt stack 22
  2378                           
  2379                           ;timer0_thread.c: 10: unsigned int *msgval;
  2380                           ;timer0_thread.c: 12: msgval = (unsigned int *) msgbuffer;
  2381                           
  2382                           ; BSR set to: 0
  2383                           ;incstack = 0
  2384                           ;incstack = 0
  2385  0017FC  C094  F096         	movff	timer0_lthread@msgbuffer,timer0_lthread@msgval
  2386  001800  C095  F097         	movff	timer0_lthread@msgbuffer+1,timer0_lthread@msgval+1
  2387  001804  0012               	return	
  2388  001806                     __end_of_timer0_lthread:
  2389                           	opt stack 0
  2390                           tblptru	equ	0xFF8
  2391                           tblptrh	equ	0xFF7
  2392                           tblptrl	equ	0xFF6
  2393                           tablat	equ	0xFF5
  2394                           prodh	equ	0xFF4
  2395                           prodl	equ	0xFF3
  2396                           postinc0	equ	0xFEE
  2397                           wreg	equ	0xFE8
  2398                           indf1	equ	0xFE7
  2399                           fsr1h	equ	0xFE2
  2400                           fsr1l	equ	0xFE1
  2401                           indf2	equ	0xFDF
  2402                           fsr2h	equ	0xFDA
  2403                           fsr2l	equ	0xFD9
  2404                           status	equ	0xFD8
  2405                           
  2406 ;; *************** function _uart_lthread *****************
  2407 ;; Defined at:
  2408 ;;		line 11 in file "../src/uart_thread.c"
  2409 ;; Parameters:    Size  Location     Type
  2410 ;;  uptr            2   15[BANK0 ] PTR struct __uart_thread
  2411 ;;		 -> main@uthread_data(2), 
  2412 ;;  msgtype         2   17[BANK0 ] int 
  2413 ;;  length          2   19[BANK0 ] int 
  2414 ;;  msgbuffer       2   21[BANK0 ] PTR unsigned char 
  2415 ;;		 -> main@msgbuffer(11), 
  2416 ;; Auto vars:     Size  Location     Type
  2417 ;;  i               1   26[BANK0 ] unsigned char 
  2418 ;; Return value:  Size  Location     Type
  2419 ;;                  2   15[BANK0 ] int 
  2420 ;; Registers used:
  2421 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2422 ;; Tracked objects:
  2423 ;;		On entry : 0/0
  2424 ;;		On exit  : 0/0
  2425 ;;		Unchanged: 0/0
  2426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2427 ;;      Params:         0       8       0       0       0
  2428 ;;      Locals:         0       1       0       0       0
  2429 ;;      Temps:          0       3       0       0       0
  2430 ;;      Totals:         0      12       0       0       0
  2431 ;;Total ram usage:       12 bytes
  2432 ;; Hardware stack levels used:    1
  2433 ;; Hardware stack levels required when called:    9
  2434 ;; This function calls:
  2435 ;;		_WriteUSART
  2436 ;; This function is called by:
  2437 ;;		_main
  2438 ;; This function uses a non-reentrant model
  2439 ;;
  2440                           
  2441                           	psect	text7
  2442  000C98                     __ptext7:
  2443                           	opt stack 0
  2444  000C98                     _uart_lthread:
  2445                           	opt stack 21
  2446                           
  2447                           ;uart_thread.c: 12: if (msgtype == 30) {
  2448                           
  2449                           ;incstack = 0
  2450                           ;incstack = 0
  2451  000C98  0100               	movlb	0	; () banked
  2452  000C9A  0100               	movlb	0	; () banked
  2453  000C9C  5191               	movf	uart_lthread@msgtype& (0+255),w,b
  2454  000C9E  0A1E               	xorlw	30
  2455  000CA0  1192               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  2456  000CA2  B4D8               	btfsc	status,2,c
  2457  000CA4  0012               	return	
  2458                           
  2459                           ; BSR set to: 0
  2460                           ;uart_thread.c: 14: else if (msgtype == 61)
  2461                           
  2462                           ; BSR set to: 0
  2463                           
  2464                           ; BSR set to: 0
  2465                           ;uart_thread.c: 13: }
  2466  000CA6  0100               	movlb	0	; () banked
  2467  000CA8  0100               	movlb	0	; () banked
  2468  000CAA  5191               	movf	uart_lthread@msgtype& (0+255),w,b
  2469  000CAC  0A3D               	xorlw	61
  2470  000CAE  1192               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  2471  000CB0  A4D8               	btfss	status,2,c
  2472  000CB2  0012               	return	
  2473                           
  2474                           ; BSR set to: 0
  2475                           ;uart_thread.c: 15: {
  2476                           ;uart_thread.c: 17: for(char i = 0; i < length; i++)
  2477  000CB4  0100               	movlb	0	; () banked
  2478  000CB6  6F97               	movwf	??_uart_lthread& (0+255),b
  2479  000CB8  0E00               	movlw	0
  2480  000CBA  0100               	movlb	0	; () banked
  2481  000CBC  0100               	movlb	0	; () banked
  2482  000CBE  6F9A               	movwf	uart_lthread@i& (0+255),b
  2483  000CC0  0100               	movlb	0	; () banked
  2484  000CC2  5197               	movf	??_uart_lthread& (0+255),w,b
  2485  000CC4  D02B               	goto	l3252
  2486  000CC6                     l3246:
  2487                           
  2488                           ; BSR set to: 0
  2489                           ;uart_thread.c: 18: {
  2490                           ;uart_thread.c: 19: buffertest = msgbuffer[i];
  2491  000CC6  0100               	movlb	0	; () banked
  2492  000CC8  0100               	movlb	0	; () banked
  2493  000CCA  519A               	movf	uart_lthread@i& (0+255),w,b
  2494  000CCC  0D01               	mullw	1
  2495  000CCE  50F3               	movf	prodl,w,c
  2496  000CD0  0100               	movlb	0	; () banked
  2497  000CD2  0100               	movlb	0	; () banked
  2498  000CD4  2595               	addwf	uart_lthread@msgbuffer& (0+255),w,b
  2499  000CD6  6ED9               	movwf	fsr2l,c
  2500  000CD8  50F4               	movf	prodh,w,c
  2501  000CDA  0100               	movlb	0	; () banked
  2502  000CDC  0100               	movlb	0	; () banked
  2503  000CDE  2196               	addwfc	(uart_lthread@msgbuffer+1)& (0+255),w,b
  2504  000CE0  6EDA               	movwf	fsr2h,c
  2505  000CE2  50DF               	movf	indf2,w,c
  2506  000CE4  0100               	movlb	0	; () banked
  2507  000CE6  0100               	movlb	0	; () banked
  2508  000CE8  6FAE               	movwf	_buffertest& (0+255),b
  2509  000CEA                     l426:
  2510  000CEA  A2AC               	btfss	4012,1,c	;volatile
  2511  000CEC  D7FE               	goto	l426
  2512                           
  2513                           ;uart_thread.c: 21: WriteUSART(msgbuffer[i]);
  2514  000CEE  0100               	movlb	0	; () banked
  2515  000CF0  0100               	movlb	0	; () banked
  2516  000CF2  519A               	movf	uart_lthread@i& (0+255),w,b
  2517  000CF4  0D01               	mullw	1
  2518  000CF6  50F3               	movf	prodl,w,c
  2519  000CF8  0100               	movlb	0	; () banked
  2520  000CFA  0100               	movlb	0	; () banked
  2521  000CFC  2595               	addwf	uart_lthread@msgbuffer& (0+255),w,b
  2522  000CFE  6ED9               	movwf	fsr2l,c
  2523  000D00  50F4               	movf	prodh,w,c
  2524  000D02  0100               	movlb	0	; () banked
  2525  000D04  0100               	movlb	0	; () banked
  2526  000D06  2196               	addwfc	(uart_lthread@msgbuffer+1)& (0+255),w,b
  2527  000D08  6EDA               	movwf	fsr2h,c
  2528  000D0A  50DF               	movf	indf2,w,c
  2529  000D0C  0100               	movlb	0	; () banked
  2530  000D0E  0100               	movlb	0	; () banked
  2531  000D10  6F8E               	movwf	?_WriteUSART& (0+255),b
  2532  000D12  ECE9  F00B         	call	_WriteUSART	;wreg free
  2533  000D16  0100               	movlb	0	; () banked
  2534  000D18  0100               	movlb	0	; () banked
  2535  000D1A  2B9A               	incf	uart_lthread@i& (0+255),f,b
  2536  000D1C                     l3252:
  2537                           
  2538                           ; BSR set to: 0
  2539  000D1C  0100               	movlb	0	; () banked
  2540  000D1E  0100               	movlb	0	; () banked
  2541  000D20  519A               	movf	uart_lthread@i& (0+255),w,b
  2542  000D22  0100               	movlb	0	; () banked
  2543  000D24  6F97               	movwf	??_uart_lthread& (0+255),b
  2544  000D26  6B98               	clrf	(??_uart_lthread+1)& (0+255),b
  2545  000D28  0100               	movlb	0	; () banked
  2546  000D2A  5198               	movf	(??_uart_lthread+1)& (0+255),w,b
  2547  000D2C  0A80               	xorlw	128
  2548  000D2E  0100               	movlb	0	; () banked
  2549  000D30  6F99               	movwf	(??_uart_lthread+2)& (0+255),b
  2550  000D32  0100               	movlb	0	; () banked
  2551  000D34  5193               	movf	uart_lthread@length& (0+255),w,b
  2552  000D36  0100               	movlb	0	; () banked
  2553  000D38  5D97               	subwf	??_uart_lthread& (0+255),w,b
  2554  000D3A  0100               	movlb	0	; () banked
  2555  000D3C  0100               	movlb	0	; () banked
  2556  000D3E  5194               	movf	(uart_lthread@length+1)& (0+255),w,b
  2557  000D40  0A80               	xorlw	128
  2558  000D42  0100               	movlb	0	; () banked
  2559  000D44  5999               	subwfb	(??_uart_lthread+2)& (0+255),w,b
  2560  000D46  A0D8               	btfss	status,0,c
  2561  000D48  D7BE               	goto	l3246
  2562  000D4A                     l430:
  2563  000D4A  A2AC               	btfss	4012,1,c	;volatile
  2564  000D4C  D7FE               	goto	l430
  2565                           
  2566                           ;uart_thread.c: 25: WriteUSART(0x55);
  2567  000D4E  0100               	movlb	0	; () banked
  2568  000D50  6F97               	movwf	??_uart_lthread& (0+255),b
  2569  000D52  0E55               	movlw	85
  2570  000D54  0100               	movlb	0	; () banked
  2571  000D56  0100               	movlb	0	; () banked
  2572  000D58  6F8E               	movwf	?_WriteUSART& (0+255),b
  2573  000D5A  0100               	movlb	0	; () banked
  2574  000D5C  5197               	movf	??_uart_lthread& (0+255),w,b
  2575  000D5E  ECE9  F00B         	call	_WriteUSART	;wreg free
  2576  000D62  0012               	return	
  2577  000D64                     __end_of_uart_lthread:
  2578                           	opt stack 0
  2579                           tblptru	equ	0xFF8
  2580                           tblptrh	equ	0xFF7
  2581                           tblptrl	equ	0xFF6
  2582                           tablat	equ	0xFF5
  2583                           prodh	equ	0xFF4
  2584                           prodl	equ	0xFF3
  2585                           postinc0	equ	0xFEE
  2586                           wreg	equ	0xFE8
  2587                           indf1	equ	0xFE7
  2588                           fsr1h	equ	0xFE2
  2589                           fsr1l	equ	0xFE1
  2590                           indf2	equ	0xFDF
  2591                           fsr2h	equ	0xFDA
  2592                           fsr2l	equ	0xFD9
  2593                           status	equ	0xFD8
  2594                           
  2595 ;; *************** function _WriteUSART *****************
  2596 ;; Defined at:
  2597 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic18\plib\USART\uwrite.c"
  2598 ;; Parameters:    Size  Location     Type
  2599 ;;  data            1   14[BANK0 ] unsigned char 
  2600 ;; Auto vars:     Size  Location     Type
  2601 ;;		None
  2602 ;; Return value:  Size  Location     Type
  2603 ;;		None               void
  2604 ;; Registers used:
  2605 ;;		None
  2606 ;; Tracked objects:
  2607 ;;		On entry : 0/0
  2608 ;;		On exit  : 0/0
  2609 ;;		Unchanged: 0/0
  2610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2611 ;;      Params:         0       1       0       0       0
  2612 ;;      Locals:         0       0       0       0       0
  2613 ;;      Temps:          0       0       0       0       0
  2614 ;;      Totals:         0       1       0       0       0
  2615 ;;Total ram usage:        1 bytes
  2616 ;; Hardware stack levels used:    1
  2617 ;; Hardware stack levels required when called:    8
  2618 ;; This function calls:
  2619 ;;		Nothing
  2620 ;; This function is called by:
  2621 ;;		_uart_lthread
  2622 ;; This function uses a non-reentrant model
  2623 ;;
  2624                           
  2625                           	psect	text8
  2626  0017D2                     __ptext8:
  2627                           	opt stack 0
  2628  0017D2                     _WriteUSART:
  2629                           	opt stack 21
  2630                           
  2631                           ;incstack = 0
  2632                           ;incstack = 0
  2633  0017D2  ACAC               	btfss	4012,6,c	;volatile
  2634  0017D4  D003               	goto	l588
  2635  0017D6  90AC               	bcf	4012,0,c	;volatile
  2636  0017D8  B253               	btfsc	_USART_Status,1,c
  2637  0017DA  80AC               	bsf	4012,0,c	;volatile
  2638  0017DC                     l588:
  2639  0017DC  C08E  FFAD         	movff	WriteUSART@data,4013	;volatile
  2640  0017E0  0012               	return	
  2641  0017E2                     __end_of_WriteUSART:
  2642                           	opt stack 0
  2643                           tblptru	equ	0xFF8
  2644                           tblptrh	equ	0xFF7
  2645                           tblptrl	equ	0xFF6
  2646                           tablat	equ	0xFF5
  2647                           prodh	equ	0xFF4
  2648                           prodl	equ	0xFF3
  2649                           postinc0	equ	0xFEE
  2650                           wreg	equ	0xFE8
  2651                           indf1	equ	0xFE7
  2652                           fsr1h	equ	0xFE2
  2653                           fsr1l	equ	0xFE1
  2654                           indf2	equ	0xFDF
  2655                           fsr2h	equ	0xFDA
  2656                           fsr2l	equ	0xFD9
  2657                           status	equ	0xFD8
  2658                           
  2659 ;; *************** function _ToMainHigh_recvmsg *****************
  2660 ;; Defined at:
  2661 ;;		line 135 in file "../src/messages.c"
  2662 ;; Parameters:    Size  Location     Type
  2663 ;;  maxlength       1   38[BANK0 ] unsigned char 
  2664 ;;  msgtype         2   39[BANK0 ] PTR unsigned char 
  2665 ;;		 -> main@msgtype(1), 
  2666 ;;  data            2   41[BANK0 ] PTR void 
  2667 ;;		 -> main@msgbuffer(11), 
  2668 ;; Auto vars:     Size  Location     Type
  2669 ;;		None
  2670 ;; Return value:  Size  Location     Type
  2671 ;;                  1    wreg      char 
  2672 ;; Registers used:
  2673 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2674 ;; Tracked objects:
  2675 ;;		On entry : 0/0
  2676 ;;		On exit  : 0/0
  2677 ;;		Unchanged: 0/0
  2678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2679 ;;      Params:         0       5       0       0       0
  2680 ;;      Locals:         0       0       0       0       0
  2681 ;;      Temps:          0       0       0       0       0
  2682 ;;      Totals:         0       5       0       0       0
  2683 ;;Total ram usage:        5 bytes
  2684 ;; Hardware stack levels used:    1
  2685 ;; Hardware stack levels required when called:   10
  2686 ;; This function calls:
  2687 ;;		_recv_msg
  2688 ;; This function is called by:
  2689 ;;		_main
  2690 ;; This function uses a non-reentrant model
  2691 ;;
  2692                           
  2693                           	psect	text9
  2694  00168E                     __ptext9:
  2695                           	opt stack 0
  2696  00168E                     _ToMainHigh_recvmsg:
  2697                           	opt stack 20
  2698                           
  2699                           ;messages.c: 141: return (recv_msg(&ToMainHigh_MQ, maxlength, msgtype, data));
  2700                           
  2701                           ;incstack = 0
  2702                           ;incstack = 0
  2703  00168E  0101               	movlb	1	; () banked
  2704  001690  0E01               	movlw	high _ToMainHigh_MQ
  2705  001692  0100               	movlb	0	; () banked
  2706  001694  0100               	movlb	0	; () banked
  2707  001696  6F99               	movwf	(?_recv_msg+1)& (0+255),b
  2708  001698  0101               	movlb	1	; () banked
  2709  00169A  0E68               	movlw	low _ToMainHigh_MQ
  2710  00169C  0100               	movlb	0	; () banked
  2711  00169E  6F98               	movwf	?_recv_msg& (0+255),b
  2712  0016A0  C0A6  F09A         	movff	ToMainHigh_recvmsg@maxlength,?_recv_msg+2
  2713  0016A4  C0A7  F09B         	movff	ToMainHigh_recvmsg@msgtype,?_recv_msg+3
  2714  0016A8  C0A8  F09C         	movff	ToMainHigh_recvmsg@msgtype+1,?_recv_msg+4
  2715  0016AC  C0A9  F09D         	movff	ToMainHigh_recvmsg@data,?_recv_msg+5
  2716  0016B0  C0AA  F09E         	movff	ToMainHigh_recvmsg@data+1,?_recv_msg+6
  2717  0016B4  ECDE  F003         	call	_recv_msg	;wreg free
  2718  0016B8  0012               	return	
  2719  0016BA                     __end_of_ToMainHigh_recvmsg:
  2720                           	opt stack 0
  2721                           tblptru	equ	0xFF8
  2722                           tblptrh	equ	0xFF7
  2723                           tblptrl	equ	0xFF6
  2724                           tablat	equ	0xFF5
  2725                           prodh	equ	0xFF4
  2726                           prodl	equ	0xFF3
  2727                           postinc0	equ	0xFEE
  2728                           wreg	equ	0xFE8
  2729                           indf1	equ	0xFE7
  2730                           fsr1h	equ	0xFE2
  2731                           fsr1l	equ	0xFE1
  2732                           indf2	equ	0xFDF
  2733                           fsr2h	equ	0xFDA
  2734                           fsr2l	equ	0xFD9
  2735                           status	equ	0xFD8
  2736                           
  2737 ;; *************** function _recv_msg *****************
  2738 ;; Defined at:
  2739 ;;		line 63 in file "../src/messages.c"
  2740 ;; Parameters:    Size  Location     Type
  2741 ;;  qptr            2   24[BANK0 ] PTR struct __msg_queue
  2742 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  2743 ;;  maxlength       1   26[BANK0 ] unsigned char 
  2744 ;;  msgtype         2   27[BANK0 ] PTR unsigned char 
  2745 ;;		 -> timer0_int_handler@msgtype(2), main@msgtype(1), 
  2746 ;;  data            2   29[BANK0 ] PTR void 
  2747 ;;		 -> timer0_int_handler@val(2), main@msgbuffer(11), 
  2748 ;; Auto vars:     Size  Location     Type
  2749 ;;  qmsg            2   36[BANK0 ] PTR struct __msg
  2750 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  2751 ;;  tlength         2   34[BANK0 ] unsigned int 
  2752 ;;  slot            1   33[BANK0 ] unsigned char 
  2753 ;; Return value:  Size  Location     Type
  2754 ;;                  1    wreg      char 
  2755 ;; Registers used:
  2756 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2757 ;; Tracked objects:
  2758 ;;		On entry : 0/0
  2759 ;;		On exit  : 0/0
  2760 ;;		Unchanged: 0/0
  2761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2762 ;;      Params:         0       7       0       0       0
  2763 ;;      Locals:         0       5       0       0       0
  2764 ;;      Temps:          0       2       0       0       0
  2765 ;;      Totals:         0      14       0       0       0
  2766 ;;Total ram usage:       14 bytes
  2767 ;; Hardware stack levels used:    1
  2768 ;; Hardware stack levels required when called:    9
  2769 ;; This function calls:
  2770 ;;		_memcpy
  2771 ;; This function is called by:
  2772 ;;		_ToMainLow_recvmsg
  2773 ;;		_ToMainHigh_recvmsg
  2774 ;;		_FromMainLow_recvmsg
  2775 ;; This function uses a non-reentrant model
  2776 ;;
  2777                           
  2778                           	psect	text10
  2779  0007BC                     __ptext10:
  2780                           	opt stack 0
  2781  0007BC                     _recv_msg:
  2782                           	opt stack 20
  2783                           
  2784                           ;messages.c: 64: unsigned char slot;
  2785                           ;messages.c: 68: msg *qmsg;
  2786                           ;messages.c: 69: size_t tlength;
  2787                           ;messages.c: 72: slot = qptr->cur_read_ind;
  2788                           
  2789                           ;incstack = 0
  2790                           ;incstack = 0
  2791  0007BC  0100               	movlb	0	; () banked
  2792  0007BE  EE20 F035          	lfsr	2,53
  2793  0007C2  0100               	movlb	0	; () banked
  2794  0007C4  5198               	movf	recv_msg@qptr& (0+255),w,b
  2795  0007C6  26D9               	addwf	fsr2l,f,c
  2796  0007C8  0100               	movlb	0	; () banked
  2797  0007CA  5199               	movf	(recv_msg@qptr+1)& (0+255),w,b
  2798  0007CC  22DA               	addwfc	fsr2h,f,c
  2799  0007CE  50DF               	movf	indf2,w,c
  2800  0007D0  0100               	movlb	0	; () banked
  2801  0007D2  0100               	movlb	0	; () banked
  2802  0007D4  6FA1               	movwf	recv_msg@slot& (0+255),b
  2803                           
  2804                           ; BSR set to: 0
  2805                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  2806  0007D6  0100               	movlb	0	; () banked
  2807  0007D8  0100               	movlb	0	; () banked
  2808  0007DA  51A1               	movf	recv_msg@slot& (0+255),w,b
  2809  0007DC  0D0D               	mullw	13
  2810  0007DE  50F3               	movf	prodl,w,c
  2811  0007E0  0100               	movlb	0	; () banked
  2812  0007E2  0100               	movlb	0	; () banked
  2813  0007E4  2598               	addwf	recv_msg@qptr& (0+255),w,b
  2814  0007E6  0100               	movlb	0	; () banked
  2815  0007E8  0100               	movlb	0	; () banked
  2816  0007EA  6FA4               	movwf	recv_msg@qmsg& (0+255),b
  2817  0007EC  50F4               	movf	prodh,w,c
  2818  0007EE  0100               	movlb	0	; () banked
  2819  0007F0  0100               	movlb	0	; () banked
  2820  0007F2  2199               	addwfc	(recv_msg@qptr+1)& (0+255),w,b
  2821  0007F4  0100               	movlb	0	; () banked
  2822  0007F6  6FA5               	movwf	(recv_msg@qmsg+1)& (0+255),b
  2823                           
  2824                           ; BSR set to: 0
  2825                           ;messages.c: 74: if (qmsg->full == 1) {
  2826  0007F8  0E01               	movlw	1
  2827  0007FA  C0A4  FFD9         	movff	recv_msg@qmsg,fsr2l
  2828  0007FE  C0A5  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  2829  000802  62DF               	cpfseq	indf2,c
  2830  000804  D06F               	goto	l3388
  2831                           
  2832                           ; BSR set to: 0
  2833                           ;messages.c: 76: if (qmsg->length > maxlength) {
  2834  000806  0100               	movlb	0	; () banked
  2835  000808  EE20 F001          	lfsr	2,1
  2836  00080C  0100               	movlb	0	; () banked
  2837  00080E  51A4               	movf	recv_msg@qmsg& (0+255),w,b
  2838  000810  26D9               	addwf	fsr2l,f,c
  2839  000812  0100               	movlb	0	; () banked
  2840  000814  51A5               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  2841  000816  22DA               	addwfc	fsr2h,f,c
  2842  000818  50DF               	movf	indf2,w,c
  2843  00081A  0100               	movlb	0	; () banked
  2844  00081C  0100               	movlb	0	; () banked
  2845  00081E  619A               	cpfslt	recv_msg@maxlength& (0+255),b
  2846  000820  D002               	goto	l3372
  2847                           
  2848                           ; BSR set to: 0
  2849                           ;messages.c: 77: return (-3);
  2850  000822  0EFD               	movlw	253
  2851  000824  0012               	return	
  2852  000826                     l3372:
  2853                           
  2854                           ; BSR set to: 0
  2855                           ;messages.c: 78: }
  2856                           ;messages.c: 80: tlength = qmsg->length;
  2857  000826  0100               	movlb	0	; () banked
  2858  000828  EE20 F001          	lfsr	2,1
  2859  00082C  0100               	movlb	0	; () banked
  2860  00082E  51A4               	movf	recv_msg@qmsg& (0+255),w,b
  2861  000830  26D9               	addwf	fsr2l,f,c
  2862  000832  0100               	movlb	0	; () banked
  2863  000834  51A5               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  2864  000836  22DA               	addwfc	fsr2h,f,c
  2865  000838  50DF               	movf	indf2,w,c
  2866  00083A  0100               	movlb	0	; () banked
  2867  00083C  6F9F               	movwf	??_recv_msg& (0+255),b
  2868  00083E  0100               	movlb	0	; () banked
  2869  000840  519F               	movf	??_recv_msg& (0+255),w,b
  2870  000842  0100               	movlb	0	; () banked
  2871  000844  0100               	movlb	0	; () banked
  2872  000846  6FA2               	movwf	recv_msg@tlength& (0+255),b
  2873  000848  0100               	movlb	0	; () banked
  2874  00084A  6BA3               	clrf	(recv_msg@tlength+1)& (0+255),b
  2875                           
  2876                           ; BSR set to: 0
  2877                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  2878  00084C  C09D  F08E         	movff	recv_msg@data,?_memcpy
  2879  000850  C09E  F08F         	movff	recv_msg@data+1,?_memcpy+1
  2880  000854  0E03               	movlw	3
  2881  000856  0100               	movlb	0	; () banked
  2882  000858  0100               	movlb	0	; () banked
  2883  00085A  25A4               	addwf	recv_msg@qmsg& (0+255),w,b
  2884  00085C  0100               	movlb	0	; () banked
  2885  00085E  6F9F               	movwf	??_recv_msg& (0+255),b
  2886  000860  0E00               	movlw	0
  2887  000862  0100               	movlb	0	; () banked
  2888  000864  0100               	movlb	0	; () banked
  2889  000866  21A5               	addwfc	(recv_msg@qmsg+1)& (0+255),w,b
  2890  000868  0100               	movlb	0	; () banked
  2891  00086A  6FA0               	movwf	(??_recv_msg+1)& (0+255),b
  2892  00086C  C09F  F090         	movff	??_recv_msg,?_memcpy+2
  2893  000870  C0A0  F091         	movff	??_recv_msg+1,?_memcpy+3
  2894  000874  C0A2  F092         	movff	recv_msg@tlength,?_memcpy+4
  2895  000878  C0A3  F093         	movff	recv_msg@tlength+1,?_memcpy+5
  2896  00087C  ECE5  F009         	call	_memcpy	;wreg free
  2897                           
  2898                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  2899  000880  0100               	movlb	0	; () banked
  2900  000882  EE20 F035          	lfsr	2,53
  2901  000886  0100               	movlb	0	; () banked
  2902  000888  5198               	movf	recv_msg@qptr& (0+255),w,b
  2903  00088A  26D9               	addwf	fsr2l,f,c
  2904  00088C  0100               	movlb	0	; () banked
  2905  00088E  5199               	movf	(recv_msg@qptr+1)& (0+255),w,b
  2906  000890  22DA               	addwfc	fsr2h,f,c
  2907  000892  0100               	movlb	0	; () banked
  2908  000894  EE10 F035          	lfsr	1,53
  2909  000898  0100               	movlb	0	; () banked
  2910  00089A  5198               	movf	recv_msg@qptr& (0+255),w,b
  2911  00089C  26E1               	addwf	fsr1l,f,c
  2912  00089E  0100               	movlb	0	; () banked
  2913  0008A0  5199               	movf	(recv_msg@qptr+1)& (0+255),w,b
  2914  0008A2  22E2               	addwfc	fsr1h,f,c
  2915  0008A4  50E7               	movf	indf1,w,c
  2916  0008A6  0100               	movlb	0	; () banked
  2917  0008A8  6F9F               	movwf	??_recv_msg& (0+255),b
  2918  0008AA  0100               	movlb	0	; () banked
  2919  0008AC  299F               	incf	??_recv_msg& (0+255),w,b
  2920  0008AE  0B03               	andlw	3
  2921  0008B0  6EDF               	movwf	indf2,c
  2922                           
  2923                           ; BSR set to: 0
  2924                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  2925  0008B2  0100               	movlb	0	; () banked
  2926  0008B4  EE20 F002          	lfsr	2,2
  2927  0008B8  0100               	movlb	0	; () banked
  2928  0008BA  51A4               	movf	recv_msg@qmsg& (0+255),w,b
  2929  0008BC  26D9               	addwf	fsr2l,f,c
  2930  0008BE  0100               	movlb	0	; () banked
  2931  0008C0  51A5               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  2932  0008C2  22DA               	addwfc	fsr2h,f,c
  2933  0008C4  C09B  FFE1         	movff	recv_msg@msgtype,fsr1l
  2934  0008C8  C09C  FFE2         	movff	recv_msg@msgtype+1,fsr1h
  2935  0008CC  CFDF FFE7          	movff	indf2,indf1
  2936                           
  2937                           ; BSR set to: 0
  2938                           ;messages.c: 91: qmsg->full = 0;
  2939  0008D0  C0A4  FFD9         	movff	recv_msg@qmsg,fsr2l
  2940  0008D4  C0A5  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  2941  0008D8  0E00               	movlw	0
  2942  0008DA  6EDF               	movwf	indf2,c
  2943                           
  2944                           ; BSR set to: 0
  2945                           ;messages.c: 92: return (tlength);
  2946  0008DC  0100               	movlb	0	; () banked
  2947  0008DE  0100               	movlb	0	; () banked
  2948  0008E0  51A2               	movf	recv_msg@tlength& (0+255),w,b
  2949  0008E2  0012               	return	
  2950  0008E4                     l3388:
  2951                           
  2952                           ; BSR set to: 0
  2953                           ;messages.c: 94: return (-4);
  2954  0008E4  0EFC               	movlw	252
  2955  0008E6  0012               	return	
  2956  0008E8                     __end_of_recv_msg:
  2957                           	opt stack 0
  2958                           tblptru	equ	0xFF8
  2959                           tblptrh	equ	0xFF7
  2960                           tblptrl	equ	0xFF6
  2961                           tablat	equ	0xFF5
  2962                           prodh	equ	0xFF4
  2963                           prodl	equ	0xFF3
  2964                           postinc0	equ	0xFEE
  2965                           wreg	equ	0xFE8
  2966                           indf1	equ	0xFE7
  2967                           fsr1h	equ	0xFE2
  2968                           fsr1l	equ	0xFE1
  2969                           indf2	equ	0xFDF
  2970                           fsr2h	equ	0xFDA
  2971                           fsr2l	equ	0xFD9
  2972                           status	equ	0xFD8
  2973                           
  2974 ;; *************** function _memcpy *****************
  2975 ;; Defined at:
  2976 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\memcpy.c"
  2977 ;; Parameters:    Size  Location     Type
  2978 ;;  d1              2   14[BANK0 ] PTR void 
  2979 ;;		 -> timer0_int_handler@val(2), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  2980 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), 
  2981 ;;  s1              2   16[BANK0 ] PTR const void 
  2982 ;;		 -> timer0_int_handler@val(2), NULL(0), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  2983 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@ic(29), main@uc(16), 
  2984 ;;  n               2   18[BANK0 ] unsigned int 
  2985 ;; Auto vars:     Size  Location     Type
  2986 ;;  s               2   22[BANK0 ] PTR const unsigned char 
  2987 ;;		 -> timer0_int_handler@val(2), NULL(0), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  2988 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@ic(29), main@uc(16), 
  2989 ;;  d               2   20[BANK0 ] PTR unsigned char 
  2990 ;;		 -> timer0_int_handler@val(2), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  2991 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), 
  2992 ;; Return value:  Size  Location     Type
  2993 ;;                  2   14[BANK0 ] PTR void 
  2994 ;; Registers used:
  2995 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2996 ;; Tracked objects:
  2997 ;;		On entry : 0/0
  2998 ;;		On exit  : 0/0
  2999 ;;		Unchanged: 0/0
  3000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3001 ;;      Params:         0       6       0       0       0
  3002 ;;      Locals:         0       4       0       0       0
  3003 ;;      Temps:          0       0       0       0       0
  3004 ;;      Totals:         0      10       0       0       0
  3005 ;;Total ram usage:       10 bytes
  3006 ;; Hardware stack levels used:    1
  3007 ;; Hardware stack levels required when called:    8
  3008 ;; This function calls:
  3009 ;;		Nothing
  3010 ;; This function is called by:
  3011 ;;		_recv_msg
  3012 ;; This function uses a non-reentrant model
  3013 ;;
  3014                           
  3015                           	psect	text11
  3016  0013CA                     __ptext11:
  3017                           	opt stack 0
  3018  0013CA                     _memcpy:
  3019                           	opt stack 20
  3020                           
  3021                           ; BSR set to: 0
  3022                           ;incstack = 0
  3023                           ;incstack = 0
  3024  0013CA  C090  F096         	movff	memcpy@s1,memcpy@s
  3025  0013CE  C091  F097         	movff	memcpy@s1+1,memcpy@s+1
  3026  0013D2  C08E  F094         	movff	memcpy@d1,memcpy@d
  3027  0013D6  C08F  F095         	movff	memcpy@d1+1,memcpy@d+1
  3028  0013DA  D012               	goto	l3358
  3029  0013DC                     l3352:
  3030  0013DC  C096  FFD9         	movff	memcpy@s,fsr2l
  3031  0013E0  C097  FFDA         	movff	memcpy@s+1,fsr2h
  3032  0013E4  C094  FFE1         	movff	memcpy@d,fsr1l
  3033  0013E8  C095  FFE2         	movff	memcpy@d+1,fsr1h
  3034  0013EC  CFDF FFE7          	movff	indf2,indf1
  3035  0013F0  0100               	movlb	0	; () banked
  3036  0013F2  0100               	movlb	0	; () banked
  3037  0013F4  4B96               	infsnz	memcpy@s& (0+255),f,b
  3038  0013F6  2B97               	incf	(memcpy@s+1)& (0+255),f,b
  3039                           
  3040                           ; BSR set to: 0
  3041  0013F8  0100               	movlb	0	; () banked
  3042  0013FA  0100               	movlb	0	; () banked
  3043  0013FC  4B94               	infsnz	memcpy@d& (0+255),f,b
  3044  0013FE  2B95               	incf	(memcpy@d+1)& (0+255),f,b
  3045  001400                     l3358:
  3046  001400  0100               	movlb	0	; () banked
  3047  001402  0100               	movlb	0	; () banked
  3048  001404  0792               	decf	memcpy@n& (0+255),f,b
  3049  001406  A0D8               	btfss	status,0,c
  3050  001408  0793               	decf	(memcpy@n+1)& (0+255),f,b
  3051  00140A  0100               	movlb	0	; () banked
  3052  00140C  2992               	incf	memcpy@n& (0+255),w,b
  3053  00140E  B4D8               	btfsc	status,2,c
  3054  001410  2993               	incf	(memcpy@n+1)& (0+255),w,b
  3055  001412  B4D8               	btfsc	status,2,c
  3056                           
  3057                           ; BSR set to: 0
  3058                           
  3059                           ; BSR set to: 0
  3060                           ;	Return value of _memcpy is never used
  3061  001414  0012               	return	
  3062  001416  D7E2               	goto	l3352
  3063  001418                     __end_of_memcpy:
  3064                           	opt stack 0
  3065                           tblptru	equ	0xFF8
  3066                           tblptrh	equ	0xFF7
  3067                           tblptrl	equ	0xFF6
  3068                           tablat	equ	0xFF5
  3069                           prodh	equ	0xFF4
  3070                           prodl	equ	0xFF3
  3071                           postinc0	equ	0xFEE
  3072                           wreg	equ	0xFE8
  3073                           indf1	equ	0xFE7
  3074                           fsr1h	equ	0xFE2
  3075                           fsr1l	equ	0xFE1
  3076                           indf2	equ	0xFDF
  3077                           fsr2h	equ	0xFDA
  3078                           fsr2l	equ	0xFD9
  3079                           status	equ	0xFD8
  3080                           
  3081 ;; *************** function _block_on_To_msgqueues *****************
  3082 ;; Defined at:
  3083 ;;		line 258 in file "../src/messages.c"
  3084 ;; Parameters:    Size  Location     Type
  3085 ;;		None
  3086 ;; Auto vars:     Size  Location     Type
  3087 ;;		None
  3088 ;; Return value:  Size  Location     Type
  3089 ;;		None               void
  3090 ;; Registers used:
  3091 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3092 ;; Tracked objects:
  3093 ;;		On entry : 0/0
  3094 ;;		On exit  : 0/0
  3095 ;;		Unchanged: 0/0
  3096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3097 ;;      Params:         0       0       0       0       0
  3098 ;;      Locals:         0       0       0       0       0
  3099 ;;      Temps:          0       1       0       0       0
  3100 ;;      Totals:         0       1       0       0       0
  3101 ;;Total ram usage:        1 bytes
  3102 ;; Hardware stack levels used:    1
  3103 ;; Hardware stack levels required when called:   11
  3104 ;; This function calls:
  3105 ;;		_in_main
  3106 ;;		_check_msg
  3107 ;;		_Delay1KTCYx
  3108 ;; This function is called by:
  3109 ;;		_main
  3110 ;; This function uses a non-reentrant model
  3111 ;;
  3112                           
  3113                           	psect	text12
  3114  000E18                     __ptext12:
  3115                           	opt stack 0
  3116  000E18                     _block_on_To_msgqueues:
  3117                           	opt stack 19
  3118                           
  3119                           ;messages.c: 259: if (!in_main()) {
  3120                           
  3121                           ; BSR set to: 0
  3122                           ;incstack = 0
  3123                           ;incstack = 0
  3124  000E18  EC56  F00A         	call	_in_main	;wreg free
  3125  000E1C  0100               	movlb	0	; () banked
  3126  000E1E  0100               	movlb	0	; () banked
  3127  000E20  5193               	movf	(?_in_main+1)& (0+255),w,b
  3128  000E22  0100               	movlb	0	; () banked
  3129  000E24  1192               	iorwf	?_in_main& (0+255),w,b
  3130  000E26  B4D8               	btfsc	status,2,c
  3131  000E28  0012               	return	
  3132                           
  3133                           ; BSR set to: 0
  3134                           ;messages.c: 261: }
  3135                           ;messages.c: 262: LATBbits.LATB3 = 1;
  3136                           
  3137                           ; BSR set to: 0
  3138                           ;messages.c: 260: return;
  3139  000E2A  868A               	bsf	3978,3,c	;volatile
  3140                           
  3141                           ; BSR set to: 0
  3142                           ;messages.c: 263: MQ_Main_Willing_to_block = 1;
  3143  000E2C  0100               	movlb	0	; () banked
  3144  000E2E  6F94               	movwf	??_block_on_To_msgqueues& (0+255),b
  3145  000E30  0E01               	movlw	1
  3146  000E32  6E52               	movwf	_MQ_Main_Willing_to_block,c
  3147  000E34  0100               	movlb	0	; () banked
  3148  000E36  5194               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3149  000E38                     l3214:
  3150                           
  3151                           ; BSR set to: 0
  3152                           ;messages.c: 265: if (check_msg(&ToMainHigh_MQ)) {
  3153  000E38  0101               	movlb	1	; () banked
  3154  000E3A  0E01               	movlw	high _ToMainHigh_MQ
  3155  000E3C  0100               	movlb	0	; () banked
  3156  000E3E  0100               	movlb	0	; () banked
  3157  000E40  6F8F               	movwf	(?_check_msg+1)& (0+255),b
  3158  000E42  0101               	movlb	1	; () banked
  3159  000E44  0E68               	movlw	low _ToMainHigh_MQ
  3160  000E46  0100               	movlb	0	; () banked
  3161  000E48  6F8E               	movwf	?_check_msg& (0+255),b
  3162  000E4A  ECB5  F00A         	call	_check_msg	;wreg free
  3163  000E4E  0900               	iorlw	0
  3164  000E50  B4D8               	btfsc	status,2,c
  3165  000E52  D008               	goto	l3222
  3166                           
  3167                           ;messages.c: 266: MQ_Main_Willing_to_block = 0;
  3168  000E54  0100               	movlb	0	; () banked
  3169  000E56  6F94               	movwf	??_block_on_To_msgqueues& (0+255),b
  3170  000E58  0E00               	movlw	0
  3171  000E5A  6E52               	movwf	_MQ_Main_Willing_to_block,c
  3172  000E5C  0100               	movlb	0	; () banked
  3173  000E5E  5194               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3174                           
  3175                           ; BSR set to: 0
  3176                           ;messages.c: 267: LATBbits.LATB3 = 0;
  3177  000E60  968A               	bcf	3978,3,c	;volatile
  3178  000E62  0012               	return	
  3179  000E64                     l3222:
  3180                           
  3181                           ;messages.c: 269: }
  3182                           ;messages.c: 270: if (check_msg(&ToMainLow_MQ)) {
  3183  000E64  0101               	movlb	1	; () banked
  3184  000E66  0E01               	movlw	high _ToMainLow_MQ
  3185  000E68  0100               	movlb	0	; () banked
  3186  000E6A  0100               	movlb	0	; () banked
  3187  000E6C  6F8F               	movwf	(?_check_msg+1)& (0+255),b
  3188  000E6E  0101               	movlb	1	; () banked
  3189  000E70  0E9E               	movlw	low _ToMainLow_MQ
  3190  000E72  0100               	movlb	0	; () banked
  3191  000E74  6F8E               	movwf	?_check_msg& (0+255),b
  3192  000E76  ECB5  F00A         	call	_check_msg	;wreg free
  3193  000E7A  0900               	iorlw	0
  3194  000E7C  B4D8               	btfsc	status,2,c
  3195  000E7E  D008               	goto	l3230
  3196                           
  3197                           ;messages.c: 271: MQ_Main_Willing_to_block = 0;
  3198  000E80  0100               	movlb	0	; () banked
  3199  000E82  6F94               	movwf	??_block_on_To_msgqueues& (0+255),b
  3200  000E84  0E00               	movlw	0
  3201  000E86  6E52               	movwf	_MQ_Main_Willing_to_block,c
  3202  000E88  0100               	movlb	0	; () banked
  3203  000E8A  5194               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3204                           
  3205                           ; BSR set to: 0
  3206                           ;messages.c: 272: LATBbits.LATB3 = 0;
  3207  000E8C  968A               	bcf	3978,3,c	;volatile
  3208  000E8E  0012               	return	
  3209  000E90                     l3230:
  3210                           
  3211                           ;messages.c: 274: }
  3212                           ;messages.c: 275: Delay1KTCYx(10);
  3213  000E90  0100               	movlb	0	; () banked
  3214  000E92  6F94               	movwf	??_block_on_To_msgqueues& (0+255),b
  3215  000E94  0E0A               	movlw	10
  3216  000E96  0100               	movlb	0	; () banked
  3217  000E98  0100               	movlb	0	; () banked
  3218  000E9A  6F8E               	movwf	?_Delay1KTCYx& (0+255),b
  3219  000E9C  0100               	movlb	0	; () banked
  3220  000E9E  5194               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3221  000EA0  ECC5  F00B         	call	_Delay1KTCYx	;wreg free
  3222                           
  3223                           ;messages.c: 276: LATBbits.LATB3 = !LATBbits.LATB3;
  3224  000EA4  B68A               	btfsc	3978,3,c	;volatile
  3225  000EA6  D002               	goto	u2130
  3226  000EA8  0E01               	movlw	1
  3227  000EAA  D001               	goto	u2136
  3228  000EAC                     u2130:
  3229  000EAC  0E00               	movlw	0
  3230  000EAE                     u2136:
  3231  000EAE  0100               	movlb	0	; () banked
  3232  000EB0  6F94               	movwf	??_block_on_To_msgqueues& (0+255),b
  3233  000EB2  0100               	movlb	0	; () banked
  3234  000EB4  4794               	rlncf	??_block_on_To_msgqueues& (0+255),f,b
  3235  000EB6  4794               	rlncf	??_block_on_To_msgqueues& (0+255),f,b
  3236  000EB8  4794               	rlncf	??_block_on_To_msgqueues& (0+255),f,b
  3237  000EBA  508A               	movf	3978,w,c	;volatile
  3238  000EBC  0100               	movlb	0	; () banked
  3239  000EBE  1994               	xorwf	??_block_on_To_msgqueues& (0+255),w,b
  3240  000EC0  0BF7               	andlw	-9
  3241  000EC2  1994               	xorwf	??_block_on_To_msgqueues& (0+255),w,b
  3242  000EC4  6E8A               	movwf	3978,c	;volatile
  3243  000EC6  D7B8               	goto	l3214
  3244  000EC8                     __end_of_block_on_To_msgqueues:
  3245                           	opt stack 0
  3246                           tblptru	equ	0xFF8
  3247                           tblptrh	equ	0xFF7
  3248                           tblptrl	equ	0xFF6
  3249                           tablat	equ	0xFF5
  3250                           prodh	equ	0xFF4
  3251                           prodl	equ	0xFF3
  3252                           postinc0	equ	0xFEE
  3253                           wreg	equ	0xFE8
  3254                           indf1	equ	0xFE7
  3255                           fsr1h	equ	0xFE2
  3256                           fsr1l	equ	0xFE1
  3257                           indf2	equ	0xFDF
  3258                           fsr2h	equ	0xFDA
  3259                           fsr2l	equ	0xFD9
  3260                           status	equ	0xFD8
  3261                           
  3262 ;; *************** function _Delay1KTCYx *****************
  3263 ;; Defined at:
  3264 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic18\d1ktcyx.c"
  3265 ;; Parameters:    Size  Location     Type
  3266 ;;  unit            1   14[BANK0 ] unsigned char 
  3267 ;; Auto vars:     Size  Location     Type
  3268 ;;		None
  3269 ;; Return value:  Size  Location     Type
  3270 ;;		None               void
  3271 ;; Registers used:
  3272 ;;		wreg
  3273 ;; Tracked objects:
  3274 ;;		On entry : 0/0
  3275 ;;		On exit  : 0/0
  3276 ;;		Unchanged: 0/0
  3277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3278 ;;      Params:         0       1       0       0       0
  3279 ;;      Locals:         0       0       0       0       0
  3280 ;;      Temps:          0       0       0       0       0
  3281 ;;      Totals:         0       1       0       0       0
  3282 ;;Total ram usage:        1 bytes
  3283 ;; Hardware stack levels used:    1
  3284 ;; Hardware stack levels required when called:    8
  3285 ;; This function calls:
  3286 ;;		Nothing
  3287 ;; This function is called by:
  3288 ;;		_block_on_To_msgqueues
  3289 ;; This function uses a non-reentrant model
  3290 ;;
  3291                           
  3292                           	psect	text13
  3293  00178A                     __ptext13:
  3294                           	opt stack 0
  3295  00178A                     _Delay1KTCYx:
  3296                           	opt stack 21
  3297  00178A                     l812:
  3298  00178A  0EFA               	movlw	250
  3299  00178C                     u2437:
  3300  00178C  F000               	nop	
  3301  00178E  2EE8               	decfsz	wreg,f,c
  3302  001790  D7FD               	goto	u2437
  3303  001792  0100               	movlb	0	; () banked
  3304  001794  0100               	movlb	0	; () banked
  3305  001796  2F8E               	decfsz	Delay1KTCYx@unit& (0+255),f,b
  3306  001798  D7F8               	goto	l812
  3307  00179A  0012               	return	
  3308  00179C                     __end_of_Delay1KTCYx:
  3309                           	opt stack 0
  3310                           tblptru	equ	0xFF8
  3311                           tblptrh	equ	0xFF7
  3312                           tblptrl	equ	0xFF6
  3313                           tablat	equ	0xFF5
  3314                           prodh	equ	0xFF4
  3315                           prodl	equ	0xFF3
  3316                           postinc0	equ	0xFEE
  3317                           wreg	equ	0xFE8
  3318                           indf1	equ	0xFE7
  3319                           fsr1h	equ	0xFE2
  3320                           fsr1l	equ	0xFE1
  3321                           indf2	equ	0xFDF
  3322                           fsr2h	equ	0xFDA
  3323                           fsr2l	equ	0xFD9
  3324                           status	equ	0xFD8
  3325                           
  3326 ;; *************** function _check_msg *****************
  3327 ;; Defined at:
  3328 ;;		line 222 in file "../src/messages.c"
  3329 ;; Parameters:    Size  Location     Type
  3330 ;;  qptr            2   14[BANK0 ] PTR struct __msg_queue
  3331 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3332 ;; Auto vars:     Size  Location     Type
  3333 ;;		None
  3334 ;; Return value:  Size  Location     Type
  3335 ;;                  1    wreg      unsigned char 
  3336 ;; Registers used:
  3337 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3338 ;; Tracked objects:
  3339 ;;		On entry : 0/0
  3340 ;;		On exit  : 0/0
  3341 ;;		Unchanged: 0/0
  3342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3343 ;;      Params:         0       2       0       0       0
  3344 ;;      Locals:         0       0       0       0       0
  3345 ;;      Temps:          0       1       0       0       0
  3346 ;;      Totals:         0       3       0       0       0
  3347 ;;Total ram usage:        3 bytes
  3348 ;; Hardware stack levels used:    1
  3349 ;; Hardware stack levels required when called:    8
  3350 ;; This function calls:
  3351 ;;		Nothing
  3352 ;; This function is called by:
  3353 ;;		_block_on_To_msgqueues
  3354 ;; This function uses a non-reentrant model
  3355 ;;
  3356                           
  3357                           	psect	text14
  3358  00156A                     __ptext14:
  3359                           	opt stack 0
  3360  00156A                     _check_msg:
  3361                           	opt stack 21
  3362                           
  3363                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
  3364                           
  3365                           ; BSR set to: 0
  3366                           ;incstack = 0
  3367                           ;incstack = 0
  3368  00156A  0100               	movlb	0	; () banked
  3369  00156C  EE20 F035          	lfsr	2,53
  3370  001570  0100               	movlb	0	; () banked
  3371  001572  518E               	movf	check_msg@qptr& (0+255),w,b
  3372  001574  26D9               	addwf	fsr2l,f,c
  3373  001576  0100               	movlb	0	; () banked
  3374  001578  518F               	movf	(check_msg@qptr+1)& (0+255),w,b
  3375  00157A  22DA               	addwfc	fsr2h,f,c
  3376  00157C  50DF               	movf	indf2,w,c
  3377  00157E  0100               	movlb	0	; () banked
  3378  001580  6F90               	movwf	??_check_msg& (0+255),b
  3379  001582  0100               	movlb	0	; () banked
  3380  001584  5190               	movf	??_check_msg& (0+255),w,b
  3381  001586  0D0D               	mullw	13
  3382  001588  50F3               	movf	prodl,w,c
  3383  00158A  0100               	movlb	0	; () banked
  3384  00158C  0100               	movlb	0	; () banked
  3385  00158E  258E               	addwf	check_msg@qptr& (0+255),w,b
  3386  001590  6ED9               	movwf	fsr2l,c
  3387  001592  50F4               	movf	prodh,w,c
  3388  001594  0100               	movlb	0	; () banked
  3389  001596  0100               	movlb	0	; () banked
  3390  001598  218F               	addwfc	(check_msg@qptr+1)& (0+255),w,b
  3391  00159A  6EDA               	movwf	fsr2h,c
  3392  00159C  50DF               	movf	indf2,w,c
  3393  00159E  0012               	return	
  3394  0015A0                     __end_of_check_msg:
  3395                           	opt stack 0
  3396                           tblptru	equ	0xFF8
  3397                           tblptrh	equ	0xFF7
  3398                           tblptrl	equ	0xFF6
  3399                           tablat	equ	0xFF5
  3400                           prodh	equ	0xFF4
  3401                           prodl	equ	0xFF3
  3402                           postinc0	equ	0xFEE
  3403                           wreg	equ	0xFE8
  3404                           indf1	equ	0xFE7
  3405                           fsr1h	equ	0xFE2
  3406                           fsr1l	equ	0xFE1
  3407                           indf2	equ	0xFDF
  3408                           fsr2h	equ	0xFDA
  3409                           fsr2l	equ	0xFD9
  3410                           status	equ	0xFD8
  3411                           
  3412 ;; *************** function _in_main *****************
  3413 ;; Defined at:
  3414 ;;		line 43 in file "../src/interrupts.c"
  3415 ;; Parameters:    Size  Location     Type
  3416 ;;		None
  3417 ;; Auto vars:     Size  Location     Type
  3418 ;;		None
  3419 ;; Return value:  Size  Location     Type
  3420 ;;                  2   18[BANK0 ] int 
  3421 ;; Registers used:
  3422 ;;		wreg, status,2, status,0, cstack
  3423 ;; Tracked objects:
  3424 ;;		On entry : 0/0
  3425 ;;		On exit  : 0/0
  3426 ;;		Unchanged: 0/0
  3427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3428 ;;      Params:         0       2       0       0       0
  3429 ;;      Locals:         0       0       0       0       0
  3430 ;;      Temps:          0       0       0       0       0
  3431 ;;      Totals:         0       2       0       0       0
  3432 ;;Total ram usage:        2 bytes
  3433 ;; Hardware stack levels used:    1
  3434 ;; Hardware stack levels required when called:   10
  3435 ;; This function calls:
  3436 ;;		_in_high_int
  3437 ;;		_in_low_int
  3438 ;; This function is called by:
  3439 ;;		_block_on_To_msgqueues
  3440 ;; This function uses a non-reentrant model
  3441 ;;
  3442                           
  3443                           	psect	text15
  3444  0014AC                     __ptext15:
  3445                           	opt stack 0
  3446  0014AC                     _in_main:
  3447                           	opt stack 19
  3448                           
  3449                           ;interrupts.c: 44: if ((!in_low_int()) && (!in_high_int())) {
  3450                           
  3451                           ; BSR set to: 0
  3452                           ;incstack = 0
  3453                           ;incstack = 0
  3454  0014AC  EC33  F00A         	call	_in_low_int	;wreg free
  3455  0014B0  0100               	movlb	0	; () banked
  3456  0014B2  0100               	movlb	0	; () banked
  3457  0014B4  5191               	movf	(?_in_low_int+1)& (0+255),w,b
  3458  0014B6  0100               	movlb	0	; () banked
  3459  0014B8  1190               	iorwf	?_in_low_int& (0+255),w,b
  3460  0014BA  A4D8               	btfss	status,2,c
  3461  0014BC  D011               	goto	l2872
  3462                           
  3463                           ; BSR set to: 0
  3464  0014BE  ECCE  F00B         	call	_in_high_int	;wreg free
  3465  0014C2  0100               	movlb	0	; () banked
  3466  0014C4  0100               	movlb	0	; () banked
  3467  0014C6  518F               	movf	(?_in_high_int+1)& (0+255),w,b
  3468  0014C8  0100               	movlb	0	; () banked
  3469  0014CA  118E               	iorwf	?_in_high_int& (0+255),w,b
  3470  0014CC  A4D8               	btfss	status,2,c
  3471  0014CE  D008               	goto	l2872
  3472                           
  3473                           ; BSR set to: 0
  3474                           ;interrupts.c: 45: return (1);
  3475  0014D0  0E00               	movlw	0
  3476  0014D2  0100               	movlb	0	; () banked
  3477  0014D4  0100               	movlb	0	; () banked
  3478  0014D6  6F93               	movwf	(?_in_main+1)& (0+255),b
  3479  0014D8  0E01               	movlw	1
  3480  0014DA  0100               	movlb	0	; () banked
  3481  0014DC  6F92               	movwf	?_in_main& (0+255),b
  3482  0014DE  0012               	return	
  3483  0014E0                     l2872:
  3484                           
  3485                           ; BSR set to: 0
  3486                           ;interrupts.c: 47: return (0);
  3487  0014E0  0E00               	movlw	0
  3488  0014E2  0100               	movlb	0	; () banked
  3489  0014E4  0100               	movlb	0	; () banked
  3490  0014E6  6F93               	movwf	(?_in_main+1)& (0+255),b
  3491  0014E8  0E00               	movlw	0
  3492  0014EA  0100               	movlb	0	; () banked
  3493  0014EC  6F92               	movwf	?_in_main& (0+255),b
  3494  0014EE  0012               	return	
  3495  0014F0                     __end_of_in_main:
  3496                           	opt stack 0
  3497                           tblptru	equ	0xFF8
  3498                           tblptrh	equ	0xFF7
  3499                           tblptrl	equ	0xFF6
  3500                           tablat	equ	0xFF5
  3501                           prodh	equ	0xFF4
  3502                           prodl	equ	0xFF3
  3503                           postinc0	equ	0xFEE
  3504                           wreg	equ	0xFE8
  3505                           indf1	equ	0xFE7
  3506                           fsr1h	equ	0xFE2
  3507                           fsr1l	equ	0xFE1
  3508                           indf2	equ	0xFDF
  3509                           fsr2h	equ	0xFDA
  3510                           fsr2l	equ	0xFD9
  3511                           status	equ	0xFD8
  3512                           
  3513 ;; *************** function _in_low_int *****************
  3514 ;; Defined at:
  3515 ;;		line 33 in file "../src/interrupts.c"
  3516 ;; Parameters:    Size  Location     Type
  3517 ;;		None
  3518 ;; Auto vars:     Size  Location     Type
  3519 ;;		None
  3520 ;; Return value:  Size  Location     Type
  3521 ;;                  2   16[BANK0 ] int 
  3522 ;; Registers used:
  3523 ;;		wreg, status,2, status,0, cstack
  3524 ;; Tracked objects:
  3525 ;;		On entry : 0/0
  3526 ;;		On exit  : 0/0
  3527 ;;		Unchanged: 0/0
  3528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3529 ;;      Params:         0       2       0       0       0
  3530 ;;      Locals:         0       0       0       0       0
  3531 ;;      Temps:          0       0       0       0       0
  3532 ;;      Totals:         0       2       0       0       0
  3533 ;;Total ram usage:        2 bytes
  3534 ;; Hardware stack levels used:    1
  3535 ;; Hardware stack levels required when called:    9
  3536 ;; This function calls:
  3537 ;;		_in_high_int
  3538 ;; This function is called by:
  3539 ;;		_in_main
  3540 ;; This function uses a non-reentrant model
  3541 ;;
  3542                           
  3543                           	psect	text16
  3544  001466                     __ptext16:
  3545                           	opt stack 0
  3546  001466                     _in_low_int:
  3547                           	opt stack 19
  3548                           
  3549                           ;interrupts.c: 34: if (INTCONbits.GIEL == 1) {
  3550                           
  3551                           ; BSR set to: 0
  3552                           ;incstack = 0
  3553                           ;incstack = 0
  3554  001466  ACF2               	btfss	intcon,6,c	;volatile
  3555  001468  D008               	goto	l2850
  3556                           
  3557                           ;interrupts.c: 35: return (0);
  3558  00146A  0E00               	movlw	0
  3559  00146C  0100               	movlb	0	; () banked
  3560  00146E  0100               	movlb	0	; () banked
  3561  001470  6F91               	movwf	(?_in_low_int+1)& (0+255),b
  3562  001472  0E00               	movlw	0
  3563  001474  0100               	movlb	0	; () banked
  3564  001476  6F90               	movwf	?_in_low_int& (0+255),b
  3565  001478  0012               	return	
  3566  00147A                     l2850:
  3567  00147A  ECCE  F00B         	call	_in_high_int	;wreg free
  3568  00147E  0100               	movlb	0	; () banked
  3569  001480  0100               	movlb	0	; () banked
  3570  001482  518F               	movf	(?_in_high_int+1)& (0+255),w,b
  3571  001484  0100               	movlb	0	; () banked
  3572  001486  118E               	iorwf	?_in_high_int& (0+255),w,b
  3573  001488  B4D8               	btfsc	status,2,c
  3574  00148A  D008               	goto	l2858
  3575                           
  3576                           ; BSR set to: 0
  3577                           ;interrupts.c: 37: return (0);
  3578  00148C  0E00               	movlw	0
  3579  00148E  0100               	movlb	0	; () banked
  3580  001490  0100               	movlb	0	; () banked
  3581  001492  6F91               	movwf	(?_in_low_int+1)& (0+255),b
  3582  001494  0E00               	movlw	0
  3583  001496  0100               	movlb	0	; () banked
  3584  001498  6F90               	movwf	?_in_low_int& (0+255),b
  3585  00149A  0012               	return	
  3586  00149C                     l2858:
  3587                           
  3588                           ; BSR set to: 0
  3589                           ;interrupts.c: 39: return (1);
  3590  00149C  0E00               	movlw	0
  3591  00149E  0100               	movlb	0	; () banked
  3592  0014A0  0100               	movlb	0	; () banked
  3593  0014A2  6F91               	movwf	(?_in_low_int+1)& (0+255),b
  3594  0014A4  0E01               	movlw	1
  3595  0014A6  0100               	movlb	0	; () banked
  3596  0014A8  6F90               	movwf	?_in_low_int& (0+255),b
  3597  0014AA  0012               	return	
  3598  0014AC                     __end_of_in_low_int:
  3599                           	opt stack 0
  3600                           tblptru	equ	0xFF8
  3601                           tblptrh	equ	0xFF7
  3602                           tblptrl	equ	0xFF6
  3603                           tablat	equ	0xFF5
  3604                           prodh	equ	0xFF4
  3605                           prodl	equ	0xFF3
  3606                           intcon	equ	0xFF2
  3607                           postinc0	equ	0xFEE
  3608                           wreg	equ	0xFE8
  3609                           indf1	equ	0xFE7
  3610                           fsr1h	equ	0xFE2
  3611                           fsr1l	equ	0xFE1
  3612                           indf2	equ	0xFDF
  3613                           fsr2h	equ	0xFDA
  3614                           fsr2l	equ	0xFD9
  3615                           status	equ	0xFD8
  3616                           
  3617 ;; *************** function _in_high_int *****************
  3618 ;; Defined at:
  3619 ;;		line 25 in file "../src/interrupts.c"
  3620 ;; Parameters:    Size  Location     Type
  3621 ;;		None
  3622 ;; Auto vars:     Size  Location     Type
  3623 ;;		None
  3624 ;; Return value:  Size  Location     Type
  3625 ;;                  2   14[BANK0 ] int 
  3626 ;; Registers used:
  3627 ;;		wreg, status,2
  3628 ;; Tracked objects:
  3629 ;;		On entry : 0/0
  3630 ;;		On exit  : 0/0
  3631 ;;		Unchanged: 0/0
  3632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3633 ;;      Params:         0       2       0       0       0
  3634 ;;      Locals:         0       0       0       0       0
  3635 ;;      Temps:          0       0       0       0       0
  3636 ;;      Totals:         0       2       0       0       0
  3637 ;;Total ram usage:        2 bytes
  3638 ;; Hardware stack levels used:    1
  3639 ;; Hardware stack levels required when called:    8
  3640 ;; This function calls:
  3641 ;;		Nothing
  3642 ;; This function is called by:
  3643 ;;		_in_low_int
  3644 ;;		_in_main
  3645 ;; This function uses a non-reentrant model
  3646 ;;
  3647                           
  3648                           	psect	text17
  3649  00179C                     __ptext17:
  3650                           	opt stack 0
  3651  00179C                     _in_high_int:
  3652                           	opt stack 19
  3653                           
  3654                           ;interrupts.c: 26: return (!INTCONbits.GIEH);
  3655                           
  3656                           ; BSR set to: 0
  3657                           ;incstack = 0
  3658                           ;incstack = 0
  3659  00179C  0E00               	movlw	0
  3660  00179E  AEF2               	btfss	intcon,7,c	;volatile
  3661  0017A0  0E01               	movlw	1
  3662  0017A2  0100               	movlb	0	; () banked
  3663  0017A4  0100               	movlb	0	; () banked
  3664  0017A6  6F8E               	movwf	?_in_high_int& (0+255),b
  3665  0017A8  0100               	movlb	0	; () banked
  3666  0017AA  6B8F               	clrf	(?_in_high_int+1)& (0+255),b
  3667  0017AC  0012               	return	
  3668  0017AE                     __end_of_in_high_int:
  3669                           	opt stack 0
  3670                           tblptru	equ	0xFF8
  3671                           tblptrh	equ	0xFF7
  3672                           tblptrl	equ	0xFF6
  3673                           tablat	equ	0xFF5
  3674                           prodh	equ	0xFF4
  3675                           prodl	equ	0xFF3
  3676                           intcon	equ	0xFF2
  3677                           postinc0	equ	0xFEE
  3678                           wreg	equ	0xFE8
  3679                           indf1	equ	0xFE7
  3680                           fsr1h	equ	0xFE2
  3681                           fsr1l	equ	0xFE1
  3682                           indf2	equ	0xFDF
  3683                           fsr2h	equ	0xFDA
  3684                           fsr2l	equ	0xFD9
  3685                           status	equ	0xFD8
  3686                           
  3687 ;; *************** function _OpenUSART *****************
  3688 ;; Defined at:
  3689 ;;		line 74 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic18\plib\USART\uopen.c"
  3690 ;; Parameters:    Size  Location     Type
  3691 ;;  config          1   14[BANK0 ] unsigned char 
  3692 ;;  spbrg           2   15[BANK0 ] unsigned int 
  3693 ;; Auto vars:     Size  Location     Type
  3694 ;;		None
  3695 ;; Return value:  Size  Location     Type
  3696 ;;		None               void
  3697 ;; Registers used:
  3698 ;;		wreg, status,2
  3699 ;; Tracked objects:
  3700 ;;		On entry : 0/0
  3701 ;;		On exit  : 0/0
  3702 ;;		Unchanged: 0/0
  3703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3704 ;;      Params:         0       3       0       0       0
  3705 ;;      Locals:         0       0       0       0       0
  3706 ;;      Temps:          0       0       0       0       0
  3707 ;;      Totals:         0       3       0       0       0
  3708 ;;Total ram usage:        3 bytes
  3709 ;; Hardware stack levels used:    1
  3710 ;; Hardware stack levels required when called:    8
  3711 ;; This function calls:
  3712 ;;		Nothing
  3713 ;; This function is called by:
  3714 ;;		_main
  3715 ;; This function uses a non-reentrant model
  3716 ;;
  3717                           
  3718                           	psect	text18
  3719  00112E                     __ptext18:
  3720                           	opt stack 0
  3721  00112E                     _OpenUSART:
  3722                           	opt stack 22
  3723                           
  3724                           ; BSR set to: 0
  3725                           ;incstack = 0
  3726                           ;incstack = 0
  3727  00112E  0E00               	movlw	0
  3728  001130  6EAC               	movwf	4012,c	;volatile
  3729  001132  0E00               	movlw	0
  3730  001134  6EAB               	movwf	4011,c	;volatile
  3731  001136  0100               	movlb	0	; () banked
  3732  001138  0100               	movlb	0	; () banked
  3733  00113A  B18E               	btfsc	OpenUSART@config& (0+255),0,b
  3734                           
  3735                           ; BSR set to: 0
  3736  00113C  88AC               	bsf	4012,4,c	;volatile
  3737                           
  3738                           ; BSR set to: 0
  3739  00113E  0100               	movlb	0	; () banked
  3740  001140  0100               	movlb	0	; () banked
  3741  001142  A38E               	btfss	OpenUSART@config& (0+255),1,b
  3742  001144  D002               	goto	l555
  3743                           
  3744                           ; BSR set to: 0
  3745  001146  8CAC               	bsf	4012,6,c	;volatile
  3746  001148  8CAB               	bsf	4011,6,c	;volatile
  3747  00114A                     l555:
  3748                           
  3749                           ; BSR set to: 0
  3750  00114A  0100               	movlb	0	; () banked
  3751  00114C  0100               	movlb	0	; () banked
  3752  00114E  B58E               	btfsc	OpenUSART@config& (0+255),2,b
  3753                           
  3754                           ; BSR set to: 0
  3755  001150  8EAC               	bsf	4012,7,c	;volatile
  3756                           
  3757                           ; BSR set to: 0
  3758  001152  0100               	movlb	0	; () banked
  3759  001154  0100               	movlb	0	; () banked
  3760  001156  A78E               	btfss	OpenUSART@config& (0+255),3,b
  3761  001158  D002               	goto	l557
  3762                           
  3763                           ; BSR set to: 0
  3764  00115A  88AB               	bsf	4011,4,c	;volatile
  3765  00115C  D001               	goto	l558
  3766  00115E                     l557:
  3767                           
  3768                           ; BSR set to: 0
  3769  00115E  8AAB               	bsf	4011,5,c	;volatile
  3770  001160                     l558:
  3771                           
  3772                           ; BSR set to: 0
  3773  001160  0100               	movlb	0	; () banked
  3774  001162  0100               	movlb	0	; () banked
  3775  001164  B98E               	btfsc	OpenUSART@config& (0+255),4,b
  3776                           
  3777                           ; BSR set to: 0
  3778  001166  84AC               	bsf	4012,2,c	;volatile
  3779                           
  3780                           ; BSR set to: 0
  3781  001168  989E               	bcf	3998,4,c	;volatile
  3782  00116A  0100               	movlb	0	; () banked
  3783  00116C  0100               	movlb	0	; () banked
  3784  00116E  BB8E               	btfsc	OpenUSART@config& (0+255),5,b
  3785                           
  3786                           ; BSR set to: 0
  3787  001170  86AB               	bsf	4011,3,c	;volatile
  3788                           
  3789                           ; BSR set to: 0
  3790  001172  0100               	movlb	0	; () banked
  3791  001174  0100               	movlb	0	; () banked
  3792  001176  AD8E               	btfss	OpenUSART@config& (0+255),6,b
  3793  001178  D002               	goto	l561
  3794                           
  3795                           ; BSR set to: 0
  3796  00117A  8A9D               	bsf	3997,5,c	;volatile
  3797  00117C  D001               	goto	l562
  3798  00117E                     l561:
  3799                           
  3800                           ; BSR set to: 0
  3801  00117E  9A9D               	bcf	3997,5,c	;volatile
  3802  001180                     l562:
  3803                           
  3804                           ; BSR set to: 0
  3805  001180  9A9E               	bcf	3998,5,c	;volatile
  3806  001182  0100               	movlb	0	; () banked
  3807  001184  0100               	movlb	0	; () banked
  3808  001186  AF8E               	btfss	OpenUSART@config& (0+255),7,b
  3809  001188  D002               	goto	l563
  3810                           
  3811                           ; BSR set to: 0
  3812  00118A  889D               	bsf	3997,4,c	;volatile
  3813  00118C  D001               	goto	l564
  3814  00118E                     l563:
  3815                           
  3816                           ; BSR set to: 0
  3817  00118E  989D               	bcf	3997,4,c	;volatile
  3818  001190                     l564:
  3819                           
  3820                           ; BSR set to: 0
  3821  001190  C08F  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  3822                           
  3823                           ; BSR set to: 0
  3824  001194  0100               	movlb	0	; () banked
  3825  001196  0100               	movlb	0	; () banked
  3826  001198  5190               	movf	(OpenUSART@spbrg+1)& (0+255),w,b
  3827  00119A  6EB0               	movwf	4016,c	;volatile
  3828                           
  3829                           ; BSR set to: 0
  3830  00119C  8AAC               	bsf	4012,5,c	;volatile
  3831                           
  3832                           ; BSR set to: 0
  3833  00119E  8EAB               	bsf	4011,7,c	;volatile
  3834                           
  3835                           ; BSR set to: 0
  3836  0011A0  9C94               	bcf	3988,6,c	;volatile
  3837                           
  3838                           ; BSR set to: 0
  3839  0011A2  8E94               	bsf	3988,7,c	;volatile
  3840                           
  3841                           ; BSR set to: 0
  3842  0011A4  A8AC               	btfss	4012,4,c	;volatile
  3843  0011A6  0012               	return	
  3844                           
  3845                           ; BSR set to: 0
  3846  0011A8  BEAC               	btfsc	4012,7,c	;volatile
  3847  0011AA  0012               	return	
  3848                           
  3849                           ; BSR set to: 0
  3850  0011AC  8C94               	bsf	3988,6,c	;volatile
  3851  0011AE  0012               	return	
  3852  0011B0                     __end_of_OpenUSART:
  3853                           	opt stack 0
  3854                           tblptru	equ	0xFF8
  3855                           tblptrh	equ	0xFF7
  3856                           tblptrl	equ	0xFF6
  3857                           tablat	equ	0xFF5
  3858                           prodh	equ	0xFF4
  3859                           prodl	equ	0xFF3
  3860                           intcon	equ	0xFF2
  3861                           postinc0	equ	0xFEE
  3862                           wreg	equ	0xFE8
  3863                           indf1	equ	0xFE7
  3864                           fsr1h	equ	0xFE2
  3865                           fsr1l	equ	0xFE1
  3866                           indf2	equ	0xFDF
  3867                           fsr2h	equ	0xFDA
  3868                           fsr2l	equ	0xFD9
  3869                           status	equ	0xFD8
  3870                           
  3871 ;; *************** function _OpenTimer1 *****************
  3872 ;; Defined at:
  3873 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic18\plib\Timers\t1open.c"
  3874 ;; Parameters:    Size  Location     Type
  3875 ;;  config          1   14[BANK0 ] unsigned char 
  3876 ;; Auto vars:     Size  Location     Type
  3877 ;;		None
  3878 ;; Return value:  Size  Location     Type
  3879 ;;		None               void
  3880 ;; Registers used:
  3881 ;;		wreg, status,2, status,0
  3882 ;; Tracked objects:
  3883 ;;		On entry : 0/0
  3884 ;;		On exit  : 0/0
  3885 ;;		Unchanged: 0/0
  3886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3887 ;;      Params:         0       1       0       0       0
  3888 ;;      Locals:         0       0       0       0       0
  3889 ;;      Temps:          0       0       0       0       0
  3890 ;;      Totals:         0       1       0       0       0
  3891 ;;Total ram usage:        1 bytes
  3892 ;; Hardware stack levels used:    1
  3893 ;; Hardware stack levels required when called:    8
  3894 ;; This function calls:
  3895 ;;		Nothing
  3896 ;; This function is called by:
  3897 ;;		_main
  3898 ;; This function uses a non-reentrant model
  3899 ;;
  3900                           
  3901                           	psect	text19
  3902  0015A0                     __ptext19:
  3903                           	opt stack 0
  3904  0015A0                     _OpenTimer1:
  3905                           	opt stack 22
  3906                           
  3907                           ; BSR set to: 0
  3908                           ;incstack = 0
  3909                           ;incstack = 0
  3910  0015A0  0100               	movlb	0	; () banked
  3911  0015A2  0100               	movlb	0	; () banked
  3912  0015A4  518E               	movf	OpenTimer1@config& (0+255),w,b
  3913  0015A6  0B7E               	andlw	126
  3914  0015A8  6ECD               	movwf	4045,c	;volatile
  3915                           
  3916                           ; BSR set to: 0
  3917  0015AA  0100               	movlb	0	; () banked
  3918  0015AC  0100               	movlb	0	; () banked
  3919  0015AE  AD8E               	btfss	OpenTimer1@config& (0+255),6,b
  3920  0015B0  D002               	goto	l527
  3921                           
  3922                           ; BSR set to: 0
  3923  0015B2  8ECD               	bsf	4045,7,c	;volatile
  3924  0015B4  D001               	goto	l3164
  3925  0015B6                     l527:
  3926                           
  3927                           ; BSR set to: 0
  3928  0015B6  9ECD               	bcf	4045,7,c	;volatile
  3929  0015B8                     l3164:
  3930                           
  3931                           ; BSR set to: 0
  3932  0015B8  0E00               	movlw	0
  3933  0015BA  6ECF               	movwf	4047,c	;volatile
  3934  0015BC  0E00               	movlw	0
  3935  0015BE  6ECE               	movwf	4046,c	;volatile
  3936                           
  3937                           ; BSR set to: 0
  3938  0015C0  909E               	bcf	3998,0,c	;volatile
  3939                           
  3940                           ; BSR set to: 0
  3941  0015C2  0100               	movlb	0	; () banked
  3942  0015C4  0100               	movlb	0	; () banked
  3943  0015C6  AF8E               	btfss	OpenTimer1@config& (0+255),7,b
  3944  0015C8  D002               	goto	l529
  3945                           
  3946                           ; BSR set to: 0
  3947  0015CA  809D               	bsf	3997,0,c	;volatile
  3948  0015CC  D001               	goto	l530
  3949  0015CE                     l529:
  3950                           
  3951                           ; BSR set to: 0
  3952  0015CE  909D               	bcf	3997,0,c	;volatile
  3953  0015D0                     l530:
  3954                           
  3955                           ; BSR set to: 0
  3956  0015D0  80CD               	bsf	4045,0,c	;volatile
  3957                           
  3958                           ; BSR set to: 0
  3959  0015D2  0012               	return	
  3960  0015D4                     __end_of_OpenTimer1:
  3961                           	opt stack 0
  3962                           tblptru	equ	0xFF8
  3963                           tblptrh	equ	0xFF7
  3964                           tblptrl	equ	0xFF6
  3965                           tablat	equ	0xFF5
  3966                           prodh	equ	0xFF4
  3967                           prodl	equ	0xFF3
  3968                           intcon	equ	0xFF2
  3969                           postinc0	equ	0xFEE
  3970                           wreg	equ	0xFE8
  3971                           indf1	equ	0xFE7
  3972                           fsr1h	equ	0xFE2
  3973                           fsr1l	equ	0xFE1
  3974                           indf2	equ	0xFDF
  3975                           fsr2h	equ	0xFDA
  3976                           fsr2l	equ	0xFD9
  3977                           status	equ	0xFD8
  3978                           
  3979 ;; *************** function _init_queues *****************
  3980 ;; Defined at:
  3981 ;;		line 194 in file "../src/messages.c"
  3982 ;; Parameters:    Size  Location     Type
  3983 ;;		None
  3984 ;; Auto vars:     Size  Location     Type
  3985 ;;		None
  3986 ;; Return value:  Size  Location     Type
  3987 ;;		None               void
  3988 ;; Registers used:
  3989 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3990 ;; Tracked objects:
  3991 ;;		On entry : 0/0
  3992 ;;		On exit  : 0/0
  3993 ;;		Unchanged: 0/0
  3994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3995 ;;      Params:         0       0       0       0       0
  3996 ;;      Locals:         0       0       0       0       0
  3997 ;;      Temps:          0       1       0       0       0
  3998 ;;      Totals:         0       1       0       0       0
  3999 ;;Total ram usage:        1 bytes
  4000 ;; Hardware stack levels used:    1
  4001 ;; Hardware stack levels required when called:    9
  4002 ;; This function calls:
  4003 ;;		_init_queue
  4004 ;; This function is called by:
  4005 ;;		_main
  4006 ;; This function uses a non-reentrant model
  4007 ;;
  4008                           
  4009                           	psect	text20
  4010  001310                     __ptext20:
  4011                           	opt stack 0
  4012  001310                     _init_queues:
  4013                           	opt stack 21
  4014                           
  4015                           ;messages.c: 195: MQ_Main_Willing_to_block = 0;
  4016                           
  4017                           ; BSR set to: 0
  4018                           ;incstack = 0
  4019                           ;incstack = 0
  4020  001310  0100               	movlb	0	; () banked
  4021  001312  6F92               	movwf	??_init_queues& (0+255),b
  4022  001314  0E00               	movlw	0
  4023  001316  6E52               	movwf	_MQ_Main_Willing_to_block,c
  4024  001318  0100               	movlb	0	; () banked
  4025  00131A  5192               	movf	??_init_queues& (0+255),w,b
  4026                           
  4027                           ; BSR set to: 0
  4028                           ;messages.c: 196: init_queue(&ToMainLow_MQ);
  4029  00131C  0101               	movlb	1	; () banked
  4030  00131E  0E01               	movlw	high _ToMainLow_MQ
  4031  001320  0100               	movlb	0	; () banked
  4032  001322  0100               	movlb	0	; () banked
  4033  001324  6F8F               	movwf	(?_init_queue+1)& (0+255),b
  4034  001326  0101               	movlb	1	; () banked
  4035  001328  0E9E               	movlw	low _ToMainLow_MQ
  4036  00132A  0100               	movlb	0	; () banked
  4037  00132C  6F8E               	movwf	?_init_queue& (0+255),b
  4038  00132E  ECD8  F008         	call	_init_queue	;wreg free
  4039                           
  4040                           ;messages.c: 197: init_queue(&ToMainHigh_MQ);
  4041  001332  0101               	movlb	1	; () banked
  4042  001334  0E01               	movlw	high _ToMainHigh_MQ
  4043  001336  0100               	movlb	0	; () banked
  4044  001338  0100               	movlb	0	; () banked
  4045  00133A  6F8F               	movwf	(?_init_queue+1)& (0+255),b
  4046  00133C  0101               	movlb	1	; () banked
  4047  00133E  0E68               	movlw	low _ToMainHigh_MQ
  4048  001340  0100               	movlb	0	; () banked
  4049  001342  6F8E               	movwf	?_init_queue& (0+255),b
  4050  001344  ECD8  F008         	call	_init_queue	;wreg free
  4051                           
  4052                           ;messages.c: 198: init_queue(&FromMainLow_MQ);
  4053  001348  0101               	movlb	1	; () banked
  4054  00134A  0E01               	movlw	high _FromMainLow_MQ
  4055  00134C  0100               	movlb	0	; () banked
  4056  00134E  0100               	movlb	0	; () banked
  4057  001350  6F8F               	movwf	(?_init_queue+1)& (0+255),b
  4058  001352  0101               	movlb	1	; () banked
  4059  001354  0E32               	movlw	low _FromMainLow_MQ
  4060  001356  0100               	movlb	0	; () banked
  4061  001358  6F8E               	movwf	?_init_queue& (0+255),b
  4062  00135A  ECD8  F008         	call	_init_queue	;wreg free
  4063                           
  4064                           ;messages.c: 199: init_queue(&FromMainHigh_MQ);
  4065  00135E  0102               	movlb	2	; () banked
  4066  001360  0E02               	movlw	high _FromMainHigh_MQ
  4067  001362  0100               	movlb	0	; () banked
  4068  001364  0100               	movlb	0	; () banked
  4069  001366  6F8F               	movwf	(?_init_queue+1)& (0+255),b
  4070  001368  0102               	movlb	2	; () banked
  4071  00136A  0E4C               	movlw	low _FromMainHigh_MQ
  4072  00136C  0100               	movlb	0	; () banked
  4073  00136E  6F8E               	movwf	?_init_queue& (0+255),b
  4074  001370  ECD8  F008         	call	_init_queue	;wreg free
  4075  001374  0012               	return	
  4076  001376                     __end_of_init_queues:
  4077                           	opt stack 0
  4078                           tblptru	equ	0xFF8
  4079                           tblptrh	equ	0xFF7
  4080                           tblptrl	equ	0xFF6
  4081                           tablat	equ	0xFF5
  4082                           prodh	equ	0xFF4
  4083                           prodl	equ	0xFF3
  4084                           intcon	equ	0xFF2
  4085                           postinc0	equ	0xFEE
  4086                           wreg	equ	0xFE8
  4087                           indf1	equ	0xFE7
  4088                           fsr1h	equ	0xFE2
  4089                           fsr1l	equ	0xFE1
  4090                           indf2	equ	0xFDF
  4091                           fsr2h	equ	0xFDA
  4092                           fsr2l	equ	0xFD9
  4093                           status	equ	0xFD8
  4094                           
  4095 ;; *************** function _init_queue *****************
  4096 ;; Defined at:
  4097 ;;		line 14 in file "../src/messages.c"
  4098 ;; Parameters:    Size  Location     Type
  4099 ;;  qptr            2   14[BANK0 ] PTR struct __msg_queue
  4100 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4101 ;; Auto vars:     Size  Location     Type
  4102 ;;  i               1   17[BANK0 ] unsigned char 
  4103 ;; Return value:  Size  Location     Type
  4104 ;;		None               void
  4105 ;; Registers used:
  4106 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4107 ;; Tracked objects:
  4108 ;;		On entry : 0/0
  4109 ;;		On exit  : 0/0
  4110 ;;		Unchanged: 0/0
  4111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4112 ;;      Params:         0       2       0       0       0
  4113 ;;      Locals:         0       1       0       0       0
  4114 ;;      Temps:          0       1       0       0       0
  4115 ;;      Totals:         0       4       0       0       0
  4116 ;;Total ram usage:        4 bytes
  4117 ;; Hardware stack levels used:    1
  4118 ;; Hardware stack levels required when called:    8
  4119 ;; This function calls:
  4120 ;;		Nothing
  4121 ;; This function is called by:
  4122 ;;		_init_queues
  4123 ;; This function uses a non-reentrant model
  4124 ;;
  4125                           
  4126                           	psect	text21
  4127  0011B0                     __ptext21:
  4128                           	opt stack 0
  4129  0011B0                     _init_queue:
  4130                           	opt stack 21
  4131                           
  4132                           ;messages.c: 15: unsigned char i;
  4133                           ;messages.c: 17: qptr->cur_write_ind = 0;
  4134                           
  4135                           ;incstack = 0
  4136                           ;incstack = 0
  4137  0011B0  0100               	movlb	0	; () banked
  4138  0011B2  EE20 F034          	lfsr	2,52
  4139  0011B6  0100               	movlb	0	; () banked
  4140  0011B8  518E               	movf	init_queue@qptr& (0+255),w,b
  4141  0011BA  26D9               	addwf	fsr2l,f,c
  4142  0011BC  0100               	movlb	0	; () banked
  4143  0011BE  518F               	movf	(init_queue@qptr+1)& (0+255),w,b
  4144  0011C0  22DA               	addwfc	fsr2h,f,c
  4145  0011C2  0E00               	movlw	0
  4146  0011C4  6EDF               	movwf	indf2,c
  4147                           
  4148                           ;messages.c: 18: qptr->cur_read_ind = 0;
  4149  0011C6  0100               	movlb	0	; () banked
  4150  0011C8  EE20 F035          	lfsr	2,53
  4151  0011CC  0100               	movlb	0	; () banked
  4152  0011CE  518E               	movf	init_queue@qptr& (0+255),w,b
  4153  0011D0  26D9               	addwf	fsr2l,f,c
  4154  0011D2  0100               	movlb	0	; () banked
  4155  0011D4  518F               	movf	(init_queue@qptr+1)& (0+255),w,b
  4156  0011D6  22DA               	addwfc	fsr2h,f,c
  4157  0011D8  0E00               	movlw	0
  4158  0011DA  6EDF               	movwf	indf2,c
  4159                           
  4160                           ; BSR set to: 0
  4161                           ;messages.c: 19: for (i = 0; i < 4; i++) {
  4162  0011DC  0100               	movlb	0	; () banked
  4163  0011DE  6F90               	movwf	??_init_queue& (0+255),b
  4164  0011E0  0E00               	movlw	0
  4165  0011E2  0100               	movlb	0	; () banked
  4166  0011E4  0100               	movlb	0	; () banked
  4167  0011E6  6F91               	movwf	init_queue@i& (0+255),b
  4168  0011E8  0100               	movlb	0	; () banked
  4169  0011EA  5190               	movf	??_init_queue& (0+255),w,b
  4170                           
  4171                           ; BSR set to: 0
  4172  0011EC  0E03               	movlw	3
  4173  0011EE  0100               	movlb	0	; () banked
  4174  0011F0  0100               	movlb	0	; () banked
  4175  0011F2  6591               	cpfsgt	init_queue@i& (0+255),b
  4176  0011F4  D001               	goto	l3320
  4177  0011F6  0012               	return	
  4178  0011F8                     l3320:
  4179                           
  4180                           ; BSR set to: 0
  4181                           ;messages.c: 20: qptr->queue[i].full = 0;
  4182  0011F8  0100               	movlb	0	; () banked
  4183  0011FA  0100               	movlb	0	; () banked
  4184  0011FC  5191               	movf	init_queue@i& (0+255),w,b
  4185  0011FE  0D0D               	mullw	13
  4186  001200  50F3               	movf	prodl,w,c
  4187  001202  0100               	movlb	0	; () banked
  4188  001204  0100               	movlb	0	; () banked
  4189  001206  258E               	addwf	init_queue@qptr& (0+255),w,b
  4190  001208  6ED9               	movwf	fsr2l,c
  4191  00120A  50F4               	movf	prodh,w,c
  4192  00120C  0100               	movlb	0	; () banked
  4193  00120E  0100               	movlb	0	; () banked
  4194  001210  218F               	addwfc	(init_queue@qptr+1)& (0+255),w,b
  4195  001212  6EDA               	movwf	fsr2h,c
  4196  001214  0E00               	movlw	0
  4197  001216  6EDF               	movwf	indf2,c
  4198                           
  4199                           ; BSR set to: 0
  4200  001218  0100               	movlb	0	; () banked
  4201  00121A  0100               	movlb	0	; () banked
  4202  00121C  2B91               	incf	init_queue@i& (0+255),f,b
  4203                           
  4204                           ; BSR set to: 0
  4205  00121E  0E03               	movlw	3
  4206  001220  0100               	movlb	0	; () banked
  4207  001222  0100               	movlb	0	; () banked
  4208  001224  6591               	cpfsgt	init_queue@i& (0+255),b
  4209  001226  D7E8               	goto	l3320
  4210  001228  0012               	return	
  4211  00122A                     __end_of_init_queue:
  4212                           	opt stack 0
  4213                           tblptru	equ	0xFF8
  4214                           tblptrh	equ	0xFF7
  4215                           tblptrl	equ	0xFF6
  4216                           tablat	equ	0xFF5
  4217                           prodh	equ	0xFF4
  4218                           prodl	equ	0xFF3
  4219                           intcon	equ	0xFF2
  4220                           postinc0	equ	0xFEE
  4221                           wreg	equ	0xFE8
  4222                           indf1	equ	0xFE7
  4223                           fsr1h	equ	0xFE2
  4224                           fsr1l	equ	0xFE1
  4225                           indf2	equ	0xFDF
  4226                           fsr2h	equ	0xFDA
  4227                           fsr2l	equ	0xFD9
  4228                           status	equ	0xFD8
  4229                           
  4230 ;; *************** function _init_timer1_lthread *****************
  4231 ;; Defined at:
  4232 ;;		line 7 in file "../src/timer1_thread.c"
  4233 ;; Parameters:    Size  Location     Type
  4234 ;;  tptr            2   14[BANK0 ] PTR struct __timer1_thre
  4235 ;;		 -> main@t1thread_data(2), 
  4236 ;; Auto vars:     Size  Location     Type
  4237 ;;		None
  4238 ;; Return value:  Size  Location     Type
  4239 ;;		None               void
  4240 ;; Registers used:
  4241 ;;		wreg, fsr2l, fsr2h
  4242 ;; Tracked objects:
  4243 ;;		On entry : 0/0
  4244 ;;		On exit  : 0/0
  4245 ;;		Unchanged: 0/0
  4246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4247 ;;      Params:         0       2       0       0       0
  4248 ;;      Locals:         0       0       0       0       0
  4249 ;;      Temps:          0       0       0       0       0
  4250 ;;      Totals:         0       2       0       0       0
  4251 ;;Total ram usage:        2 bytes
  4252 ;; Hardware stack levels used:    1
  4253 ;; Hardware stack levels required when called:    8
  4254 ;; This function calls:
  4255 ;;		Nothing
  4256 ;; This function is called by:
  4257 ;;		_main
  4258 ;; This function uses a non-reentrant model
  4259 ;;
  4260                           
  4261                           	psect	text22
  4262  0017AE                     __ptext22:
  4263                           	opt stack 0
  4264  0017AE                     _init_timer1_lthread:
  4265                           	opt stack 22
  4266                           
  4267                           ;timer1_thread.c: 8: tptr->msgcount = 0;
  4268                           
  4269                           ; BSR set to: 0
  4270                           ;incstack = 0
  4271                           ;incstack = 0
  4272  0017AE  C08E  FFD9         	movff	init_timer1_lthread@tptr,fsr2l
  4273  0017B2  C08F  FFDA         	movff	init_timer1_lthread@tptr+1,fsr2h
  4274  0017B6  0E00               	movlw	0
  4275  0017B8  6EDE               	movwf	postinc2,c
  4276  0017BA  0E00               	movlw	0
  4277  0017BC  6EDD               	movwf	postdec2,c
  4278  0017BE  0012               	return	
  4279  0017C0                     __end_of_init_timer1_lthread:
  4280                           	opt stack 0
  4281                           tblptru	equ	0xFF8
  4282                           tblptrh	equ	0xFF7
  4283                           tblptrl	equ	0xFF6
  4284                           tablat	equ	0xFF5
  4285                           prodh	equ	0xFF4
  4286                           prodl	equ	0xFF3
  4287                           intcon	equ	0xFF2
  4288                           postinc0	equ	0xFEE
  4289                           wreg	equ	0xFE8
  4290                           indf1	equ	0xFE7
  4291                           fsr1h	equ	0xFE2
  4292                           fsr1l	equ	0xFE1
  4293                           indf2	equ	0xFDF
  4294                           postinc2	equ	0xFDE
  4295                           postdec2	equ	0xFDD
  4296                           fsr2h	equ	0xFDA
  4297                           fsr2l	equ	0xFD9
  4298                           status	equ	0xFD8
  4299                           
  4300 ;; *************** function _i2c_configure_master *****************
  4301 ;; Defined at:
  4302 ;;		line 21 in file "../src/my_i2c.c"
  4303 ;; Parameters:    Size  Location     Type
  4304 ;;  slave_addr      1   16[BANK0 ] unsigned char 
  4305 ;; Auto vars:     Size  Location     Type
  4306 ;;  i               2   19[BANK0 ] int 
  4307 ;; Return value:  Size  Location     Type
  4308 ;;		None               void
  4309 ;; Registers used:
  4310 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4311 ;; Tracked objects:
  4312 ;;		On entry : 0/0
  4313 ;;		On exit  : 0/0
  4314 ;;		Unchanged: 0/0
  4315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4316 ;;      Params:         0       1       0       0       0
  4317 ;;      Locals:         0       2       0       0       0
  4318 ;;      Temps:          0       2       0       0       0
  4319 ;;      Totals:         0       5       0       0       0
  4320 ;;Total ram usage:        5 bytes
  4321 ;; Hardware stack levels used:    1
  4322 ;; Hardware stack levels required when called:    9
  4323 ;; This function calls:
  4324 ;;		_OpenI2C1
  4325 ;; This function is called by:
  4326 ;;		_main
  4327 ;; This function uses a non-reentrant model
  4328 ;;
  4329                           
  4330                           	psect	text23
  4331  00101E                     __ptext23:
  4332                           	opt stack 0
  4333  00101E                     _i2c_configure_master:
  4334                           	opt stack 21
  4335                           
  4336                           ;my_i2c.c: 23: OpenI2C1(0b00001000, 0b10000000);
  4337                           
  4338                           ;incstack = 0
  4339                           ;incstack = 0
  4340  00101E  0100               	movlb	0	; () banked
  4341  001020  6F91               	movwf	??_i2c_configure_master& (0+255),b
  4342  001022  0E08               	movlw	8
  4343  001024  0100               	movlb	0	; () banked
  4344  001026  0100               	movlb	0	; () banked
  4345  001028  6F8E               	movwf	?_OpenI2C1& (0+255),b
  4346  00102A  0100               	movlb	0	; () banked
  4347  00102C  5191               	movf	??_i2c_configure_master& (0+255),w,b
  4348  00102E  0100               	movlb	0	; () banked
  4349  001030  6F92               	movwf	(??_i2c_configure_master+1)& (0+255),b
  4350  001032  0E80               	movlw	128
  4351  001034  0100               	movlb	0	; () banked
  4352  001036  0100               	movlb	0	; () banked
  4353  001038  6F8F               	movwf	(?_OpenI2C1+1)& (0+255),b
  4354  00103A  0100               	movlb	0	; () banked
  4355  00103C  5192               	movf	(??_i2c_configure_master+1)& (0+255),w,b
  4356  00103E  EC70  F00B         	call	_OpenI2C1	;wreg free
  4357                           
  4358                           ;my_i2c.c: 24: SSPADD = 0x0A;
  4359  001042  0E0A               	movlw	10
  4360  001044  6EC8               	movwf	4040,c	;volatile
  4361                           
  4362                           ;my_i2c.c: 25: ic_ptr->slave_addr = slave_addr;
  4363  001046  0100               	movlb	0	; () banked
  4364  001048  EE20 F01C          	lfsr	2,28
  4365  00104C  0100               	movlb	0	; () banked
  4366  00104E  51AF               	movf	_ic_ptr& (0+255),w,b
  4367  001050  26D9               	addwf	fsr2l,f,c
  4368  001052  0100               	movlb	0	; () banked
  4369  001054  51B0               	movf	(_ic_ptr+1)& (0+255),w,b
  4370  001056  22DA               	addwfc	fsr2h,f,c
  4371  001058  0100               	movlb	0	; () banked
  4372  00105A  C090  FFDF         	movff	i2c_configure_master@slave_addr,indf2
  4373                           
  4374                           ; BSR set to: 0
  4375                           ;my_i2c.c: 27: for (int i = 0; i < 10; i++)
  4376  00105E  0E00               	movlw	0
  4377  001060  0100               	movlb	0	; () banked
  4378  001062  0100               	movlb	0	; () banked
  4379  001064  6F94               	movwf	(i2c_configure_master@i+1)& (0+255),b
  4380  001066  0E00               	movlw	0
  4381  001068  0100               	movlb	0	; () banked
  4382  00106A  6F93               	movwf	i2c_configure_master@i& (0+255),b
  4383  00106C                     
  4384                           ; BSR set to: 0
  4385  00106C  0100               	movlb	0	; () banked
  4386  00106E  0100               	movlb	0	; () banked
  4387  001070  5194               	movf	(i2c_configure_master@i+1)& (0+255),w,b
  4388  001072  0A80               	xorlw	128
  4389  001074  0F80               	addlw	-128
  4390  001076  0E0A               	movlw	10
  4391  001078  B4D8               	btfsc	status,2,c
  4392  00107A  5D93               	subwf	i2c_configure_master@i& (0+255),w,b
  4393  00107C  B0D8               	btfsc	status,0,c
  4394  00107E  0012               	return	
  4395                           
  4396                           ; BSR set to: 0
  4397                           ;my_i2c.c: 28: {
  4398                           ;my_i2c.c: 29: ic_ptr->buffer[i] = 0;
  4399                           
  4400                           ; BSR set to: 0
  4401                           
  4402                           ; BSR set to: 0
  4403  001080  0100               	movlb	0	; () banked
  4404  001082  0100               	movlb	0	; () banked
  4405  001084  5193               	movf	i2c_configure_master@i& (0+255),w,b
  4406  001086  0100               	movlb	0	; () banked
  4407  001088  0100               	movlb	0	; () banked
  4408  00108A  25AF               	addwf	_ic_ptr& (0+255),w,b
  4409  00108C  6ED9               	movwf	fsr2l,c
  4410  00108E  0100               	movlb	0	; () banked
  4411  001090  0100               	movlb	0	; () banked
  4412  001092  5194               	movf	(i2c_configure_master@i+1)& (0+255),w,b
  4413  001094  0100               	movlb	0	; () banked
  4414  001096  0100               	movlb	0	; () banked
  4415  001098  21B0               	addwfc	(_ic_ptr+1)& (0+255),w,b
  4416  00109A  6EDA               	movwf	fsr2h,c
  4417  00109C  0E00               	movlw	0
  4418  00109E  6EDF               	movwf	indf2,c
  4419                           
  4420                           ; BSR set to: 0
  4421  0010A0  0100               	movlb	0	; () banked
  4422  0010A2  0100               	movlb	0	; () banked
  4423  0010A4  4B93               	infsnz	i2c_configure_master@i& (0+255),f,b
  4424  0010A6  2B94               	incf	(i2c_configure_master@i+1)& (0+255),f,b
  4425  0010A8  D7E1               	goto	L2
  4426  0010AA                     __end_of_i2c_configure_master:
  4427                           	opt stack 0
  4428                           tblptru	equ	0xFF8
  4429                           tblptrh	equ	0xFF7
  4430                           tblptrl	equ	0xFF6
  4431                           tablat	equ	0xFF5
  4432                           prodh	equ	0xFF4
  4433                           prodl	equ	0xFF3
  4434                           intcon	equ	0xFF2
  4435                           postinc0	equ	0xFEE
  4436                           wreg	equ	0xFE8
  4437                           indf1	equ	0xFE7
  4438                           fsr1h	equ	0xFE2
  4439                           fsr1l	equ	0xFE1
  4440                           indf2	equ	0xFDF
  4441                           postinc2	equ	0xFDE
  4442                           postdec2	equ	0xFDD
  4443                           fsr2h	equ	0xFDA
  4444                           fsr2l	equ	0xFD9
  4445                           status	equ	0xFD8
  4446                           
  4447 ;; *************** function _OpenI2C1 *****************
  4448 ;; Defined at:
  4449 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic18\plib\i2c\i2c1open.c"
  4450 ;; Parameters:    Size  Location     Type
  4451 ;;  sync_mode       1   14[BANK0 ] unsigned char 
  4452 ;;  slew            1   15[BANK0 ] unsigned char 
  4453 ;; Auto vars:     Size  Location     Type
  4454 ;;		None
  4455 ;; Return value:  Size  Location     Type
  4456 ;;		None               void
  4457 ;; Registers used:
  4458 ;;		wreg, status,2, status,0
  4459 ;; Tracked objects:
  4460 ;;		On entry : 0/0
  4461 ;;		On exit  : 0/0
  4462 ;;		Unchanged: 0/0
  4463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4464 ;;      Params:         0       2       0       0       0
  4465 ;;      Locals:         0       0       0       0       0
  4466 ;;      Temps:          0       0       0       0       0
  4467 ;;      Totals:         0       2       0       0       0
  4468 ;;Total ram usage:        2 bytes
  4469 ;; Hardware stack levels used:    1
  4470 ;; Hardware stack levels required when called:    8
  4471 ;; This function calls:
  4472 ;;		Nothing
  4473 ;; This function is called by:
  4474 ;;		_i2c_configure_master
  4475 ;; This function uses a non-reentrant model
  4476 ;;
  4477                           
  4478                           	psect	text24
  4479  0016E0                     __ptext24:
  4480                           	opt stack 0
  4481  0016E0                     _OpenI2C1:
  4482                           	opt stack 21
  4483                           
  4484                           ; BSR set to: 0
  4485                           ;incstack = 0
  4486                           ;incstack = 0
  4487  0016E0  0E3F               	movlw	63
  4488  0016E2  16C7               	andwf	4039,f,c	;volatile
  4489  0016E4  0E00               	movlw	0
  4490  0016E6  6EC6               	movwf	4038,c	;volatile
  4491  0016E8  0E00               	movlw	0
  4492  0016EA  6EC5               	movwf	4037,c	;volatile
  4493  0016EC  0100               	movlb	0	; () banked
  4494  0016EE  0100               	movlb	0	; () banked
  4495  0016F0  518E               	movf	OpenI2C1@sync_mode& (0+255),w,b
  4496  0016F2  12C6               	iorwf	4038,f,c	;volatile
  4497  0016F4  0100               	movlb	0	; () banked
  4498  0016F6  0100               	movlb	0	; () banked
  4499  0016F8  518F               	movf	OpenI2C1@slew& (0+255),w,b
  4500  0016FA  12C7               	iorwf	4039,f,c	;volatile
  4501                           
  4502                           ; BSR set to: 0
  4503  0016FC  8694               	bsf	3988,3,c	;volatile
  4504                           
  4505                           ; BSR set to: 0
  4506  0016FE  8894               	bsf	3988,4,c	;volatile
  4507                           
  4508                           ; BSR set to: 0
  4509  001700  8AC6               	bsf	4038,5,c	;volatile
  4510                           
  4511                           ; BSR set to: 0
  4512  001702  0012               	return	
  4513  001704                     __end_of_OpenI2C1:
  4514                           	opt stack 0
  4515                           tblptru	equ	0xFF8
  4516                           tblptrh	equ	0xFF7
  4517                           tblptrl	equ	0xFF6
  4518                           tablat	equ	0xFF5
  4519                           prodh	equ	0xFF4
  4520                           prodl	equ	0xFF3
  4521                           intcon	equ	0xFF2
  4522                           postinc0	equ	0xFEE
  4523                           wreg	equ	0xFE8
  4524                           indf1	equ	0xFE7
  4525                           fsr1h	equ	0xFE2
  4526                           fsr1l	equ	0xFE1
  4527                           indf2	equ	0xFDF
  4528                           postinc2	equ	0xFDE
  4529                           postdec2	equ	0xFDD
  4530                           fsr2h	equ	0xFDA
  4531                           fsr2l	equ	0xFD9
  4532                           status	equ	0xFD8
  4533                           
  4534 ;; *************** function _init_i2c *****************
  4535 ;; Defined at:
  4536 ;;		line 480 in file "../src/my_i2c.c"
  4537 ;; Parameters:    Size  Location     Type
  4538 ;;  ic              2   14[BANK0 ] PTR struct __i2c_comm
  4539 ;;		 -> main@ic(29), 
  4540 ;; Auto vars:     Size  Location     Type
  4541 ;;		None
  4542 ;; Return value:  Size  Location     Type
  4543 ;;		None               void
  4544 ;; Registers used:
  4545 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4546 ;; Tracked objects:
  4547 ;;		On entry : 0/0
  4548 ;;		On exit  : 0/0
  4549 ;;		Unchanged: 0/0
  4550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4551 ;;      Params:         0       2       0       0       0
  4552 ;;      Locals:         0       0       0       0       0
  4553 ;;      Temps:          0       0       0       0       0
  4554 ;;      Totals:         0       2       0       0       0
  4555 ;;Total ram usage:        2 bytes
  4556 ;; Hardware stack levels used:    1
  4557 ;; Hardware stack levels required when called:    8
  4558 ;; This function calls:
  4559 ;;		Nothing
  4560 ;; This function is called by:
  4561 ;;		_main
  4562 ;; This function uses a non-reentrant model
  4563 ;;
  4564                           
  4565                           	psect	text25
  4566  00122A                     __ptext25:
  4567                           	opt stack 0
  4568  00122A                     _init_i2c:
  4569                           	opt stack 22
  4570                           
  4571                           ;my_i2c.c: 481: ic_ptr = ic;
  4572                           
  4573                           ; BSR set to: 0
  4574                           ;incstack = 0
  4575                           ;incstack = 0
  4576  00122A  C08E  F0AF         	movff	init_i2c@ic,_ic_ptr
  4577  00122E  C08F  F0B0         	movff	init_i2c@ic+1,_ic_ptr+1
  4578                           
  4579                           ;my_i2c.c: 482: ic_ptr->buflen = 0;
  4580  001232  0100               	movlb	0	; () banked
  4581  001234  EE20 F00A          	lfsr	2,10
  4582  001238  0100               	movlb	0	; () banked
  4583  00123A  51AF               	movf	_ic_ptr& (0+255),w,b
  4584  00123C  26D9               	addwf	fsr2l,f,c
  4585  00123E  0100               	movlb	0	; () banked
  4586  001240  51B0               	movf	(_ic_ptr+1)& (0+255),w,b
  4587  001242  22DA               	addwfc	fsr2h,f,c
  4588  001244  0E00               	movlw	0
  4589  001246  6EDF               	movwf	indf2,c
  4590                           
  4591                           ;my_i2c.c: 483: ic_ptr->event_count = 0;
  4592  001248  0100               	movlb	0	; () banked
  4593  00124A  EE20 F00C          	lfsr	2,12
  4594  00124E  0100               	movlb	0	; () banked
  4595  001250  51AF               	movf	_ic_ptr& (0+255),w,b
  4596  001252  26D9               	addwf	fsr2l,f,c
  4597  001254  0100               	movlb	0	; () banked
  4598  001256  51B0               	movf	(_ic_ptr+1)& (0+255),w,b
  4599  001258  22DA               	addwfc	fsr2h,f,c
  4600  00125A  0E00               	movlw	0
  4601  00125C  6EDF               	movwf	indf2,c
  4602                           
  4603                           ;my_i2c.c: 484: ic_ptr->status = 0x5;
  4604  00125E  0100               	movlb	0	; () banked
  4605  001260  EE20 F00D          	lfsr	2,13
  4606  001264  0100               	movlb	0	; () banked
  4607  001266  51AF               	movf	_ic_ptr& (0+255),w,b
  4608  001268  26D9               	addwf	fsr2l,f,c
  4609  00126A  0100               	movlb	0	; () banked
  4610  00126C  51B0               	movf	(_ic_ptr+1)& (0+255),w,b
  4611  00126E  22DA               	addwfc	fsr2h,f,c
  4612  001270  0E05               	movlw	5
  4613  001272  6EDF               	movwf	indf2,c
  4614                           
  4615                           ;my_i2c.c: 485: ic_ptr->error_count = 0;
  4616  001274  0100               	movlb	0	; () banked
  4617  001276  EE20 F00F          	lfsr	2,15
  4618  00127A  0100               	movlb	0	; () banked
  4619  00127C  51AF               	movf	_ic_ptr& (0+255),w,b
  4620  00127E  26D9               	addwf	fsr2l,f,c
  4621  001280  0100               	movlb	0	; () banked
  4622  001282  51B0               	movf	(_ic_ptr+1)& (0+255),w,b
  4623  001284  22DA               	addwfc	fsr2h,f,c
  4624  001286  0E00               	movlw	0
  4625  001288  6EDF               	movwf	indf2,c
  4626                           
  4627                           ;my_i2c.c: 486: ic_ptr->bufind = 0;
  4628  00128A  0100               	movlb	0	; () banked
  4629  00128C  EE20 F00B          	lfsr	2,11
  4630  001290  0100               	movlb	0	; () banked
  4631  001292  51AF               	movf	_ic_ptr& (0+255),w,b
  4632  001294  26D9               	addwf	fsr2l,f,c
  4633  001296  0100               	movlb	0	; () banked
  4634  001298  51B0               	movf	(_ic_ptr+1)& (0+255),w,b
  4635  00129A  22DA               	addwfc	fsr2h,f,c
  4636  00129C  0E00               	movlw	0
  4637  00129E  6EDF               	movwf	indf2,c
  4638                           
  4639                           ; BSR set to: 0
  4640  0012A0  0012               	return	
  4641  0012A2                     __end_of_init_i2c:
  4642                           	opt stack 0
  4643                           tblptru	equ	0xFF8
  4644                           tblptrh	equ	0xFF7
  4645                           tblptrl	equ	0xFF6
  4646                           tablat	equ	0xFF5
  4647                           prodh	equ	0xFF4
  4648                           prodl	equ	0xFF3
  4649                           intcon	equ	0xFF2
  4650                           postinc0	equ	0xFEE
  4651                           wreg	equ	0xFE8
  4652                           indf1	equ	0xFE7
  4653                           fsr1h	equ	0xFE2
  4654                           fsr1l	equ	0xFE1
  4655                           indf2	equ	0xFDF
  4656                           postinc2	equ	0xFDE
  4657                           postdec2	equ	0xFDD
  4658                           fsr2h	equ	0xFDA
  4659                           fsr2l	equ	0xFD9
  4660                           status	equ	0xFD8
  4661                           
  4662 ;; *************** function _init_uart_recv *****************
  4663 ;; Defined at:
  4664 ;;		line 112 in file "../src/my_uart.c"
  4665 ;; Parameters:    Size  Location     Type
  4666 ;;  uc              2   14[BANK0 ] PTR struct __uart_comm
  4667 ;;		 -> main@uc(16), 
  4668 ;; Auto vars:     Size  Location     Type
  4669 ;;		None
  4670 ;; Return value:  Size  Location     Type
  4671 ;;		None               void
  4672 ;; Registers used:
  4673 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4674 ;; Tracked objects:
  4675 ;;		On entry : 0/0
  4676 ;;		On exit  : 0/0
  4677 ;;		Unchanged: 0/0
  4678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4679 ;;      Params:         0       2       0       0       0
  4680 ;;      Locals:         0       0       0       0       0
  4681 ;;      Temps:          0       0       0       0       0
  4682 ;;      Totals:         0       2       0       0       0
  4683 ;;Total ram usage:        2 bytes
  4684 ;; Hardware stack levels used:    1
  4685 ;; Hardware stack levels required when called:    8
  4686 ;; This function calls:
  4687 ;;		Nothing
  4688 ;; This function is called by:
  4689 ;;		_main
  4690 ;; This function uses a non-reentrant model
  4691 ;;
  4692                           
  4693                           	psect	text26
  4694  001530                     __ptext26:
  4695                           	opt stack 0
  4696  001530                     _init_uart_recv:
  4697                           	opt stack 22
  4698                           
  4699                           ;my_uart.c: 113: uc_ptr = uc;
  4700                           
  4701                           ; BSR set to: 0
  4702                           ;incstack = 0
  4703                           ;incstack = 0
  4704  001530  C08E  F062         	movff	init_uart_recv@uc,_uc_ptr
  4705  001534  C08F  F063         	movff	init_uart_recv@uc+1,_uc_ptr+1
  4706                           
  4707                           ;my_uart.c: 114: uc_ptr->buflen = 0;
  4708  001538  EE20 F006          	lfsr	2,6
  4709  00153C  5062               	movf	_uc_ptr,w,c
  4710  00153E  26D9               	addwf	fsr2l,f,c
  4711  001540  5063               	movf	_uc_ptr+1,w,c
  4712  001542  22DA               	addwfc	fsr2h,f,c
  4713  001544  0E00               	movlw	0
  4714  001546  6EDF               	movwf	indf2,c
  4715                           
  4716                           ;my_uart.c: 115: uc_ptr->inbuflen = 0;
  4717  001548  EE20 F00D          	lfsr	2,13
  4718  00154C  5062               	movf	_uc_ptr,w,c
  4719  00154E  26D9               	addwf	fsr2l,f,c
  4720  001550  5063               	movf	_uc_ptr+1,w,c
  4721  001552  22DA               	addwfc	fsr2h,f,c
  4722  001554  0E00               	movlw	0
  4723  001556  6EDF               	movwf	indf2,c
  4724                           
  4725                           ;my_uart.c: 116: uc_ptr->status = 49;
  4726  001558  EE20 F00E          	lfsr	2,14
  4727  00155C  5062               	movf	_uc_ptr,w,c
  4728  00155E  26D9               	addwf	fsr2l,f,c
  4729  001560  5063               	movf	_uc_ptr+1,w,c
  4730  001562  22DA               	addwfc	fsr2h,f,c
  4731  001564  0E31               	movlw	49
  4732  001566  6EDF               	movwf	indf2,c
  4733  001568  0012               	return	
  4734  00156A                     __end_of_init_uart_recv:
  4735                           	opt stack 0
  4736                           tblptru	equ	0xFF8
  4737                           tblptrh	equ	0xFF7
  4738                           tblptrl	equ	0xFF6
  4739                           tablat	equ	0xFF5
  4740                           prodh	equ	0xFF4
  4741                           prodl	equ	0xFF3
  4742                           intcon	equ	0xFF2
  4743                           postinc0	equ	0xFEE
  4744                           wreg	equ	0xFE8
  4745                           indf1	equ	0xFE7
  4746                           fsr1h	equ	0xFE2
  4747                           fsr1l	equ	0xFE1
  4748                           indf2	equ	0xFDF
  4749                           postinc2	equ	0xFDE
  4750                           postdec2	equ	0xFDD
  4751                           fsr2h	equ	0xFDA
  4752                           fsr2l	equ	0xFD9
  4753                           status	equ	0xFD8
  4754                           
  4755 ;; *************** function _enable_interrupts *****************
  4756 ;; Defined at:
  4757 ;;		line 17 in file "../src/interrupts.c"
  4758 ;; Parameters:    Size  Location     Type
  4759 ;;		None
  4760 ;; Auto vars:     Size  Location     Type
  4761 ;;		None
  4762 ;; Return value:  Size  Location     Type
  4763 ;;		None               void
  4764 ;; Registers used:
  4765 ;;		None
  4766 ;; Tracked objects:
  4767 ;;		On entry : 0/0
  4768 ;;		On exit  : 0/0
  4769 ;;		Unchanged: 0/0
  4770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4771 ;;      Params:         0       0       0       0       0
  4772 ;;      Locals:         0       0       0       0       0
  4773 ;;      Temps:          0       0       0       0       0
  4774 ;;      Totals:         0       0       0       0       0
  4775 ;;Total ram usage:        0 bytes
  4776 ;; Hardware stack levels used:    1
  4777 ;; Hardware stack levels required when called:    8
  4778 ;; This function calls:
  4779 ;;		Nothing
  4780 ;; This function is called by:
  4781 ;;		_main
  4782 ;; This function uses a non-reentrant model
  4783 ;;
  4784                           
  4785                           	psect	text27
  4786  001810                     __ptext27:
  4787                           	opt stack 0
  4788  001810                     _enable_interrupts:
  4789                           	opt stack 22
  4790                           
  4791                           ;interrupts.c: 20: RCONbits.IPEN = 1;
  4792                           
  4793                           ;incstack = 0
  4794                           ;incstack = 0
  4795  001810  8ED0               	bsf	4048,7,c	;volatile
  4796                           
  4797                           ;interrupts.c: 21: INTCONbits.GIEH = 1;
  4798  001812  8EF2               	bsf	intcon,7,c	;volatile
  4799                           
  4800                           ;interrupts.c: 22: INTCONbits.GIEL = 1;
  4801  001814  8CF2               	bsf	intcon,6,c	;volatile
  4802  001816  0012               	return	
  4803  001818                     __end_of_enable_interrupts:
  4804                           	opt stack 0
  4805                           tblptru	equ	0xFF8
  4806                           tblptrh	equ	0xFF7
  4807                           tblptrl	equ	0xFF6
  4808                           tablat	equ	0xFF5
  4809                           prodh	equ	0xFF4
  4810                           prodl	equ	0xFF3
  4811                           intcon	equ	0xFF2
  4812                           postinc0	equ	0xFEE
  4813                           wreg	equ	0xFE8
  4814                           indf1	equ	0xFE7
  4815                           fsr1h	equ	0xFE2
  4816                           fsr1l	equ	0xFE1
  4817                           indf2	equ	0xFDF
  4818                           postinc2	equ	0xFDE
  4819                           postdec2	equ	0xFDD
  4820                           fsr2h	equ	0xFDA
  4821                           fsr2l	equ	0xFD9
  4822                           status	equ	0xFD8
  4823                           
  4824 ;; *************** function _InterruptHandlerLow *****************
  4825 ;; Defined at:
  4826 ;;		line 146 in file "../src/interrupts.c"
  4827 ;; Parameters:    Size  Location     Type
  4828 ;;		None
  4829 ;; Auto vars:     Size  Location     Type
  4830 ;;		None
  4831 ;; Return value:  Size  Location     Type
  4832 ;;		None               void
  4833 ;; Registers used:
  4834 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4835 ;; Tracked objects:
  4836 ;;		On entry : 0/0
  4837 ;;		On exit  : 0/0
  4838 ;;		Unchanged: 0/0
  4839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4840 ;;      Params:         0       0       0       0       0
  4841 ;;      Locals:         0       0       0       0       0
  4842 ;;      Temps:         17       0       0       0       0
  4843 ;;      Totals:        17       0       0       0       0
  4844 ;;Total ram usage:       17 bytes
  4845 ;; Hardware stack levels used:    1
  4846 ;; Hardware stack levels required when called:    7
  4847 ;; This function calls:
  4848 ;;		_timer1_int_handler
  4849 ;;		_uart_tx_int_handler
  4850 ;; This function is called by:
  4851 ;;		Interrupt level 1
  4852 ;; This function uses a non-reentrant model
  4853 ;;
  4854                           
  4855                           	psect	intcodelo
  4856  000018                     __pintcodelo:
  4857                           	opt stack 0
  4858  000018                     _InterruptHandlerLow:
  4859                           	opt stack 19
  4860                           
  4861                           ;incstack = 0
  4862  000018  CFD8 F003          	movff	status,??_InterruptHandlerLow
  4863  00001C  CFE8 F004          	movff	wreg,??_InterruptHandlerLow+1
  4864  000020  CFE0 F005          	movff	bsr,??_InterruptHandlerLow+2
  4865  000024  CFFA F006          	movff	pclath,??_InterruptHandlerLow+3
  4866  000028  CFFB F007          	movff	pclatu,??_InterruptHandlerLow+4
  4867  00002C  CFE9 F008          	movff	fsr0l,??_InterruptHandlerLow+5
  4868  000030  CFEA F009          	movff	fsr0h,??_InterruptHandlerLow+6
  4869  000034  CFE1 F00A          	movff	fsr1l,??_InterruptHandlerLow+7
  4870  000038  CFE2 F00B          	movff	fsr1h,??_InterruptHandlerLow+8
  4871  00003C  CFD9 F00C          	movff	fsr2l,??_InterruptHandlerLow+9
  4872  000040  CFDA F00D          	movff	fsr2h,??_InterruptHandlerLow+10
  4873  000044  CFF3 F00E          	movff	prodl,??_InterruptHandlerLow+11
  4874  000048  CFF4 F00F          	movff	prodh,??_InterruptHandlerLow+12
  4875  00004C  CFF6 F010          	movff	tblptrl,??_InterruptHandlerLow+13
  4876  000050  CFF7 F011          	movff	tblptrh,??_InterruptHandlerLow+14
  4877  000054  CFF8 F012          	movff	tblptru,??_InterruptHandlerLow+15
  4878  000058  CFF5 F013          	movff	tablat,??_InterruptHandlerLow+16
  4879  00005C                     
  4880                           ;interrupts.c: 148: if (PIR1bits.TMR1IF) {
  4881  00005C  A09E               	btfss	3998,0,c	;volatile
  4882  00005E  D001               	goto	i1u240_21
  4883  000060  D001               	goto	i1u240_20
  4884  000062                     i1u240_21:
  4885  000062  D004               	goto	i1l3542
  4886  000064                     i1u240_20:
  4887  000064                     
  4888                           ;interrupts.c: 149: PIR1bits.TMR1IF = 0;
  4889  000064  909E               	bcf	3998,0,c	;volatile
  4890  000066                     
  4891                           ;interrupts.c: 150: timer1_int_handler();
  4892  000066  ECF1  F00B         	call	_timer1_int_handler	;wreg free
  4893  00006A  D000               	goto	i1l3542
  4894  00006C                     i1l3542:
  4895                           
  4896                           ;interrupts.c: 151: }
  4897                           ;interrupts.c: 159: if (PIR1bits.TXIF && PIE1bits.TXIE) {
  4898  00006C  A89E               	btfss	3998,4,c	;volatile
  4899  00006E  D001               	goto	i1u241_21
  4900  000070  D001               	goto	i1u241_20
  4901  000072                     i1u241_21:
  4902  000072  D008               	goto	i1l59
  4903  000074                     i1u241_20:
  4904  000074  A89D               	btfss	3997,4,c	;volatile
  4905  000076  D001               	goto	i1u242_21
  4906  000078  D001               	goto	i1u242_20
  4907  00007A                     i1u242_21:
  4908  00007A  D004               	goto	i1l59
  4909  00007C                     i1u242_20:
  4910  00007C                     
  4911                           ;interrupts.c: 160: PIE1bits.TXIE = 0;
  4912  00007C  989D               	bcf	3997,4,c	;volatile
  4913  00007E                     
  4914                           ;interrupts.c: 162: uart_tx_int_handler();
  4915  00007E  EC55  F008         	call	_uart_tx_int_handler	;wreg free
  4916  000082  D000               	goto	i1l59
  4917  000084                     i1l59:
  4918  000084  C013  FFF5         	movff	??_InterruptHandlerLow+16,tablat
  4919  000088  C012  FFF8         	movff	??_InterruptHandlerLow+15,tblptru
  4920  00008C  C011  FFF7         	movff	??_InterruptHandlerLow+14,tblptrh
  4921  000090  C010  FFF6         	movff	??_InterruptHandlerLow+13,tblptrl
  4922  000094  C00F  FFF4         	movff	??_InterruptHandlerLow+12,prodh
  4923  000098  C00E  FFF3         	movff	??_InterruptHandlerLow+11,prodl
  4924  00009C  C00D  FFDA         	movff	??_InterruptHandlerLow+10,fsr2h
  4925  0000A0  C00C  FFD9         	movff	??_InterruptHandlerLow+9,fsr2l
  4926  0000A4  C00B  FFE2         	movff	??_InterruptHandlerLow+8,fsr1h
  4927  0000A8  C00A  FFE1         	movff	??_InterruptHandlerLow+7,fsr1l
  4928  0000AC  C009  FFEA         	movff	??_InterruptHandlerLow+6,fsr0h
  4929  0000B0  C008  FFE9         	movff	??_InterruptHandlerLow+5,fsr0l
  4930  0000B4  C007  FFFB         	movff	??_InterruptHandlerLow+4,pclatu
  4931  0000B8  C006  FFFA         	movff	??_InterruptHandlerLow+3,pclath
  4932  0000BC  C005  FFE0         	movff	??_InterruptHandlerLow+2,bsr
  4933  0000C0  C004  FFE8         	movff	??_InterruptHandlerLow+1,wreg
  4934  0000C4  C003  FFD8         	movff	??_InterruptHandlerLow,status
  4935  0000C8  0010               	retfie	
  4936  0000CA                     __end_of_InterruptHandlerLow:
  4937                           	opt stack 0
  4938                           pclatu	equ	0xFFB
  4939                           pclath	equ	0xFFA
  4940                           tblptru	equ	0xFF8
  4941                           tblptrh	equ	0xFF7
  4942                           tblptrl	equ	0xFF6
  4943                           tablat	equ	0xFF5
  4944                           prodh	equ	0xFF4
  4945                           prodl	equ	0xFF3
  4946                           intcon	equ	0xFF2
  4947                           postinc0	equ	0xFEE
  4948                           fsr0h	equ	0xFEA
  4949                           fsr0l	equ	0xFE9
  4950                           wreg	equ	0xFE8
  4951                           indf1	equ	0xFE7
  4952                           fsr1h	equ	0xFE2
  4953                           fsr1l	equ	0xFE1
  4954                           bsr	equ	0xFE0
  4955                           indf2	equ	0xFDF
  4956                           postinc2	equ	0xFDE
  4957                           postdec2	equ	0xFDD
  4958                           fsr2h	equ	0xFDA
  4959                           fsr2l	equ	0xFD9
  4960                           status	equ	0xFD8
  4961                           
  4962 ;; *************** function _uart_tx_int_handler *****************
  4963 ;; Defined at:
  4964 ;;		line 62 in file "../src/my_uart.c"
  4965 ;; Parameters:    Size  Location     Type
  4966 ;;		None
  4967 ;; Auto vars:     Size  Location     Type
  4968 ;;  testbuffer      1    1[COMRAM] unsigned char 
  4969 ;; Return value:  Size  Location     Type
  4970 ;;		None               void
  4971 ;; Registers used:
  4972 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4973 ;; Tracked objects:
  4974 ;;		On entry : 0/0
  4975 ;;		On exit  : 0/0
  4976 ;;		Unchanged: 0/0
  4977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4978 ;;      Params:         0       0       0       0       0
  4979 ;;      Locals:         1       0       0       0       0
  4980 ;;      Temps:          1       0       0       0       0
  4981 ;;      Totals:         2       0       0       0       0
  4982 ;;Total ram usage:        2 bytes
  4983 ;; Hardware stack levels used:    1
  4984 ;; Hardware stack levels required when called:    5
  4985 ;; This function calls:
  4986 ;;		Nothing
  4987 ;; This function is called by:
  4988 ;;		_InterruptHandlerLow
  4989 ;; This function uses a non-reentrant model
  4990 ;;
  4991                           
  4992                           	psect	text29
  4993  0010AA                     __ptext29:
  4994                           	opt stack 0
  4995  0010AA                     _uart_tx_int_handler:
  4996                           	opt stack 20
  4997                           
  4998                           ;my_uart.c: 65: LATA0 = 0;
  4999                           
  5000                           ;incstack = 0
  5001                           ;incstack = 0
  5002  0010AA  9089               	bcf	3977,0,c	;volatile
  5003                           
  5004                           ;my_uart.c: 66: LATA3 = 1;
  5005  0010AC  8689               	bsf	3977,3,c	;volatile
  5006                           
  5007                           ;my_uart.c: 68: TXREG = uc_ptr->buffer[uc_ptr->bufind];
  5008  0010AE  EE20 F00F          	lfsr	2,15
  5009  0010B2  5062               	movf	_uc_ptr,w,c
  5010  0010B4  26D9               	addwf	fsr2l,f,c
  5011  0010B6  5063               	movf	_uc_ptr+1,w,c
  5012  0010B8  22DA               	addwfc	fsr2h,f,c
  5013  0010BA  50DF               	movf	indf2,w,c
  5014  0010BC  6E01               	movwf	??_uart_tx_int_handler& (0+255),c
  5015  0010BE  5001               	movf	??_uart_tx_int_handler,w,c
  5016  0010C0  0D01               	mullw	1
  5017  0010C2  50F3               	movf	prodl,w,c
  5018  0010C4  2462               	addwf	_uc_ptr,w,c
  5019  0010C6  6ED9               	movwf	fsr2l,c
  5020  0010C8  50F4               	movf	prodh,w,c
  5021  0010CA  2063               	addwfc	_uc_ptr+1,w,c
  5022  0010CC  6EDA               	movwf	fsr2h,c
  5023  0010CE  50DF               	movf	indf2,w,c
  5024  0010D0  6EAD               	movwf	4013,c	;volatile
  5025                           
  5026                           ;my_uart.c: 69: char testbuffer = uc_ptr->buffer[uc_ptr->bufind];
  5027  0010D2  EE20 F00F          	lfsr	2,15
  5028  0010D6  5062               	movf	_uc_ptr,w,c
  5029  0010D8  26D9               	addwf	fsr2l,f,c
  5030  0010DA  5063               	movf	_uc_ptr+1,w,c
  5031  0010DC  22DA               	addwfc	fsr2h,f,c
  5032  0010DE  50DF               	movf	indf2,w,c
  5033  0010E0  6E01               	movwf	??_uart_tx_int_handler& (0+255),c
  5034  0010E2  5001               	movf	??_uart_tx_int_handler,w,c
  5035  0010E4  0D01               	mullw	1
  5036  0010E6  50F3               	movf	prodl,w,c
  5037  0010E8  2462               	addwf	_uc_ptr,w,c
  5038  0010EA  6ED9               	movwf	fsr2l,c
  5039  0010EC  50F4               	movf	prodh,w,c
  5040  0010EE  2063               	addwfc	_uc_ptr+1,w,c
  5041  0010F0  6EDA               	movwf	fsr2h,c
  5042  0010F2  50DF               	movf	indf2,w,c
  5043  0010F4  6E02               	movwf	uart_tx_int_handler@testbuffer,c
  5044                           
  5045                           ;my_uart.c: 70: uc_ptr->bufind++;
  5046  0010F6  EE20 F00F          	lfsr	2,15
  5047  0010FA  5062               	movf	_uc_ptr,w,c
  5048  0010FC  26D9               	addwf	fsr2l,f,c
  5049  0010FE  5063               	movf	_uc_ptr+1,w,c
  5050  001100  22DA               	addwfc	fsr2h,f,c
  5051  001102  2ADF               	incf	indf2,f,c
  5052                           
  5053                           ;my_uart.c: 71: if(uc_ptr->bufind < uc_ptr->buflen)
  5054  001104  EE20 F00F          	lfsr	2,15
  5055  001108  5062               	movf	_uc_ptr,w,c
  5056  00110A  26D9               	addwf	fsr2l,f,c
  5057  00110C  5063               	movf	_uc_ptr+1,w,c
  5058  00110E  22DA               	addwfc	fsr2h,f,c
  5059  001110  50DF               	movf	indf2,w,c
  5060  001112  6E01               	movwf	??_uart_tx_int_handler& (0+255),c
  5061  001114  EE20 F006          	lfsr	2,6
  5062  001118  5062               	movf	_uc_ptr,w,c
  5063  00111A  26D9               	addwf	fsr2l,f,c
  5064  00111C  5063               	movf	_uc_ptr+1,w,c
  5065  00111E  22DA               	addwfc	fsr2h,f,c
  5066  001120  50DF               	movf	indf2,w,c
  5067  001122  5C01               	subwf	??_uart_tx_int_handler,w,c
  5068  001124  A0D8               	btfss	status,0,c
  5069                           
  5070                           ;my_uart.c: 72: {
  5071                           ;my_uart.c: 73: PIE1bits.TXIE = 1;
  5072  001126  889D               	bsf	3997,4,c	;volatile
  5073                           
  5074                           ;my_uart.c: 74: }
  5075                           ;my_uart.c: 76: LATA0 = 1;
  5076  001128  8089               	bsf	3977,0,c	;volatile
  5077                           
  5078                           ;my_uart.c: 77: LATA3 = 0;
  5079  00112A  9689               	bcf	3977,3,c	;volatile
  5080  00112C  0012               	return	
  5081  00112E                     __end_of_uart_tx_int_handler:
  5082                           	opt stack 0
  5083                           pclatu	equ	0xFFB
  5084                           pclath	equ	0xFFA
  5085                           tblptru	equ	0xFF8
  5086                           tblptrh	equ	0xFF7
  5087                           tblptrl	equ	0xFF6
  5088                           tablat	equ	0xFF5
  5089                           prodh	equ	0xFF4
  5090                           prodl	equ	0xFF3
  5091                           intcon	equ	0xFF2
  5092                           postinc0	equ	0xFEE
  5093                           fsr0h	equ	0xFEA
  5094                           fsr0l	equ	0xFE9
  5095                           wreg	equ	0xFE8
  5096                           indf1	equ	0xFE7
  5097                           fsr1h	equ	0xFE2
  5098                           fsr1l	equ	0xFE1
  5099                           bsr	equ	0xFE0
  5100                           indf2	equ	0xFDF
  5101                           postinc2	equ	0xFDE
  5102                           postdec2	equ	0xFDD
  5103                           fsr2h	equ	0xFDA
  5104                           fsr2l	equ	0xFD9
  5105                           status	equ	0xFD8
  5106                           
  5107 ;; *************** function _timer1_int_handler *****************
  5108 ;; Defined at:
  5109 ;;		line 38 in file "../src/user_interrupts.c"
  5110 ;; Parameters:    Size  Location     Type
  5111 ;;		None
  5112 ;; Auto vars:     Size  Location     Type
  5113 ;;		None
  5114 ;; Return value:  Size  Location     Type
  5115 ;;		None               void
  5116 ;; Registers used:
  5117 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5118 ;; Tracked objects:
  5119 ;;		On entry : 0/0
  5120 ;;		On exit  : 0/0
  5121 ;;		Unchanged: 0/0
  5122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5123 ;;      Params:         0       0       0       0       0
  5124 ;;      Locals:         0       0       0       0       0
  5125 ;;      Temps:          1       0       0       0       0
  5126 ;;      Totals:         1       0       0       0       0
  5127 ;;Total ram usage:        1 bytes
  5128 ;; Hardware stack levels used:    1
  5129 ;; Hardware stack levels required when called:    6
  5130 ;; This function calls:
  5131 ;;		_i2c_master_recv
  5132 ;; This function is called by:
  5133 ;;		_InterruptHandlerLow
  5134 ;; This function uses a non-reentrant model
  5135 ;;
  5136                           
  5137                           	psect	text30
  5138  0017E2                     __ptext30:
  5139                           	opt stack 0
  5140  0017E2                     _timer1_int_handler:
  5141                           	opt stack 19
  5142                           
  5143                           ;user_interrupts.c: 59: i2c_master_recv(6);
  5144                           
  5145                           ;incstack = 0
  5146                           ;incstack = 0
  5147  0017E2  6E02               	movwf	??_timer1_int_handler& (0+255),c
  5148  0017E4  0E06               	movlw	6
  5149  0017E6  6E01               	movwf	?_i2c_master_recv,c
  5150  0017E8  5002               	movf	??_timer1_int_handler& (0+255),w,c
  5151  0017EA  ECEA  F00A         	call	_i2c_master_recv	;wreg free
  5152  0017EE  0012               	return	
  5153  0017F0                     __end_of_timer1_int_handler:
  5154                           	opt stack 0
  5155                           pclatu	equ	0xFFB
  5156                           pclath	equ	0xFFA
  5157                           tblptru	equ	0xFF8
  5158                           tblptrh	equ	0xFF7
  5159                           tblptrl	equ	0xFF6
  5160                           tablat	equ	0xFF5
  5161                           prodh	equ	0xFF4
  5162                           prodl	equ	0xFF3
  5163                           intcon	equ	0xFF2
  5164                           postinc0	equ	0xFEE
  5165                           fsr0h	equ	0xFEA
  5166                           fsr0l	equ	0xFE9
  5167                           wreg	equ	0xFE8
  5168                           indf1	equ	0xFE7
  5169                           fsr1h	equ	0xFE2
  5170                           fsr1l	equ	0xFE1
  5171                           bsr	equ	0xFE0
  5172                           indf2	equ	0xFDF
  5173                           postinc2	equ	0xFDE
  5174                           postdec2	equ	0xFDD
  5175                           fsr2h	equ	0xFDA
  5176                           fsr2l	equ	0xFD9
  5177                           status	equ	0xFD8
  5178                           
  5179 ;; *************** function _i2c_master_recv *****************
  5180 ;; Defined at:
  5181 ;;		line 228 in file "../src/my_i2c.c"
  5182 ;; Parameters:    Size  Location     Type
  5183 ;;  length          1    0[COMRAM] unsigned char 
  5184 ;; Auto vars:     Size  Location     Type
  5185 ;;		None
  5186 ;; Return value:  Size  Location     Type
  5187 ;;                  1    wreg      unsigned char 
  5188 ;; Registers used:
  5189 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5190 ;; Tracked objects:
  5191 ;;		On entry : 0/0
  5192 ;;		On exit  : 0/0
  5193 ;;		Unchanged: 0/0
  5194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5195 ;;      Params:         1       0       0       0       0
  5196 ;;      Locals:         0       0       0       0       0
  5197 ;;      Temps:          0       0       0       0       0
  5198 ;;      Totals:         1       0       0       0       0
  5199 ;;Total ram usage:        1 bytes
  5200 ;; Hardware stack levels used:    1
  5201 ;; Hardware stack levels required when called:    5
  5202 ;; This function calls:
  5203 ;;		Nothing
  5204 ;; This function is called by:
  5205 ;;		_timer1_int_handler
  5206 ;; This function uses a non-reentrant model
  5207 ;;
  5208                           
  5209                           	psect	text31
  5210  0015D4                     __ptext31:
  5211                           	opt stack 0
  5212  0015D4                     _i2c_master_recv:
  5213                           	opt stack 19
  5214                           
  5215                           ;my_i2c.c: 230: ic_ptr->buflen = length;
  5216                           
  5217                           ;incstack = 0
  5218                           ;incstack = 0
  5219  0015D4  0100               	movlb	0	; () banked
  5220  0015D6  EE20 F00A          	lfsr	2,10
  5221  0015DA  0100               	movlb	0	; () banked
  5222  0015DC  51AF               	movf	_ic_ptr& (0+255),w,b
  5223  0015DE  26D9               	addwf	fsr2l,f,c
  5224  0015E0  0100               	movlb	0	; () banked
  5225  0015E2  51B0               	movf	(_ic_ptr+1)& (0+255),w,b
  5226  0015E4  22DA               	addwfc	fsr2h,f,c
  5227  0015E6  C001  FFDF         	movff	i2c_master_recv@length,indf2
  5228                           
  5229                           ;my_i2c.c: 231: ic_ptr->status = 0x12;
  5230  0015EA  0100               	movlb	0	; () banked
  5231  0015EC  EE20 F00D          	lfsr	2,13
  5232  0015F0  0100               	movlb	0	; () banked
  5233  0015F2  51AF               	movf	_ic_ptr& (0+255),w,b
  5234  0015F4  26D9               	addwf	fsr2l,f,c
  5235  0015F6  0100               	movlb	0	; () banked
  5236  0015F8  51B0               	movf	(_ic_ptr+1)& (0+255),w,b
  5237  0015FA  22DA               	addwfc	fsr2h,f,c
  5238  0015FC  0E12               	movlw	18
  5239  0015FE  6EDF               	movwf	indf2,c
  5240                           
  5241                           ; BSR set to: 0
  5242                           ;my_i2c.c: 234: SSP1CON2bits.SEN=1;
  5243  001600  80C5               	bsf	4037,0,c	;volatile
  5244  001602  0012               	return	
  5245  001604                     __end_of_i2c_master_recv:
  5246                           	opt stack 0
  5247                           pclatu	equ	0xFFB
  5248                           pclath	equ	0xFFA
  5249                           tblptru	equ	0xFF8
  5250                           tblptrh	equ	0xFF7
  5251                           tblptrl	equ	0xFF6
  5252                           tablat	equ	0xFF5
  5253                           prodh	equ	0xFF4
  5254                           prodl	equ	0xFF3
  5255                           intcon	equ	0xFF2
  5256                           postinc0	equ	0xFEE
  5257                           fsr0h	equ	0xFEA
  5258                           fsr0l	equ	0xFE9
  5259                           wreg	equ	0xFE8
  5260                           indf1	equ	0xFE7
  5261                           fsr1h	equ	0xFE2
  5262                           fsr1l	equ	0xFE1
  5263                           bsr	equ	0xFE0
  5264                           indf2	equ	0xFDF
  5265                           postinc2	equ	0xFDE
  5266                           postdec2	equ	0xFDD
  5267                           fsr2h	equ	0xFDA
  5268                           fsr2l	equ	0xFD9
  5269                           status	equ	0xFD8
  5270                           
  5271 ;; *************** function _InterruptHandlerHigh *****************
  5272 ;; Defined at:
  5273 ;;		line 86 in file "../src/interrupts.c"
  5274 ;; Parameters:    Size  Location     Type
  5275 ;;		None
  5276 ;; Auto vars:     Size  Location     Type
  5277 ;;		None
  5278 ;; Return value:  Size  Location     Type
  5279 ;;		None               void
  5280 ;; Registers used:
  5281 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  5282 ;; Tracked objects:
  5283 ;;		On entry : 0/0
  5284 ;;		On exit  : 0/0
  5285 ;;		Unchanged: 0/0
  5286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5287 ;;      Params:         0       0       0       0       0
  5288 ;;      Locals:         0       0       0       0       0
  5289 ;;      Temps:          0      14       0       0       0
  5290 ;;      Totals:         0      14       0       0       0
  5291 ;;Total ram usage:       14 bytes
  5292 ;; Hardware stack levels used:    1
  5293 ;; Hardware stack levels required when called:    4
  5294 ;; This function calls:
  5295 ;;		_i2c_master_handler
  5296 ;;		_timer0_int_handler
  5297 ;;		_adc_int_handler
  5298 ;;		_uart_recv_int_handler
  5299 ;;		_SleepIfOkay
  5300 ;; This function is called by:
  5301 ;;		Interrupt level 2
  5302 ;; This function uses a non-reentrant model
  5303 ;;
  5304                           
  5305                           	psect	intcode
  5306  000008                     __pintcode:
  5307                           	opt stack 0
  5308  000008                     _InterruptHandlerHigh:
  5309                           	opt stack 19
  5310                           
  5311                           ; BSR set to: 0
  5312                           ;incstack = 0
  5313  000008  CFFA F080          	movff	pclath,??_InterruptHandlerHigh
  5314  00000C  CFFB F081          	movff	pclatu,??_InterruptHandlerHigh+1
  5315  000010  CFE9 F082          	movff	fsr0l,??_InterruptHandlerHigh+2
  5316  000014  EF64  F007         	goto	int_func
  5317                           pclatu	equ	0xFFB
  5318                           pclath	equ	0xFFA
  5319                           tblptru	equ	0xFF8
  5320                           tblptrh	equ	0xFF7
  5321                           tblptrl	equ	0xFF6
  5322                           tablat	equ	0xFF5
  5323                           prodh	equ	0xFF4
  5324                           prodl	equ	0xFF3
  5325                           intcon	equ	0xFF2
  5326                           postinc0	equ	0xFEE
  5327                           fsr0h	equ	0xFEA
  5328                           fsr0l	equ	0xFE9
  5329                           wreg	equ	0xFE8
  5330                           indf1	equ	0xFE7
  5331                           fsr1h	equ	0xFE2
  5332                           fsr1l	equ	0xFE1
  5333                           bsr	equ	0xFE0
  5334                           indf2	equ	0xFDF
  5335                           postinc2	equ	0xFDE
  5336                           postdec2	equ	0xFDD
  5337                           fsr2h	equ	0xFDA
  5338                           fsr2l	equ	0xFD9
  5339                           status	equ	0xFD8
  5340                           
  5341                           	psect	intcode_body
  5342  000EC8                     __pintcode_body:
  5343                           	opt stack 19
  5344  000EC8                     int_func:
  5345                           	opt stack 19
  5346  000EC8  CFEA F083          	movff	fsr0h,??_InterruptHandlerHigh+3
  5347  000ECC  CFE1 F084          	movff	fsr1l,??_InterruptHandlerHigh+4
  5348  000ED0  CFE2 F085          	movff	fsr1h,??_InterruptHandlerHigh+5
  5349  000ED4  CFD9 F086          	movff	fsr2l,??_InterruptHandlerHigh+6
  5350  000ED8  CFDA F087          	movff	fsr2h,??_InterruptHandlerHigh+7
  5351  000EDC  CFF3 F088          	movff	prodl,??_InterruptHandlerHigh+8
  5352  000EE0  CFF4 F089          	movff	prodh,??_InterruptHandlerHigh+9
  5353  000EE4  CFF6 F08A          	movff	tblptrl,??_InterruptHandlerHigh+10
  5354  000EE8  CFF7 F08B          	movff	tblptrh,??_InterruptHandlerHigh+11
  5355  000EEC  CFF8 F08C          	movff	tblptru,??_InterruptHandlerHigh+12
  5356  000EF0  CFF5 F08D          	movff	tablat,??_InterruptHandlerHigh+13
  5357  000EF4                     
  5358                           ;interrupts.c: 91: if (PIR1bits.SSPIF) {
  5359  000EF4  A69E               	btfss	3998,3,c	;volatile
  5360  000EF6  D001               	goto	i2u173_41
  5361  000EF8  D001               	goto	i2u173_40
  5362  000EFA                     i2u173_41:
  5363  000EFA  D004               	goto	i2l2882
  5364  000EFC                     i2u173_40:
  5365  000EFC                     
  5366                           ;interrupts.c: 93: PIR1bits.SSPIF = 0;
  5367  000EFC  969E               	bcf	3998,3,c	;volatile
  5368  000EFE                     
  5369                           ;interrupts.c: 95: i2c_master_handler();
  5370  000EFE  EC4A  F002         	call	_i2c_master_handler	;wreg free
  5371  000F02  D000               	goto	i2l2882
  5372  000F04                     i2l2882:
  5373                           
  5374                           ;interrupts.c: 96: }
  5375                           ;interrupts.c: 99: if (INTCONbits.TMR0IF) {
  5376  000F04  A4F2               	btfss	intcon,2,c	;volatile
  5377  000F06  D001               	goto	i2u174_41
  5378  000F08  D001               	goto	i2u174_40
  5379  000F0A                     i2u174_41:
  5380  000F0A  D004               	goto	i2l2888
  5381  000F0C                     i2u174_40:
  5382  000F0C                     
  5383                           ;interrupts.c: 100: INTCONbits.TMR0IF = 0;
  5384  000F0C  94F2               	bcf	intcon,2,c	;volatile
  5385  000F0E                     
  5386                           ;interrupts.c: 102: timer0_int_handler();
  5387  000F0E  EC51  F009         	call	_timer0_int_handler	;wreg free
  5388  000F12  D000               	goto	i2l2888
  5389  000F14                     i2l2888:
  5390                           
  5391                           ;interrupts.c: 104: }
  5392                           ;interrupts.c: 106: if(PIR1bits.ADIF)
  5393  000F14  AC9E               	btfss	3998,6,c	;volatile
  5394  000F16  D001               	goto	i2u175_41
  5395  000F18  D001               	goto	i2u175_40
  5396  000F1A                     i2u175_41:
  5397  000F1A  D004               	goto	i2l2894
  5398  000F1C                     i2u175_40:
  5399  000F1C                     
  5400                           ;interrupts.c: 107: {
  5401                           ;interrupts.c: 108: PIR1bits.ADIF = 0;
  5402  000F1C  9C9E               	bcf	3998,6,c	;volatile
  5403  000F1E                     
  5404                           ;interrupts.c: 109: adc_int_handler();
  5405  000F1E  EC02  F00B         	call	_adc_int_handler	;wreg free
  5406  000F22  D000               	goto	i2l2894
  5407  000F24                     i2l2894:
  5408                           
  5409                           ;interrupts.c: 111: }
  5410                           ;interrupts.c: 113: if (PIR1bits.RCIF)
  5411  000F24  AA9E               	btfss	3998,5,c	;volatile
  5412  000F26  D001               	goto	i2u176_41
  5413  000F28  D001               	goto	i2u176_40
  5414  000F2A                     i2u176_41:
  5415  000F2A  D005               	goto	i2l2900
  5416  000F2C                     i2u176_40:
  5417  000F2C                     
  5418                           ;interrupts.c: 114: {
  5419                           ;interrupts.c: 116: LATA0 = 0;
  5420  000F2C  9089               	bcf	3977,0,c	;volatile
  5421                           
  5422                           ;interrupts.c: 117: LATA2 = 1;
  5423  000F2E  8489               	bsf	3977,2,c	;volatile
  5424  000F30                     
  5425                           ;interrupts.c: 119: uart_recv_int_handler();
  5426  000F30  ECB2  F006         	call	_uart_recv_int_handler	;wreg free
  5427  000F34  D000               	goto	i2l2900
  5428  000F36                     i2l2900:
  5429                           
  5430                           ;interrupts.c: 123: }
  5431                           ;interrupts.c: 131: SleepIfOkay();
  5432  000F36  EC0C  F00A         	call	_SleepIfOkay	;wreg free
  5433  000F3A  C08D  FFF5         	movff	??_InterruptHandlerHigh+13,tablat
  5434  000F3E  C08C  FFF8         	movff	??_InterruptHandlerHigh+12,tblptru
  5435  000F42  C08B  FFF7         	movff	??_InterruptHandlerHigh+11,tblptrh
  5436  000F46  C08A  FFF6         	movff	??_InterruptHandlerHigh+10,tblptrl
  5437  000F4A  C089  FFF4         	movff	??_InterruptHandlerHigh+9,prodh
  5438  000F4E  C088  FFF3         	movff	??_InterruptHandlerHigh+8,prodl
  5439  000F52  C087  FFDA         	movff	??_InterruptHandlerHigh+7,fsr2h
  5440  000F56  C086  FFD9         	movff	??_InterruptHandlerHigh+6,fsr2l
  5441  000F5A  C085  FFE2         	movff	??_InterruptHandlerHigh+5,fsr1h
  5442  000F5E  C084  FFE1         	movff	??_InterruptHandlerHigh+4,fsr1l
  5443  000F62  C083  FFEA         	movff	??_InterruptHandlerHigh+3,fsr0h
  5444  000F66  C082  FFE9         	movff	??_InterruptHandlerHigh+2,fsr0l
  5445  000F6A  C081  FFFB         	movff	??_InterruptHandlerHigh+1,pclatu
  5446  000F6E  C080  FFFA         	movff	??_InterruptHandlerHigh,pclath
  5447  000F72  0011               	retfie		f
  5448  000F74                     __end_of_InterruptHandlerHigh:
  5449                           	opt stack 0
  5450                           pclatu	equ	0xFFB
  5451                           pclath	equ	0xFFA
  5452                           tblptru	equ	0xFF8
  5453                           tblptrh	equ	0xFF7
  5454                           tblptrl	equ	0xFF6
  5455                           tablat	equ	0xFF5
  5456                           prodh	equ	0xFF4
  5457                           prodl	equ	0xFF3
  5458                           intcon	equ	0xFF2
  5459                           postinc0	equ	0xFEE
  5460                           fsr0h	equ	0xFEA
  5461                           fsr0l	equ	0xFE9
  5462                           wreg	equ	0xFE8
  5463                           indf1	equ	0xFE7
  5464                           fsr1h	equ	0xFE2
  5465                           fsr1l	equ	0xFE1
  5466                           bsr	equ	0xFE0
  5467                           indf2	equ	0xFDF
  5468                           postinc2	equ	0xFDE
  5469                           postdec2	equ	0xFDD
  5470                           fsr2h	equ	0xFDA
  5471                           fsr2l	equ	0xFD9
  5472                           status	equ	0xFD8
  5473                           
  5474 ;; *************** function _SleepIfOkay *****************
  5475 ;; Defined at:
  5476 ;;		line 228 in file "../src/messages.c"
  5477 ;; Parameters:    Size  Location     Type
  5478 ;;		None
  5479 ;; Auto vars:     Size  Location     Type
  5480 ;;		None
  5481 ;; Return value:  Size  Location     Type
  5482 ;;		None               void
  5483 ;; Registers used:
  5484 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5485 ;; Tracked objects:
  5486 ;;		On entry : 0/0
  5487 ;;		On exit  : 0/0
  5488 ;;		Unchanged: 0/0
  5489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5490 ;;      Params:         0       0       0       0       0
  5491 ;;      Locals:         0       0       0       0       0
  5492 ;;      Temps:          0       0       0       0       0
  5493 ;;      Totals:         0       0       0       0       0
  5494 ;;Total ram usage:        0 bytes
  5495 ;; Hardware stack levels used:    1
  5496 ;; Hardware stack levels required when called:    2
  5497 ;; This function calls:
  5498 ;;		_enter_sleep_mode
  5499 ;;		i2_in_high_int
  5500 ;;		i2_in_low_int
  5501 ;;		i2_check_msg
  5502 ;; This function is called by:
  5503 ;;		_InterruptHandlerHigh
  5504 ;; This function uses a non-reentrant model
  5505 ;;
  5506                           
  5507                           	psect	text33
  5508  001418                     __ptext33:
  5509                           	opt stack 0
  5510  001418                     _SleepIfOkay:
  5511                           	opt stack 20
  5512                           
  5513                           ;messages.c: 230: if (MQ_Main_Willing_to_block == 0) {
  5514                           
  5515                           ;incstack = 0
  5516                           ;incstack = 0
  5517  001418  6652               	tstfsz	_MQ_Main_Willing_to_block,c
  5518  00141A  D001               	goto	i2l2246
  5519  00141C  0012               	return	
  5520  00141E                     i2l2246:
  5521                           
  5522                           ;messages.c: 232: }
  5523                           ;messages.c: 235: if (in_low_int()) {
  5524  00141E  EC1A  F00B         	call	i2_in_low_int	;wreg free
  5525  001422  5017               	movf	?i2_in_low_int+1,w,c
  5526  001424  1016               	iorwf	?i2_in_low_int,w,c
  5527  001426  A4D8               	btfss	status,2,c
  5528  001428  0012               	return	
  5529                           
  5530                           ;messages.c: 237: }
  5531                           ;messages.c: 240: if (!in_high_int()) {
  5532                           
  5533                           ;messages.c: 236: return;
  5534  00142A  ECF8  F00B         	call	i2_in_high_int	;wreg free
  5535  00142E  5015               	movf	?i2_in_high_int+1,w,c
  5536  001430  1014               	iorwf	?i2_in_high_int,w,c
  5537  001432  B4D8               	btfsc	status,2,c
  5538  001434  0012               	return	
  5539                           
  5540                           ;messages.c: 242: }
  5541                           ;messages.c: 247: if (check_msg(&ToMainHigh_MQ)) {
  5542                           
  5543                           ;messages.c: 241: return;
  5544  001436  0101               	movlb	1	; () banked
  5545  001438  0E01               	movlw	high _ToMainHigh_MQ
  5546  00143A  6E15               	movwf	?i2_check_msg+1,c
  5547  00143C  0101               	movlb	1	; () banked
  5548  00143E  0E68               	movlw	low _ToMainHigh_MQ
  5549  001440  6E14               	movwf	?i2_check_msg,c
  5550  001442  EC82  F00B         	call	i2_check_msg	;wreg free
  5551  001446  0900               	iorlw	0
  5552  001448  A4D8               	btfss	status,2,c
  5553  00144A  0012               	return	
  5554                           
  5555                           ;messages.c: 249: }
  5556                           ;messages.c: 250: if (check_msg(&ToMainLow_MQ)) {
  5557                           
  5558                           ;messages.c: 248: return;
  5559  00144C  0101               	movlb	1	; () banked
  5560  00144E  0E01               	movlw	high _ToMainLow_MQ
  5561  001450  6E15               	movwf	?i2_check_msg+1,c
  5562  001452  0101               	movlb	1	; () banked
  5563  001454  0E9E               	movlw	low _ToMainLow_MQ
  5564  001456  6E14               	movwf	?i2_check_msg,c
  5565  001458  EC82  F00B         	call	i2_check_msg	;wreg free
  5566  00145C  0900               	iorlw	0
  5567  00145E  B4D8               	btfsc	status,2,c
  5568                           
  5569                           ;messages.c: 252: }
  5570                           ;messages.c: 253: enter_sleep_mode();
  5571                           
  5572                           ;messages.c: 251: return;
  5573  001460  EC0C  F00C         	call	_enter_sleep_mode	;wreg free
  5574  001464  0012               	return	
  5575  001466                     __end_of_SleepIfOkay:
  5576                           	opt stack 0
  5577                           pclatu	equ	0xFFB
  5578                           pclath	equ	0xFFA
  5579                           tblptru	equ	0xFF8
  5580                           tblptrh	equ	0xFF7
  5581                           tblptrl	equ	0xFF6
  5582                           tablat	equ	0xFF5
  5583                           prodh	equ	0xFF4
  5584                           prodl	equ	0xFF3
  5585                           intcon	equ	0xFF2
  5586                           postinc0	equ	0xFEE
  5587                           fsr0h	equ	0xFEA
  5588                           fsr0l	equ	0xFE9
  5589                           wreg	equ	0xFE8
  5590                           indf1	equ	0xFE7
  5591                           fsr1h	equ	0xFE2
  5592                           fsr1l	equ	0xFE1
  5593                           bsr	equ	0xFE0
  5594                           indf2	equ	0xFDF
  5595                           postinc2	equ	0xFDE
  5596                           postdec2	equ	0xFDD
  5597                           fsr2h	equ	0xFDA
  5598                           fsr2l	equ	0xFD9
  5599                           status	equ	0xFD8
  5600                           
  5601 ;; *************** function i2_check_msg *****************
  5602 ;; Defined at:
  5603 ;;		line 222 in file "../src/messages.c"
  5604 ;; Parameters:    Size  Location     Type
  5605 ;;  check_msg       2   19[COMRAM] PTR struct __msg_queue
  5606 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5607 ;; Auto vars:     Size  Location     Type
  5608 ;;		None
  5609 ;; Return value:  Size  Location     Type
  5610 ;;                  1    wreg      unsigned char 
  5611 ;; Registers used:
  5612 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5613 ;; Tracked objects:
  5614 ;;		On entry : 0/0
  5615 ;;		On exit  : 0/0
  5616 ;;		Unchanged: 0/0
  5617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5618 ;;      Params:         2       0       0       0       0
  5619 ;;      Locals:         0       0       0       0       0
  5620 ;;      Temps:          1       0       0       0       0
  5621 ;;      Totals:         3       0       0       0       0
  5622 ;;Total ram usage:        3 bytes
  5623 ;; Hardware stack levels used:    1
  5624 ;; This function calls:
  5625 ;;		Nothing
  5626 ;; This function is called by:
  5627 ;;		_SleepIfOkay
  5628 ;; This function uses a non-reentrant model
  5629 ;;
  5630                           
  5631                           	psect	text34
  5632  001704                     __ptext34:
  5633                           	opt stack 0
  5634  001704                     i2_check_msg:
  5635                           	opt stack 21
  5636                           
  5637                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
  5638                           
  5639                           ;incstack = 0
  5640                           ;incstack = 0
  5641  001704  EE20 F035          	lfsr	2,53
  5642  001708  5014               	movf	i2check_msg@qptr,w,c
  5643  00170A  26D9               	addwf	fsr2l,f,c
  5644  00170C  5015               	movf	i2check_msg@qptr+1,w,c
  5645  00170E  22DA               	addwfc	fsr2h,f,c
  5646  001710  50DF               	movf	indf2,w,c
  5647  001712  6E16               	movwf	??i2_check_msg& (0+255),c
  5648  001714  5016               	movf	??i2_check_msg,w,c
  5649  001716  0D0D               	mullw	13
  5650  001718  50F3               	movf	prodl,w,c
  5651  00171A  2414               	addwf	i2check_msg@qptr,w,c
  5652  00171C  6ED9               	movwf	fsr2l,c
  5653  00171E  50F4               	movf	prodh,w,c
  5654  001720  2015               	addwfc	i2check_msg@qptr+1,w,c
  5655  001722  6EDA               	movwf	fsr2h,c
  5656  001724  50DF               	movf	indf2,w,c
  5657  001726  0012               	return	
  5658  001728                     __end_ofi2_check_msg:
  5659                           	opt stack 0
  5660                           pclatu	equ	0xFFB
  5661                           pclath	equ	0xFFA
  5662                           tblptru	equ	0xFF8
  5663                           tblptrh	equ	0xFF7
  5664                           tblptrl	equ	0xFF6
  5665                           tablat	equ	0xFF5
  5666                           prodh	equ	0xFF4
  5667                           prodl	equ	0xFF3
  5668                           intcon	equ	0xFF2
  5669                           postinc0	equ	0xFEE
  5670                           fsr0h	equ	0xFEA
  5671                           fsr0l	equ	0xFE9
  5672                           wreg	equ	0xFE8
  5673                           indf1	equ	0xFE7
  5674                           fsr1h	equ	0xFE2
  5675                           fsr1l	equ	0xFE1
  5676                           bsr	equ	0xFE0
  5677                           indf2	equ	0xFDF
  5678                           postinc2	equ	0xFDE
  5679                           postdec2	equ	0xFDD
  5680                           fsr2h	equ	0xFDA
  5681                           fsr2l	equ	0xFD9
  5682                           status	equ	0xFD8
  5683                           
  5684 ;; *************** function i2_in_low_int *****************
  5685 ;; Defined at:
  5686 ;;		line 33 in file "../src/interrupts.c"
  5687 ;; Parameters:    Size  Location     Type
  5688 ;;		None
  5689 ;; Auto vars:     Size  Location     Type
  5690 ;;		None
  5691 ;; Return value:  Size  Location     Type
  5692 ;;                  2   21[COMRAM] int 
  5693 ;; Registers used:
  5694 ;;		wreg, status,2, status,0, cstack
  5695 ;; Tracked objects:
  5696 ;;		On entry : 0/0
  5697 ;;		On exit  : 0/0
  5698 ;;		Unchanged: 0/0
  5699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5700 ;;      Params:         2       0       0       0       0
  5701 ;;      Locals:         0       0       0       0       0
  5702 ;;      Temps:          0       0       0       0       0
  5703 ;;      Totals:         2       0       0       0       0
  5704 ;;Total ram usage:        2 bytes
  5705 ;; Hardware stack levels used:    1
  5706 ;; Hardware stack levels required when called:    1
  5707 ;; This function calls:
  5708 ;;		i2_in_high_int
  5709 ;; This function is called by:
  5710 ;;		_SleepIfOkay
  5711 ;; This function uses a non-reentrant model
  5712 ;;
  5713                           
  5714                           	psect	text35
  5715  001634                     __ptext35:
  5716                           	opt stack 0
  5717  001634                     i2_in_low_int:
  5718                           	opt stack 20
  5719                           
  5720                           ;interrupts.c: 34: if (INTCONbits.GIEL == 1) {
  5721                           
  5722                           ;incstack = 0
  5723                           ;incstack = 0
  5724  001634  ACF2               	btfss	intcon,6,c	;volatile
  5725  001636  D005               	goto	i2l2762
  5726                           
  5727                           ;interrupts.c: 35: return (0);
  5728  001638  0E00               	movlw	0
  5729  00163A  6E17               	movwf	?i2_in_low_int+1,c
  5730  00163C  0E00               	movlw	0
  5731  00163E  6E16               	movwf	?i2_in_low_int,c
  5732  001640  0012               	return	
  5733  001642                     i2l2762:
  5734  001642  ECF8  F00B         	call	i2_in_high_int	;wreg free
  5735  001646  5015               	movf	?i2_in_high_int+1,w,c
  5736  001648  1014               	iorwf	?i2_in_high_int,w,c
  5737  00164A  B4D8               	btfsc	status,2,c
  5738  00164C  D005               	goto	i2l2770
  5739                           
  5740                           ;interrupts.c: 37: return (0);
  5741  00164E  0E00               	movlw	0
  5742  001650  6E17               	movwf	?i2_in_low_int+1,c
  5743  001652  0E00               	movlw	0
  5744  001654  6E16               	movwf	?i2_in_low_int,c
  5745  001656  0012               	return	
  5746  001658                     i2l2770:
  5747                           
  5748                           ;interrupts.c: 39: return (1);
  5749  001658  0E00               	movlw	0
  5750  00165A  6E17               	movwf	?i2_in_low_int+1,c
  5751  00165C  0E01               	movlw	1
  5752  00165E  6E16               	movwf	?i2_in_low_int,c
  5753  001660  0012               	return	
  5754  001662                     __end_ofi2_in_low_int:
  5755                           	opt stack 0
  5756                           pclatu	equ	0xFFB
  5757                           pclath	equ	0xFFA
  5758                           tblptru	equ	0xFF8
  5759                           tblptrh	equ	0xFF7
  5760                           tblptrl	equ	0xFF6
  5761                           tablat	equ	0xFF5
  5762                           prodh	equ	0xFF4
  5763                           prodl	equ	0xFF3
  5764                           intcon	equ	0xFF2
  5765                           postinc0	equ	0xFEE
  5766                           fsr0h	equ	0xFEA
  5767                           fsr0l	equ	0xFE9
  5768                           wreg	equ	0xFE8
  5769                           indf1	equ	0xFE7
  5770                           fsr1h	equ	0xFE2
  5771                           fsr1l	equ	0xFE1
  5772                           bsr	equ	0xFE0
  5773                           indf2	equ	0xFDF
  5774                           postinc2	equ	0xFDE
  5775                           postdec2	equ	0xFDD
  5776                           fsr2h	equ	0xFDA
  5777                           fsr2l	equ	0xFD9
  5778                           status	equ	0xFD8
  5779                           
  5780 ;; *************** function i2_in_high_int *****************
  5781 ;; Defined at:
  5782 ;;		line 25 in file "../src/interrupts.c"
  5783 ;; Parameters:    Size  Location     Type
  5784 ;;		None
  5785 ;; Auto vars:     Size  Location     Type
  5786 ;;		None
  5787 ;; Return value:  Size  Location     Type
  5788 ;;                  2   19[COMRAM] int 
  5789 ;; Registers used:
  5790 ;;		wreg, status,2
  5791 ;; Tracked objects:
  5792 ;;		On entry : 0/0
  5793 ;;		On exit  : 0/0
  5794 ;;		Unchanged: 0/0
  5795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5796 ;;      Params:         2       0       0       0       0
  5797 ;;      Locals:         0       0       0       0       0
  5798 ;;      Temps:          0       0       0       0       0
  5799 ;;      Totals:         2       0       0       0       0
  5800 ;;Total ram usage:        2 bytes
  5801 ;; Hardware stack levels used:    1
  5802 ;; This function calls:
  5803 ;;		Nothing
  5804 ;; This function is called by:
  5805 ;;		_SleepIfOkay
  5806 ;;		i2_in_low_int
  5807 ;; This function uses a non-reentrant model
  5808 ;;
  5809                           
  5810                           	psect	text36
  5811  0017F0                     __ptext36:
  5812                           	opt stack 0
  5813  0017F0                     i2_in_high_int:
  5814                           	opt stack 20
  5815                           
  5816                           ;interrupts.c: 26: return (!INTCONbits.GIEH);
  5817                           
  5818                           ;incstack = 0
  5819                           ;incstack = 0
  5820  0017F0  0E00               	movlw	0
  5821  0017F2  AEF2               	btfss	intcon,7,c	;volatile
  5822  0017F4  0E01               	movlw	1
  5823  0017F6  6E14               	movwf	?i2_in_high_int,c
  5824  0017F8  6A15               	clrf	?i2_in_high_int+1,c
  5825  0017FA  0012               	return	
  5826  0017FC                     __end_ofi2_in_high_int:
  5827                           	opt stack 0
  5828                           pclatu	equ	0xFFB
  5829                           pclath	equ	0xFFA
  5830                           tblptru	equ	0xFF8
  5831                           tblptrh	equ	0xFF7
  5832                           tblptrl	equ	0xFF6
  5833                           tablat	equ	0xFF5
  5834                           prodh	equ	0xFF4
  5835                           prodl	equ	0xFF3
  5836                           intcon	equ	0xFF2
  5837                           postinc0	equ	0xFEE
  5838                           fsr0h	equ	0xFEA
  5839                           fsr0l	equ	0xFE9
  5840                           wreg	equ	0xFE8
  5841                           indf1	equ	0xFE7
  5842                           fsr1h	equ	0xFE2
  5843                           fsr1l	equ	0xFE1
  5844                           bsr	equ	0xFE0
  5845                           indf2	equ	0xFDF
  5846                           postinc2	equ	0xFDE
  5847                           postdec2	equ	0xFDD
  5848                           fsr2h	equ	0xFDA
  5849                           fsr2l	equ	0xFD9
  5850                           status	equ	0xFD8
  5851                           
  5852 ;; *************** function _enter_sleep_mode *****************
  5853 ;; Defined at:
  5854 ;;		line 202 in file "../src/messages.c"
  5855 ;; Parameters:    Size  Location     Type
  5856 ;;		None
  5857 ;; Auto vars:     Size  Location     Type
  5858 ;;		None
  5859 ;; Return value:  Size  Location     Type
  5860 ;;		None               void
  5861 ;; Registers used:
  5862 ;;		None
  5863 ;; Tracked objects:
  5864 ;;		On entry : 0/0
  5865 ;;		On exit  : 0/0
  5866 ;;		Unchanged: 0/0
  5867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5868 ;;      Params:         0       0       0       0       0
  5869 ;;      Locals:         0       0       0       0       0
  5870 ;;      Temps:          0       0       0       0       0
  5871 ;;      Totals:         0       0       0       0       0
  5872 ;;Total ram usage:        0 bytes
  5873 ;; Hardware stack levels used:    1
  5874 ;; This function calls:
  5875 ;;		Nothing
  5876 ;; This function is called by:
  5877 ;;		_SleepIfOkay
  5878 ;; This function uses a non-reentrant model
  5879 ;;
  5880                           
  5881                           	psect	text37
  5882  001818                     __ptext37:
  5883                           	opt stack 0
  5884  001818                     _enter_sleep_mode:
  5885                           	opt stack 21
  5886                           
  5887                           ;messages.c: 204: OSCCONbits.IDLEN = 1;
  5888                           
  5889                           ;incstack = 0
  5890                           ;incstack = 0
  5891  001818  8ED3               	bsf	4051,7,c	;volatile
  5892  00181A  0003               	sleep		;# 
  5893  00181C  0012               	return	
  5894  00181E                     __end_of_enter_sleep_mode:
  5895                           	opt stack 0
  5896                           pclatu	equ	0xFFB
  5897                           pclath	equ	0xFFA
  5898                           tblptru	equ	0xFF8
  5899                           tblptrh	equ	0xFF7
  5900                           tblptrl	equ	0xFF6
  5901                           tablat	equ	0xFF5
  5902                           prodh	equ	0xFF4
  5903                           prodl	equ	0xFF3
  5904                           intcon	equ	0xFF2
  5905                           postinc0	equ	0xFEE
  5906                           fsr0h	equ	0xFEA
  5907                           fsr0l	equ	0xFE9
  5908                           wreg	equ	0xFE8
  5909                           indf1	equ	0xFE7
  5910                           fsr1h	equ	0xFE2
  5911                           fsr1l	equ	0xFE1
  5912                           bsr	equ	0xFE0
  5913                           indf2	equ	0xFDF
  5914                           postinc2	equ	0xFDE
  5915                           postdec2	equ	0xFDD
  5916                           fsr2h	equ	0xFDA
  5917                           fsr2l	equ	0xFD9
  5918                           status	equ	0xFD8
  5919                           
  5920 ;; *************** function _uart_recv_int_handler *****************
  5921 ;; Defined at:
  5922 ;;		line 11 in file "../src/my_uart.c"
  5923 ;; Parameters:    Size  Location     Type
  5924 ;;		None
  5925 ;; Auto vars:     Size  Location     Type
  5926 ;;		None
  5927 ;; Return value:  Size  Location     Type
  5928 ;;		None               void
  5929 ;; Registers used:
  5930 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5931 ;; Tracked objects:
  5932 ;;		On entry : 0/0
  5933 ;;		On exit  : 0/0
  5934 ;;		Unchanged: 0/0
  5935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5936 ;;      Params:         0       0       0       0       0
  5937 ;;      Locals:         0       0       0       0       0
  5938 ;;      Temps:          2       0       0       0       0
  5939 ;;      Totals:         2       0       0       0       0
  5940 ;;Total ram usage:        2 bytes
  5941 ;; Hardware stack levels used:    1
  5942 ;; Hardware stack levels required when called:    3
  5943 ;; This function calls:
  5944 ;;		_ToMainLow_sendmsg
  5945 ;;		_ReadUSART
  5946 ;; This function is called by:
  5947 ;;		_InterruptHandlerHigh
  5948 ;; This function uses a non-reentrant model
  5949 ;;
  5950                           
  5951                           	psect	text38
  5952  000D64                     __ptext38:
  5953                           	opt stack 0
  5954  000D64                     _uart_recv_int_handler:
  5955                           	opt stack 19
  5956                           
  5957                           ;my_uart.c: 12: if ((PIR1bits.RCIF)) {
  5958                           
  5959                           ;incstack = 0
  5960                           ;incstack = 0
  5961  000D64  AA9E               	btfss	3998,5,c	;volatile
  5962  000D66  D043               	goto	i2l2998
  5963                           
  5964                           ;my_uart.c: 13: uc_ptr->inbuffer[uc_ptr->inbuflen] = ReadUSART();
  5965  000D68  EE20 F00D          	lfsr	2,13
  5966  000D6C  5062               	movf	_uc_ptr,w,c
  5967  000D6E  26D9               	addwf	fsr2l,f,c
  5968  000D70  5063               	movf	_uc_ptr+1,w,c
  5969  000D72  22DA               	addwfc	fsr2h,f,c
  5970  000D74  50DF               	movf	indf2,w,c
  5971  000D76  6E2E               	movwf	??_uart_recv_int_handler& (0+255),c
  5972  000D78  502E               	movf	??_uart_recv_int_handler,w,c
  5973  000D7A  0D01               	mullw	1
  5974  000D7C  0E07               	movlw	7
  5975  000D7E  26F3               	addwf	prodl,f,c
  5976  000D80  0E00               	movlw	0
  5977  000D82  22F4               	addwfc	prodh,f,c
  5978  000D84  50F3               	movf	prodl,w,c
  5979  000D86  2462               	addwf	_uc_ptr,w,c
  5980  000D88  6ED9               	movwf	fsr2l,c
  5981  000D8A  50F4               	movf	prodh,w,c
  5982  000D8C  2063               	addwfc	_uc_ptr+1,w,c
  5983  000D8E  6EDA               	movwf	fsr2h,c
  5984  000D90  ECB6  F00B         	call	_ReadUSART	;wreg free
  5985  000D94  6EDF               	movwf	indf2,c
  5986                           
  5987                           ;my_uart.c: 14: uc_ptr->inbuflen++;
  5988  000D96  EE20 F00D          	lfsr	2,13
  5989  000D9A  5062               	movf	_uc_ptr,w,c
  5990  000D9C  26D9               	addwf	fsr2l,f,c
  5991  000D9E  5063               	movf	_uc_ptr+1,w,c
  5992  000DA0  22DA               	addwfc	fsr2h,f,c
  5993  000DA2  2ADF               	incf	indf2,f,c
  5994                           
  5995                           ;my_uart.c: 16: if (uc_ptr->inbuflen == 3) {
  5996  000DA4  EE20 F00D          	lfsr	2,13
  5997  000DA8  5062               	movf	_uc_ptr,w,c
  5998  000DAA  26D9               	addwf	fsr2l,f,c
  5999  000DAC  5063               	movf	_uc_ptr+1,w,c
  6000  000DAE  22DA               	addwfc	fsr2h,f,c
  6001  000DB0  0E03               	movlw	3
  6002  000DB2  62DF               	cpfseq	indf2,c
  6003  000DB4  D01C               	goto	i2l2998
  6004                           
  6005                           ;my_uart.c: 17: ToMainLow_sendmsg(uc_ptr->inbuflen, 60, (void *) uc_ptr->inbuffer);
  6006  000DB6  EE20 F00D          	lfsr	2,13
  6007  000DBA  5062               	movf	_uc_ptr,w,c
  6008  000DBC  26D9               	addwf	fsr2l,f,c
  6009  000DBE  5063               	movf	_uc_ptr+1,w,c
  6010  000DC0  22DA               	addwfc	fsr2h,f,c
  6011  000DC2  50DF               	movf	indf2,w,c
  6012  000DC4  6E2A               	movwf	?_ToMainLow_sendmsg,c
  6013  000DC6  6E2E               	movwf	??_uart_recv_int_handler& (0+255),c
  6014  000DC8  0E3C               	movlw	60
  6015  000DCA  6E2B               	movwf	?_ToMainLow_sendmsg+1,c
  6016  000DCC  502E               	movf	??_uart_recv_int_handler& (0+255),w,c
  6017  000DCE  0E07               	movlw	7
  6018  000DD0  2462               	addwf	_uc_ptr,w,c
  6019  000DD2  6E2C               	movwf	?_ToMainLow_sendmsg+2,c
  6020  000DD4  0E00               	movlw	0
  6021  000DD6  2063               	addwfc	_uc_ptr+1,w,c
  6022  000DD8  6E2D               	movwf	?_ToMainLow_sendmsg+3,c
  6023  000DDA  EC94  F00B         	call	_ToMainLow_sendmsg	;wreg free
  6024                           
  6025                           ;my_uart.c: 18: uc_ptr->inbuflen = 0;
  6026  000DDE  EE20 F00D          	lfsr	2,13
  6027  000DE2  5062               	movf	_uc_ptr,w,c
  6028  000DE4  26D9               	addwf	fsr2l,f,c
  6029  000DE6  5063               	movf	_uc_ptr+1,w,c
  6030  000DE8  22DA               	addwfc	fsr2h,f,c
  6031  000DEA  0E00               	movlw	0
  6032  000DEC  6EDF               	movwf	indf2,c
  6033  000DEE                     i2l2998:
  6034                           
  6035                           ;my_uart.c: 19: }
  6036                           ;my_uart.c: 20: }
  6037                           ;my_uart.c: 21: if (USART_Status.OVERRUN_ERROR == 1) {
  6038  000DEE  A653               	btfss	_USART_Status,3,c
  6039  000DF0  D010               	goto	i2l3004
  6040                           
  6041                           ;my_uart.c: 24: RCSTAbits.CREN = 0;
  6042  000DF2  98AB               	bcf	4011,4,c	;volatile
  6043                           
  6044                           ;my_uart.c: 25: RCSTAbits.CREN = 1;
  6045  000DF4  88AB               	bsf	4011,4,c	;volatile
  6046                           
  6047                           ;my_uart.c: 26: ToMainLow_sendmsg(0, 30, (void *) 0);
  6048  000DF6  6E2E               	movwf	??_uart_recv_int_handler& (0+255),c
  6049  000DF8  0E00               	movlw	0
  6050  000DFA  6E2A               	movwf	?_ToMainLow_sendmsg,c
  6051  000DFC  502E               	movf	??_uart_recv_int_handler& (0+255),w,c
  6052  000DFE  6E2F               	movwf	(??_uart_recv_int_handler+1)& (0+255),c
  6053  000E00  0E1E               	movlw	30
  6054  000E02  6E2B               	movwf	?_ToMainLow_sendmsg+1,c
  6055  000E04  502F               	movf	(??_uart_recv_int_handler+1)& (0+255),w,c
  6056  000E06  0E00               	movlw	0
  6057  000E08  6E2D               	movwf	?_ToMainLow_sendmsg+3,c
  6058  000E0A  0E00               	movlw	0
  6059  000E0C  6E2C               	movwf	?_ToMainLow_sendmsg+2,c
  6060  000E0E  EC94  F00B         	call	_ToMainLow_sendmsg	;wreg free
  6061  000E12                     i2l3004:
  6062                           
  6063                           ;my_uart.c: 27: }
  6064                           ;my_uart.c: 29: LATA0 = 1;
  6065  000E12  8089               	bsf	3977,0,c	;volatile
  6066                           
  6067                           ;my_uart.c: 30: LATA2 = 0;
  6068  000E14  9489               	bcf	3977,2,c	;volatile
  6069  000E16  0012               	return	
  6070  000E18                     __end_of_uart_recv_int_handler:
  6071                           	opt stack 0
  6072                           pclatu	equ	0xFFB
  6073                           pclath	equ	0xFFA
  6074                           tblptru	equ	0xFF8
  6075                           tblptrh	equ	0xFF7
  6076                           tblptrl	equ	0xFF6
  6077                           tablat	equ	0xFF5
  6078                           prodh	equ	0xFF4
  6079                           prodl	equ	0xFF3
  6080                           intcon	equ	0xFF2
  6081                           postinc0	equ	0xFEE
  6082                           fsr0h	equ	0xFEA
  6083                           fsr0l	equ	0xFE9
  6084                           wreg	equ	0xFE8
  6085                           indf1	equ	0xFE7
  6086                           fsr1h	equ	0xFE2
  6087                           fsr1l	equ	0xFE1
  6088                           bsr	equ	0xFE0
  6089                           indf2	equ	0xFDF
  6090                           postinc2	equ	0xFDE
  6091                           postdec2	equ	0xFDD
  6092                           fsr2h	equ	0xFDA
  6093                           fsr2l	equ	0xFD9
  6094                           status	equ	0xFD8
  6095                           
  6096 ;; *************** function _ReadUSART *****************
  6097 ;; Defined at:
  6098 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic18\plib\USART\uread.c"
  6099 ;; Parameters:    Size  Location     Type
  6100 ;;		None
  6101 ;; Auto vars:     Size  Location     Type
  6102 ;;  data            1   19[COMRAM] unsigned char 
  6103 ;; Return value:  Size  Location     Type
  6104 ;;                  1    wreg      unsigned char 
  6105 ;; Registers used:
  6106 ;;		wreg, status,2, status,0
  6107 ;; Tracked objects:
  6108 ;;		On entry : 0/0
  6109 ;;		On exit  : 0/0
  6110 ;;		Unchanged: 0/0
  6111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6112 ;;      Params:         0       0       0       0       0
  6113 ;;      Locals:         1       0       0       0       0
  6114 ;;      Temps:          0       0       0       0       0
  6115 ;;      Totals:         1       0       0       0       0
  6116 ;;Total ram usage:        1 bytes
  6117 ;; Hardware stack levels used:    1
  6118 ;; This function calls:
  6119 ;;		Nothing
  6120 ;; This function is called by:
  6121 ;;		_uart_recv_int_handler
  6122 ;; This function uses a non-reentrant model
  6123 ;;
  6124                           
  6125                           	psect	text39
  6126  00176C                     __ptext39:
  6127                           	opt stack 0
  6128  00176C                     _ReadUSART:
  6129                           	opt stack 21
  6130                           
  6131                           ;incstack = 0
  6132                           ;incstack = 0
  6133  00176C  0EF2               	movlw	242
  6134  00176E  1653               	andwf	_USART_Status,f,c
  6135  001770  ACAB               	btfss	4011,6,c	;volatile
  6136  001772  D003               	goto	i2l575
  6137  001774  9053               	bcf	_USART_Status,0,c
  6138  001776  B0AB               	btfsc	4011,0,c	;volatile
  6139  001778  8053               	bsf	_USART_Status,0,c
  6140  00177A                     i2l575:
  6141  00177A  B4AB               	btfsc	4011,2,c	;volatile
  6142  00177C  8453               	bsf	_USART_Status,2,c
  6143  00177E  B2AB               	btfsc	4011,1,c	;volatile
  6144  001780  8653               	bsf	_USART_Status,3,c
  6145  001782  CFAE F014          	movff	4014,ReadUSART@data	;volatile
  6146  001786  5014               	movf	ReadUSART@data,w,c
  6147  001788  0012               	return	
  6148  00178A                     __end_of_ReadUSART:
  6149                           	opt stack 0
  6150                           pclatu	equ	0xFFB
  6151                           pclath	equ	0xFFA
  6152                           tblptru	equ	0xFF8
  6153                           tblptrh	equ	0xFF7
  6154                           tblptrl	equ	0xFF6
  6155                           tablat	equ	0xFF5
  6156                           prodh	equ	0xFF4
  6157                           prodl	equ	0xFF3
  6158                           intcon	equ	0xFF2
  6159                           postinc0	equ	0xFEE
  6160                           fsr0h	equ	0xFEA
  6161                           fsr0l	equ	0xFE9
  6162                           wreg	equ	0xFE8
  6163                           indf1	equ	0xFE7
  6164                           fsr1h	equ	0xFE2
  6165                           fsr1l	equ	0xFE1
  6166                           bsr	equ	0xFE0
  6167                           indf2	equ	0xFDF
  6168                           postinc2	equ	0xFDE
  6169                           postdec2	equ	0xFDD
  6170                           fsr2h	equ	0xFDA
  6171                           fsr2l	equ	0xFD9
  6172                           status	equ	0xFD8
  6173                           
  6174 ;; *************** function _ToMainLow_sendmsg *****************
  6175 ;; Defined at:
  6176 ;;		line 103 in file "../src/messages.c"
  6177 ;; Parameters:    Size  Location     Type
  6178 ;;  length          1   41[COMRAM] unsigned char 
  6179 ;;  msgtype         1   42[COMRAM] unsigned char 
  6180 ;;  data            2   43[COMRAM] PTR void 
  6181 ;;		 -> NULL(0), main@uc(16), 
  6182 ;; Auto vars:     Size  Location     Type
  6183 ;;		None
  6184 ;; Return value:  Size  Location     Type
  6185 ;;                  1    wreg      char 
  6186 ;; Registers used:
  6187 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6188 ;; Tracked objects:
  6189 ;;		On entry : 0/0
  6190 ;;		On exit  : 0/0
  6191 ;;		Unchanged: 0/0
  6192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6193 ;;      Params:         4       0       0       0       0
  6194 ;;      Locals:         0       0       0       0       0
  6195 ;;      Temps:          0       0       0       0       0
  6196 ;;      Totals:         4       0       0       0       0
  6197 ;;Total ram usage:        4 bytes
  6198 ;; Hardware stack levels used:    1
  6199 ;; Hardware stack levels required when called:    2
  6200 ;; This function calls:
  6201 ;;		_send_msg
  6202 ;; This function is called by:
  6203 ;;		_uart_recv_int_handler
  6204 ;; This function uses a non-reentrant model
  6205 ;;
  6206                           
  6207                           	psect	text40
  6208  001728                     __ptext40:
  6209                           	opt stack 0
  6210  001728                     _ToMainLow_sendmsg:
  6211                           	opt stack 19
  6212                           
  6213                           ;messages.c: 109: return (send_msg(&ToMainLow_MQ, length, msgtype, data));
  6214                           ;	Return value of _ToMainLow_sendmsg is never used
  6215                           
  6216                           ;incstack = 0
  6217                           ;incstack = 0
  6218  001728  0101               	movlb	1	; () banked
  6219  00172A  0E01               	movlw	high _ToMainLow_MQ
  6220  00172C  6E1F               	movwf	?_send_msg+1,c
  6221  00172E  0101               	movlb	1	; () banked
  6222  001730  0E9E               	movlw	low _ToMainLow_MQ
  6223  001732  6E1E               	movwf	?_send_msg,c
  6224  001734  C02A  F020         	movff	ToMainLow_sendmsg@length,?_send_msg+2
  6225  001738  C02B  F021         	movff	ToMainLow_sendmsg@msgtype,?_send_msg+3
  6226  00173C  C02C  F022         	movff	ToMainLow_sendmsg@data,?_send_msg+4
  6227  001740  C02D  F023         	movff	ToMainLow_sendmsg@data+1,?_send_msg+5
  6228  001744  ECBA  F007         	call	_send_msg	;wreg free
  6229  001748  0012               	return	
  6230  00174A                     __end_of_ToMainLow_sendmsg:
  6231                           	opt stack 0
  6232                           pclatu	equ	0xFFB
  6233                           pclath	equ	0xFFA
  6234                           tblptru	equ	0xFF8
  6235                           tblptrh	equ	0xFF7
  6236                           tblptrl	equ	0xFF6
  6237                           tablat	equ	0xFF5
  6238                           prodh	equ	0xFF4
  6239                           prodl	equ	0xFF3
  6240                           intcon	equ	0xFF2
  6241                           postinc0	equ	0xFEE
  6242                           fsr0h	equ	0xFEA
  6243                           fsr0l	equ	0xFE9
  6244                           wreg	equ	0xFE8
  6245                           indf1	equ	0xFE7
  6246                           fsr1h	equ	0xFE2
  6247                           fsr1l	equ	0xFE1
  6248                           bsr	equ	0xFE0
  6249                           indf2	equ	0xFDF
  6250                           postinc2	equ	0xFDE
  6251                           postdec2	equ	0xFDD
  6252                           fsr2h	equ	0xFDA
  6253                           fsr2l	equ	0xFD9
  6254                           status	equ	0xFD8
  6255                           
  6256 ;; *************** function _adc_int_handler *****************
  6257 ;; Defined at:
  6258 ;;		line 78 in file "../src/user_interrupts.c"
  6259 ;; Parameters:    Size  Location     Type
  6260 ;;		None
  6261 ;; Auto vars:     Size  Location     Type
  6262 ;;		None
  6263 ;; Return value:  Size  Location     Type
  6264 ;;		None               void
  6265 ;; Registers used:
  6266 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  6267 ;; Tracked objects:
  6268 ;;		On entry : 0/0
  6269 ;;		On exit  : 0/0
  6270 ;;		Unchanged: 0/0
  6271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6272 ;;      Params:         0       0       0       0       0
  6273 ;;      Locals:         0       0       0       0       0
  6274 ;;      Temps:          0       0       0       0       0
  6275 ;;      Totals:         0       0       0       0       0
  6276 ;;Total ram usage:        0 bytes
  6277 ;; Hardware stack levels used:    1
  6278 ;; Hardware stack levels required when called:    1
  6279 ;; This function calls:
  6280 ;;		_ReadADC
  6281 ;;		_CloseTimer1
  6282 ;; This function is called by:
  6283 ;;		_InterruptHandlerHigh
  6284 ;; This function uses a non-reentrant model
  6285 ;;
  6286                           
  6287                           	psect	text41
  6288  001604                     __ptext41:
  6289                           	opt stack 0
  6290  001604                     _adc_int_handler:
  6291                           	opt stack 21
  6292                           
  6293                           ;user_interrupts.c: 80: ADCValue = ReadADC();
  6294                           
  6295                           ;incstack = 0
  6296                           ;incstack = 0
  6297  001604  EC03  F00C         	call	_ReadADC	;wreg free
  6298  001608  C014  F048         	movff	?_ReadADC,_ADCValue
  6299  00160C  C015  F049         	movff	?_ReadADC+1,_ADCValue+1
  6300                           
  6301                           ;user_interrupts.c: 87: if(counter2 < 299)
  6302  001610  504D               	movf	_counter2+1,w,c
  6303  001612  0A80               	xorlw	128
  6304  001614  0F7F               	addlw	-129
  6305  001616  0E2B               	movlw	43
  6306  001618  B4D8               	btfsc	status,2,c
  6307  00161A  5C4C               	subwf	_counter2,w,c
  6308  00161C  B0D8               	btfsc	status,0,c
  6309  00161E  D003               	goto	i2l1362
  6310                           
  6311                           ;user_interrupts.c: 88: counter2++;
  6312  001620  4A4C               	infsnz	_counter2,f,c
  6313  001622  2A4D               	incf	_counter2+1,f,c
  6314  001624  0012               	return	
  6315  001626                     i2l1362:
  6316                           
  6317                           ;user_interrupts.c: 89: else
  6318                           ;user_interrupts.c: 90: {
  6319                           ;user_interrupts.c: 91: counter2 = 0;
  6320  001626  0E00               	movlw	0
  6321  001628  6E4D               	movwf	_counter2+1,c
  6322  00162A  0E00               	movlw	0
  6323  00162C  6E4C               	movwf	_counter2,c
  6324                           
  6325                           ;user_interrupts.c: 92: CloseTimer1();
  6326  00162E  EC0F  F00C         	call	_CloseTimer1	;wreg free
  6327  001632  0012               	return	
  6328  001634                     __end_of_adc_int_handler:
  6329                           	opt stack 0
  6330                           pclatu	equ	0xFFB
  6331                           pclath	equ	0xFFA
  6332                           tblptru	equ	0xFF8
  6333                           tblptrh	equ	0xFF7
  6334                           tblptrl	equ	0xFF6
  6335                           tablat	equ	0xFF5
  6336                           prodh	equ	0xFF4
  6337                           prodl	equ	0xFF3
  6338                           intcon	equ	0xFF2
  6339                           postinc0	equ	0xFEE
  6340                           fsr0h	equ	0xFEA
  6341                           fsr0l	equ	0xFE9
  6342                           wreg	equ	0xFE8
  6343                           indf1	equ	0xFE7
  6344                           fsr1h	equ	0xFE2
  6345                           fsr1l	equ	0xFE1
  6346                           bsr	equ	0xFE0
  6347                           indf2	equ	0xFDF
  6348                           postinc2	equ	0xFDE
  6349                           postdec2	equ	0xFDD
  6350                           fsr2h	equ	0xFDA
  6351                           fsr2l	equ	0xFD9
  6352                           status	equ	0xFD8
  6353                           
  6354 ;; *************** function _CloseTimer1 *****************
  6355 ;; Defined at:
  6356 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic18\plib\Timers\t1close.c"
  6357 ;; Parameters:    Size  Location     Type
  6358 ;;		None
  6359 ;; Auto vars:     Size  Location     Type
  6360 ;;		None
  6361 ;; Return value:  Size  Location     Type
  6362 ;;		None               void
  6363 ;; Registers used:
  6364 ;;		None
  6365 ;; Tracked objects:
  6366 ;;		On entry : 0/0
  6367 ;;		On exit  : 0/0
  6368 ;;		Unchanged: 0/0
  6369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6370 ;;      Params:         0       0       0       0       0
  6371 ;;      Locals:         0       0       0       0       0
  6372 ;;      Temps:          0       0       0       0       0
  6373 ;;      Totals:         0       0       0       0       0
  6374 ;;Total ram usage:        0 bytes
  6375 ;; Hardware stack levels used:    1
  6376 ;; This function calls:
  6377 ;;		Nothing
  6378 ;; This function is called by:
  6379 ;;		_adc_int_handler
  6380 ;; This function uses a non-reentrant model
  6381 ;;
  6382                           
  6383                           	psect	text42
  6384  00181E                     __ptext42:
  6385                           	opt stack 0
  6386  00181E                     _CloseTimer1:
  6387                           	opt stack 21
  6388                           
  6389                           ;incstack = 0
  6390                           ;incstack = 0
  6391  00181E  90CD               	bcf	4045,0,c	;volatile
  6392  001820  909D               	bcf	3997,0,c	;volatile
  6393  001822  0012               	return	
  6394  001824                     __end_of_CloseTimer1:
  6395                           	opt stack 0
  6396                           pclatu	equ	0xFFB
  6397                           pclath	equ	0xFFA
  6398                           tblptru	equ	0xFF8
  6399                           tblptrh	equ	0xFF7
  6400                           tblptrl	equ	0xFF6
  6401                           tablat	equ	0xFF5
  6402                           prodh	equ	0xFF4
  6403                           prodl	equ	0xFF3
  6404                           intcon	equ	0xFF2
  6405                           postinc0	equ	0xFEE
  6406                           fsr0h	equ	0xFEA
  6407                           fsr0l	equ	0xFE9
  6408                           wreg	equ	0xFE8
  6409                           indf1	equ	0xFE7
  6410                           fsr1h	equ	0xFE2
  6411                           fsr1l	equ	0xFE1
  6412                           bsr	equ	0xFE0
  6413                           indf2	equ	0xFDF
  6414                           postinc2	equ	0xFDE
  6415                           postdec2	equ	0xFDD
  6416                           fsr2h	equ	0xFDA
  6417                           fsr2l	equ	0xFD9
  6418                           status	equ	0xFD8
  6419                           
  6420 ;; *************** function _ReadADC *****************
  6421 ;; Defined at:
  6422 ;;		line 25 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic18\plib\ADC\adcread.c"
  6423 ;; Parameters:    Size  Location     Type
  6424 ;;		None
  6425 ;; Auto vars:     Size  Location     Type
  6426 ;;		None
  6427 ;; Return value:  Size  Location     Type
  6428 ;;                  2   19[COMRAM] int 
  6429 ;; Registers used:
  6430 ;;		wreg, status,2
  6431 ;; Tracked objects:
  6432 ;;		On entry : 0/0
  6433 ;;		On exit  : 0/0
  6434 ;;		Unchanged: 0/0
  6435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6436 ;;      Params:         2       0       0       0       0
  6437 ;;      Locals:         0       0       0       0       0
  6438 ;;      Temps:          0       0       0       0       0
  6439 ;;      Totals:         2       0       0       0       0
  6440 ;;Total ram usage:        2 bytes
  6441 ;; Hardware stack levels used:    1
  6442 ;; This function calls:
  6443 ;;		Nothing
  6444 ;; This function is called by:
  6445 ;;		_adc_int_handler
  6446 ;; This function uses a non-reentrant model
  6447 ;;
  6448                           
  6449                           	psect	text43
  6450  001806                     __ptext43:
  6451                           	opt stack 0
  6452  001806                     _ReadADC:
  6453                           	opt stack 21
  6454                           
  6455                           ;incstack = 0
  6456                           ;incstack = 0
  6457  001806  50C4               	movf	4036,w,c	;volatile
  6458  001808  6E15               	movwf	?_ReadADC+1,c
  6459  00180A  50C3               	movf	4035,w,c	;volatile
  6460  00180C  6E14               	movwf	?_ReadADC,c
  6461  00180E  0012               	return	
  6462  001810                     __end_of_ReadADC:
  6463                           	opt stack 0
  6464                           pclatu	equ	0xFFB
  6465                           pclath	equ	0xFFA
  6466                           tblptru	equ	0xFF8
  6467                           tblptrh	equ	0xFF7
  6468                           tblptrl	equ	0xFF6
  6469                           tablat	equ	0xFF5
  6470                           prodh	equ	0xFF4
  6471                           prodl	equ	0xFF3
  6472                           intcon	equ	0xFF2
  6473                           postinc0	equ	0xFEE
  6474                           fsr0h	equ	0xFEA
  6475                           fsr0l	equ	0xFE9
  6476                           wreg	equ	0xFE8
  6477                           indf1	equ	0xFE7
  6478                           fsr1h	equ	0xFE2
  6479                           fsr1l	equ	0xFE1
  6480                           bsr	equ	0xFE0
  6481                           indf2	equ	0xFDF
  6482                           postinc2	equ	0xFDE
  6483                           postdec2	equ	0xFDD
  6484                           fsr2h	equ	0xFDA
  6485                           fsr2l	equ	0xFD9
  6486                           status	equ	0xFD8
  6487                           
  6488 ;; *************** function _timer0_int_handler *****************
  6489 ;; Defined at:
  6490 ;;		line 19 in file "../src/user_interrupts.c"
  6491 ;; Parameters:    Size  Location     Type
  6492 ;;		None
  6493 ;; Auto vars:     Size  Location     Type
  6494 ;;  val             2   54[COMRAM] unsigned int 
  6495 ;;  msgtype         2   52[COMRAM] int 
  6496 ;;  length          2   50[COMRAM] int 
  6497 ;; Return value:  Size  Location     Type
  6498 ;;		None               void
  6499 ;; Registers used:
  6500 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6501 ;; Tracked objects:
  6502 ;;		On entry : 0/0
  6503 ;;		On exit  : 0/0
  6504 ;;		Unchanged: 0/0
  6505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6506 ;;      Params:         0       0       0       0       0
  6507 ;;      Locals:         6       0       0       0       0
  6508 ;;      Temps:          2       0       0       0       0
  6509 ;;      Totals:         8       0       0       0       0
  6510 ;;Total ram usage:        8 bytes
  6511 ;; Hardware stack levels used:    1
  6512 ;; Hardware stack levels required when called:    3
  6513 ;; This function calls:
  6514 ;;		_ToMainHigh_sendmsg
  6515 ;;		_FromMainHigh_recvmsg
  6516 ;;		_WriteTimer0
  6517 ;; This function is called by:
  6518 ;;		_InterruptHandlerHigh
  6519 ;; This function uses a non-reentrant model
  6520 ;;
  6521                           
  6522                           	psect	text44
  6523  0012A2                     __ptext44:
  6524                           	opt stack 0
  6525  0012A2                     _timer0_int_handler:
  6526                           	opt stack 19
  6527                           
  6528                           ;user_interrupts.c: 20: unsigned int val;
  6529                           ;user_interrupts.c: 21: int length, msgtype;
  6530                           ;user_interrupts.c: 24: LATBbits.LATB0 = !LATBbits.LATB0;
  6531                           
  6532                           ;incstack = 0
  6533                           ;incstack = 0
  6534  0012A2  B08A               	btfsc	3978,0,c	;volatile
  6535  0012A4  D002               	goto	i2u187_40
  6536  0012A6  0E01               	movlw	1
  6537  0012A8  D001               	goto	i2u187_46
  6538  0012AA                     i2u187_40:
  6539  0012AA  0E00               	movlw	0
  6540  0012AC                     i2u187_46:
  6541  0012AC  6E31               	movwf	??_timer0_int_handler& (0+255),c
  6542  0012AE  508A               	movf	3978,w,c	;volatile
  6543  0012B0  1831               	xorwf	??_timer0_int_handler,w,c
  6544  0012B2  0BFE               	andlw	-2
  6545  0012B4  1831               	xorwf	??_timer0_int_handler,w,c
  6546  0012B6  6E8A               	movwf	3978,c	;volatile
  6547                           
  6548                           ;user_interrupts.c: 26: WriteTimer0(0);
  6549  0012B8  0E00               	movlw	0
  6550  0012BA  6E15               	movwf	?_WriteTimer0+1,c
  6551  0012BC  0E00               	movlw	0
  6552  0012BE  6E14               	movwf	?_WriteTimer0,c
  6553  0012C0  ECE0  F00B         	call	_WriteTimer0	;wreg free
  6554                           
  6555                           ;user_interrupts.c: 28: length = FromMainHigh_recvmsg(sizeof(val), (unsigned char *)&msg
      +                          type, (void *) &val);
  6556  0012C4  6E31               	movwf	??_timer0_int_handler& (0+255),c
  6557  0012C6  0E02               	movlw	2
  6558  0012C8  6E2C               	movwf	?_FromMainHigh_recvmsg,c
  6559  0012CA  5031               	movf	??_timer0_int_handler& (0+255),w,c
  6560  0012CC  0E00               	movlw	high timer0_int_handler@msgtype
  6561  0012CE  6E2E               	movwf	?_FromMainHigh_recvmsg+2,c
  6562  0012D0  0E35               	movlw	low timer0_int_handler@msgtype
  6563  0012D2  6E2D               	movwf	?_FromMainHigh_recvmsg+1,c
  6564  0012D4  0E00               	movlw	high timer0_int_handler@val
  6565  0012D6  6E30               	movwf	?_FromMainHigh_recvmsg+4,c
  6566  0012D8  0E37               	movlw	low timer0_int_handler@val
  6567  0012DA  6E2F               	movwf	?_FromMainHigh_recvmsg+3,c
  6568  0012DC  EC5D  F00B         	call	_FromMainHigh_recvmsg	;wreg free
  6569  0012E0  6E33               	movwf	timer0_int_handler@length,c
  6570  0012E2  6A34               	clrf	timer0_int_handler@length+1,c
  6571  0012E4  BE33               	btfsc	timer0_int_handler@length,7,c
  6572  0012E6  0634               	decf	timer0_int_handler@length+1,f,c
  6573                           
  6574                           ;user_interrupts.c: 29: if (length == sizeof (val)) {
  6575  0012E8  5033               	movf	timer0_int_handler@length,w,c
  6576  0012EA  0A02               	xorlw	2
  6577  0012EC  1034               	iorwf	timer0_int_handler@length+1,w,c
  6578  0012EE  A4D8               	btfss	status,2,c
  6579  0012F0  0012               	return	
  6580                           
  6581                           ;user_interrupts.c: 30: ToMainHigh_sendmsg(sizeof (val), 10, (void *) &val);
  6582  0012F2  6E31               	movwf	??_timer0_int_handler& (0+255),c
  6583  0012F4  0E02               	movlw	2
  6584  0012F6  6E2A               	movwf	?_ToMainHigh_sendmsg,c
  6585  0012F8  5031               	movf	??_timer0_int_handler& (0+255),w,c
  6586  0012FA  6E32               	movwf	(??_timer0_int_handler+1)& (0+255),c
  6587  0012FC  0E0A               	movlw	10
  6588  0012FE  6E2B               	movwf	?_ToMainHigh_sendmsg+1,c
  6589  001300  5032               	movf	(??_timer0_int_handler+1)& (0+255),w,c
  6590  001302  0E00               	movlw	high timer0_int_handler@val
  6591  001304  6E2D               	movwf	?_ToMainHigh_sendmsg+3,c
  6592  001306  0E37               	movlw	low timer0_int_handler@val
  6593  001308  6E2C               	movwf	?_ToMainHigh_sendmsg+2,c
  6594  00130A  ECA5  F00B         	call	_ToMainHigh_sendmsg	;wreg free
  6595  00130E  0012               	return	
  6596  001310                     __end_of_timer0_int_handler:
  6597                           	opt stack 0
  6598                           pclatu	equ	0xFFB
  6599                           pclath	equ	0xFFA
  6600                           tblptru	equ	0xFF8
  6601                           tblptrh	equ	0xFF7
  6602                           tblptrl	equ	0xFF6
  6603                           tablat	equ	0xFF5
  6604                           prodh	equ	0xFF4
  6605                           prodl	equ	0xFF3
  6606                           intcon	equ	0xFF2
  6607                           postinc0	equ	0xFEE
  6608                           fsr0h	equ	0xFEA
  6609                           fsr0l	equ	0xFE9
  6610                           wreg	equ	0xFE8
  6611                           indf1	equ	0xFE7
  6612                           fsr1h	equ	0xFE2
  6613                           fsr1l	equ	0xFE1
  6614                           bsr	equ	0xFE0
  6615                           indf2	equ	0xFDF
  6616                           postinc2	equ	0xFDE
  6617                           postdec2	equ	0xFDD
  6618                           fsr2h	equ	0xFDA
  6619                           fsr2l	equ	0xFD9
  6620                           status	equ	0xFD8
  6621                           
  6622 ;; *************** function _WriteTimer0 *****************
  6623 ;; Defined at:
  6624 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic18\plib\Timers\t0write.c"
  6625 ;; Parameters:    Size  Location     Type
  6626 ;;  timer0          2   19[COMRAM] unsigned int 
  6627 ;; Auto vars:     Size  Location     Type
  6628 ;;  timer           2   21[COMRAM] struct Timers
  6629 ;; Return value:  Size  Location     Type
  6630 ;;		None               void
  6631 ;; Registers used:
  6632 ;;		None
  6633 ;; Tracked objects:
  6634 ;;		On entry : 0/0
  6635 ;;		On exit  : 0/0
  6636 ;;		Unchanged: 0/0
  6637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6638 ;;      Params:         2       0       0       0       0
  6639 ;;      Locals:         2       0       0       0       0
  6640 ;;      Temps:          0       0       0       0       0
  6641 ;;      Totals:         4       0       0       0       0
  6642 ;;Total ram usage:        4 bytes
  6643 ;; Hardware stack levels used:    1
  6644 ;; This function calls:
  6645 ;;		Nothing
  6646 ;; This function is called by:
  6647 ;;		_timer0_int_handler
  6648 ;; This function uses a non-reentrant model
  6649 ;;
  6650                           
  6651                           	psect	text45
  6652  0017C0                     __ptext45:
  6653                           	opt stack 0
  6654  0017C0                     _WriteTimer0:
  6655                           	opt stack 21
  6656                           
  6657                           ;incstack = 0
  6658                           ;incstack = 0
  6659  0017C0  C014  F016         	movff	WriteTimer0@timer0,WriteTimer0@timer
  6660  0017C4  C015  F017         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  6661  0017C8  C017  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  6662  0017CC  C016  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  6663  0017D0  0012               	return	
  6664  0017D2                     __end_of_WriteTimer0:
  6665                           	opt stack 0
  6666                           pclatu	equ	0xFFB
  6667                           pclath	equ	0xFFA
  6668                           tblptru	equ	0xFF8
  6669                           tblptrh	equ	0xFF7
  6670                           tblptrl	equ	0xFF6
  6671                           tablat	equ	0xFF5
  6672                           prodh	equ	0xFF4
  6673                           prodl	equ	0xFF3
  6674                           intcon	equ	0xFF2
  6675                           postinc0	equ	0xFEE
  6676                           fsr0h	equ	0xFEA
  6677                           fsr0l	equ	0xFE9
  6678                           wreg	equ	0xFE8
  6679                           indf1	equ	0xFE7
  6680                           fsr1h	equ	0xFE2
  6681                           fsr1l	equ	0xFE1
  6682                           bsr	equ	0xFE0
  6683                           indf2	equ	0xFDF
  6684                           postinc2	equ	0xFDE
  6685                           postdec2	equ	0xFDD
  6686                           fsr2h	equ	0xFDA
  6687                           fsr2l	equ	0xFD9
  6688                           status	equ	0xFD8
  6689                           
  6690 ;; *************** function _FromMainHigh_recvmsg *****************
  6691 ;; Defined at:
  6692 ;;		line 183 in file "../src/messages.c"
  6693 ;; Parameters:    Size  Location     Type
  6694 ;;  maxlength       1   43[COMRAM] unsigned char 
  6695 ;;  msgtype         2   44[COMRAM] PTR unsigned char 
  6696 ;;		 -> timer0_int_handler@msgtype(2), 
  6697 ;;  data            2   46[COMRAM] PTR void 
  6698 ;;		 -> timer0_int_handler@val(2), 
  6699 ;; Auto vars:     Size  Location     Type
  6700 ;;		None
  6701 ;; Return value:  Size  Location     Type
  6702 ;;                  1    wreg      char 
  6703 ;; Registers used:
  6704 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6705 ;; Tracked objects:
  6706 ;;		On entry : 0/0
  6707 ;;		On exit  : 0/0
  6708 ;;		Unchanged: 0/0
  6709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6710 ;;      Params:         5       0       0       0       0
  6711 ;;      Locals:         0       0       0       0       0
  6712 ;;      Temps:          0       0       0       0       0
  6713 ;;      Totals:         5       0       0       0       0
  6714 ;;Total ram usage:        5 bytes
  6715 ;; Hardware stack levels used:    1
  6716 ;; Hardware stack levels required when called:    2
  6717 ;; This function calls:
  6718 ;;		i2_recv_msg
  6719 ;; This function is called by:
  6720 ;;		_timer0_int_handler
  6721 ;; This function uses a non-reentrant model
  6722 ;;
  6723                           
  6724                           	psect	text46
  6725  0016BA                     __ptext46:
  6726                           	opt stack 0
  6727  0016BA                     _FromMainHigh_recvmsg:
  6728                           	opt stack 19
  6729                           
  6730                           ;messages.c: 189: return (recv_msg(&FromMainHigh_MQ, maxlength, msgtype, data));
  6731                           
  6732                           ;incstack = 0
  6733                           ;incstack = 0
  6734  0016BA  0102               	movlb	2	; () banked
  6735  0016BC  0E02               	movlw	high _FromMainHigh_MQ
  6736  0016BE  6E1F               	movwf	?i2_recv_msg+1,c
  6737  0016C0  0102               	movlb	2	; () banked
  6738  0016C2  0E4C               	movlw	low _FromMainHigh_MQ
  6739  0016C4  6E1E               	movwf	?i2_recv_msg,c
  6740  0016C6  C02C  F020         	movff	FromMainHigh_recvmsg@maxlength,?i2_recv_msg+2
  6741  0016CA  C02D  F021         	movff	FromMainHigh_recvmsg@msgtype,?i2_recv_msg+3
  6742  0016CE  C02E  F022         	movff	FromMainHigh_recvmsg@msgtype+1,?i2_recv_msg+4
  6743  0016D2  C02F  F023         	movff	FromMainHigh_recvmsg@data,?i2_recv_msg+5
  6744  0016D6  C030  F024         	movff	FromMainHigh_recvmsg@data+1,?i2_recv_msg+6
  6745  0016DA  ECE4  F005         	call	i2_recv_msg	;wreg free
  6746  0016DE  0012               	return	
  6747  0016E0                     __end_of_FromMainHigh_recvmsg:
  6748                           	opt stack 0
  6749                           pclatu	equ	0xFFB
  6750                           pclath	equ	0xFFA
  6751                           tblptru	equ	0xFF8
  6752                           tblptrh	equ	0xFF7
  6753                           tblptrl	equ	0xFF6
  6754                           tablat	equ	0xFF5
  6755                           prodh	equ	0xFF4
  6756                           prodl	equ	0xFF3
  6757                           intcon	equ	0xFF2
  6758                           postinc0	equ	0xFEE
  6759                           fsr0h	equ	0xFEA
  6760                           fsr0l	equ	0xFE9
  6761                           wreg	equ	0xFE8
  6762                           indf1	equ	0xFE7
  6763                           fsr1h	equ	0xFE2
  6764                           fsr1l	equ	0xFE1
  6765                           bsr	equ	0xFE0
  6766                           indf2	equ	0xFDF
  6767                           postinc2	equ	0xFDE
  6768                           postdec2	equ	0xFDD
  6769                           fsr2h	equ	0xFDA
  6770                           fsr2l	equ	0xFD9
  6771                           status	equ	0xFD8
  6772                           
  6773 ;; *************** function i2_recv_msg *****************
  6774 ;; Defined at:
  6775 ;;		line 63 in file "../src/messages.c"
  6776 ;; Parameters:    Size  Location     Type
  6777 ;;  recv_msg        2   29[COMRAM] PTR struct __msg_queue
  6778 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  6779 ;;  recv_msg        1   31[COMRAM] unsigned char 
  6780 ;;  recv_msg        2   32[COMRAM] PTR unsigned char 
  6781 ;;		 -> timer0_int_handler@msgtype(2), main@msgtype(1), 
  6782 ;;  recv_msg        2   34[COMRAM] PTR void 
  6783 ;;		 -> timer0_int_handler@val(2), main@msgbuffer(11), 
  6784 ;; Auto vars:     Size  Location     Type
  6785 ;;  recv_msg        2   41[COMRAM] PTR struct __msg
  6786 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  6787 ;;  recv_msg        2   39[COMRAM] unsigned int 
  6788 ;;  recv_msg        1   38[COMRAM] unsigned char 
  6789 ;; Return value:  Size  Location     Type
  6790 ;;                  1    wreg      char 
  6791 ;; Registers used:
  6792 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6793 ;; Tracked objects:
  6794 ;;		On entry : 0/0
  6795 ;;		On exit  : 0/0
  6796 ;;		Unchanged: 0/0
  6797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6798 ;;      Params:         7       0       0       0       0
  6799 ;;      Locals:         5       0       0       0       0
  6800 ;;      Temps:          2       0       0       0       0
  6801 ;;      Totals:        14       0       0       0       0
  6802 ;;Total ram usage:       14 bytes
  6803 ;; Hardware stack levels used:    1
  6804 ;; Hardware stack levels required when called:    1
  6805 ;; This function calls:
  6806 ;;		i2_memcpy
  6807 ;; This function is called by:
  6808 ;;		_FromMainHigh_recvmsg
  6809 ;; This function uses a non-reentrant model
  6810 ;;
  6811                           
  6812                           	psect	text47
  6813  000BC8                     __ptext47:
  6814                           	opt stack 0
  6815  000BC8                     i2_recv_msg:
  6816                           	opt stack 19
  6817                           
  6818                           ;messages.c: 64: unsigned char slot;
  6819                           ;messages.c: 68: msg *qmsg;
  6820                           ;messages.c: 69: size_t tlength;
  6821                           ;messages.c: 72: slot = qptr->cur_read_ind;
  6822                           
  6823                           ;incstack = 0
  6824                           ;incstack = 0
  6825  000BC8  EE20 F035          	lfsr	2,53
  6826  000BCC  501E               	movf	i2recv_msg@qptr,w,c
  6827  000BCE  26D9               	addwf	fsr2l,f,c
  6828  000BD0  501F               	movf	i2recv_msg@qptr+1,w,c
  6829  000BD2  22DA               	addwfc	fsr2h,f,c
  6830  000BD4  50DF               	movf	indf2,w,c
  6831  000BD6  6E27               	movwf	i2recv_msg@slot,c
  6832                           
  6833                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  6834  000BD8  5027               	movf	i2recv_msg@slot,w,c
  6835  000BDA  0D0D               	mullw	13
  6836  000BDC  50F3               	movf	prodl,w,c
  6837  000BDE  241E               	addwf	i2recv_msg@qptr,w,c
  6838  000BE0  6E2A               	movwf	i2recv_msg@qmsg,c
  6839  000BE2  50F4               	movf	prodh,w,c
  6840  000BE4  201F               	addwfc	i2recv_msg@qptr+1,w,c
  6841  000BE6  6E2B               	movwf	i2recv_msg@qmsg+1,c
  6842                           
  6843                           ;messages.c: 74: if (qmsg->full == 1) {
  6844  000BE8  0E01               	movlw	1
  6845  000BEA  C02A  FFD9         	movff	i2recv_msg@qmsg,fsr2l
  6846  000BEE  C02B  FFDA         	movff	i2recv_msg@qmsg+1,fsr2h
  6847  000BF2  62DF               	cpfseq	indf2,c
  6848  000BF4  D04F               	goto	i2l3520
  6849                           
  6850                           ;messages.c: 76: if (qmsg->length > maxlength) {
  6851  000BF6  EE20 F001          	lfsr	2,1
  6852  000BFA  502A               	movf	i2recv_msg@qmsg,w,c
  6853  000BFC  26D9               	addwf	fsr2l,f,c
  6854  000BFE  502B               	movf	i2recv_msg@qmsg+1,w,c
  6855  000C00  22DA               	addwfc	fsr2h,f,c
  6856  000C02  50DF               	movf	indf2,w,c
  6857  000C04  6020               	cpfslt	i2recv_msg@maxlength,c
  6858  000C06  D002               	goto	i2l3504
  6859                           
  6860                           ;messages.c: 77: return (-3);
  6861  000C08  0EFD               	movlw	253
  6862  000C0A  0012               	return	
  6863  000C0C                     i2l3504:
  6864                           
  6865                           ;messages.c: 78: }
  6866                           ;messages.c: 80: tlength = qmsg->length;
  6867  000C0C  EE20 F001          	lfsr	2,1
  6868  000C10  502A               	movf	i2recv_msg@qmsg,w,c
  6869  000C12  26D9               	addwf	fsr2l,f,c
  6870  000C14  502B               	movf	i2recv_msg@qmsg+1,w,c
  6871  000C16  22DA               	addwfc	fsr2h,f,c
  6872  000C18  50DF               	movf	indf2,w,c
  6873  000C1A  6E25               	movwf	??i2_recv_msg& (0+255),c
  6874  000C1C  5025               	movf	??i2_recv_msg,w,c
  6875  000C1E  6E28               	movwf	i2recv_msg@tlength,c
  6876  000C20  6A29               	clrf	i2recv_msg@tlength+1,c
  6877                           
  6878                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  6879  000C22  C023  F014         	movff	i2recv_msg@data,?i2_memcpy
  6880  000C26  C024  F015         	movff	i2recv_msg@data+1,?i2_memcpy+1
  6881  000C2A  0E03               	movlw	3
  6882  000C2C  242A               	addwf	i2recv_msg@qmsg,w,c
  6883  000C2E  6E25               	movwf	??i2_recv_msg& (0+255),c
  6884  000C30  0E00               	movlw	0
  6885  000C32  202B               	addwfc	i2recv_msg@qmsg+1,w,c
  6886  000C34  6E26               	movwf	(??i2_recv_msg+1)& (0+255),c
  6887  000C36  C025  F016         	movff	??i2_recv_msg,?i2_memcpy+2
  6888  000C3A  C026  F017         	movff	??i2_recv_msg+1,?i2_memcpy+3
  6889  000C3E  C028  F018         	movff	i2recv_msg@tlength,?i2_memcpy+4
  6890  000C42  C029  F019         	movff	i2recv_msg@tlength+1,?i2_memcpy+5
  6891  000C46  EC78  F00A         	call	i2_memcpy	;wreg free
  6892                           
  6893                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  6894  000C4A  EE20 F035          	lfsr	2,53
  6895  000C4E  501E               	movf	i2recv_msg@qptr,w,c
  6896  000C50  26D9               	addwf	fsr2l,f,c
  6897  000C52  501F               	movf	i2recv_msg@qptr+1,w,c
  6898  000C54  22DA               	addwfc	fsr2h,f,c
  6899  000C56  EE10 F035          	lfsr	1,53
  6900  000C5A  501E               	movf	i2recv_msg@qptr,w,c
  6901  000C5C  26E1               	addwf	fsr1l,f,c
  6902  000C5E  501F               	movf	i2recv_msg@qptr+1,w,c
  6903  000C60  22E2               	addwfc	fsr1h,f,c
  6904  000C62  50E7               	movf	indf1,w,c
  6905  000C64  6E25               	movwf	??i2_recv_msg& (0+255),c
  6906  000C66  2825               	incf	??i2_recv_msg,w,c
  6907  000C68  0B03               	andlw	3
  6908  000C6A  6EDF               	movwf	indf2,c
  6909                           
  6910                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  6911  000C6C  EE20 F002          	lfsr	2,2
  6912  000C70  502A               	movf	i2recv_msg@qmsg,w,c
  6913  000C72  26D9               	addwf	fsr2l,f,c
  6914  000C74  502B               	movf	i2recv_msg@qmsg+1,w,c
  6915  000C76  22DA               	addwfc	fsr2h,f,c
  6916  000C78  C021  FFE1         	movff	i2recv_msg@msgtype,fsr1l
  6917  000C7C  C022  FFE2         	movff	i2recv_msg@msgtype+1,fsr1h
  6918  000C80  CFDF FFE7          	movff	indf2,indf1
  6919                           
  6920                           ;messages.c: 91: qmsg->full = 0;
  6921  000C84  C02A  FFD9         	movff	i2recv_msg@qmsg,fsr2l
  6922  000C88  C02B  FFDA         	movff	i2recv_msg@qmsg+1,fsr2h
  6923  000C8C  0E00               	movlw	0
  6924  000C8E  6EDF               	movwf	indf2,c
  6925                           
  6926                           ;messages.c: 92: return (tlength);
  6927  000C90  5028               	movf	i2recv_msg@tlength,w,c
  6928  000C92  0012               	return	
  6929  000C94                     i2l3520:
  6930                           
  6931                           ;messages.c: 94: return (-4);
  6932  000C94  0EFC               	movlw	252
  6933  000C96  0012               	return	
  6934  000C98                     __end_ofi2_recv_msg:
  6935                           	opt stack 0
  6936                           pclatu	equ	0xFFB
  6937                           pclath	equ	0xFFA
  6938                           tblptru	equ	0xFF8
  6939                           tblptrh	equ	0xFF7
  6940                           tblptrl	equ	0xFF6
  6941                           tablat	equ	0xFF5
  6942                           prodh	equ	0xFF4
  6943                           prodl	equ	0xFF3
  6944                           intcon	equ	0xFF2
  6945                           postinc0	equ	0xFEE
  6946                           fsr0h	equ	0xFEA
  6947                           fsr0l	equ	0xFE9
  6948                           wreg	equ	0xFE8
  6949                           indf1	equ	0xFE7
  6950                           fsr1h	equ	0xFE2
  6951                           fsr1l	equ	0xFE1
  6952                           bsr	equ	0xFE0
  6953                           indf2	equ	0xFDF
  6954                           postinc2	equ	0xFDE
  6955                           postdec2	equ	0xFDD
  6956                           fsr2h	equ	0xFDA
  6957                           fsr2l	equ	0xFD9
  6958                           status	equ	0xFD8
  6959                           
  6960 ;; *************** function _i2c_master_handler *****************
  6961 ;; Defined at:
  6962 ;;		line 35 in file "../src/my_i2c.c"
  6963 ;; Parameters:    Size  Location     Type
  6964 ;;		None
  6965 ;; Auto vars:     Size  Location     Type
  6966 ;;  data_read       1   55[COMRAM] unsigned char 
  6967 ;;  overrun_erro    1   54[COMRAM] unsigned char 
  6968 ;;  i2c_data        1   53[COMRAM] unsigned char 
  6969 ;;  msg_sent        1   52[COMRAM] unsigned char 
  6970 ;;  data_written    1   51[COMRAM] unsigned char 
  6971 ;;  data            1    0        unsigned char 
  6972 ;; Return value:  Size  Location     Type
  6973 ;;                  2    8[COMRAM] int 
  6974 ;; Registers used:
  6975 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6976 ;; Tracked objects:
  6977 ;;		On entry : 0/0
  6978 ;;		On exit  : 0/0
  6979 ;;		Unchanged: 0/0
  6980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6981 ;;      Params:         0       0       0       0       0
  6982 ;;      Locals:         5       0       0       0       0
  6983 ;;      Temps:          6       0       0       0       0
  6984 ;;      Totals:        11       0       0       0       0
  6985 ;;Total ram usage:       11 bytes
  6986 ;; Hardware stack levels used:    1
  6987 ;; Hardware stack levels required when called:    3
  6988 ;; This function calls:
  6989 ;;		_ToMainHigh_sendmsg
  6990 ;; This function is called by:
  6991 ;;		_InterruptHandlerHigh
  6992 ;; This function uses a non-reentrant model
  6993 ;;
  6994                           
  6995                           	psect	text48
  6996  000494                     __ptext48:
  6997                           	opt stack 0
  6998  000494                     _i2c_master_handler:
  6999                           	opt stack 19
  7000                           
  7001                           ;my_i2c.c: 37: LATA0 = 0;
  7002                           
  7003                           ;incstack = 0
  7004                           ;incstack = 0
  7005  000494  9089               	bcf	3977,0,c	;volatile
  7006                           
  7007                           ;my_i2c.c: 38: LATA1 = 1;
  7008  000496  8289               	bsf	3977,1,c	;volatile
  7009                           
  7010                           ;my_i2c.c: 41: unsigned char i2c_data;
  7011                           ;my_i2c.c: 42: unsigned char data;
  7012                           ;my_i2c.c: 43: unsigned char data_read = 0;
  7013  000498  6E2E               	movwf	??_i2c_master_handler& (0+255),c
  7014  00049A  0E00               	movlw	0
  7015  00049C  6E38               	movwf	i2c_master_handler@data_read,c
  7016  00049E  502E               	movf	??_i2c_master_handler& (0+255),w,c
  7017                           
  7018                           ;my_i2c.c: 44: unsigned char data_written = 0;
  7019  0004A0  6E2E               	movwf	??_i2c_master_handler& (0+255),c
  7020  0004A2  0E00               	movlw	0
  7021  0004A4  6E34               	movwf	i2c_master_handler@data_written,c
  7022  0004A6  502E               	movf	??_i2c_master_handler& (0+255),w,c
  7023                           
  7024                           ;my_i2c.c: 45: unsigned char msg_sent = 0;
  7025  0004A8  6E2E               	movwf	??_i2c_master_handler& (0+255),c
  7026  0004AA  0E00               	movlw	0
  7027  0004AC  6E35               	movwf	i2c_master_handler@msg_sent,c
  7028  0004AE  502E               	movf	??_i2c_master_handler& (0+255),w,c
  7029                           
  7030                           ;my_i2c.c: 46: unsigned char overrun_error = 0;
  7031  0004B0  6E2E               	movwf	??_i2c_master_handler& (0+255),c
  7032  0004B2  0E00               	movlw	0
  7033  0004B4  6E37               	movwf	i2c_master_handler@overrun_error,c
  7034  0004B6  502E               	movf	??_i2c_master_handler& (0+255),w,c
  7035                           
  7036                           ;my_i2c.c: 48: if (SSPSTATbits.BF == 1)
  7037  0004B8  A0C7               	btfss	4039,0,c	;volatile
  7038  0004BA  D006               	goto	i2l2912
  7039                           
  7040                           ;my_i2c.c: 49: {
  7041                           ;my_i2c.c: 50: i2c_data = SSPBUF;
  7042  0004BC  CFC9 F036          	movff	4041,i2c_master_handler@i2c_data	;volatile
  7043                           
  7044                           ;my_i2c.c: 51: data_read = 1;
  7045  0004C0  6E2E               	movwf	??_i2c_master_handler& (0+255),c
  7046  0004C2  0E01               	movlw	1
  7047  0004C4  6E38               	movwf	i2c_master_handler@data_read,c
  7048  0004C6  502E               	movf	??_i2c_master_handler& (0+255),w,c
  7049  0004C8                     i2l2912:
  7050                           
  7051                           ;my_i2c.c: 52: }
  7052                           ;my_i2c.c: 53: if (!overrun_error)
  7053  0004C8  6637               	tstfsz	i2c_master_handler@overrun_error,c
  7054  0004CA  D175               	goto	i2l292
  7055  0004CC  D155               	goto	i2l2974
  7056  0004CE                     i2l2916:
  7057  0004CE  30C7               	rrcf	4039,w,c	;volatile
  7058  0004D0  32E8               	rrcf	wreg,f,c
  7059  0004D2  0B01               	andlw	1
  7060  0004D4  6E2E               	movwf	??_i2c_master_handler& (0+255),c
  7061  0004D6  50C5               	movf	4037,w,c	;volatile
  7062  0004D8  0B1F               	andlw	31
  7063  0004DA  102E               	iorwf	??_i2c_master_handler,w,c
  7064  0004DC  0900               	iorlw	0
  7065  0004DE  B4D8               	btfsc	status,2,c
  7066  0004E0  D16A               	goto	i2l292
  7067  0004E2  D7F5               	goto	i2l2916
  7068  0004E4                     i2l2918:
  7069                           
  7070                           ;my_i2c.c: 64: {
  7071                           ;my_i2c.c: 65: ic_ptr->status = 0x10;
  7072  0004E4  0100               	movlb	0	; () banked
  7073  0004E6  EE20 F00D          	lfsr	2,13
  7074  0004EA  0100               	movlb	0	; () banked
  7075  0004EC  51AF               	movf	_ic_ptr& (0+255),w,b
  7076  0004EE  26D9               	addwf	fsr2l,f,c
  7077  0004F0  0100               	movlb	0	; () banked
  7078  0004F2  51B0               	movf	(_ic_ptr+1)& (0+255),w,b
  7079  0004F4  22DA               	addwfc	fsr2h,f,c
  7080  0004F6  0E10               	movlw	16
  7081  0004F8  6EDF               	movwf	indf2,c
  7082                           
  7083                           ;my_i2c.c: 67: SSPBUF = (ic_ptr->slave_addr & 0xFE);
  7084  0004FA  0100               	movlb	0	; () banked
  7085  0004FC  EE20 F01C          	lfsr	2,28
  7086  000500  0100               	movlb	0	; () banked
  7087  000502  51AF               	movf	_ic_ptr& (0+255),w,b
  7088  000504  26D9               	addwf	fsr2l,f,c
  7089  000506  0100               	movlb	0	; () banked
  7090  000508  51B0               	movf	(_ic_ptr+1)& (0+255),w,b
  7091  00050A  22DA               	addwfc	fsr2h,f,c
  7092  00050C  50DF               	movf	indf2,w,c
  7093  00050E  0BFE               	andlw	254
  7094  000510  6EC9               	movwf	4041,c	;volatile
  7095                           
  7096                           ;my_i2c.c: 68: break;
  7097  000512  D151               	goto	i2l292
  7098  000514                     i2l2920:
  7099                           
  7100                           ; BSR set to: 0
  7101                           ;my_i2c.c: 71: {
  7102                           ;my_i2c.c: 72: ic_ptr->event_count++;
  7103  000514  0100               	movlb	0	; () banked
  7104  000516  EE20 F00C          	lfsr	2,12
  7105  00051A  0100               	movlb	0	; () banked
  7106  00051C  51AF               	movf	_ic_ptr& (0+255),w,b
  7107  00051E  26D9               	addwf	fsr2l,f,c
  7108  000520  0100               	movlb	0	; () banked
  7109  000522  51B0               	movf	(_ic_ptr+1)& (0+255),w,b
  7110  000524  22DA               	addwfc	fsr2h,f,c
  7111  000526  2ADF               	incf	indf2,f,c
  7112                           
  7113                           ;my_i2c.c: 74: if (ic_ptr->outbufind < ic_ptr->outbuflen && !SSPCON2bits.ACKSTAT)
  7114  000528  0100               	movlb	0	; () banked
  7115  00052A  EE20 F01B          	lfsr	2,27
  7116  00052E  0100               	movlb	0	; () banked
  7117  000530  51AF               	movf	_ic_ptr& (0+255),w,b
  7118  000532  26D9               	addwf	fsr2l,f,c
  7119  000534  0100               	movlb	0	; () banked
  7120  000536  51B0               	movf	(_ic_ptr+1)& (0+255),w,b
  7121  000538  22DA               	addwfc	fsr2h,f,c
  7122  00053A  50DF               	movf	indf2,w,c
  7123  00053C  6E2E               	movwf	??_i2c_master_handler& (0+255),c
  7124  00053E  0100               	movlb	0	; () banked
  7125  000540  EE20 F01A          	lfsr	2,26
  7126  000544  0100               	movlb	0	; () banked
  7127  000546  51AF               	movf	_ic_ptr& (0+255),w,b
  7128  000548  26D9               	addwf	fsr2l,f,c
  7129  00054A  0100               	movlb	0	; () banked
  7130  00054C  51B0               	movf	(_ic_ptr+1)& (0+255),w,b
  7131  00054E  22DA               	addwfc	fsr2h,f,c
  7132  000550  50DF               	movf	indf2,w,c
  7133  000552  5C2E               	subwf	??_i2c_master_handler,w,c
  7134  000554  A0D8               	btfss	status,0,c
  7135                           
  7136                           ; BSR set to: 0
  7137  000556  BCC5               	btfsc	4037,6,c	;volatile
  7138  000558  D021               	goto	i2l2928
  7139                           
  7140                           ; BSR set to: 0
  7141                           ;my_i2c.c: 75: {
  7142                           ;my_i2c.c: 76: SSPBUF = ic_ptr->outbuffer[ic_ptr->outbufind];
  7143  00055A  0100               	movlb	0	; () banked
  7144  00055C  EE20 F01B          	lfsr	2,27
  7145  000560  0100               	movlb	0	; () banked
  7146  000562  51AF               	movf	_ic_ptr& (0+255),w,b
  7147  000564  26D9               	addwf	fsr2l,f,c
  7148  000566  0100               	movlb	0	; () banked
  7149  000568  51B0               	movf	(_ic_ptr+1)& (0+255),w,b
  7150  00056A  22DA               	addwfc	fsr2h,f,c
  7151  00056C  50DF               	movf	indf2,w,c
  7152  00056E  6E2E               	movwf	??_i2c_master_handler& (0+255),c
  7153  000570  502E               	movf	??_i2c_master_handler,w,c
  7154  000572  0D01               	mullw	1
  7155  000574  0E10               	movlw	16
  7156  000576  26F3               	addwf	prodl,f,c
  7157  000578  0E00               	movlw	0
  7158  00057A  22F4               	addwfc	prodh,f,c
  7159  00057C  50F3               	movf	prodl,w,c
  7160  00057E  0100               	movlb	0	; () banked
  7161  000580  0100               	movlb	0	; () banked
  7162  000582  25AF               	addwf	_ic_ptr& (0+255),w,b
  7163  000584  6ED9               	movwf	fsr2l,c
  7164  000586  50F4               	movf	prodh,w,c
  7165  000588  0100               	movlb	0	; () banked
  7166  00058A  0100               	movlb	0	; () banked
  7167  00058C  21B0               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7168  00058E  6EDA               	movwf	fsr2h,c
  7169  000590  50DF               	movf	indf2,w,c
  7170  000592  6EC9               	movwf	4041,c	;volatile
  7171                           
  7172                           ; BSR set to: 0
  7173                           ;my_i2c.c: 79: ic_ptr->outbufind++;
  7174  000594  0100               	movlb	0	; () banked
  7175  000596  EE20 F01B          	lfsr	2,27
  7176  00059A  D04D               	goto	L3
  7177  00059C                     i2l2928:
  7178                           
  7179                           ; BSR set to: 0
  7180                           ;my_i2c.c: 81: else if (ic_ptr->outbufind >= ic_ptr->outbuflen)
  7181  00059C  0100               	movlb	0	; () banked
  7182  00059E  EE20 F01B          	lfsr	2,27
  7183  0005A2  0100               	movlb	0	; () banked
  7184  0005A4  51AF               	movf	_ic_ptr& (0+255),w,b
  7185  0005A6  26D9               	addwf	fsr2l,f,c
  7186  0005A8  0100               	movlb	0	; () banked
  7187  0005AA  51B0               	movf	(_ic_ptr+1)& (0+255),w,b
  7188  0005AC  22DA               	addwfc	fsr2h,f,c
  7189  0005AE  50DF               	movf	indf2,w,c
  7190  0005B0  6E2E               	movwf	??_i2c_master_handler& (0+255),c
  7191  0005B2  0100               	movlb	0	; () banked
  7192  0005B4  EE20 F01A          	lfsr	2,26
  7193  0005B8  0100               	movlb	0	; () banked
  7194  0005BA  51AF               	movf	_ic_ptr& (0+255),w,b
  7195  0005BC  26D9               	addwf	fsr2l,f,c
  7196  0005BE  0100               	movlb	0	; () banked
  7197  0005C0  51B0               	movf	(_ic_ptr+1)& (0+255),w,b
  7198  0005C2  22DA               	addwfc	fsr2h,f,c
  7199  0005C4  50DF               	movf	indf2,w,c
  7200  0005C6  5C2E               	subwf	??_i2c_master_handler,w,c
  7201  0005C8  B0D8               	btfsc	status,0,c
  7202  0005CA  D0C9               	goto	i2l2968
  7203                           
  7204                           ; BSR set to: 0
  7205                           ;my_i2c.c: 87: else
  7206                           ;my_i2c.c: 88: {
  7207                           ;my_i2c.c: 89: ic_ptr->status = 0x13;
  7208                           
  7209                           ; BSR set to: 0
  7210                           
  7211                           ;my_i2c.c: 86: }
  7212                           
  7213                           ; BSR set to: 0
  7214                           ;my_i2c.c: 84: SSP1CON2bits.PEN = 1;
  7215                           
  7216                           ; BSR set to: 0
  7217                           ;my_i2c.c: 82: {
  7218                           ;my_i2c.c: 83: ic_ptr->status = 0x5;
  7219  0005CC  0100               	movlb	0	; () banked
  7220  0005CE  EE20 F00D          	lfsr	2,13
  7221  0005D2  0100               	movlb	0	; () banked
  7222  0005D4  51AF               	movf	_ic_ptr& (0+255),w,b
  7223  0005D6  26D9               	addwf	fsr2l,f,c
  7224  0005D8  0100               	movlb	0	; () banked
  7225  0005DA  51B0               	movf	(_ic_ptr+1)& (0+255),w,b
  7226  0005DC  22DA               	addwfc	fsr2h,f,c
  7227  0005DE  0E13               	movlw	19
  7228  0005E0  D0BC               	goto	L4
  7229  0005E2                     i2l2936:
  7230                           
  7231                           ; BSR set to: 0
  7232                           ;my_i2c.c: 94: {
  7233                           ;my_i2c.c: 95: ic_ptr->status = 0x13;
  7234  0005E2  0100               	movlb	0	; () banked
  7235  0005E4  EE20 F00D          	lfsr	2,13
  7236  0005E8  0100               	movlb	0	; () banked
  7237  0005EA  51AF               	movf	_ic_ptr& (0+255),w,b
  7238  0005EC  26D9               	addwf	fsr2l,f,c
  7239  0005EE  0100               	movlb	0	; () banked
  7240  0005F0  51B0               	movf	(_ic_ptr+1)& (0+255),w,b
  7241  0005F2  22DA               	addwfc	fsr2h,f,c
  7242  0005F4  0E13               	movlw	19
  7243  0005F6  6EDF               	movwf	indf2,c
  7244                           
  7245                           ;my_i2c.c: 97: SSPBUF = ic_ptr->slave_addr | 0x01;
  7246  0005F8  0100               	movlb	0	; () banked
  7247  0005FA  EE20 F01C          	lfsr	2,28
  7248  0005FE  0100               	movlb	0	; () banked
  7249  000600  51AF               	movf	_ic_ptr& (0+255),w,b
  7250  000602  26D9               	addwf	fsr2l,f,c
  7251  000604  0100               	movlb	0	; () banked
  7252  000606  51B0               	movf	(_ic_ptr+1)& (0+255),w,b
  7253  000608  22DA               	addwfc	fsr2h,f,c
  7254  00060A  50DF               	movf	indf2,w,c
  7255  00060C  0901               	iorlw	1
  7256  00060E  6EC9               	movwf	4041,c	;volatile
  7257                           
  7258                           ; BSR set to: 0
  7259                           ;my_i2c.c: 98: SSPCON2bits.RCEN = 1;
  7260  000610  86C5               	bsf	4037,3,c	;volatile
  7261                           
  7262                           ;my_i2c.c: 99: break;
  7263  000612  D0D1               	goto	i2l292
  7264  000614                     i2l306:
  7265                           
  7266                           ; BSR set to: 0
  7267                           ;my_i2c.c: 102: {
  7268                           ;my_i2c.c: 103: if (!SSPCON2bits.ACKSTAT)
  7269  000614  BCC5               	btfsc	4037,6,c	;volatile
  7270  000616  D0A3               	goto	i2l2968
  7271                           
  7272                           ; BSR set to: 0
  7273                           ;my_i2c.c: 104: {
  7274                           ;my_i2c.c: 105: SSPCON2bits.RCEN = 1;
  7275  000618  86C5               	bsf	4037,3,c	;volatile
  7276                           
  7277                           ; BSR set to: 0
  7278                           ;my_i2c.c: 107: ic_ptr->status = 0x14;
  7279  00061A  0100               	movlb	0	; () banked
  7280  00061C  EE20 F00D          	lfsr	2,13
  7281  000620  0100               	movlb	0	; () banked
  7282  000622  51AF               	movf	_ic_ptr& (0+255),w,b
  7283  000624  26D9               	addwf	fsr2l,f,c
  7284  000626  0100               	movlb	0	; () banked
  7285  000628  51B0               	movf	(_ic_ptr+1)& (0+255),w,b
  7286  00062A  22DA               	addwfc	fsr2h,f,c
  7287  00062C  0E14               	movlw	20
  7288  00062E  6EDF               	movwf	indf2,c
  7289                           
  7290                           ;my_i2c.c: 108: ic_ptr->event_count++;
  7291  000630  0100               	movlb	0	; () banked
  7292  000632  EE20 F00C          	lfsr	2,12
  7293  000636                     L3:
  7294  000636  0100               	movlb	0	; () banked
  7295  000638  51AF               	movf	_ic_ptr& (0+255),w,b
  7296  00063A  26D9               	addwf	fsr2l,f,c
  7297  00063C  0100               	movlb	0	; () banked
  7298  00063E  51B0               	movf	(_ic_ptr+1)& (0+255),w,b
  7299  000640  22DA               	addwfc	fsr2h,f,c
  7300  000642  2ADF               	incf	indf2,f,c
  7301                           
  7302                           ;my_i2c.c: 109: }
  7303  000644  D0B8               	goto	i2l292
  7304  000646                     i2l2948:
  7305                           
  7306                           ; BSR set to: 0
  7307                           ;my_i2c.c: 119: {
  7308                           ;my_i2c.c: 120: if (data_read )
  7309  000646  5038               	movf	i2c_master_handler@data_read,w,c
  7310  000648  B4D8               	btfsc	status,2,c
  7311  00064A  D0B5               	goto	i2l292
  7312                           
  7313                           ; BSR set to: 0
  7314                           ;my_i2c.c: 121: {
  7315                           ;my_i2c.c: 122: ic_ptr->buffer[ic_ptr->bufind] = i2c_data;
  7316  00064C  0100               	movlb	0	; () banked
  7317  00064E  EE20 F00B          	lfsr	2,11
  7318  000652  0100               	movlb	0	; () banked
  7319  000654  51AF               	movf	_ic_ptr& (0+255),w,b
  7320  000656  26D9               	addwf	fsr2l,f,c
  7321  000658  0100               	movlb	0	; () banked
  7322  00065A  51B0               	movf	(_ic_ptr+1)& (0+255),w,b
  7323  00065C  22DA               	addwfc	fsr2h,f,c
  7324  00065E  50DF               	movf	indf2,w,c
  7325  000660  6E2E               	movwf	??_i2c_master_handler& (0+255),c
  7326  000662  502E               	movf	??_i2c_master_handler,w,c
  7327  000664  0D01               	mullw	1
  7328  000666  50F3               	movf	prodl,w,c
  7329  000668  0100               	movlb	0	; () banked
  7330  00066A  0100               	movlb	0	; () banked
  7331  00066C  25AF               	addwf	_ic_ptr& (0+255),w,b
  7332  00066E  6ED9               	movwf	fsr2l,c
  7333  000670  50F4               	movf	prodh,w,c
  7334  000672  0100               	movlb	0	; () banked
  7335  000674  0100               	movlb	0	; () banked
  7336  000676  21B0               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7337  000678  6EDA               	movwf	fsr2h,c
  7338  00067A  C036  FFDF         	movff	i2c_master_handler@i2c_data,indf2
  7339                           
  7340                           ; BSR set to: 0
  7341                           ;my_i2c.c: 123: if(ic_ptr->bufind < ic_ptr->buflen-1)
  7342  00067E  0100               	movlb	0	; () banked
  7343  000680  EE20 F00A          	lfsr	2,10
  7344  000684  0100               	movlb	0	; () banked
  7345  000686  51AF               	movf	_ic_ptr& (0+255),w,b
  7346  000688  26D9               	addwf	fsr2l,f,c
  7347  00068A  0100               	movlb	0	; () banked
  7348  00068C  51B0               	movf	(_ic_ptr+1)& (0+255),w,b
  7349  00068E  22DA               	addwfc	fsr2h,f,c
  7350  000690  50DF               	movf	indf2,w,c
  7351  000692  6E2E               	movwf	??_i2c_master_handler& (0+255),c
  7352  000694  0EFF               	movlw	255
  7353  000696  242E               	addwf	??_i2c_master_handler,w,c
  7354  000698  6E2F               	movwf	(??_i2c_master_handler+1)& (0+255),c
  7355  00069A  6A30               	clrf	(??_i2c_master_handler+2)& (0+255),c
  7356  00069C  0EFF               	movlw	255
  7357  00069E  2230               	addwfc	(??_i2c_master_handler+2)& (0+255),f,c
  7358  0006A0  0100               	movlb	0	; () banked
  7359  0006A2  EE20 F00B          	lfsr	2,11
  7360  0006A6  0100               	movlb	0	; () banked
  7361  0006A8  51AF               	movf	_ic_ptr& (0+255),w,b
  7362  0006AA  26D9               	addwf	fsr2l,f,c
  7363  0006AC  0100               	movlb	0	; () banked
  7364  0006AE  51B0               	movf	(_ic_ptr+1)& (0+255),w,b
  7365  0006B0  22DA               	addwfc	fsr2h,f,c
  7366  0006B2  50DF               	movf	indf2,w,c
  7367  0006B4  6E31               	movwf	(??_i2c_master_handler+3)& (0+255),c
  7368  0006B6  6A32               	clrf	(??_i2c_master_handler+4)& (0+255),c
  7369  0006B8  5032               	movf	??_i2c_master_handler+4,w,c
  7370  0006BA  0A80               	xorlw	128
  7371  0006BC  6E33               	movwf	(??_i2c_master_handler+5)& (0+255),c
  7372  0006BE  502F               	movf	??_i2c_master_handler+1,w,c
  7373  0006C0  5C31               	subwf	??_i2c_master_handler+3,w,c
  7374  0006C2  5030               	movf	??_i2c_master_handler+2,w,c
  7375  0006C4  0A80               	xorlw	128
  7376  0006C6  5833               	subwfb	(??_i2c_master_handler+5)& (0+255),w,c
  7377  0006C8  B0D8               	btfsc	status,0,c
  7378  0006CA  D018               	goto	i2l311
  7379                           
  7380                           ; BSR set to: 0
  7381                           ;my_i2c.c: 124: {
  7382                           ;my_i2c.c: 125: ic_ptr->status = 0x13;
  7383  0006CC  0100               	movlb	0	; () banked
  7384  0006CE  EE20 F00D          	lfsr	2,13
  7385  0006D2  0100               	movlb	0	; () banked
  7386  0006D4  51AF               	movf	_ic_ptr& (0+255),w,b
  7387  0006D6  26D9               	addwf	fsr2l,f,c
  7388  0006D8  0100               	movlb	0	; () banked
  7389  0006DA  51B0               	movf	(_ic_ptr+1)& (0+255),w,b
  7390  0006DC  22DA               	addwfc	fsr2h,f,c
  7391  0006DE  0E13               	movlw	19
  7392  0006E0  6EDF               	movwf	indf2,c
  7393                           
  7394                           ;my_i2c.c: 126: ic_ptr->bufind++;
  7395  0006E2  0100               	movlb	0	; () banked
  7396  0006E4  EE20 F00B          	lfsr	2,11
  7397  0006E8  0100               	movlb	0	; () banked
  7398  0006EA  51AF               	movf	_ic_ptr& (0+255),w,b
  7399  0006EC  26D9               	addwf	fsr2l,f,c
  7400  0006EE  0100               	movlb	0	; () banked
  7401  0006F0  51B0               	movf	(_ic_ptr+1)& (0+255),w,b
  7402  0006F2  22DA               	addwfc	fsr2h,f,c
  7403  0006F4  2ADF               	incf	indf2,f,c
  7404                           
  7405                           ; BSR set to: 0
  7406                           ;my_i2c.c: 127: SSPCON2bits.ACKDT = 0;
  7407  0006F6  9AC5               	bcf	4037,5,c	;volatile
  7408                           
  7409                           ; BSR set to: 0
  7410                           ;my_i2c.c: 128: SSPCON2bits.ACKEN = 1;
  7411  0006F8  88C5               	bsf	4037,4,c	;volatile
  7412                           
  7413                           ;my_i2c.c: 130: }
  7414  0006FA  D05D               	goto	i2l292
  7415  0006FC                     i2l311:
  7416                           
  7417                           ; BSR set to: 0
  7418                           ;my_i2c.c: 131: else
  7419                           ;my_i2c.c: 132: {
  7420                           ;my_i2c.c: 134: SSPCON2bits.ACKDT = 1;
  7421  0006FC  8AC5               	bsf	4037,5,c	;volatile
  7422                           
  7423                           ;my_i2c.c: 135: SSPCON2bits.ACKEN = 1;
  7424  0006FE  88C5               	bsf	4037,4,c	;volatile
  7425  000700                     i2l2960:
  7426  000700  30C7               	rrcf	4039,w,c	;volatile
  7427  000702  32E8               	rrcf	wreg,f,c
  7428  000704  0B01               	andlw	1
  7429  000706  6E2E               	movwf	??_i2c_master_handler& (0+255),c
  7430  000708  50C5               	movf	4037,w,c	;volatile
  7431  00070A  0B1F               	andlw	31
  7432  00070C  102E               	iorwf	??_i2c_master_handler,w,c
  7433  00070E  0900               	iorlw	0
  7434  000710  A4D8               	btfss	status,2,c
  7435  000712  D7F6               	goto	i2l2960
  7436                           
  7437                           ;my_i2c.c: 138: ToMainHigh_sendmsg(6, 40, ic_ptr->buffer);
  7438  000714  6E2E               	movwf	??_i2c_master_handler& (0+255),c
  7439  000716  0E06               	movlw	6
  7440  000718  6E2A               	movwf	?_ToMainHigh_sendmsg,c
  7441  00071A  502E               	movf	??_i2c_master_handler& (0+255),w,c
  7442  00071C  6E2F               	movwf	(??_i2c_master_handler+1)& (0+255),c
  7443  00071E  0E28               	movlw	40
  7444  000720  6E2B               	movwf	?_ToMainHigh_sendmsg+1,c
  7445  000722  502F               	movf	(??_i2c_master_handler+1)& (0+255),w,c
  7446  000724  C0AF  F02C         	movff	_ic_ptr,?_ToMainHigh_sendmsg+2
  7447  000728  C0B0  F02D         	movff	_ic_ptr+1,?_ToMainHigh_sendmsg+3
  7448  00072C  ECA5  F00B         	call	_ToMainHigh_sendmsg	;wreg free
  7449                           
  7450                           ;my_i2c.c: 139: ic_ptr->status = 0x15;
  7451  000730  0100               	movlb	0	; () banked
  7452  000732  EE20 F00D          	lfsr	2,13
  7453  000736  0100               	movlb	0	; () banked
  7454  000738  51AF               	movf	_ic_ptr& (0+255),w,b
  7455  00073A  26D9               	addwf	fsr2l,f,c
  7456  00073C  0100               	movlb	0	; () banked
  7457  00073E  51B0               	movf	(_ic_ptr+1)& (0+255),w,b
  7458  000740  22DA               	addwfc	fsr2h,f,c
  7459  000742  0E15               	movlw	21
  7460  000744  6EDF               	movwf	indf2,c
  7461                           
  7462                           ; BSR set to: 0
  7463                           ;my_i2c.c: 140: ic_ptr->bufind = 0;
  7464  000746  0100               	movlb	0	; () banked
  7465  000748  EE20 F00B          	lfsr	2,11
  7466  00074C  0100               	movlb	0	; () banked
  7467  00074E  51AF               	movf	_ic_ptr& (0+255),w,b
  7468  000750  26D9               	addwf	fsr2l,f,c
  7469  000752  0100               	movlb	0	; () banked
  7470  000754  51B0               	movf	(_ic_ptr+1)& (0+255),w,b
  7471  000756  22DA               	addwfc	fsr2h,f,c
  7472  000758  0E00               	movlw	0
  7473  00075A                     L4:
  7474  00075A  6EDF               	movwf	indf2,c
  7475  00075C  D02C               	goto	i2l292
  7476  00075E                     i2l2968:
  7477                           
  7478                           ; BSR set to: 0
  7479                           ;my_i2c.c: 146: {
  7480                           ;my_i2c.c: 147: ic_ptr->status = 0x5;
  7481  00075E  0100               	movlb	0	; () banked
  7482  000760  EE20 F00D          	lfsr	2,13
  7483  000764  0100               	movlb	0	; () banked
  7484  000766  51AF               	movf	_ic_ptr& (0+255),w,b
  7485  000768  26D9               	addwf	fsr2l,f,c
  7486  00076A  0100               	movlb	0	; () banked
  7487  00076C  51B0               	movf	(_ic_ptr+1)& (0+255),w,b
  7488  00076E  22DA               	addwfc	fsr2h,f,c
  7489  000770  0E05               	movlw	5
  7490  000772  6EDF               	movwf	indf2,c
  7491                           
  7492                           ; BSR set to: 0
  7493                           ;my_i2c.c: 149: SSPCON2bits.PEN = 1;
  7494  000774  84C5               	bsf	4037,2,c	;volatile
  7495                           
  7496                           ;my_i2c.c: 152: break;
  7497  000776  D01F               	goto	i2l292
  7498  000778                     i2l2974:
  7499  000778  0100               	movlb	0	; () banked
  7500  00077A  EE20 F00D          	lfsr	2,13
  7501  00077E  0100               	movlb	0	; () banked
  7502  000780  51AF               	movf	_ic_ptr& (0+255),w,b
  7503  000782  26D9               	addwf	fsr2l,f,c
  7504  000784  0100               	movlb	0	; () banked
  7505  000786  51B0               	movf	(_ic_ptr+1)& (0+255),w,b
  7506  000788  22DA               	addwfc	fsr2h,f,c
  7507  00078A  50DF               	movf	indf2,w,c
  7508                           
  7509                           ; Switch size 1, requested type "space"
  7510                           ; Number of cases is 7, Range of values is 5 to 21
  7511                           ; switch strategies available:
  7512                           ; Name         Instructions Cycles
  7513                           ; simple_byte           22    12 (average)
  7514                           ;	Chosen strategy is simple_byte
  7515  00078C  0A05               	xorlw	5	; case 5
  7516  00078E  B4D8               	btfsc	status,2,c
  7517  000790  D69E               	goto	i2l2916
  7518  000792  0A0C               	xorlw	12	; case 9
  7519  000794  B4D8               	btfsc	status,2,c
  7520  000796  D6A6               	goto	i2l2918
  7521  000798  0A19               	xorlw	25	; case 16
  7522  00079A  B4D8               	btfsc	status,2,c
  7523  00079C  D6BB               	goto	i2l2920
  7524  00079E  0A02               	xorlw	2	; case 18
  7525  0007A0  B4D8               	btfsc	status,2,c
  7526  0007A2  D71F               	goto	i2l2936
  7527  0007A4  0A01               	xorlw	1	; case 19
  7528  0007A6  B4D8               	btfsc	status,2,c
  7529  0007A8  D735               	goto	i2l306
  7530  0007AA  0A07               	xorlw	7	; case 20
  7531  0007AC  B4D8               	btfsc	status,2,c
  7532  0007AE  D74B               	goto	i2l2948
  7533  0007B0  0A01               	xorlw	1	; case 21
  7534  0007B2  B4D8               	btfsc	status,2,c
  7535  0007B4  D7D4               	goto	i2l2968
  7536  0007B6                     i2l292:
  7537                           
  7538                           ;my_i2c.c: 155: }
  7539                           ;my_i2c.c: 181: LATA0 = 1;
  7540  0007B6  8089               	bsf	3977,0,c	;volatile
  7541                           
  7542                           ;my_i2c.c: 182: LATA1 = 0;
  7543  0007B8  9289               	bcf	3977,1,c	;volatile
  7544  0007BA  0012               	return	
  7545  0007BC                     __end_of_i2c_master_handler:
  7546                           	opt stack 0
  7547                           pclatu	equ	0xFFB
  7548                           pclath	equ	0xFFA
  7549                           tblptru	equ	0xFF8
  7550                           tblptrh	equ	0xFF7
  7551                           tblptrl	equ	0xFF6
  7552                           tablat	equ	0xFF5
  7553                           prodh	equ	0xFF4
  7554                           prodl	equ	0xFF3
  7555                           intcon	equ	0xFF2
  7556                           postinc0	equ	0xFEE
  7557                           fsr0h	equ	0xFEA
  7558                           fsr0l	equ	0xFE9
  7559                           wreg	equ	0xFE8
  7560                           indf1	equ	0xFE7
  7561                           fsr1h	equ	0xFE2
  7562                           fsr1l	equ	0xFE1
  7563                           bsr	equ	0xFE0
  7564                           indf2	equ	0xFDF
  7565                           postinc2	equ	0xFDE
  7566                           postdec2	equ	0xFDD
  7567                           fsr2h	equ	0xFDA
  7568                           fsr2l	equ	0xFD9
  7569                           status	equ	0xFD8
  7570                           
  7571 ;; *************** function _ToMainHigh_sendmsg *****************
  7572 ;; Defined at:
  7573 ;;		line 126 in file "../src/messages.c"
  7574 ;; Parameters:    Size  Location     Type
  7575 ;;  length          1   41[COMRAM] unsigned char 
  7576 ;;  msgtype         1   42[COMRAM] unsigned char 
  7577 ;;  data            2   43[COMRAM] PTR void 
  7578 ;;		 -> timer0_int_handler@val(2), NULL(0), main@ic(29), 
  7579 ;; Auto vars:     Size  Location     Type
  7580 ;;		None
  7581 ;; Return value:  Size  Location     Type
  7582 ;;                  1    wreg      char 
  7583 ;; Registers used:
  7584 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7585 ;; Tracked objects:
  7586 ;;		On entry : 0/0
  7587 ;;		On exit  : 0/0
  7588 ;;		Unchanged: 0/0
  7589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7590 ;;      Params:         4       0       0       0       0
  7591 ;;      Locals:         0       0       0       0       0
  7592 ;;      Temps:          0       0       0       0       0
  7593 ;;      Totals:         4       0       0       0       0
  7594 ;;Total ram usage:        4 bytes
  7595 ;; Hardware stack levels used:    1
  7596 ;; Hardware stack levels required when called:    2
  7597 ;; This function calls:
  7598 ;;		_send_msg
  7599 ;; This function is called by:
  7600 ;;		_i2c_master_handler
  7601 ;;		_timer0_int_handler
  7602 ;; This function uses a non-reentrant model
  7603 ;;
  7604                           
  7605                           	psect	text49
  7606  00174A                     __ptext49:
  7607                           	opt stack 0
  7608  00174A                     _ToMainHigh_sendmsg:
  7609                           	opt stack 19
  7610                           
  7611                           ;messages.c: 132: return (send_msg(&ToMainHigh_MQ, length, msgtype, data));
  7612                           ;	Return value of _ToMainHigh_sendmsg is never used
  7613                           
  7614                           ;incstack = 0
  7615                           ;incstack = 0
  7616  00174A  0101               	movlb	1	; () banked
  7617  00174C  0E01               	movlw	high _ToMainHigh_MQ
  7618  00174E  6E1F               	movwf	?_send_msg+1,c
  7619  001750  0101               	movlb	1	; () banked
  7620  001752  0E68               	movlw	low _ToMainHigh_MQ
  7621  001754  6E1E               	movwf	?_send_msg,c
  7622  001756  C02A  F020         	movff	ToMainHigh_sendmsg@length,?_send_msg+2
  7623  00175A  C02B  F021         	movff	ToMainHigh_sendmsg@msgtype,?_send_msg+3
  7624  00175E  C02C  F022         	movff	ToMainHigh_sendmsg@data,?_send_msg+4
  7625  001762  C02D  F023         	movff	ToMainHigh_sendmsg@data+1,?_send_msg+5
  7626  001766  ECBA  F007         	call	_send_msg	;wreg free
  7627  00176A  0012               	return	
  7628  00176C                     __end_of_ToMainHigh_sendmsg:
  7629                           	opt stack 0
  7630                           pclatu	equ	0xFFB
  7631                           pclath	equ	0xFFA
  7632                           tblptru	equ	0xFF8
  7633                           tblptrh	equ	0xFF7
  7634                           tblptrl	equ	0xFF6
  7635                           tablat	equ	0xFF5
  7636                           prodh	equ	0xFF4
  7637                           prodl	equ	0xFF3
  7638                           intcon	equ	0xFF2
  7639                           postinc0	equ	0xFEE
  7640                           fsr0h	equ	0xFEA
  7641                           fsr0l	equ	0xFE9
  7642                           wreg	equ	0xFE8
  7643                           indf1	equ	0xFE7
  7644                           fsr1h	equ	0xFE2
  7645                           fsr1l	equ	0xFE1
  7646                           bsr	equ	0xFE0
  7647                           indf2	equ	0xFDF
  7648                           postinc2	equ	0xFDE
  7649                           postdec2	equ	0xFDD
  7650                           fsr2h	equ	0xFDA
  7651                           fsr2l	equ	0xFD9
  7652                           status	equ	0xFD8
  7653                           
  7654 ;; *************** function _send_msg *****************
  7655 ;; Defined at:
  7656 ;;		line 24 in file "../src/messages.c"
  7657 ;; Parameters:    Size  Location     Type
  7658 ;;  qptr            2   29[COMRAM] PTR struct __msg_queue
  7659 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  7660 ;;  length          1   31[COMRAM] unsigned char 
  7661 ;;  msgtype         1   32[COMRAM] unsigned char 
  7662 ;;  data            2   33[COMRAM] PTR void 
  7663 ;;		 -> timer0_int_handler@val(2), NULL(0), main@ic(29), main@uc(16), 
  7664 ;; Auto vars:     Size  Location     Type
  7665 ;;  qmsg            2   39[COMRAM] PTR struct __msg
  7666 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  7667 ;;  tlength         2   36[COMRAM] unsigned int 
  7668 ;;  slot            1   38[COMRAM] unsigned char 
  7669 ;; Return value:  Size  Location     Type
  7670 ;;                  1    wreg      char 
  7671 ;; Registers used:
  7672 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7673 ;; Tracked objects:
  7674 ;;		On entry : 0/0
  7675 ;;		On exit  : 0/0
  7676 ;;		Unchanged: 0/0
  7677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7678 ;;      Params:         6       0       0       0       0
  7679 ;;      Locals:         5       0       0       0       0
  7680 ;;      Temps:          1       0       0       0       0
  7681 ;;      Totals:        12       0       0       0       0
  7682 ;;Total ram usage:       12 bytes
  7683 ;; Hardware stack levels used:    1
  7684 ;; Hardware stack levels required when called:    1
  7685 ;; This function calls:
  7686 ;;		i2_memcpy
  7687 ;; This function is called by:
  7688 ;;		_ToMainLow_sendmsg
  7689 ;;		_ToMainHigh_sendmsg
  7690 ;;		_FromMainLow_sendmsg
  7691 ;;		_FromMainHigh_sendmsg
  7692 ;; This function uses a non-reentrant model
  7693 ;;
  7694                           
  7695                           	psect	text50
  7696  000F74                     __ptext50:
  7697                           	opt stack 0
  7698  000F74                     _send_msg:
  7699                           	opt stack 19
  7700                           
  7701                           ;messages.c: 25: unsigned char slot;
  7702                           ;messages.c: 27: msg *qmsg;
  7703                           ;messages.c: 28: size_t tlength = length;
  7704                           
  7705                           ;incstack = 0
  7706                           ;incstack = 0
  7707  000F74  C020  F025         	movff	send_msg@length,send_msg@tlength
  7708  000F78  6A26               	clrf	send_msg@tlength+1,c
  7709                           
  7710                           ;messages.c: 38: slot = qptr->cur_write_ind;
  7711  000F7A  EE20 F034          	lfsr	2,52
  7712  000F7E  501E               	movf	send_msg@qptr,w,c
  7713  000F80  26D9               	addwf	fsr2l,f,c
  7714  000F82  501F               	movf	send_msg@qptr+1,w,c
  7715  000F84  22DA               	addwfc	fsr2h,f,c
  7716  000F86  50DF               	movf	indf2,w,c
  7717  000F88  6E27               	movwf	send_msg@slot,c
  7718                           
  7719                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  7720  000F8A  5027               	movf	send_msg@slot,w,c
  7721  000F8C  0D0D               	mullw	13
  7722  000F8E  50F3               	movf	prodl,w,c
  7723  000F90  241E               	addwf	send_msg@qptr,w,c
  7724  000F92  6E28               	movwf	send_msg@qmsg,c
  7725  000F94  50F4               	movf	prodh,w,c
  7726  000F96  201F               	addwfc	send_msg@qptr+1,w,c
  7727  000F98  6E29               	movwf	send_msg@qmsg+1,c
  7728                           
  7729                           ;messages.c: 41: if (qmsg->full != 0) {
  7730  000F9A  C028  FFD9         	movff	send_msg@qmsg,fsr2l
  7731  000F9E  C029  FFDA         	movff	send_msg@qmsg+1,fsr2h
  7732  000FA2  50DF               	movf	indf2,w,c
  7733  000FA4  B4D8               	btfsc	status,2,c
  7734  000FA6  D002               	goto	i2l3338
  7735                           
  7736                           ;messages.c: 42: return (-1);
  7737  000FA8  0EFF               	movlw	255
  7738  000FAA  0012               	return	
  7739  000FAC                     i2l3338:
  7740                           
  7741                           ;messages.c: 43: }
  7742                           ;messages.c: 46: qmsg->length = length;
  7743  000FAC  EE20 F001          	lfsr	2,1
  7744  000FB0  5028               	movf	send_msg@qmsg,w,c
  7745  000FB2  26D9               	addwf	fsr2l,f,c
  7746  000FB4  5029               	movf	send_msg@qmsg+1,w,c
  7747  000FB6  22DA               	addwfc	fsr2h,f,c
  7748  000FB8  C020  FFDF         	movff	send_msg@length,indf2
  7749                           
  7750                           ;messages.c: 47: qmsg->msgtype = msgtype;
  7751  000FBC  EE20 F002          	lfsr	2,2
  7752  000FC0  5028               	movf	send_msg@qmsg,w,c
  7753  000FC2  26D9               	addwf	fsr2l,f,c
  7754  000FC4  5029               	movf	send_msg@qmsg+1,w,c
  7755  000FC6  22DA               	addwfc	fsr2h,f,c
  7756  000FC8  C021  FFDF         	movff	send_msg@msgtype,indf2
  7757                           
  7758                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  7759  000FCC  0E03               	movlw	3
  7760  000FCE  2428               	addwf	send_msg@qmsg,w,c
  7761  000FD0  6E14               	movwf	?i2_memcpy,c
  7762  000FD2  0E00               	movlw	0
  7763  000FD4  2029               	addwfc	send_msg@qmsg+1,w,c
  7764  000FD6  6E15               	movwf	?i2_memcpy+1,c
  7765  000FD8  C022  F016         	movff	send_msg@data,?i2_memcpy+2
  7766  000FDC  C023  F017         	movff	send_msg@data+1,?i2_memcpy+3
  7767  000FE0  C025  F018         	movff	send_msg@tlength,?i2_memcpy+4
  7768  000FE4  C026  F019         	movff	send_msg@tlength+1,?i2_memcpy+5
  7769  000FE8  EC78  F00A         	call	i2_memcpy	;wreg free
  7770                           
  7771                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  7772  000FEC  EE20 F034          	lfsr	2,52
  7773  000FF0  501E               	movf	send_msg@qptr,w,c
  7774  000FF2  26D9               	addwf	fsr2l,f,c
  7775  000FF4  501F               	movf	send_msg@qptr+1,w,c
  7776  000FF6  22DA               	addwfc	fsr2h,f,c
  7777  000FF8  EE10 F034          	lfsr	1,52
  7778  000FFC  501E               	movf	send_msg@qptr,w,c
  7779  000FFE  26E1               	addwf	fsr1l,f,c
  7780  001000  501F               	movf	send_msg@qptr+1,w,c
  7781  001002  22E2               	addwfc	fsr1h,f,c
  7782  001004  50E7               	movf	indf1,w,c
  7783  001006  6E24               	movwf	??_send_msg& (0+255),c
  7784  001008  2824               	incf	??_send_msg,w,c
  7785  00100A  0B03               	andlw	3
  7786  00100C  6EDF               	movwf	indf2,c
  7787                           
  7788                           ;messages.c: 59: qmsg->full = 1;
  7789  00100E  C028  FFD9         	movff	send_msg@qmsg,fsr2l
  7790  001012  C029  FFDA         	movff	send_msg@qmsg+1,fsr2h
  7791  001016  0E01               	movlw	1
  7792  001018  6EDF               	movwf	indf2,c
  7793                           
  7794                           ;messages.c: 60: return (1);
  7795  00101A  0E01               	movlw	1
  7796  00101C  0012               	return	
  7797  00101E                     __end_of_send_msg:
  7798                           	opt stack 0
  7799                           pclatu	equ	0xFFB
  7800                           pclath	equ	0xFFA
  7801                           tblptru	equ	0xFF8
  7802                           tblptrh	equ	0xFF7
  7803                           tblptrl	equ	0xFF6
  7804                           tablat	equ	0xFF5
  7805                           prodh	equ	0xFF4
  7806                           prodl	equ	0xFF3
  7807                           intcon	equ	0xFF2
  7808                           postinc0	equ	0xFEE
  7809                           fsr0h	equ	0xFEA
  7810                           fsr0l	equ	0xFE9
  7811                           wreg	equ	0xFE8
  7812                           indf1	equ	0xFE7
  7813                           fsr1h	equ	0xFE2
  7814                           fsr1l	equ	0xFE1
  7815                           bsr	equ	0xFE0
  7816                           indf2	equ	0xFDF
  7817                           postinc2	equ	0xFDE
  7818                           postdec2	equ	0xFDD
  7819                           fsr2h	equ	0xFDA
  7820                           fsr2l	equ	0xFD9
  7821                           status	equ	0xFD8
  7822                           
  7823 ;; *************** function i2_memcpy *****************
  7824 ;; Defined at:
  7825 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\memcpy.c"
  7826 ;; Parameters:    Size  Location     Type
  7827 ;;  memcpy          2   19[COMRAM] PTR void 
  7828 ;;		 -> timer0_int_handler@val(2), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  7829 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), 
  7830 ;;  memcpy          2   21[COMRAM] PTR const void 
  7831 ;;		 -> timer0_int_handler@val(2), NULL(0), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  7832 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@ic(29), main@uc(16), 
  7833 ;;  memcpy          2   23[COMRAM] unsigned int 
  7834 ;; Auto vars:     Size  Location     Type
  7835 ;;  memcpy          2   27[COMRAM] PTR const unsigned char 
  7836 ;;		 -> timer0_int_handler@val(2), NULL(0), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  7837 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@ic(29), main@uc(16), 
  7838 ;;  memcpy          2   25[COMRAM] PTR unsigned char 
  7839 ;;		 -> timer0_int_handler@val(2), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  7840 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), 
  7841 ;; Return value:  Size  Location     Type
  7842 ;;                  2   19[COMRAM] PTR void 
  7843 ;; Registers used:
  7844 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  7845 ;; Tracked objects:
  7846 ;;		On entry : 0/0
  7847 ;;		On exit  : 0/0
  7848 ;;		Unchanged: 0/0
  7849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7850 ;;      Params:         6       0       0       0       0
  7851 ;;      Locals:         4       0       0       0       0
  7852 ;;      Temps:          0       0       0       0       0
  7853 ;;      Totals:        10       0       0       0       0
  7854 ;;Total ram usage:       10 bytes
  7855 ;; Hardware stack levels used:    1
  7856 ;; This function calls:
  7857 ;;		Nothing
  7858 ;; This function is called by:
  7859 ;;		_send_msg
  7860 ;;		i2_recv_msg
  7861 ;; This function uses a non-reentrant model
  7862 ;;
  7863                           
  7864                           	psect	text51
  7865  0014F0                     __ptext51:
  7866                           	opt stack 0
  7867  0014F0                     i2_memcpy:
  7868                           	opt stack 19
  7869                           
  7870                           ;incstack = 0
  7871                           ;incstack = 0
  7872  0014F0  C016  F01C         	movff	i2memcpy@s1,i2memcpy@s
  7873  0014F4  C017  F01D         	movff	i2memcpy@s1+1,i2memcpy@s+1
  7874  0014F8  C014  F01A         	movff	i2memcpy@d1,i2memcpy@d
  7875  0014FC  C015  F01B         	movff	i2memcpy@d1+1,i2memcpy@d+1
  7876  001500  D00E               	goto	i2l3532
  7877  001502                     i2l3526:
  7878  001502  C01C  FFD9         	movff	i2memcpy@s,fsr2l
  7879  001506  C01D  FFDA         	movff	i2memcpy@s+1,fsr2h
  7880  00150A  C01A  FFE1         	movff	i2memcpy@d,fsr1l
  7881  00150E  C01B  FFE2         	movff	i2memcpy@d+1,fsr1h
  7882  001512  CFDF FFE7          	movff	indf2,indf1
  7883  001516  4A1C               	infsnz	i2memcpy@s,f,c
  7884  001518  2A1D               	incf	i2memcpy@s+1,f,c
  7885  00151A  4A1A               	infsnz	i2memcpy@d,f,c
  7886  00151C  2A1B               	incf	i2memcpy@d+1,f,c
  7887  00151E                     i2l3532:
  7888  00151E  0618               	decf	i2memcpy@n,f,c
  7889  001520  A0D8               	btfss	status,0,c
  7890  001522  0619               	decf	i2memcpy@n+1,f,c
  7891  001524  2818               	incf	i2memcpy@n& (0+255),w,c
  7892  001526  B4D8               	btfsc	status,2,c
  7893  001528  2819               	incf	(i2memcpy@n+1)& (0+255),w,c
  7894  00152A  B4D8               	btfsc	status,2,c
  7895                           
  7896                           ;	Return value of i2_memcpy is never used
  7897  00152C  0012               	return	
  7898  00152E  D7E9               	goto	i2l3526
  7899  001530                     __end_ofi2_memcpy:
  7900                           	opt stack 0
  7901  0000                     pclatu	equ	0xFFB
  7902                           pclath	equ	0xFFA
  7903                           tblptru	equ	0xFF8
  7904                           tblptrh	equ	0xFF7
  7905                           tblptrl	equ	0xFF6
  7906                           tablat	equ	0xFF5
  7907                           prodh	equ	0xFF4
  7908                           prodl	equ	0xFF3
  7909                           intcon	equ	0xFF2
  7910                           postinc0	equ	0xFEE
  7911                           fsr0h	equ	0xFEA
  7912                           fsr0l	equ	0xFE9
  7913                           wreg	equ	0xFE8
  7914                           indf1	equ	0xFE7
  7915                           fsr1h	equ	0xFE2
  7916                           fsr1l	equ	0xFE1
  7917                           bsr	equ	0xFE0
  7918                           indf2	equ	0xFDF
  7919                           postinc2	equ	0xFDE
  7920                           postdec2	equ	0xFDD
  7921                           fsr2h	equ	0xFDA
  7922                           fsr2l	equ	0xFD9
  7923                           status	equ	0xFD8
  7924                           pclatu	equ	0xFFB
  7925                           pclath	equ	0xFFA
  7926                           tblptru	equ	0xFF8
  7927                           tblptrh	equ	0xFF7
  7928                           tblptrl	equ	0xFF6
  7929                           tablat	equ	0xFF5
  7930                           prodh	equ	0xFF4
  7931                           prodl	equ	0xFF3
  7932                           intcon	equ	0xFF2
  7933                           postinc0	equ	0xFEE
  7934                           fsr0h	equ	0xFEA
  7935                           fsr0l	equ	0xFE9
  7936                           wreg	equ	0xFE8
  7937                           indf1	equ	0xFE7
  7938                           fsr1h	equ	0xFE2
  7939                           fsr1l	equ	0xFE1
  7940                           bsr	equ	0xFE0
  7941                           indf2	equ	0xFDF
  7942                           postinc2	equ	0xFDE
  7943                           postdec2	equ	0xFDD
  7944                           fsr2h	equ	0xFDA
  7945                           fsr2l	equ	0xFD9
  7946                           status	equ	0xFD8
  7947                           
  7948                           	psect	rparam
  7949  0000                     pclatu	equ	0xFFB
  7950                           pclath	equ	0xFFA
  7951                           tblptru	equ	0xFF8
  7952                           tblptrh	equ	0xFF7
  7953                           tblptrl	equ	0xFF6
  7954                           tablat	equ	0xFF5
  7955                           prodh	equ	0xFF4
  7956                           prodl	equ	0xFF3
  7957                           intcon	equ	0xFF2
  7958                           postinc0	equ	0xFEE
  7959                           fsr0h	equ	0xFEA
  7960                           fsr0l	equ	0xFE9
  7961                           wreg	equ	0xFE8
  7962                           indf1	equ	0xFE7
  7963                           fsr1h	equ	0xFE2
  7964                           fsr1l	equ	0xFE1
  7965                           bsr	equ	0xFE0
  7966                           indf2	equ	0xFDF
  7967                           postinc2	equ	0xFDE
  7968                           postdec2	equ	0xFDD
  7969                           fsr2h	equ	0xFDA
  7970                           fsr2l	equ	0xFD9
  7971                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        3
    BSS         307
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     56      99
    BANK0           128     44      49
    BANK1           256      0     212
    BANK2           256     76     130
    BANK3           256      0       0

Pointer List with Targets:

    ?_ReadADC	int  size(2) Largest target is 0

    ?_memcpy	PTR void  size(2) Largest target is 54
		 -> timer0_int_handler@val(COMRAM[2]), FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), 
		 -> ToMainLow_MQ(BANK1[54]), main@msgbuffer(BANK2[11]), 

    motor_control_thread@mptr	PTR struct __motor_control_thread_struct size(2) Largest target is 4
		 -> main@motorthread_data(BANK2[4]), 

    timer1_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK2[2]), 

    timer0_lthread@tptr	PTR struct __timer0_thread_struct size(2) Largest target is 2
		 -> main@t0thread_data(BANK2[2]), 

    uart_lthread@uptr	PTR struct __uart_thread_struct size(2) Largest target is 2
		 -> main@uthread_data(BANK2[2]), 

    ?_in_high_int	int  size(2) Largest target is 0

    memcpy@d1	PTR void  size(2) Largest target is 54
		 -> timer0_int_handler@val(COMRAM[2]), FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), 
		 -> ToMainLow_MQ(BANK1[54]), main@msgbuffer(BANK2[11]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 54
		 -> timer0_int_handler@val(COMRAM[2]), FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), 
		 -> ToMainLow_MQ(BANK1[54]), main@msgbuffer(BANK2[11]), 

    memcpy@s1	PTR const void  size(2) Largest target is 54
		 -> timer0_int_handler@val(COMRAM[2]), NULL(NULL[0]), FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), 
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), main@ic(BANK2[29]), main@uc(BANK2[16]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 54
		 -> timer0_int_handler@val(COMRAM[2]), NULL(NULL[0]), FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), 
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), main@ic(BANK2[29]), main@uc(BANK2[16]), 

    motor_control_thread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    uart_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    init_timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK2[2]), 

    timer0_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    timer0_lthread@msgval	PTR unsigned int  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    init_uart_recv@uc	PTR struct __uart_comm size(2) Largest target is 16
		 -> main@uc(BANK2[16]), 

    putIntoUARTBuffer@buffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    uc_ptr	PTR struct __uart_comm size(2) Largest target is 16
		 -> NULL(NULL[0]), main@uc(BANK2[16]), 

    init_i2c@ic	PTR struct __i2c_comm size(2) Largest target is 29
		 -> main@ic(BANK2[29]), 

    start_i2c_slave_reply@msg	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    ic_ptr	PTR struct __i2c_comm size(2) Largest target is 29
		 -> NULL(NULL[0]), main@ic(BANK2[29]), 

    check_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    FromMainHigh_recvmsg@data	PTR void  size(2) Largest target is 2
		 -> timer0_int_handler@val(COMRAM[2]), 

    FromMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 2
		 -> timer0_int_handler@msgtype(COMRAM[2]), 

    ToMainHigh_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    ToMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK2[1]), 

    ToMainHigh_sendmsg@data	PTR void  size(2) Largest target is 29
		 -> timer0_int_handler@val(COMRAM[2]), NULL(NULL[0]), main@ic(BANK2[29]), 

    ToMainLow_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    ToMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK2[1]), 

    ToMainLow_sendmsg@data	PTR void  size(2) Largest target is 16
		 -> NULL(NULL[0]), main@uc(BANK2[16]), 

    recv_msg@msgtype	PTR unsigned char  size(2) Largest target is 2
		 -> timer0_int_handler@msgtype(COMRAM[2]), main@msgtype(BANK2[1]), 

    recv_msg@data	PTR void  size(2) Largest target is 11
		 -> timer0_int_handler@val(COMRAM[2]), main@msgbuffer(BANK2[11]), 

    recv_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    recv_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    sp__memcpy	PTR void  size(2) Largest target is 54
		 -> timer0_int_handler@val(COMRAM[2]), FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), 
		 -> ToMainLow_MQ(BANK1[54]), main@msgbuffer(BANK2[11]), 

    send_msg@data	PTR void  size(2) Largest target is 29
		 -> timer0_int_handler@val(COMRAM[2]), NULL(NULL[0]), main@ic(BANK2[29]), main@uc(BANK2[16]), 

    send_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    send_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    init_queue@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptHandlerHigh in COMRAM

    _InterruptHandlerHigh->_i2c_master_handler
    _InterruptHandlerHigh->_timer0_int_handler
    _SleepIfOkay->i2_in_low_int
    i2_in_low_int->i2_in_high_int
    _uart_recv_int_handler->_ToMainLow_sendmsg
    _ToMainLow_sendmsg->_send_msg
    _adc_int_handler->_ReadADC
    _timer0_int_handler->_FromMainHigh_recvmsg
    _FromMainHigh_recvmsg->i2_recv_msg
    i2_recv_msg->i2_memcpy
    _i2c_master_handler->_ToMainHigh_sendmsg
    _ToMainHigh_sendmsg->_send_msg
    _send_msg->i2_memcpy
    _InterruptHandlerLow->_timer1_int_handler
    _InterruptHandlerLow->_uart_tx_int_handler
    _timer1_int_handler->_i2c_master_recv

Critical Paths under _main in BANK0

    _main->_ToMainHigh_recvmsg
    _main->_ToMainLow_recvmsg
    _ToMainLow_recvmsg->_recv_msg
    _uart_lthread->_WriteUSART
    _ToMainHigh_recvmsg->_recv_msg
    _recv_msg->_memcpy
    _block_on_To_msgqueues->_in_main
    _in_main->_in_low_int
    _in_low_int->_in_high_int
    _init_queues->_init_queue
    _i2c_configure_master->_OpenI2C1

Critical Paths under _InterruptHandlerHigh in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _InterruptHandlerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptHandlerHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptHandlerHigh in BANK3

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                79    79      0    5055
                                             43 BANK0      1     1      0
                                              0 BANK2     76    76      0
                  _enable_interrupts
                     _init_uart_recv
                           _init_i2c
               _i2c_configure_master
                _init_timer1_lthread
                        _init_queues
                         _OpenTimer1
                          _OpenUSART
              _block_on_To_msgqueues
                 _ToMainHigh_recvmsg
                       _uart_lthread
                     _timer0_lthread
                  _putIntoUARTBuffer
              _start_i2c_slave_reply
                  _ToMainLow_recvmsg
                     _timer1_lthread
               _motor_control_thread
 ---------------------------------------------------------------------------------
 (1) _motor_control_thread                                12     4      8      96
                                             14 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (1) _timer1_lthread                                       9     1      8       0
                                             14 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (1) _ToMainLow_recvmsg                                    5     0      5     772
                                             38 BANK0      5     0      5
                           _recv_msg
 ---------------------------------------------------------------------------------
 (1) _start_i2c_slave_reply                                5     2      3      93
                                             14 BANK0      5     2      3
 ---------------------------------------------------------------------------------
 (1) _putIntoUARTBuffer                                    2     0      2     186
                                             14 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _timer0_lthread                                      10     2      8      34
                                             14 BANK0     10     2      8
 ---------------------------------------------------------------------------------
 (1) _uart_lthread                                        12     4      8     285
                                             15 BANK0     12     4      8
                         _WriteUSART
 ---------------------------------------------------------------------------------
 (2) _WriteUSART                                           1     0      1      31
                                             14 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 (1) _ToMainHigh_recvmsg                                   5     0      5     772
                                             38 BANK0      5     0      5
                           _recv_msg
 ---------------------------------------------------------------------------------
 (2) _recv_msg                                            14     7      7     679
                                             24 BANK0     14     7      7
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _memcpy                                              10     4      6     174
                                             14 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (1) _block_on_To_msgqueues                                1     1      0      93
                                             20 BANK0      1     1      0
                            _in_main
                          _check_msg
                        _Delay1KTCYx
 ---------------------------------------------------------------------------------
 (2) _Delay1KTCYx                                          1     0      1      31
                                             14 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 (2) _check_msg                                            3     1      2      62
                                             14 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _in_main                                              2     0      2       0
                                             18 BANK0      2     0      2
                        _in_high_int
                         _in_low_int
 ---------------------------------------------------------------------------------
 (3) _in_low_int                                           2     0      2       0
                                             16 BANK0      2     0      2
                        _in_high_int
 ---------------------------------------------------------------------------------
 (4) _in_high_int                                          2     0      2       0
                                             14 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _OpenUSART                                            3     0      3     310
                                             14 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (1) _OpenTimer1                                           1     0      1      93
                                             14 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 (1) _init_queues                                          1     1      0     192
                                             18 BANK0      1     1      0
                         _init_queue
 ---------------------------------------------------------------------------------
 (2) _init_queue                                           4     2      2     192
                                             14 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _init_timer1_lthread                                  2     0      2      31
                                             14 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _i2c_configure_master                                 5     4      1     192
                                             16 BANK0      5     4      1
                           _OpenI2C1
 ---------------------------------------------------------------------------------
 (2) _OpenI2C1                                             2     0      2      62
                                             14 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_i2c                                             2     0      2      31
                                             14 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_uart_recv                                       2     0      2      31
                                             14 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _enable_interrupts                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _InterruptHandlerLow                                 17    17      0      34
                                              2 COMRAM    17    17      0
                 _timer1_int_handler
                _uart_tx_int_handler
 ---------------------------------------------------------------------------------
 (6) _uart_tx_int_handler                                  2     2      0       3
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (6) _timer1_int_handler                                   1     1      0      31
                                              1 COMRAM     1     1      0
                    _i2c_master_recv
 ---------------------------------------------------------------------------------
 (7) _i2c_master_recv                                      1     0      1      31
                                              0 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (8) _InterruptHandlerHigh                                14    14      0    5656
                                              0 BANK0     14    14      0
                 _i2c_master_handler
                 _timer0_int_handler
                    _adc_int_handler
              _uart_recv_int_handler
                        _SleepIfOkay
 ---------------------------------------------------------------------------------
 (9) _SleepIfOkay                                          0     0      0     146
                   _enter_sleep_mode
                      i2_in_high_int
                       i2_in_low_int
                        i2_check_msg
 ---------------------------------------------------------------------------------
 (10) i2_check_msg                                         3     1      2     146
                                             19 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (10) i2_in_low_int                                        2     0      2       0
                                             21 COMRAM     2     0      2
                      i2_in_high_int
 ---------------------------------------------------------------------------------
 (11) i2_in_high_int                                       2     0      2       0
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (10) _enter_sleep_mode                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _uart_recv_int_handler                                2     2      0    1085
                                             45 COMRAM     2     2      0
                  _ToMainLow_sendmsg
                          _ReadUSART
 ---------------------------------------------------------------------------------
 (10) _ReadUSART                                           1     1      0      34
                                             19 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (10) _ToMainLow_sendmsg                                   4     0      4    1051
                                             41 COMRAM     4     0      4
                           _send_msg
 ---------------------------------------------------------------------------------
 (9) _adc_int_handler                                      0     0      0       0
                            _ReadADC
                        _CloseTimer1
 ---------------------------------------------------------------------------------
 (10) _CloseTimer1                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _ReadADC                                             2     0      2       0
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (9) _timer0_int_handler                                   8     8      0    3263
                                             48 COMRAM     8     8      0
                 _ToMainHigh_sendmsg
               _FromMainHigh_recvmsg
                        _WriteTimer0
 ---------------------------------------------------------------------------------
 (10) _WriteTimer0                                         4     2      2      45
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (10) _FromMainHigh_recvmsg                                5     0      5    2000
                                             43 COMRAM     5     0      5
                         i2_recv_msg
 ---------------------------------------------------------------------------------
 (11) i2_recv_msg                                         14     7      7    1907
                                             29 COMRAM    14     7      7
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (9) _i2c_master_handler                                  12    12      0    1162
                                             45 COMRAM    11    11      0
                 _ToMainHigh_sendmsg
 ---------------------------------------------------------------------------------
 (10) _ToMainHigh_sendmsg                                  4     0      4    1051
                                             41 COMRAM     4     0      4
                           _send_msg
 ---------------------------------------------------------------------------------
 (11) _send_msg                                           12     6      6     958
                                             29 COMRAM    12     6      6
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (12) i2_memcpy                                           10     4      6     484
                                             19 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _enable_interrupts
   _init_uart_recv
   _init_i2c
   _i2c_configure_master
     _OpenI2C1
   _init_timer1_lthread
   _init_queues
     _init_queue
   _OpenTimer1
   _OpenUSART
   _block_on_To_msgqueues
     _in_main
       _in_high_int
       _in_low_int
         _in_high_int
     _check_msg
     _Delay1KTCYx
   _ToMainHigh_recvmsg
     _recv_msg
       _memcpy
   _uart_lthread
     _WriteUSART
   _timer0_lthread
   _putIntoUARTBuffer
   _start_i2c_slave_reply
   _ToMainLow_recvmsg
     _recv_msg
       _memcpy
   _timer1_lthread
   _motor_control_thread

 _InterruptHandlerLow (ROOT)
   _timer1_int_handler
     _i2c_master_recv
   _uart_tx_int_handler

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3FF      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100     4C      82       8       50.8%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0      D4       6       82.8%
BITBANK0            80      0       0       3        0.0%
BANK0               80     2C      31       4       38.3%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     38      63       1       78.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0      1A       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1EA      11        0.0%
DATA                 0      0     204      13        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.20 build 52243 
Symbol Table                                                                                   Wed Oct 16 21:03:53 2013

               main@uthread_data 0209         _MQ_Main_Willing_to_block 0052  
                    _SSPSTATbits 000FC7        __end_of_ToMainLow_recvmsg 168E  
                             bsr 000FE0        __end_of_ToMainLow_sendmsg 174A  
                   __CFG_CP0$OFF 000000                i2recv_msg@msgtype 0021  
              i2recv_msg@tlength 0028                              l129 0280  
                            l430 0D4A                              l530 15D0  
                            l426 0CEA                              l527 15B6  
                            l529 15CE                              l561 117E  
                            l562 1180                              l563 118E  
                            l555 114A                              l564 1190  
                            l812 178A                              l557 115E  
                            l558 1160                              l588 17DC  
           __size_of_WriteTimer0 0012                   _FromMainLow_MQ 0132  
                            wreg 000FE8                     __CFG_IESO$ON 000000  
                   ?_in_high_int 008E                 ??_init_uart_recv 0090  
    __size_of_i2c_master_handler 0328              i2recv_msg@maxlength 0020  
                           l3100 0350                             l3112 03D8  
                           l3104 036C                             l3114 0426  
                           l3106 0390                             l3230 0E90  
                           l3222 0E64                             l3214 0E38  
                           l3118 0474                             l3320 11F8  
                           l3164 15B8                             l3252 0D1C  
                           l3308 0AE2                             l3092 02FE  
                           l3084 02B2                             l3076 01E6  
                           l3068 019A                             l3246 0CC6  
                           l3094 0316                             l3078 0232  
                           l3352 13DC                             l3280 0984  
                           l3098 0338                             l3372 0826  
                           l3276 0900                             l3358 1400  
                           l2850 147A                             l3388 08E4  
                           l2872 14E0                             l2858 149C  
                           u2130 0EAC                             _LATB 000F8A  
                           u2136 0EAE                             u2437 178C  
                           i1l57 006C                             i2l50 0F04  
                           i1l58 0084                             i2l51 0F14  
                           i1l59 0084                             i2l52 0F24  
                           i2l53 0F36                             i2l54 0F3A  
   __size_of_uart_tx_int_handler 0084                  _FromMainHigh_MQ 024C  
                  __CFG_FCMEN$ON 000000           ?_block_on_To_msgqueues 0001  
                           _main 00CE            ?_motor_control_thread 008E  
                           _time 005E                             _test 0061  
                           fsr0h 000FEA                             fsr1h 000FE2  
                           fsr0l 000FE9                             fsr2h 000FDA  
                           indf1 000FE7                             fsr1l 000FE1  
                           indf2 000FDF                             fsr2l 000FD9  
                    main@msgtype 021D                             pclat 000FFA  
                    i2_check_msg 1704                             prodh 000FF4  
                           prodl 000FF3                             start 00CA  
                     i2_recv_msg 0BC8                    __CFG_FOSC2$ON 000000  
               ?_adc_int_handler 0001      i2c_master_handler@data_read 0038  
  __size_of_i2c_configure_master 008C              __end_of_CloseTimer1 1824  
      ToMainHigh_recvmsg@msgtype 00A7                  __end_of_ReadADC 1810  
                 send_msg@length 0020      __size_of_timer0_int_handler 006E  
                    _Delay1KTCYx 178A                            ?_main 0001  
                          _T1CON 000FCD                            _LATA0 007C48  
                          _LATA1 007C49                            _LATA2 007C4A  
                          _LATA3 007C4B                            _LATA5 007C4D  
                          i2l311 06FC                            i2l306 0614  
                          i2l292 07B6                            i2l575 177A  
    FromMainHigh_recvmsg@msgtype 002D                            _RCREG 000FAE  
                          _RCSTA 000FAB                            _TMR0H 000FD7  
                          _TMR1H 000FCF                            _TMR0L 000FD6  
                          _TMR1L 000FCE                            _SPBRG 000FAF  
                          _TRISA 000F92                            _TRISB 000F93  
                          _TXREG 000FAD                            _TXSTA 000FAC  
                     i2memcpy@d1 0014                       i2memcpy@s1 0016  
                   ?_init_queues 0001            motor_control_thread@i 0098  
      __size_of_enter_sleep_mode 0006                  __end_of_in_main 14F0  
                          _count 0054       ToMainLow_recvmsg@maxlength 00A6  
        timer0_lthread@msgbuffer 0094                            tablat 000FF5  
                   main@test_var 0219                            status 000FD8  
               __end_ofi2_memcpy 1530                   WriteUSART@data 008E  
                __initialization 1376                     __end_of_main 0494  
  uart_tx_int_handler@testbuffer 0002      __size_of_timer1_int_handler 000E  
     __size_of_ToMainLow_recvmsg 002C       __size_of_ToMainLow_sendmsg 0022  
  __size_of_FromMainHigh_recvmsg 0026            __size_ofi2_in_low_int 002E  
               __end_of_OpenI2C1 1704                           ??_main 00AB  
                send_msg@msgtype 0021                    __activetblptr 000002  
                send_msg@tlength 0025                           _ADRESH 000FC4  
                         _ADRESL 000FC3          ??_uart_recv_int_handler 002E  
                         i1l3540 0066                           i1l3542 006C  
                         i1l3544 0074                           i1l3536 005C  
                         i1l3546 007C                           i1l3538 0064  
                         i2l3004 0E12                           i1l3548 007E  
                         i2l1362 1626                           i2l2246 141E  
                     _OpenTimer1 15A0                   __CFG_WDTEN$OFF 000000  
                         i2l3504 0C0C                           i2l3520 0C94  
                         i2l3338 0FAC                           i2l3532 151E  
                         i2l2900 0F36                           i2l3526 1502  
                         i2l2920 0514                           i2l2912 04C8  
                         i2l2770 1658                           i2l2762 1642  
                         i2l2916 04CE                           i2l2918 04E4  
                         i2l2960 0700                           i2l2936 05E2  
                         i2l2928 059C                           i2l2880 0EFE  
                         i2l2890 0F1C                           i2l2882 0F04  
                         i2l2948 0646                           i2l2892 0F1E  
                         i2l2884 0F0C                           i2l2876 0EF4  
                         i2l2974 0778                           i2l2894 0F24  
                         i2l2886 0F0E                           i2l2878 0EFC  
                         i2l2968 075E                           i2l2896 0F2C  
                         i2l2888 0F14                           i2l2898 0F30  
                         i2l2998 0DEE           ??_motor_control_thread 0096  
                  ??_SleepIfOkay 0018               __size_of_ReadUSART 001E  
                         _OSCCON 000FD3                      _CloseTimer1 181E  
                         _SPBRGH 000FB0                           _SSPADD 000FC8  
                         _SSPBUF 000FC9       i2c_master_handler@i2c_data 0036  
 __size_of_start_i2c_slave_reply 010A                        ??_ReadADC 0016  
  __end_of_start_i2c_slave_reply 09F2               timer0_lthread@tptr 008E  
                    ?i2_recv_msg 001E                     i2_in_low_int 1634  
                 __CFG_XINST$OFF 000000               __size_of_OpenUSART 0082  
                _i2c_master_recv 15D4                           _ic_ptr 00AF  
                  main@msgbuffer 020E                 __end_of_init_i2c 12A2  
               OpenTimer1@config 008E                           _length 004E  
                         _memcpy 13CA                           clear_0 137C  
                         clear_1 1388                           clear_2 139C  
                         _uc_ptr 0062                           main@ic 022F  
                         main@uc 021F                 __end_of_recv_msg 08E8  
    start_i2c_slave_reply@length 008E                        ??_in_main 0094  
               __end_of_send_msg 101E                     __pdataCOMRAM 005F  
          timer0_int_handler@val 0037                           tblptrh 000FF7  
                         tblptrl 000FF6                           tblptru 000FF8  
                    init_queue@i 0091                  _motor_direction 0058  
       ToMainLow_recvmsg@msgtype 00A7             __size_of_in_high_int 0012  
                __CFG_FOSC$HSPLL 000000                       __accesstop 0080  
        __end_of__initialization 13C0       __end_of_ToMainHigh_recvmsg 16BA  
     __end_of_ToMainHigh_sendmsg 176C            i2c_configure_master@i 0093  
    __end_of_init_timer1_lthread 17C0              __end_of_SleepIfOkay 1466  
                     _WriteUSART 17D2                   __pcstackCOMRAM 0001  
     i2c_master_handler@msg_sent 0035           __size_ofi2_in_high_int 000C  
             __size_of_check_msg 0036              _uart_tx_int_handler 10AA  
              __end_of_ReadUSART 178A        timer0_int_handler@msgtype 0035  
  __size_of_InterruptHandlerHigh 0F6C      __end_of_InterruptHandlerLow 00CA  
                      ?i2_memcpy 0014                    _ToMainHigh_MQ 0168  
            __size_ofi2_recv_msg 00D0                 _enter_sleep_mode 1818  
           timer1_lthread@length 0092                    ReadUSART@data 0014  
              __end_of_OpenUSART 11B0                    check_msg@qptr 008E  
        ??_block_on_To_msgqueues 0094             __size_of_init_queues 0066  
                     __pbssBANK0 00AC                       __pbssBANK1 0100  
                     __pbssBANK2 024C                      ?_OpenTimer1 008E  
           ?_uart_tx_int_handler 0001                       __pnvCOMRAM 0062  
                      ?_OpenI2C1 008E                     ?i2_check_msg 0014  
        __end_of_i2c_master_recv 1604               timer1_lthread@tptr 008E  
                   OpenI2C1@slew 008F                recv_msg@maxlength 009A  
                recv_msg@msgtype 009B                  recv_msg@tlength 00A2  
                   ?_Delay1KTCYx 008E                 WriteTimer0@timer 0016  
                        ?_memcpy 008E                    ??_WriteTimer0 0016  
        __size_of_timer0_lthread 000A          __size_of_timer1_lthread 0004  
     __end_of_i2c_master_handler 07BC     __end_of_i2c_configure_master 10AA  
                     ??i2_memcpy 001A                       _buffertest 00AE  
                  i2_in_high_int 17F0                          _SSPCON1 000FC6  
                        _SSPCON2 000FC5                          _SSPSTAT 000FC7  
          ??_uart_tx_int_handler 0001                __end_of_check_msg 15A0  
                      ?_init_i2c 008E                      _SleepIfOkay 1418  
                     ??_OpenI2C1 0090                          _ReadADC 1806  
                      ?_recv_msg 0098                       _first_time 005F  
                     _in_low_int 1466                          __Hparam 0000  
                      ?_send_msg 001E                          __Lparam 0000  
     __end_of_timer0_int_handler 1310                      ?_WriteUSART 008E  
               init_uart_recv@uc 008E                  __CFG_STVREN$OFF 000000  
                        __pcinit 1376                  __size_of_memcpy 004E  
       __size_of_adc_int_handler 0030                       _init_queue 11B0  
                        __ramtop 0400              __size_of_OpenTimer1 0034  
                        __ptext0 00CE                          __ptext1 09F2  
                        __ptext2 1824                          __ptext3 1662  
                        __ptext4 08E8                          __ptext5 0AE8  
                        __ptext6 17FC                          __ptext7 0C98  
                        __ptext8 17D2                          __ptext9 168E  
                        _buflen1 004A                          _in_main 14AC  
                      _T1CONbits 000FCD                          _counter 00AC  
                        _message 0057              __end_of_WriteTimer0 17D2  
                 ?i2_in_high_int 0014                          _msgtype 0059  
                 __pintcode_body 0EC8     __end_of_FromMainHigh_recvmsg 16E0  
           end_of_initialization 13C0          timer1_lthread@msgbuffer 0094  
 __size_of_uart_recv_int_handler 00B4                          memcpy@d 0094  
                   ?_CloseTimer1 0001                          memcpy@n 0092  
                        memcpy@s 0096    __end_of_uart_recv_int_handler 0E18  
                     ??_init_i2c 0090                    __Lmediumconst 0000  
                        int_func 0EC8                    ?_uart_lthread 008F  
        __size_of_init_uart_recv 003A                     ??i2_recv_msg 0025  
               ?_i2c_master_recv 0001                       ??_recv_msg 009F  
              _putIntoUARTBuffer 0AE8                       ??_send_msg 0024  
     __end_of_timer1_int_handler 17F0               ?_putIntoUARTBuffer 008E  
                      _RCSTAbits 000FAB                          postdec2 000FDD  
                        postinc0 000FEE                          postinc2 000FDE  
      ToMainHigh_sendmsg@msgtype 002B          putIntoUARTBuffer@buffer 008E  
            ??_putIntoUARTBuffer 0090                       _testbuffer 0100  
                 _last_reg_recvd 0055                        _TRISCbits 000F94  
             __end_ofi2_recv_msg 0C98              __size_of_WriteUSART 0010  
  FromMainHigh_recvmsg@maxlength 002C                   ??_uart_lthread 0097  
      __end_of_putIntoUARTBuffer 0BC8                        _TXSTAbits 000FAC  
  __size_of_motor_control_thread 00F6                       main@length 021E  
                    ?_in_low_int 0090            timer0_lthread@msgtype 0090  
           _i2c_configure_master 101E            _start_i2c_slave_reply 08E8  
           __size_ofi2_check_msg 0024         __end_of_enter_sleep_mode 181E  
  motor_control_thread@msgbuffer 0094               _ToMainHigh_recvmsg 168E  
             _ToMainHigh_sendmsg 174A                    __pidataCOMRAM 1828  
                 _timer0_lthread 17FC                      ?_init_queue 008E  
                      i2memcpy@d 001A                      _WriteTimer0 17C0  
                      i2memcpy@n 0018                        i2memcpy@s 001C  
                 _timer1_lthread 1824                   __end_of_memcpy 1418  
              _enable_interrupts 1810             __size_of_Delay1KTCYx 0012  
            ?_ToMainHigh_recvmsg 00A6                  ??i2_in_high_int 0016  
            ?_ToMainHigh_sendmsg 002A               ?_enable_interrupts 0001  
            start_initialization 1376                    ??_in_high_int 0090  
                      _ReadUSART 176C                ??_adc_int_handler 0016  
              __size_ofi2_memcpy 0040              ??_enable_interrupts 008E  
                   ??_OpenTimer1 008F   __size_of_block_on_To_msgqueues 00B0  
  __end_of_block_on_To_msgqueues 0EC8                        _OpenUSART 112E  
   __end_of_InterruptHandlerHigh 0F74                       init_i2c@ic 008E  
           ??_ToMainHigh_recvmsg 00AB             ??_ToMainHigh_sendmsg 002E  
          ?_i2c_configure_master 0090                __size_of_OpenI2C1 0024  
         __end_of_timer0_lthread 1806           __end_of_timer1_lthread 1828  
      __end_of_enable_interrupts 1818                         ??_memcpy 0094  
          timer1_lthread@msgtype 0090             _FromMainHigh_recvmsg 16BA  
   __size_of_init_timer1_lthread 0012               __end_of_OpenTimer1 15D4  
                    __pbssCOMRAM 0039                       ?_ReadUSART 0001  
                  ??_init_queues 0092                    __pcstackBANK0 0080  
                  __pcstackBANK2 0200              __size_of_in_low_int 0046  
       start_i2c_slave_reply@msg 008F              __CFG_CCP2MX$DEFAULT 000000  
                Delay1KTCYx@unit 008E         ToMainLow_sendmsg@msgtype 002B  
   __size_of_InterruptHandlerLow 00B2              __end_of_in_high_int 17AE  
                     ?_OpenUSART 008E                     ?_SleepIfOkay 0001  
             _i2c_master_handler 0494       __size_of_putIntoUARTBuffer 00E0  
          ToMainLow_recvmsg@data 00A9                     _ToMainLow_MQ 019E  
            __size_of_init_queue 007A                   _init_uart_recv 1530  
                       ?_ReadADC 0014                        _check_msg 156A  
                      __pnvBANK0 00AF             __size_of_CloseTimer1 0006  
         ?_start_i2c_slave_reply 008E                __size_of_init_i2c 0078  
                   recv_msg@data 009D                     ??_WriteUSART 008F  
            ?_i2c_master_handler 0001                     recv_msg@qmsg 00A4  
                   recv_msg@slot 00A1                     recv_msg@qptr 0098  
              __size_of_recv_msg 012C                        __pintcode 0008  
              __size_of_send_msg 00AA                  ?_timer0_lthread 008E  
          ?_FromMainHigh_recvmsg 002C                  ?_timer1_lthread 008E  
                    __pintcodelo 0018           ToMainHigh_recvmsg@data 00A9  
           __end_of_uart_lthread 0D64                         ?_in_main 0092  
              WriteTimer0@timer0 0014               _timer0_int_handler 12A2  
                      _magnitude 0056      __end_of_uart_tx_int_handler 112E  
            uart_lthread@msgtype 0091                         _ADCValue 0048  
           ??_i2c_master_handler 002E            ToMainLow_sendmsg@data 002C  
           main@motorthread_data 0205              ?_timer0_int_handler 0001  
             __end_of_WriteUSART 17E2                 uart_lthread@uptr 008F  
         __end_of_init_uart_recv 156A              __end_of_init_queues 1376  
          i2c_master_recv@length 0001                         _LATBbits 000F8A  
         ??_i2c_configure_master 0091                  i2check_msg@qptr 0014  
                     ?_check_msg 008E                         _IPR1bits 000F9F  
                       _PIE1bits 000F9D                        _msgbuffer 0039  
                  ?i2_in_low_int 0016                         i1u240_20 0064  
                       i1u240_21 0062                         i1u241_20 0074  
                       i1u241_21 0072                         i1u242_20 007C  
                       i1u242_21 007A                         i2u173_40 0EFC  
                       i2u173_41 0EFA                         i2u174_40 0F0C  
                       i2u174_41 0F0A                         i2u175_40 0F1C  
                       i2u175_41 0F1A                         i2u176_40 0F2C  
                       i2u176_41 0F2A                         _PIR1bits 000F9E  
                       i2u187_40 12AA                         i2u187_46 12AC  
         ToMainHigh_sendmsg@data 002C                         _RCONbits 000FD0  
               __CFG_WDTPS$32768 000000                         _SSP1CON1 000FC6  
                       _SSP1CON2 000FC5             ??_timer0_int_handler 0031  
                       _SSP1STAT 000FC7       __size_of_enable_interrupts 0008  
           timer0_lthread@length 0092               _timer1_int_handler 17E2  
           _InterruptHandlerHigh 0008                      ??_ReadUSART 0014  
                       i2_memcpy 14F0             timer0_lthread@msgval 0096  
       FromMainHigh_recvmsg@data 002F                      _in_high_int 179C  
                   send_msg@data 0022                     send_msg@qmsg 0028  
                   send_msg@slot 0027                     send_msg@qptr 001E  
          uart_lthread@msgbuffer 0095              ?_timer1_int_handler 0001  
i2c_master_handler@overrun_error 0037                  ?_init_uart_recv 008E  
                    ??_OpenUSART 0091                         _OpenI2C1 16E0  
                OpenUSART@config 008E                   ??i2_in_low_int 0018  
          _uart_recv_int_handler 0D64                     ??_in_low_int 0092  
               __size_of_ReadADC 000A                         __Hrparam 0000  
       motor_control_thread@mptr 008E                         __Lrparam 0000  
              ?_enter_sleep_mode 0001           ??_FromMainHigh_recvmsg 0031  
           ??_timer1_int_handler 0002                  _adc_int_handler 1604  
             ??_enter_sleep_mode 0014         __size_of_i2c_master_recv 0030  
                   ??_init_queue 0090                     ?_WriteTimer0 0014  
        ToMainLow_sendmsg@length 002A     __end_of_motor_control_thread 0AE8  
              main@t0thread_data 020B            ?_InterruptHandlerHigh 0001  
               __size_of_in_main 0044      ToMainHigh_recvmsg@maxlength 00A6  
        init_timer1_lthread@tptr 008E                      _init_queues 1310  
             __end_of_in_low_int 14AC                         __ptext10 07BC  
                       __ptext11 13CA                         __ptext20 1310  
                       __ptext12 0E18                         __ptext21 11B0  
                       __ptext13 178A                         __ptext30 17E2  
                       __ptext22 17AE                         __ptext14 156A  
                       __ptext31 15D4                         __ptext23 101E  
                       __ptext15 14AC                         __ptext40 1728  
                       __ptext24 16E0                         __ptext16 1466  
                       __ptext41 1604                         __ptext33 1418  
                       __ptext25 122A                         __ptext17 179C  
                       __ptext50 0F74                         __ptext42 181E  
                       __ptext34 1704                         __ptext26 1530  
                       __ptext18 112E                         __ptext51 14F0  
                       __ptext43 1806                         __ptext35 1634  
                       __ptext27 1810                         __ptext19 15A0  
                       __ptext44 12A2                         __ptext36 17F0  
                       __ptext45 17C0                         __ptext37 1818  
                       __ptext29 10AA                         __ptext46 16BA  
                       __ptext38 0D64                         __ptext47 0BC8  
                       __ptext39 176C                         __ptext48 0494  
                       __ptext49 174A                     _SSP1CON2bits 000FC5  
 i2c_configure_master@slave_addr 0090               uart_lthread@length 0093  
       timer0_int_handler@length 0033                         _counter2 004C  
                       _init_i2c 122A              _init_timer1_lthread 17AE  
                  __size_of_main 03C6                    ??i2_check_msg 0016  
                       _message3 0050                main@t1thread_data 021B  
                    ??_check_msg 0090               __end_of_init_queue 122A  
           __size_of_SleepIfOkay 004E                         _recv_msg 07BC  
                       _send_msg 0F74                   init_queue@qptr 008E  
          __size_of_uart_lthread 00CC                   i2recv_msg@data 0023  
                 i2recv_msg@qmsg 002A                    ??_Delay1KTCYx 008F  
                 i2recv_msg@slot 0027                   i2recv_msg@qptr 001E  
                   _SSP1STATbits 000FC7              _InterruptHandlerLow 0018  
           ?_init_timer1_lthread 008E                OpenI2C1@sync_mode 008E  
 i2c_master_handler@data_written 0034                      _OSCTUNEbits 000F9B  
                     _INTCONbits 000FF2                   OpenUSART@spbrg 008F  
                       memcpy@d1 008E                         memcpy@s1 0090  
          __end_ofi2_in_high_int 17FC                    _bufferForUART 0044  
                       intlevel1 0000                         intlevel2 0000  
           ?_InterruptHandlerLow 0001          ??_start_i2c_slave_reply 0091  
                main@testbuffer1 0200                  main@testbuffer2 0201  
                main@testbuffer3 0202                  main@testbuffer4 0203  
                main@testbuffer5 0204           ?_uart_recv_int_handler 0001  
                   _uart_lthread 0C98            _block_on_To_msgqueues 0E18  
               ??_timer0_lthread 0096      __size_of_ToMainHigh_recvmsg 002C  
        __end_of_adc_int_handler 1634      __size_of_ToMainHigh_sendmsg 0022  
                     _OSCCONbits 000FD3                 ??_timer1_lthread 0096  
       ToMainHigh_sendmsg@length 002A              __end_ofi2_check_msg 1728  
    motor_control_thread@msgtype 0090            ??_init_timer1_lthread 0090  
         ??_InterruptHandlerHigh 0080                _ToMainLow_recvmsg 1662  
              _ToMainLow_sendmsg 1728               main@last_reg_recvd 020D  
           __end_ofi2_in_low_int 1662               ?_ToMainLow_recvmsg 00A6  
            __end_of_Delay1KTCYx 179C               ?_ToMainLow_sendmsg 002A  
                  uart_lthread@i 009A                ??_i2c_master_recv 0002  
     motor_control_thread@length 0092                      _SSPCON1bits 000FC6  
                    _SSPCON2bits 000FC5            ??_InterruptHandlerLow 0003  
            ??_ToMainLow_recvmsg 00AB              ??_ToMainLow_sendmsg 002E  
                  ??_CloseTimer1 0014                      _testbuffer3 005A  
                    _testbuffer4 005B                      _testbuffer5 005C  
                    _testbuffer6 005D             _motor_control_thread 09F2  
                   _USART_Status 0053  
