

Microchip Technology PIC18 LITE Macro Assembler V1.20 build 52243 
                                                                                               Wed Oct 16 19:05:59 2013

Microchip Technology Omniscient Code Generator (Lite mode) build 52243
     1                           	processor	18F45J10
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    14                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    50                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    51                           	psect	text33,global,reloc=2,class=CODE,delta=1
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1
    53                           	psect	text35,global,reloc=2,class=CODE,delta=1
    54                           	psect	text36,global,reloc=2,class=CODE,delta=1
    55                           	psect	text37,global,reloc=2,class=CODE,delta=1
    56                           	psect	text38,global,reloc=2,class=CODE,delta=1
    57                           	psect	text39,global,reloc=2,class=CODE,delta=1
    58                           	psect	text40,global,reloc=2,class=CODE,delta=1
    59                           	psect	text41,global,reloc=2,class=CODE,delta=1
    60                           	psect	text42,global,reloc=2,class=CODE,delta=1
    61                           	psect	text43,global,reloc=2,class=CODE,delta=1
    62                           	psect	text44,global,reloc=2,class=CODE,delta=1
    63                           	psect	text45,global,reloc=2,class=CODE,delta=1
    64                           	psect	text46,global,reloc=2,class=CODE,delta=1
    65                           	psect	text47,global,reloc=2,class=CODE,delta=1
    66                           	psect	text48,global,reloc=2,class=CODE,delta=1
    67                           	psect	text49,global,reloc=2,class=CODE,delta=1
    68                           	psect	text50,global,reloc=2,class=CODE,delta=1
    69                           	psect	text51,global,reloc=2,class=CODE,delta=1
    70                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    71                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    72  0000                     
    73                           	psect	idataCOMRAM
    74  001840                     __pidataCOMRAM:
    75                           	opt stack 0
    76                           
    77                           ;initializer for _first_time
    78  001840  0001               	dw	1
    79                           
    80                           ;initializer for _test
    81  001842  01                 	db	1
    82  0000                     _ADRESH	set	4036
    83  0000                     _ADRESL	set	4035
    84  0000                     _INTCONbits	set	4082
    85  0000                     _IPR1bits	set	3999
    86  0000                     _LATB	set	3978
    87  0000                     _LATBbits	set	3978
    88  0000                     _OSCCON	set	4051
    89  0000                     _OSCCONbits	set	4051
    90  0000                     _OSCTUNEbits	set	3995
    91  0000                     _PIE1bits	set	3997
    92  0000                     _PIR1bits	set	3998
    93  0000                     _RCONbits	set	4048
    94  0000                     _RCREG	set	4014
    95  0000                     _RCSTA	set	4011
    96  0000                     _RCSTAbits	set	4011
    97  0000                     _SPBRG	set	4015
    98  0000                     _SPBRGH	set	4016
    99  0000                     _SSP1CON1	set	4038
   100  0000                     _SSP1CON2	set	4037
   101  0000                     _SSP1CON2bits	set	4037
   102  0000                     _SSP1STAT	set	4039
   103  0000                     _SSP1STATbits	set	4039
   104  0000                     _SSPADD	set	4040
   105  0000                     _SSPBUF	set	4041
   106  0000                     _SSPCON1	set	4038
   107  0000                     _SSPCON1bits	set	4038
   108  0000                     _SSPCON2	set	4037
   109  0000                     _SSPCON2bits	set	4037
   110  0000                     _SSPSTAT	set	4039
   111  0000                     _SSPSTATbits	set	4039
   112  0000                     _T1CON	set	4045
   113  0000                     _T1CONbits	set	4045
   114  0000                     _TMR0H	set	4055
   115  0000                     _TMR0L	set	4054
   116  0000                     _TMR1H	set	4047
   117  0000                     _TMR1L	set	4046
   118  0000                     _TRISB	set	3987
   119  0000                     _TRISCbits	set	3988
   120  0000                     _TXREG	set	4013
   121  0000                     _TXSTA	set	4012
   122  0000                     _TXSTAbits	set	4012
   123                           
   124                           	psect	nvCOMRAM
   125  000062                     __pnvCOMRAM:
   126                           	opt stack 0
   127  000062                     _uc_ptr:
   128                           	opt stack 0
   129  000062                     	ds	2
   130                           
   131                           	psect	nvBANK0
   132  0000AF                     __pnvBANK0:
   133                           	opt stack 0
   134  0000AF                     _ic_ptr:
   135                           	opt stack 0
   136  0000AF                     	ds	2
   137                           
   138                           ; #config settings
   139  0000                     
   140                           	psect	cinit
   141  00138E                     __pcinit:
   142                           	opt stack 0
   143  00138E                     start_initialization:
   144                           	opt stack 0
   145  00138E                     __initialization:
   146                           	opt stack 0
   147                           
   148                           ; Clear objects allocated to BANK2 (54 bytes)
   149  00138E  EE02  F048         	lfsr	0,__pbssBANK2
   150  001392  0E36               	movlw	54
   151  001394                     clear_0:
   152  001394  6AEE               	clrf	postinc0,c
   153  001396  06E8               	decf	wreg,f,c
   154  001398  E1FD               	bnz	clear_0
   155                           
   156                           ; Clear objects allocated to BANK1 (212 bytes)
   157  00139A  EE01  F000         	lfsr	0,__pbssBANK1
   158  00139E  0ED4               	movlw	212
   159  0013A0                     clear_1:
   160  0013A0  6AEE               	clrf	postinc0,c
   161  0013A2  06E8               	decf	wreg,f,c
   162  0013A4  E1FD               	bnz	clear_1
   163                           
   164                           ; Clear objects allocated to BANK0 (3 bytes)
   165  0013A6  0100               	movlb	0
   166  0013A8  6BAE               	clrf	(__pbssBANK0+2)& (0+255),b
   167  0013AA  6BAD               	clrf	(__pbssBANK0+1)& (0+255),b
   168  0013AC  6BAC               	clrf	__pbssBANK0& (0+255),b
   169                           
   170                           ; Clear objects allocated to COMRAM (38 bytes)
   171  0013AE  EE00  F039         	lfsr	0,__pbssCOMRAM
   172  0013B2  0E26               	movlw	38
   173  0013B4                     clear_2:
   174  0013B4  6AEE               	clrf	postinc0,c
   175  0013B6  06E8               	decf	wreg,f,c
   176  0013B8  E1FD               	bnz	clear_2
   177                           
   178                           ; Initialize objects allocated to COMRAM (3 bytes)
   179                           ; load TBLPTR registers with __pidataCOMRAM
   180  0013BA  0E40               	movlw	low __pidataCOMRAM
   181  0013BC  6EF6               	movwf	tblptrl,c
   182  0013BE  0E18               	movlw	high __pidataCOMRAM
   183  0013C0  6EF7               	movwf	tblptrh,c
   184  0013C2  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   185  0013C4  6EF8               	movwf	tblptru,c
   186  0013C6  0009               	tblrd		*+	;fetch initializer
   187  0013C8  CFF5 F05F          	movff	tablat,__pdataCOMRAM
   188  0013CC  0009               	tblrd		*+	;fetch initializer
   189  0013CE  CFF5 F060          	movff	tablat,__pdataCOMRAM+1
   190  0013D2  0009               	tblrd		*+	;fetch initializer
   191  0013D4  CFF5 F061          	movff	tablat,__pdataCOMRAM+2
   192  0013D8                     end_of_initialization:
   193                           	opt stack 0
   194  0013D8                     __end_of__initialization:
   195                           	opt stack 0
   196  0013D8  0E00               	movlw	low (__Lmediumconst shr (0+16))
   197  0013DA  6EF8               	movwf	tblptru,c
   198  0013DC  0100               	movlb	0
   199  0013DE  EF67  F000         	goto	_main	;jump to C main() function
   200                           tblptru	equ	0xFF8
   201                           tblptrh	equ	0xFF7
   202                           tblptrl	equ	0xFF6
   203                           tablat	equ	0xFF5
   204                           postinc0	equ	0xFEE
   205                           wreg	equ	0xFE8
   206                           
   207                           	psect	bssCOMRAM
   208  000039                     __pbssCOMRAM:
   209                           	opt stack 0
   210  000039                     _msgbuffer:
   211                           	opt stack 0
   212  000039                     	ds	11
   213  000044                     _bufferForUART:
   214                           	opt stack 0
   215  000044                     	ds	4
   216  000048                     _ADCValue:
   217                           	opt stack 0
   218  000048                     	ds	2
   219  00004A                     _buflen1:
   220                           	opt stack 0
   221  00004A                     	ds	2
   222  00004C                     _counter2:
   223                           	opt stack 0
   224  00004C                     	ds	2
   225  00004E                     _length:
   226                           	opt stack 0
   227  00004E                     	ds	2
   228  000050                     _message3:
   229                           	opt stack 0
   230  000050                     	ds	2
   231  000052                     _MQ_Main_Willing_to_block:
   232                           	opt stack 0
   233  000052                     	ds	1
   234  000053                     _USART_Status:
   235                           	opt stack 0
   236  000053                     	ds	1
   237  000054                     _count:
   238                           	opt stack 0
   239  000054                     	ds	1
   240  000055                     _last_reg_recvd:
   241                           	opt stack 0
   242  000055                     	ds	1
   243  000056                     _magnitude:
   244                           	opt stack 0
   245  000056                     	ds	1
   246  000057                     _message:
   247                           	opt stack 0
   248  000057                     	ds	1
   249  000058                     _motor_direction:
   250                           	opt stack 0
   251  000058                     	ds	1
   252  000059                     _msgtype:
   253                           	opt stack 0
   254  000059                     	ds	1
   255  00005A                     _testbuffer3:
   256                           	opt stack 0
   257  00005A                     	ds	1
   258  00005B                     _testbuffer4:
   259                           	opt stack 0
   260  00005B                     	ds	1
   261  00005C                     _testbuffer5:
   262                           	opt stack 0
   263  00005C                     	ds	1
   264  00005D                     _testbuffer6:
   265                           	opt stack 0
   266  00005D                     	ds	1
   267  00005E                     _time:
   268                           	opt stack 0
   269  00005E                     	ds	1
   270                           tblptru	equ	0xFF8
   271                           tblptrh	equ	0xFF7
   272                           tblptrl	equ	0xFF6
   273                           tablat	equ	0xFF5
   274                           postinc0	equ	0xFEE
   275                           wreg	equ	0xFE8
   276                           
   277                           	psect	dataCOMRAM
   278  00005F                     __pdataCOMRAM:
   279                           	opt stack 0
   280  00005F                     _first_time:
   281                           	opt stack 0
   282  00005F                     	ds	2
   283  000061                     _test:
   284                           	opt stack 0
   285  000061                     	ds	1
   286                           tblptru	equ	0xFF8
   287                           tblptrh	equ	0xFF7
   288                           tblptrl	equ	0xFF6
   289                           tablat	equ	0xFF5
   290                           postinc0	equ	0xFEE
   291                           wreg	equ	0xFE8
   292                           
   293                           	psect	bssBANK0
   294  0000AC                     __pbssBANK0:
   295                           	opt stack 0
   296  0000AC                     _counter:
   297                           	opt stack 0
   298  0000AC                     	ds	2
   299  0000AE                     _buffertest:
   300                           	opt stack 0
   301  0000AE                     	ds	1
   302                           tblptru	equ	0xFF8
   303                           tblptrh	equ	0xFF7
   304                           tblptrl	equ	0xFF6
   305                           tablat	equ	0xFF5
   306                           postinc0	equ	0xFEE
   307                           wreg	equ	0xFE8
   308                           
   309                           	psect	bssBANK1
   310  000100                     __pbssBANK1:
   311                           	opt stack 0
   312  000100                     _testbuffer:
   313                           	opt stack 0
   314  000100                     	ds	50
   315  000132                     _FromMainLow_MQ:
   316                           	opt stack 0
   317  000132                     	ds	54
   318  000168                     _ToMainHigh_MQ:
   319                           	opt stack 0
   320  000168                     	ds	54
   321  00019E                     _ToMainLow_MQ:
   322                           	opt stack 0
   323  00019E                     	ds	54
   324                           tblptru	equ	0xFF8
   325                           tblptrh	equ	0xFF7
   326                           tblptrl	equ	0xFF6
   327                           tablat	equ	0xFF5
   328                           postinc0	equ	0xFEE
   329                           wreg	equ	0xFE8
   330                           
   331                           	psect	bssBANK2
   332  000248                     __pbssBANK2:
   333                           	opt stack 0
   334  000248                     _FromMainHigh_MQ:
   335                           	opt stack 0
   336  000248                     	ds	54
   337                           tblptru	equ	0xFF8
   338                           tblptrh	equ	0xFF7
   339                           tblptrl	equ	0xFF6
   340                           tablat	equ	0xFF5
   341                           postinc0	equ	0xFEE
   342                           wreg	equ	0xFE8
   343                           
   344                           	psect	cstackBANK2
   345  000200                     __pcstackBANK2:
   346                           	opt stack 0
   347  000200                     main@testbuffer1:
   348                           	opt stack 0
   349                           
   350                           ; 1 bytes @ 0x0
   351  000200                     	ds	1
   352  000201                     main@testbuffer2:
   353                           	opt stack 0
   354                           
   355                           ; 1 bytes @ 0x1
   356  000201                     	ds	1
   357  000202                     main@testbuffer3:
   358                           	opt stack 0
   359                           
   360                           ; 1 bytes @ 0x2
   361  000202                     	ds	1
   362  000203                     main@testbuffer4:
   363                           	opt stack 0
   364                           
   365                           ; 1 bytes @ 0x3
   366  000203                     	ds	1
   367  000204                     main@testbuffer5:
   368                           	opt stack 0
   369                           
   370                           ; 1 bytes @ 0x4
   371  000204                     	ds	1
   372  000205                     main@motorthread_data:
   373                           	opt stack 0
   374                           
   375                           ; 4 bytes @ 0x5
   376  000205                     	ds	4
   377  000209                     main@uthread_data:
   378                           	opt stack 0
   379                           
   380                           ; 2 bytes @ 0x9
   381  000209                     	ds	2
   382  00020B                     main@t0thread_data:
   383                           	opt stack 0
   384                           
   385                           ; 2 bytes @ 0xB
   386  00020B                     	ds	2
   387  00020D                     main@last_reg_recvd:
   388                           	opt stack 0
   389                           
   390                           ; 1 bytes @ 0xD
   391  00020D                     	ds	1
   392  00020E                     main@msgbuffer:
   393                           	opt stack 0
   394                           
   395                           ; 11 bytes @ 0xE
   396  00020E                     	ds	11
   397  000219                     main@test_var:
   398                           	opt stack 0
   399                           
   400                           ; 2 bytes @ 0x19
   401  000219                     	ds	2
   402  00021B                     main@t1thread_data:
   403                           	opt stack 0
   404                           
   405                           ; 2 bytes @ 0x1B
   406  00021B                     	ds	2
   407  00021D                     main@msgtype:
   408                           	opt stack 0
   409                           
   410                           ; 1 bytes @ 0x1D
   411  00021D                     	ds	1
   412  00021E                     main@length:
   413                           	opt stack 0
   414                           
   415                           ; 1 bytes @ 0x1E
   416  00021E                     	ds	1
   417  00021F                     main@uc:
   418                           	opt stack 0
   419                           
   420                           ; 12 bytes @ 0x1F
   421  00021F                     	ds	12
   422  00022B                     main@ic:
   423                           	opt stack 0
   424                           
   425                           ; 29 bytes @ 0x2B
   426  00022B                     	ds	29
   427                           tblptru	equ	0xFF8
   428                           tblptrh	equ	0xFF7
   429                           tblptrl	equ	0xFF6
   430                           tablat	equ	0xFF5
   431                           postinc0	equ	0xFEE
   432                           wreg	equ	0xFE8
   433                           
   434                           	psect	cstackBANK0
   435  000080                     __pcstackBANK0:
   436                           	opt stack 0
   437  000080                     ??_InterruptHandlerHigh:
   438                           
   439                           ; 0 bytes @ 0x0
   440  000080                     	ds	14
   441  00008E                     ?_init_uart_recv:
   442                           	opt stack 0
   443  00008E                     ?_init_i2c:
   444                           	opt stack 0
   445  00008E                     ?_init_timer1_lthread:
   446                           	opt stack 0
   447  00008E                     ?_OpenTimer1:
   448                           	opt stack 0
   449  00008E                     ?_OpenUSART:
   450                           	opt stack 0
   451  00008E                     ?_putIntoUARTBuffer:
   452                           	opt stack 0
   453  00008E                     ?_start_i2c_slave_reply:
   454                           	opt stack 0
   455  00008E                     ?_Delay1KTCYx:
   456                           	opt stack 0
   457  00008E                     ?_OpenI2C1:
   458                           	opt stack 0
   459  00008E                     ?_WriteUSART:
   460                           	opt stack 0
   461  00008E                     ?_init_queue:
   462                           	opt stack 0
   463  00008E                     ?_check_msg:
   464                           	opt stack 0
   465  00008E                     ?_timer0_lthread:
   466                           	opt stack 0
   467  00008E                     ?_timer1_lthread:
   468                           	opt stack 0
   469  00008E                     ?_motor_control_thread:
   470                           	opt stack 0
   471  00008E                     ?_memcpy:
   472                           	opt stack 0
   473  00008E                     ?_in_high_int:
   474                           	opt stack 0
   475  00008E                     start_i2c_slave_reply@length:
   476                           	opt stack 0
   477  00008E                     OpenTimer1@config:
   478                           	opt stack 0
   479  00008E                     OpenUSART@config:
   480                           	opt stack 0
   481  00008E                     WriteUSART@data:
   482                           	opt stack 0
   483  00008E                     OpenI2C1@sync_mode:
   484                           	opt stack 0
   485  00008E                     Delay1KTCYx@unit:
   486                           	opt stack 0
   487  00008E                     init_queue@qptr:
   488                           	opt stack 0
   489  00008E                     check_msg@qptr:
   490                           	opt stack 0
   491  00008E                     init_i2c@ic:
   492                           	opt stack 0
   493  00008E                     putIntoUARTBuffer@buffer:
   494                           	opt stack 0
   495  00008E                     init_uart_recv@uc:
   496                           	opt stack 0
   497  00008E                     init_timer1_lthread@tptr:
   498                           	opt stack 0
   499  00008E                     memcpy@d1:
   500                           	opt stack 0
   501                           
   502                           ; 2 bytes @ 0xE
   503  00008E                     	ds	1
   504  00008F                     ?_uart_lthread:
   505                           	opt stack 0
   506  00008F                     OpenI2C1@slew:
   507                           	opt stack 0
   508  00008F                     start_i2c_slave_reply@msg:
   509                           	opt stack 0
   510  00008F                     OpenUSART@spbrg:
   511                           	opt stack 0
   512                           
   513                           ; 2 bytes @ 0xF
   514  00008F                     	ds	1
   515  000090                     ?_i2c_configure_master:
   516                           	opt stack 0
   517  000090                     ??_init_queue:
   518  000090                     ??_check_msg:
   519  000090                     ?_in_low_int:
   520                           	opt stack 0
   521  000090                     i2c_configure_master@slave_addr:
   522                           	opt stack 0
   523  000090                     memcpy@s1:
   524                           	opt stack 0
   525                           
   526                           ; 2 bytes @ 0x10
   527  000090                     	ds	1
   528  000091                     ??_i2c_configure_master:
   529  000091                     ??_start_i2c_slave_reply:
   530  000091                     init_queue@i:
   531                           	opt stack 0
   532  000091                     uart_lthread@msgtype:
   533                           	opt stack 0
   534                           
   535                           ; 2 bytes @ 0x11
   536  000091                     	ds	1
   537  000092                     ??_init_queues:
   538  000092                     ?_in_main:
   539                           	opt stack 0
   540  000092                     memcpy@n:
   541                           	opt stack 0
   542                           
   543                           ; 2 bytes @ 0x12
   544  000092                     	ds	1
   545  000093                     i2c_configure_master@i:
   546                           	opt stack 0
   547  000093                     uart_lthread@length:
   548                           	opt stack 0
   549                           
   550                           ; 2 bytes @ 0x13
   551  000093                     	ds	1
   552  000094                     ??_block_on_To_msgqueues:
   553  000094                     timer0_lthread@msgbuffer:
   554                           	opt stack 0
   555  000094                     motor_control_thread@msgbuffer:
   556                           	opt stack 0
   557  000094                     memcpy@d:
   558                           	opt stack 0
   559                           
   560                           ; 2 bytes @ 0x14
   561  000094                     	ds	1
   562  000095                     uart_lthread@msgbuffer:
   563                           	opt stack 0
   564                           
   565                           ; 2 bytes @ 0x15
   566  000095                     	ds	1
   567  000096                     ??_motor_control_thread:
   568  000096                     timer0_lthread@msgval:
   569                           	opt stack 0
   570  000096                     memcpy@s:
   571                           	opt stack 0
   572                           
   573                           ; 2 bytes @ 0x16
   574  000096                     	ds	1
   575  000097                     ??_uart_lthread:
   576                           
   577                           ; 0 bytes @ 0x17
   578  000097                     	ds	1
   579  000098                     ?_recv_msg:
   580                           	opt stack 0
   581  000098                     recv_msg@qptr:
   582                           	opt stack 0
   583  000098                     motor_control_thread@i:
   584                           	opt stack 0
   585                           
   586                           ; 2 bytes @ 0x18
   587  000098                     	ds	2
   588  00009A                     recv_msg@maxlength:
   589                           	opt stack 0
   590  00009A                     uart_lthread@i:
   591                           	opt stack 0
   592                           
   593                           ; 1 bytes @ 0x1A
   594  00009A                     	ds	1
   595  00009B                     recv_msg@msgtype:
   596                           	opt stack 0
   597                           
   598                           ; 2 bytes @ 0x1B
   599  00009B                     	ds	2
   600  00009D                     recv_msg@data:
   601                           	opt stack 0
   602                           
   603                           ; 2 bytes @ 0x1D
   604  00009D                     	ds	2
   605  00009F                     ??_recv_msg:
   606                           
   607                           ; 0 bytes @ 0x1F
   608  00009F                     	ds	2
   609  0000A1                     recv_msg@slot:
   610                           	opt stack 0
   611                           
   612                           ; 1 bytes @ 0x21
   613  0000A1                     	ds	1
   614  0000A2                     recv_msg@tlength:
   615                           	opt stack 0
   616                           
   617                           ; 2 bytes @ 0x22
   618  0000A2                     	ds	2
   619  0000A4                     recv_msg@qmsg:
   620                           	opt stack 0
   621                           
   622                           ; 2 bytes @ 0x24
   623  0000A4                     	ds	2
   624  0000A6                     ?_ToMainHigh_recvmsg:
   625                           	opt stack 0
   626  0000A6                     ?_ToMainLow_recvmsg:
   627                           	opt stack 0
   628  0000A6                     ToMainLow_recvmsg@maxlength:
   629                           	opt stack 0
   630  0000A6                     ToMainHigh_recvmsg@maxlength:
   631                           	opt stack 0
   632                           
   633                           ; 1 bytes @ 0x26
   634  0000A6                     	ds	1
   635  0000A7                     ToMainLow_recvmsg@msgtype:
   636                           	opt stack 0
   637  0000A7                     ToMainHigh_recvmsg@msgtype:
   638                           	opt stack 0
   639                           
   640                           ; 2 bytes @ 0x27
   641  0000A7                     	ds	2
   642  0000A9                     ToMainLow_recvmsg@data:
   643                           	opt stack 0
   644  0000A9                     ToMainHigh_recvmsg@data:
   645                           	opt stack 0
   646                           
   647                           ; 2 bytes @ 0x29
   648  0000A9                     	ds	2
   649  0000AB                     ??_main:
   650                           
   651                           ; 0 bytes @ 0x2B
   652  0000AB                     	ds	1
   653                           tblptru	equ	0xFF8
   654                           tblptrh	equ	0xFF7
   655                           tblptrl	equ	0xFF6
   656                           tablat	equ	0xFF5
   657                           postinc0	equ	0xFEE
   658                           wreg	equ	0xFE8
   659                           
   660                           	psect	cstackCOMRAM
   661  000001                     __pcstackCOMRAM:
   662                           	opt stack 0
   663  000001                     ??_uart_tx_int_handler:
   664  000001                     ?_i2c_master_recv:
   665                           	opt stack 0
   666  000001                     i2c_master_recv@length:
   667                           	opt stack 0
   668                           
   669                           ; 1 bytes @ 0x0
   670  000001                     	ds	1
   671  000002                     ??_timer1_int_handler:
   672  000002                     uart_tx_int_handler@testbuffer:
   673                           	opt stack 0
   674                           
   675                           ; 1 bytes @ 0x1
   676  000002                     	ds	1
   677  000003                     ??_InterruptHandlerLow:
   678                           
   679                           ; 0 bytes @ 0x2
   680  000003                     	ds	17
   681  000014                     ?_WriteTimer0:
   682                           	opt stack 0
   683  000014                     ?i2_check_msg:
   684                           	opt stack 0
   685  000014                     ?_ReadADC:
   686                           	opt stack 0
   687  000014                     ?i2_in_high_int:
   688                           	opt stack 0
   689  000014                     ?i2_memcpy:
   690                           	opt stack 0
   691  000014                     ReadUSART@data:
   692                           	opt stack 0
   693  000014                     WriteTimer0@timer0:
   694                           	opt stack 0
   695  000014                     i2check_msg@qptr:
   696                           	opt stack 0
   697  000014                     i2memcpy@d1:
   698                           	opt stack 0
   699                           
   700                           ; 2 bytes @ 0x13
   701  000014                     	ds	2
   702  000016                     ??i2_check_msg:
   703  000016                     ?i2_in_low_int:
   704                           	opt stack 0
   705  000016                     WriteTimer0@timer:
   706                           	opt stack 0
   707  000016                     i2memcpy@s1:
   708                           	opt stack 0
   709                           
   710                           ; 2 bytes @ 0x15
   711  000016                     	ds	2
   712  000018                     i2memcpy@n:
   713                           	opt stack 0
   714                           
   715                           ; 2 bytes @ 0x17
   716  000018                     	ds	2
   717  00001A                     i2memcpy@d:
   718                           	opt stack 0
   719                           
   720                           ; 2 bytes @ 0x19
   721  00001A                     	ds	2
   722  00001C                     i2memcpy@s:
   723                           	opt stack 0
   724                           
   725                           ; 2 bytes @ 0x1B
   726  00001C                     	ds	2
   727  00001E                     ?_send_msg:
   728                           	opt stack 0
   729  00001E                     ?i2_recv_msg:
   730                           	opt stack 0
   731  00001E                     send_msg@qptr:
   732                           	opt stack 0
   733  00001E                     i2recv_msg@qptr:
   734                           	opt stack 0
   735                           
   736                           ; 2 bytes @ 0x1D
   737  00001E                     	ds	2
   738  000020                     send_msg@length:
   739                           	opt stack 0
   740  000020                     i2recv_msg@maxlength:
   741                           	opt stack 0
   742                           
   743                           ; 1 bytes @ 0x1F
   744  000020                     	ds	1
   745  000021                     send_msg@msgtype:
   746                           	opt stack 0
   747  000021                     i2recv_msg@msgtype:
   748                           	opt stack 0
   749                           
   750                           ; 2 bytes @ 0x20
   751  000021                     	ds	1
   752  000022                     send_msg@data:
   753                           	opt stack 0
   754                           
   755                           ; 2 bytes @ 0x21
   756  000022                     	ds	1
   757  000023                     i2recv_msg@data:
   758                           	opt stack 0
   759                           
   760                           ; 2 bytes @ 0x22
   761  000023                     	ds	1
   762  000024                     ??_send_msg:
   763                           
   764                           ; 0 bytes @ 0x23
   765  000024                     	ds	1
   766  000025                     ??i2_recv_msg:
   767  000025                     send_msg@tlength:
   768                           	opt stack 0
   769                           
   770                           ; 2 bytes @ 0x24
   771  000025                     	ds	2
   772  000027                     send_msg@slot:
   773                           	opt stack 0
   774  000027                     i2recv_msg@slot:
   775                           	opt stack 0
   776                           
   777                           ; 1 bytes @ 0x26
   778  000027                     	ds	1
   779  000028                     send_msg@qmsg:
   780                           	opt stack 0
   781  000028                     i2recv_msg@tlength:
   782                           	opt stack 0
   783                           
   784                           ; 2 bytes @ 0x27
   785  000028                     	ds	2
   786  00002A                     ?_ToMainLow_sendmsg:
   787                           	opt stack 0
   788  00002A                     ?_ToMainHigh_sendmsg:
   789                           	opt stack 0
   790  00002A                     ToMainLow_sendmsg@length:
   791                           	opt stack 0
   792  00002A                     ToMainHigh_sendmsg@length:
   793                           	opt stack 0
   794  00002A                     i2recv_msg@qmsg:
   795                           	opt stack 0
   796                           
   797                           ; 2 bytes @ 0x29
   798  00002A                     	ds	1
   799  00002B                     ToMainLow_sendmsg@msgtype:
   800                           	opt stack 0
   801  00002B                     ToMainHigh_sendmsg@msgtype:
   802                           	opt stack 0
   803                           
   804                           ; 1 bytes @ 0x2A
   805  00002B                     	ds	1
   806  00002C                     ?_FromMainHigh_recvmsg:
   807                           	opt stack 0
   808  00002C                     FromMainHigh_recvmsg@maxlength:
   809                           	opt stack 0
   810  00002C                     ToMainLow_sendmsg@data:
   811                           	opt stack 0
   812  00002C                     ToMainHigh_sendmsg@data:
   813                           	opt stack 0
   814                           
   815                           ; 2 bytes @ 0x2B
   816  00002C                     	ds	1
   817  00002D                     FromMainHigh_recvmsg@msgtype:
   818                           	opt stack 0
   819                           
   820                           ; 2 bytes @ 0x2C
   821  00002D                     	ds	1
   822  00002E                     ??_i2c_master_handler:
   823  00002E                     ??_uart_recv_int_handler:
   824  00002E                     
   825                           ; 0 bytes @ 0x2D
   826  00002E                     	ds	1
   827  00002F                     FromMainHigh_recvmsg@data:
   828                           	opt stack 0
   829                           
   830                           ; 2 bytes @ 0x2E
   831  00002F                     	ds	2
   832  000031                     ??_timer0_int_handler:
   833  000031                     
   834                           ; 0 bytes @ 0x30
   835  000031                     	ds	2
   836  000033                     timer0_int_handler@length:
   837                           	opt stack 0
   838                           
   839                           ; 2 bytes @ 0x32
   840  000033                     	ds	1
   841  000034                     i2c_master_handler@data_written:
   842                           	opt stack 0
   843                           
   844                           ; 1 bytes @ 0x33
   845  000034                     	ds	1
   846  000035                     i2c_master_handler@msg_sent:
   847                           	opt stack 0
   848  000035                     timer0_int_handler@msgtype:
   849                           	opt stack 0
   850                           
   851                           ; 2 bytes @ 0x34
   852  000035                     	ds	1
   853  000036                     i2c_master_handler@i2c_data:
   854                           	opt stack 0
   855                           
   856                           ; 1 bytes @ 0x35
   857  000036                     	ds	1
   858  000037                     i2c_master_handler@overrun_error:
   859                           	opt stack 0
   860  000037                     timer0_int_handler@val:
   861                           	opt stack 0
   862                           
   863                           ; 2 bytes @ 0x36
   864  000037                     	ds	1
   865  000038                     i2c_master_handler@data_read:
   866                           	opt stack 0
   867                           
   868                           ; 1 bytes @ 0x37
   869  000038                     	ds	1
   870                           tblptru	equ	0xFF8
   871                           tblptrh	equ	0xFF7
   872                           tblptrl	equ	0xFF6
   873                           tablat	equ	0xFF5
   874                           postinc0	equ	0xFEE
   875                           wreg	equ	0xFE8
   876                           
   877 ;;
   878 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   879 ;;
   880 ;; *************** function _main *****************
   881 ;; Defined at:
   882 ;;		line 88 in file "../src/main.c"
   883 ;; Parameters:    Size  Location     Type
   884 ;;		None
   885 ;; Auto vars:     Size  Location     Type
   886 ;;  testbuffer5     1    4[BANK2 ] unsigned char 
   887 ;;  testbuffer4     1    3[BANK2 ] unsigned char 
   888 ;;  testbuffer3     1    2[BANK2 ] unsigned char 
   889 ;;  testbuffer2     1    1[BANK2 ] unsigned char 
   890 ;;  testbuffer1     1    0[BANK2 ] unsigned char 
   891 ;;  ic             29   43[BANK2 ] struct __i2c_comm
   892 ;;  uc             12   31[BANK2 ] struct __uart_comm
   893 ;;  msgbuffer      11   14[BANK2 ] unsigned char [11]
   894 ;;  motorthread_    4    5[BANK2 ] struct __motor_control_t
   895 ;;  t1thread_dat    2   27[BANK2 ] struct __timer1_thread_s
   896 ;;  test_var        2   25[BANK2 ] int 
   897 ;;  t0thread_dat    2   11[BANK2 ] struct __timer0_thread_s
   898 ;;  uthread_data    2    9[BANK2 ] struct __uart_thread_str
   899 ;;  length          1   30[BANK2 ] char 
   900 ;;  msgtype         1   29[BANK2 ] unsigned char 
   901 ;;  last_reg_rec    1   13[BANK2 ] unsigned char 
   902 ;;  i               1    0        unsigned char 
   903 ;;  c               1    0        unsigned char 
   904 ;; Return value:  Size  Location     Type
   905 ;;		None               void
   906 ;; Registers used:
   907 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   908 ;; Tracked objects:
   909 ;;		On entry : 0/0
   910 ;;		On exit  : 0/0
   911 ;;		Unchanged: 0/0
   912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
   913 ;;      Params:         0       0       0       0       0
   914 ;;      Locals:         0       0       0      72       0
   915 ;;      Temps:          0       1       0       0       0
   916 ;;      Totals:         0       1       0      72       0
   917 ;;Total ram usage:       73 bytes
   918 ;; Hardware stack levels required when called:   12
   919 ;; This function calls:
   920 ;;		_enable_interrupts
   921 ;;		_init_uart_recv
   922 ;;		_init_i2c
   923 ;;		_i2c_configure_master
   924 ;;		_init_timer1_lthread
   925 ;;		_init_queues
   926 ;;		_OpenTimer1
   927 ;;		_OpenUSART
   928 ;;		_block_on_To_msgqueues
   929 ;;		_ToMainHigh_recvmsg
   930 ;;		_uart_lthread
   931 ;;		_timer0_lthread
   932 ;;		_putIntoUARTBuffer
   933 ;;		_start_i2c_slave_reply
   934 ;;		_ToMainLow_recvmsg
   935 ;;		_timer1_lthread
   936 ;;		_motor_control_thread
   937 ;; This function is called by:
   938 ;;		Startup code after reset
   939 ;; This function uses a non-reentrant model
   940 ;;
   941                           
   942                           	psect	text0
   943  0000CE                     __ptext0:
   944                           	opt stack 0
   945  0000CE                     _main:
   946                           	opt stack 18
   947                           
   948                           ;main.c: 89: char c;
   949                           ;main.c: 90: signed char length;
   950                           ;main.c: 91: unsigned char msgtype;
   951                           ;main.c: 92: int test_var = 0;
   952                           
   953                           ; BSR set to: 0
   954                           ;incstack = 0
   955                           ;incstack = 0
   956  0000CE  0E00               	movlw	0
   957  0000D0  0102               	movlb	2	; () banked
   958  0000D2  0102               	movlb	2	; () banked
   959  0000D4  6F1A               	movwf	(main@test_var+1)& (0+255),b
   960  0000D6  0E00               	movlw	0
   961  0000D8  0102               	movlb	2	; () banked
   962  0000DA  6F19               	movwf	main@test_var& (0+255),b
   963                           
   964                           ;main.c: 93: unsigned char last_reg_recvd;
   965                           ;main.c: 94: uart_comm uc;
   966                           ;main.c: 95: i2c_comm ic;
   967                           ;main.c: 96: unsigned char msgbuffer[10 + 1];
   968                           ;main.c: 97: unsigned char i;
   969                           ;main.c: 98: uart_thread_struct uthread_data;
   970                           ;main.c: 99: timer1_thread_struct t1thread_data;
   971                           ;main.c: 100: timer0_thread_struct t0thread_data;
   972                           ;main.c: 101: motor_control_thread_struct motorthread_data;
   973                           ;main.c: 108: OSCCON = 0x82;
   974  0000DC  0E82               	movlw	130
   975  0000DE  6ED3               	movwf	4051,c	;volatile
   976                           
   977                           ; BSR set to: 2
   978                           ;main.c: 109: OSCTUNEbits.PLLEN = 0;
   979  0000E0  9C9B               	bcf	3995,6,c	;volatile
   980                           
   981                           ; BSR set to: 2
   982                           ;main.c: 113: init_uart_recv(&uc);
   983  0000E2  0102               	movlb	2	; () banked
   984  0000E4  0E02               	movlw	high main@uc
   985  0000E6  0100               	movlb	0	; () banked
   986  0000E8  0100               	movlb	0	; () banked
   987  0000EA  6F8F               	movwf	(?_init_uart_recv+1)& (0+255),b
   988  0000EC  0102               	movlb	2	; () banked
   989  0000EE  0E1F               	movlw	low main@uc
   990  0000F0  0100               	movlb	0	; () banked
   991  0000F2  6F8E               	movwf	?_init_uart_recv& (0+255),b
   992  0000F4  ECA4  F00A         	call	_init_uart_recv	;wreg free
   993                           
   994                           ;main.c: 116: init_i2c(&ic);
   995  0000F8  0102               	movlb	2	; () banked
   996  0000FA  0E02               	movlw	high main@ic
   997  0000FC  0100               	movlb	0	; () banked
   998  0000FE  0100               	movlb	0	; () banked
   999  000100  6F8F               	movwf	(?_init_i2c+1)& (0+255),b
  1000  000102  0102               	movlb	2	; () banked
  1001  000104  0E2B               	movlw	low main@ic
  1002  000106  0100               	movlb	0	; () banked
  1003  000108  6F8E               	movwf	?_init_i2c& (0+255),b
  1004  00010A  EC21  F009         	call	_init_i2c	;wreg free
  1005                           
  1006                           ;main.c: 117: i2c_configure_master(0x2A);
  1007  00010E  0100               	movlb	0	; () banked
  1008  000110  6FAB               	movwf	??_main& (0+255),b
  1009  000112  0E2A               	movlw	42
  1010  000114  0100               	movlb	0	; () banked
  1011  000116  0100               	movlb	0	; () banked
  1012  000118  6F90               	movwf	?_i2c_configure_master& (0+255),b
  1013  00011A  0100               	movlb	0	; () banked
  1014  00011C  51AB               	movf	??_main& (0+255),w,b
  1015  00011E  EC1E  F008         	call	_i2c_configure_master	;wreg free
  1016                           
  1017                           ;main.c: 120: init_timer1_lthread(&t1thread_data);
  1018  000122  0102               	movlb	2	; () banked
  1019  000124  0E02               	movlw	high main@t1thread_data
  1020  000126  0100               	movlb	0	; () banked
  1021  000128  0100               	movlb	0	; () banked
  1022  00012A  6F8F               	movwf	(?_init_timer1_lthread+1)& (0+255),b
  1023  00012C  0102               	movlb	2	; () banked
  1024  00012E  0E1B               	movlw	low main@t1thread_data
  1025  000130  0100               	movlb	0	; () banked
  1026  000132  6F8E               	movwf	?_init_timer1_lthread& (0+255),b
  1027  000134  ECE3  F00B         	call	_init_timer1_lthread	;wreg free
  1028                           
  1029                           ;main.c: 123: init_queues();
  1030  000138  EC94  F009         	call	_init_queues	;wreg free
  1031                           
  1032                           ;main.c: 126: TRISB = 0x0;
  1033  00013C  0E00               	movlw	0
  1034  00013E  6E93               	movwf	3987,c	;volatile
  1035                           
  1036                           ;main.c: 127: LATB = 0x0;
  1037  000140  0E00               	movlw	0
  1038  000142  6E8A               	movwf	3978,c	;volatile
  1039                           
  1040                           ;main.c: 141: OpenTimer1(0b11111111 & 0b11111111 & 0b11111111 & 0b11111101 & 0b11110111 
      +                          & 0b11111111);
  1041  000144  0100               	movlb	0	; () banked
  1042  000146  6FAB               	movwf	??_main& (0+255),b
  1043  000148  0EF5               	movlw	245
  1044  00014A  0100               	movlb	0	; () banked
  1045  00014C  0100               	movlb	0	; () banked
  1046  00014E  6F8E               	movwf	?_OpenTimer1& (0+255),b
  1047  000150  0100               	movlb	0	; () banked
  1048  000152  51AB               	movf	??_main& (0+255),w,b
  1049  000154  ECDC  F00A         	call	_OpenTimer1	;wreg free
  1050                           
  1051                           ;main.c: 151: enable_interrupts();
  1052  000158  EC14  F00C         	call	_enable_interrupts	;wreg free
  1053                           
  1054                           ;main.c: 153: OpenUSART( 0b01111111 & 0b11111111 & 0b11111110 & 0b11111101 & 0b11111111 
      +                          & 0b11111111 & 0b11011111, 38);
  1055  00015C  0100               	movlb	0	; () banked
  1056  00015E  6FAB               	movwf	??_main& (0+255),b
  1057  000160  0E5C               	movlw	92
  1058  000162  0100               	movlb	0	; () banked
  1059  000164  0100               	movlb	0	; () banked
  1060  000166  6F8E               	movwf	?_OpenUSART& (0+255),b
  1061  000168  0100               	movlb	0	; () banked
  1062  00016A  51AB               	movf	??_main& (0+255),w,b
  1063  00016C  0E00               	movlw	0
  1064  00016E  0100               	movlb	0	; () banked
  1065  000170  0100               	movlb	0	; () banked
  1066  000172  6F90               	movwf	(?_OpenUSART+2)& (0+255),b
  1067  000174  0E26               	movlw	38
  1068  000176  0100               	movlb	0	; () banked
  1069  000178  6F8F               	movwf	(?_OpenUSART+1)& (0+255),b
  1070  00017A  EC64  F008         	call	_OpenUSART	;wreg free
  1071                           
  1072                           ;main.c: 162: IPR1bits.TMR1IP = 0;
  1073  00017E  909F               	bcf	3999,0,c	;volatile
  1074                           
  1075                           ;main.c: 166: IPR1bits.RCIP = 1;
  1076  000180  8A9F               	bsf	3999,5,c	;volatile
  1077                           
  1078                           ;main.c: 170: IPR1bits.TXIP = 0;
  1079  000182  989F               	bcf	3999,4,c	;volatile
  1080                           
  1081                           ;main.c: 174: IPR1bits.SSPIP = 1;
  1082  000184  869F               	bsf	3999,3,c	;volatile
  1083                           
  1084                           ;main.c: 182: PIE1bits.RCIE = 1;
  1085  000186  8A9D               	bsf	3997,5,c	;volatile
  1086                           
  1087                           ;main.c: 185: PIE1bits.TXIE = 0;
  1088  000188  989D               	bcf	3997,4,c	;volatile
  1089                           
  1090                           ;main.c: 189: PIE1bits.SSPIE = 1;
  1091  00018A  869D               	bsf	3997,3,c	;volatile
  1092  00018C                     l2960:
  1093                           
  1094                           ;main.c: 246: block_on_To_msgqueues();
  1095  00018C  ECC5  F006         	call	_block_on_To_msgqueues	;wreg free
  1096                           
  1097                           ;main.c: 253: length = ToMainHigh_recvmsg(10, &msgtype, (void *) msgbuffer);
  1098  000190  0100               	movlb	0	; () banked
  1099  000192  6FAB               	movwf	??_main& (0+255),b
  1100  000194  0E0A               	movlw	10
  1101  000196  0100               	movlb	0	; () banked
  1102  000198  0100               	movlb	0	; () banked
  1103  00019A  6FA6               	movwf	?_ToMainHigh_recvmsg& (0+255),b
  1104  00019C  0100               	movlb	0	; () banked
  1105  00019E  51AB               	movf	??_main& (0+255),w,b
  1106  0001A0  0102               	movlb	2	; () banked
  1107  0001A2  0E02               	movlw	high main@msgtype
  1108  0001A4  0100               	movlb	0	; () banked
  1109  0001A6  0100               	movlb	0	; () banked
  1110  0001A8  6FA8               	movwf	(?_ToMainHigh_recvmsg+2)& (0+255),b
  1111  0001AA  0102               	movlb	2	; () banked
  1112  0001AC  0E1D               	movlw	low main@msgtype
  1113  0001AE  0100               	movlb	0	; () banked
  1114  0001B0  6FA7               	movwf	(?_ToMainHigh_recvmsg+1)& (0+255),b
  1115  0001B2  0102               	movlb	2	; () banked
  1116  0001B4  0E02               	movlw	high main@msgbuffer
  1117  0001B6  0100               	movlb	0	; () banked
  1118  0001B8  0100               	movlb	0	; () banked
  1119  0001BA  6FAA               	movwf	(?_ToMainHigh_recvmsg+4)& (0+255),b
  1120  0001BC  0102               	movlb	2	; () banked
  1121  0001BE  0E0E               	movlw	low main@msgbuffer
  1122  0001C0  0100               	movlb	0	; () banked
  1123  0001C2  6FA9               	movwf	(?_ToMainHigh_recvmsg+3)& (0+255),b
  1124  0001C4  EC53  F00B         	call	_ToMainHigh_recvmsg	;wreg free
  1125  0001C8  0102               	movlb	2	; () banked
  1126  0001CA  0102               	movlb	2	; () banked
  1127  0001CC  6F1E               	movwf	main@length& (0+255),b
  1128                           
  1129                           ; BSR set to: 2
  1130                           ;main.c: 254: if (length < 0) {
  1131  0001CE  0102               	movlb	2	; () banked
  1132  0001D0  0102               	movlb	2	; () banked
  1133  0001D2  BF1E               	btfsc	main@length& (0+255),7,b
  1134  0001D4  D0D6               	goto	l2998
  1135  0001D6  D0C3               	goto	l2996
  1136  0001D8                     l2968:
  1137                           
  1138                           ; BSR set to: 2
  1139                           ;main.c: 262: {
  1140                           ;main.c: 263: uart_lthread(&uthread_data, msgtype, length, msgbuffer);
  1141  0001D8  0102               	movlb	2	; () banked
  1142  0001DA  0E02               	movlw	high main@uthread_data
  1143  0001DC  0100               	movlb	0	; () banked
  1144  0001DE  0100               	movlb	0	; () banked
  1145  0001E0  6F90               	movwf	(?_uart_lthread+1)& (0+255),b
  1146  0001E2  0102               	movlb	2	; () banked
  1147  0001E4  0E09               	movlw	low main@uthread_data
  1148  0001E6  0100               	movlb	0	; () banked
  1149  0001E8  6F8F               	movwf	?_uart_lthread& (0+255),b
  1150  0001EA  0102               	movlb	2	; () banked
  1151  0001EC  0100               	movlb	0	; () banked
  1152  0001EE  C21D  F091         	movff	main@msgtype,?_uart_lthread+2
  1153  0001F2  0100               	movlb	0	; () banked
  1154  0001F4  0100               	movlb	0	; () banked
  1155  0001F6  6B92               	clrf	(?_uart_lthread+3)& (0+255),b
  1156  0001F8  0102               	movlb	2	; () banked
  1157  0001FA  0102               	movlb	2	; () banked
  1158  0001FC  511E               	movf	main@length& (0+255),w,b
  1159  0001FE  0100               	movlb	0	; () banked
  1160  000200  0100               	movlb	0	; () banked
  1161  000202  6F93               	movwf	(?_uart_lthread+4)& (0+255),b
  1162  000204  0100               	movlb	0	; () banked
  1163  000206  6B94               	clrf	(?_uart_lthread+5)& (0+255),b
  1164  000208  0100               	movlb	0	; () banked
  1165  00020A  BF93               	btfsc	(?_uart_lthread+4)& (0+255),7,b
  1166  00020C  0794               	decf	(?_uart_lthread+5)& (0+255),f,b
  1167  00020E  0102               	movlb	2	; () banked
  1168  000210  0E02               	movlw	high main@msgbuffer
  1169  000212  0100               	movlb	0	; () banked
  1170  000214  0100               	movlb	0	; () banked
  1171  000216  6F96               	movwf	(?_uart_lthread+7)& (0+255),b
  1172  000218  0102               	movlb	2	; () banked
  1173  00021A  0E0E               	movlw	low main@msgbuffer
  1174  00021C  0100               	movlb	0	; () banked
  1175  00021E  6F95               	movwf	(?_uart_lthread+6)& (0+255),b
  1176  000220  EC5F  F006         	call	_uart_lthread	;wreg free
  1177  000224                     l2970:
  1178                           
  1179                           ;main.c: 266: {
  1180                           ;main.c: 267: timer0_lthread(&t0thread_data, msgtype, length, msgbuffer);
  1181  000224  0102               	movlb	2	; () banked
  1182  000226  0E02               	movlw	high main@t0thread_data
  1183  000228  0100               	movlb	0	; () banked
  1184  00022A  0100               	movlb	0	; () banked
  1185  00022C  6F8F               	movwf	(?_timer0_lthread+1)& (0+255),b
  1186  00022E  0102               	movlb	2	; () banked
  1187  000230  0E0B               	movlw	low main@t0thread_data
  1188  000232  0100               	movlb	0	; () banked
  1189  000234  6F8E               	movwf	?_timer0_lthread& (0+255),b
  1190  000236  0102               	movlb	2	; () banked
  1191  000238  0100               	movlb	0	; () banked
  1192  00023A  C21D  F090         	movff	main@msgtype,?_timer0_lthread+2
  1193  00023E  0100               	movlb	0	; () banked
  1194  000240  0100               	movlb	0	; () banked
  1195  000242  6B91               	clrf	(?_timer0_lthread+3)& (0+255),b
  1196  000244  0102               	movlb	2	; () banked
  1197  000246  0102               	movlb	2	; () banked
  1198  000248  511E               	movf	main@length& (0+255),w,b
  1199  00024A  0100               	movlb	0	; () banked
  1200  00024C  0100               	movlb	0	; () banked
  1201  00024E  6F92               	movwf	(?_timer0_lthread+4)& (0+255),b
  1202  000250  0100               	movlb	0	; () banked
  1203  000252  6B93               	clrf	(?_timer0_lthread+5)& (0+255),b
  1204  000254  0100               	movlb	0	; () banked
  1205  000256  BF92               	btfsc	(?_timer0_lthread+4)& (0+255),7,b
  1206  000258  0793               	decf	(?_timer0_lthread+5)& (0+255),f,b
  1207  00025A  0102               	movlb	2	; () banked
  1208  00025C  0E02               	movlw	high main@msgbuffer
  1209  00025E  0100               	movlb	0	; () banked
  1210  000260  0100               	movlb	0	; () banked
  1211  000262  6F95               	movwf	(?_timer0_lthread+7)& (0+255),b
  1212  000264  0102               	movlb	2	; () banked
  1213  000266  0E0E               	movlw	low main@msgbuffer
  1214  000268  0100               	movlb	0	; () banked
  1215  00026A  6F94               	movwf	(?_timer0_lthread+6)& (0+255),b
  1216  00026C  EC0A  F00C         	call	_timer0_lthread	;wreg free
  1217                           
  1218                           ;main.c: 268: break;
  1219  000270  D088               	goto	l2998
  1220  000272                     l113:
  1221                           
  1222                           ;main.c: 271: case 41:
  1223                           ;main.c: 272: {
  1224                           ;main.c: 275: last_reg_recvd = msgbuffer[0];
  1225  000272  C20E  F20D         	movff	main@msgbuffer,main@last_reg_recvd
  1226                           
  1227                           ;main.c: 276: char testbuffer1 = msgbuffer[1];
  1228  000276  C20F  F200         	movff	main@msgbuffer+1,main@testbuffer1
  1229                           
  1230                           ;main.c: 277: char testbuffer2 = msgbuffer[2];
  1231  00027A  C210  F201         	movff	main@msgbuffer+2,main@testbuffer2
  1232                           
  1233                           ;main.c: 278: char testbuffer3 = msgbuffer[3];
  1234  00027E  C211  F202         	movff	main@msgbuffer+3,main@testbuffer3
  1235                           
  1236                           ;main.c: 279: char testbuffer4 =msgbuffer[4];
  1237  000282  C212  F203         	movff	main@msgbuffer+4,main@testbuffer4
  1238                           
  1239                           ;main.c: 280: char testbuffer5 = msgbuffer[5];
  1240  000286  C213  F204         	movff	main@msgbuffer+5,main@testbuffer5
  1241                           
  1242                           ;main.c: 283: putIntoUARTBuffer(msgbuffer);
  1243  00028A  0102               	movlb	2	; () banked
  1244  00028C  0E02               	movlw	high main@msgbuffer
  1245  00028E  0100               	movlb	0	; () banked
  1246  000290  0100               	movlb	0	; () banked
  1247  000292  6F8F               	movwf	(?_putIntoUARTBuffer+1)& (0+255),b
  1248  000294  0102               	movlb	2	; () banked
  1249  000296  0E0E               	movlw	low main@msgbuffer
  1250  000298  0100               	movlb	0	; () banked
  1251  00029A  6F8E               	movwf	?_putIntoUARTBuffer& (0+255),b
  1252  00029C  EC87  F005         	call	_putIntoUARTBuffer	;wreg free
  1253                           
  1254                           ;main.c: 286: PIE1bits.TXIE = 1;
  1255  0002A0  889D               	bsf	3997,4,c	;volatile
  1256                           
  1257                           ;main.c: 287: break;
  1258  0002A2  D06F               	goto	l2998
  1259  0002A4                     l2976:
  1260                           
  1261                           ;main.c: 300: {
  1262                           ;main.c: 301: length = 2;
  1263  0002A4  0100               	movlb	0	; () banked
  1264  0002A6  6FAB               	movwf	??_main& (0+255),b
  1265  0002A8  0E02               	movlw	2
  1266  0002AA  0102               	movlb	2	; () banked
  1267  0002AC  0102               	movlb	2	; () banked
  1268  0002AE  6F1E               	movwf	main@length& (0+255),b
  1269  0002B0  0100               	movlb	0	; () banked
  1270  0002B2  51AB               	movf	??_main& (0+255),w,b
  1271                           
  1272                           ;main.c: 304: msgbuffer[1] = 0xAA;
  1273  0002B4  0100               	movlb	0	; () banked
  1274  0002B6  6FAB               	movwf	??_main& (0+255),b
  1275  0002B8  0EAA               	movlw	170
  1276  0002BA  0102               	movlb	2	; () banked
  1277  0002BC  0102               	movlb	2	; () banked
  1278  0002BE  6F0F               	movwf	(main@msgbuffer+1)& (0+255),b
  1279  0002C0  0100               	movlb	0	; () banked
  1280  0002C2  51AB               	movf	??_main& (0+255),w,b
  1281                           
  1282                           ; BSR set to: 0
  1283                           ;main.c: 308: test_var++;
  1284  0002C4  0102               	movlb	2	; () banked
  1285  0002C6  0102               	movlb	2	; () banked
  1286  0002C8  4B19               	infsnz	main@test_var& (0+255),f,b
  1287  0002CA  2B1A               	incf	(main@test_var+1)& (0+255),f,b
  1288                           
  1289                           ; BSR set to: 2
  1290                           ;main.c: 309: if(test_var > 299)
  1291  0002CC  0102               	movlb	2	; () banked
  1292  0002CE  0102               	movlb	2	; () banked
  1293  0002D0  511A               	movf	(main@test_var+1)& (0+255),w,b
  1294  0002D2  0A80               	xorlw	128
  1295  0002D4  0F7F               	addlw	-129
  1296  0002D6  0E2C               	movlw	44
  1297  0002D8  B4D8               	btfsc	status,2,c
  1298  0002DA  5D19               	subwf	main@test_var& (0+255),w,b
  1299  0002DC  A0D8               	btfss	status,0,c
  1300  0002DE  D031               	goto	l2992
  1301                           
  1302                           ; BSR set to: 2
  1303                           ;main.c: 310: test_var = 0;
  1304  0002E0  0E00               	movlw	0
  1305  0002E2  0102               	movlb	2	; () banked
  1306  0002E4  0102               	movlb	2	; () banked
  1307  0002E6  6F1A               	movwf	(main@test_var+1)& (0+255),b
  1308  0002E8  0E00               	movlw	0
  1309  0002EA  0102               	movlb	2	; () banked
  1310  0002EC  6F19               	movwf	main@test_var& (0+255),b
  1311  0002EE  D029               	goto	l2992
  1312  0002F0                     l2984:
  1313                           
  1314                           ; BSR set to: 2
  1315                           ;main.c: 315: {
  1316                           ;main.c: 316: length = 1;
  1317  0002F0  0100               	movlb	0	; () banked
  1318  0002F2  6FAB               	movwf	??_main& (0+255),b
  1319  0002F4  0E01               	movlw	1
  1320  0002F6  0102               	movlb	2	; () banked
  1321  0002F8  0102               	movlb	2	; () banked
  1322  0002FA  6F1E               	movwf	main@length& (0+255),b
  1323  0002FC  0100               	movlb	0	; () banked
  1324  0002FE  51AB               	movf	??_main& (0+255),w,b
  1325                           
  1326                           ;main.c: 317: msgbuffer[0] = 0x3A;
  1327  000300  0100               	movlb	0	; () banked
  1328  000302  6FAB               	movwf	??_main& (0+255),b
  1329  000304  0E3A               	movlw	58
  1330  000306  D00B               	goto	L1
  1331  000308                     l2986:
  1332                           
  1333                           ;main.c: 321: {
  1334                           ;main.c: 322: length = 1;
  1335  000308  0100               	movlb	0	; () banked
  1336  00030A  6FAB               	movwf	??_main& (0+255),b
  1337  00030C  0E01               	movlw	1
  1338  00030E  0102               	movlb	2	; () banked
  1339  000310  0102               	movlb	2	; () banked
  1340  000312  6F1E               	movwf	main@length& (0+255),b
  1341  000314  0100               	movlb	0	; () banked
  1342  000316  51AB               	movf	??_main& (0+255),w,b
  1343                           
  1344                           ;main.c: 323: msgbuffer[0] = 0xA3;
  1345  000318  0100               	movlb	0	; () banked
  1346  00031A  6FAB               	movwf	??_main& (0+255),b
  1347  00031C  0EA3               	movlw	163
  1348  00031E                     L1:
  1349  00031E  0102               	movlb	2	; () banked
  1350  000320  0102               	movlb	2	; () banked
  1351  000322  6F0E               	movwf	main@msgbuffer& (0+255),b
  1352  000324  0100               	movlb	0	; () banked
  1353  000326  51AB               	movf	??_main& (0+255),w,b
  1354                           
  1355                           ;main.c: 324: break;
  1356  000328  D00C               	goto	l2992
  1357  00032A                     l2990:
  1358  00032A  0102               	movlb	2	; () banked
  1359  00032C  0102               	movlb	2	; () banked
  1360  00032E  510D               	movf	main@last_reg_recvd& (0+255),w,b
  1361                           
  1362                           ; Switch size 1, requested type "space"
  1363                           ; Number of cases is 3, Range of values is 168 to 170
  1364                           ; switch strategies available:
  1365                           ; Name         Instructions Cycles
  1366                           ; simple_byte           10     6 (average)
  1367                           ;	Chosen strategy is simple_byte
  1368  000330  0AA8               	xorlw	168	; case 168
  1369  000332  B4D8               	btfsc	status,2,c
  1370  000334  D7DD               	goto	l2984
  1371  000336  0A01               	xorlw	1	; case 169
  1372  000338  B4D8               	btfsc	status,2,c
  1373  00033A  D7E6               	goto	l2986
  1374  00033C  0A03               	xorlw	3	; case 170
  1375  00033E  B4D8               	btfsc	status,2,c
  1376  000340  D7B1               	goto	l2976
  1377  000342                     l2992:
  1378                           
  1379                           ;main.c: 327: start_i2c_slave_reply(length, msgbuffer);
  1380  000342  C21E  F08E         	movff	main@length,?_start_i2c_slave_reply
  1381  000346  0102               	movlb	2	; () banked
  1382  000348  0E02               	movlw	high main@msgbuffer
  1383  00034A  0100               	movlb	0	; () banked
  1384  00034C  0100               	movlb	0	; () banked
  1385  00034E  6F90               	movwf	(?_start_i2c_slave_reply+2)& (0+255),b
  1386  000350  0102               	movlb	2	; () banked
  1387  000352  0E0E               	movlw	low main@msgbuffer
  1388  000354  0100               	movlb	0	; () banked
  1389  000356  6F8F               	movwf	(?_start_i2c_slave_reply+1)& (0+255),b
  1390  000358  EC8B  F004         	call	_start_i2c_slave_reply	;wreg free
  1391                           
  1392                           ;main.c: 328: break;
  1393  00035C  D012               	goto	l2998
  1394  00035E                     l2996:
  1395  00035E  0102               	movlb	2	; () banked
  1396  000360  0102               	movlb	2	; () banked
  1397  000362  511D               	movf	main@msgtype& (0+255),w,b
  1398                           
  1399                           ; Switch size 1, requested type "space"
  1400                           ; Number of cases is 5, Range of values is 10 to 61
  1401                           ; switch strategies available:
  1402                           ; Name         Instructions Cycles
  1403                           ; simple_byte           16     9 (average)
  1404                           ;	Chosen strategy is simple_byte
  1405  000364  0A0A               	xorlw	10	; case 10
  1406  000366  B4D8               	btfsc	status,2,c
  1407  000368  D75D               	goto	l2970
  1408  00036A  0A22               	xorlw	34	; case 40
  1409  00036C  B4D8               	btfsc	status,2,c
  1410  00036E  D781               	goto	l113
  1411  000370  0A01               	xorlw	1	; case 41
  1412  000372  B4D8               	btfsc	status,2,c
  1413  000374  D77E               	goto	l113
  1414  000376  0A03               	xorlw	3	; case 42
  1415  000378  B4D8               	btfsc	status,2,c
  1416  00037A  D7D7               	goto	l2990
  1417  00037C  0A17               	xorlw	23	; case 61
  1418  00037E  B4D8               	btfsc	status,2,c
  1419  000380  D72B               	goto	l2968
  1420  000382                     l2998:
  1421                           
  1422                           ;main.c: 336: }
  1423                           ;main.c: 339: length = ToMainLow_recvmsg(10, &msgtype, (void *) msgbuffer);
  1424  000382  0100               	movlb	0	; () banked
  1425  000384  6FAB               	movwf	??_main& (0+255),b
  1426  000386  0E0A               	movlw	10
  1427  000388  0100               	movlb	0	; () banked
  1428  00038A  0100               	movlb	0	; () banked
  1429  00038C  6FA6               	movwf	?_ToMainLow_recvmsg& (0+255),b
  1430  00038E  0100               	movlb	0	; () banked
  1431  000390  51AB               	movf	??_main& (0+255),w,b
  1432  000392  0102               	movlb	2	; () banked
  1433  000394  0E02               	movlw	high main@msgtype
  1434  000396  0100               	movlb	0	; () banked
  1435  000398  0100               	movlb	0	; () banked
  1436  00039A  6FA8               	movwf	(?_ToMainLow_recvmsg+2)& (0+255),b
  1437  00039C  0102               	movlb	2	; () banked
  1438  00039E  0E1D               	movlw	low main@msgtype
  1439  0003A0  0100               	movlb	0	; () banked
  1440  0003A2  6FA7               	movwf	(?_ToMainLow_recvmsg+1)& (0+255),b
  1441  0003A4  0102               	movlb	2	; () banked
  1442  0003A6  0E02               	movlw	high main@msgbuffer
  1443  0003A8  0100               	movlb	0	; () banked
  1444  0003AA  0100               	movlb	0	; () banked
  1445  0003AC  6FAA               	movwf	(?_ToMainLow_recvmsg+4)& (0+255),b
  1446  0003AE  0102               	movlb	2	; () banked
  1447  0003B0  0E0E               	movlw	low main@msgbuffer
  1448  0003B2  0100               	movlb	0	; () banked
  1449  0003B4  6FA9               	movwf	(?_ToMainLow_recvmsg+3)& (0+255),b
  1450  0003B6  EC3D  F00B         	call	_ToMainLow_recvmsg	;wreg free
  1451  0003BA  0102               	movlb	2	; () banked
  1452  0003BC  0102               	movlb	2	; () banked
  1453  0003BE  6F1E               	movwf	main@length& (0+255),b
  1454                           
  1455                           ; BSR set to: 2
  1456                           ;main.c: 340: if (length < 0) {
  1457  0003C0  0102               	movlb	2	; () banked
  1458  0003C2  0102               	movlb	2	; () banked
  1459  0003C4  BF1E               	btfsc	main@length& (0+255),7,b
  1460  0003C6  D6E2               	goto	l2960
  1461  0003C8  D04E               	goto	l3010
  1462  0003CA                     l3004:
  1463                           
  1464                           ; BSR set to: 2
  1465                           ;main.c: 348: {
  1466                           ;main.c: 349: timer1_lthread(&t1thread_data, msgtype, length, msgbuffer);
  1467  0003CA  0102               	movlb	2	; () banked
  1468  0003CC  0E02               	movlw	high main@t1thread_data
  1469  0003CE  0100               	movlb	0	; () banked
  1470  0003D0  0100               	movlb	0	; () banked
  1471  0003D2  6F8F               	movwf	(?_timer1_lthread+1)& (0+255),b
  1472  0003D4  0102               	movlb	2	; () banked
  1473  0003D6  0E1B               	movlw	low main@t1thread_data
  1474  0003D8  0100               	movlb	0	; () banked
  1475  0003DA  6F8E               	movwf	?_timer1_lthread& (0+255),b
  1476  0003DC  0102               	movlb	2	; () banked
  1477  0003DE  0100               	movlb	0	; () banked
  1478  0003E0  C21D  F090         	movff	main@msgtype,?_timer1_lthread+2
  1479  0003E4  0100               	movlb	0	; () banked
  1480  0003E6  0100               	movlb	0	; () banked
  1481  0003E8  6B91               	clrf	(?_timer1_lthread+3)& (0+255),b
  1482  0003EA  0102               	movlb	2	; () banked
  1483  0003EC  0102               	movlb	2	; () banked
  1484  0003EE  511E               	movf	main@length& (0+255),w,b
  1485  0003F0  0100               	movlb	0	; () banked
  1486  0003F2  0100               	movlb	0	; () banked
  1487  0003F4  6F92               	movwf	(?_timer1_lthread+4)& (0+255),b
  1488  0003F6  0100               	movlb	0	; () banked
  1489  0003F8  6B93               	clrf	(?_timer1_lthread+5)& (0+255),b
  1490  0003FA  0100               	movlb	0	; () banked
  1491  0003FC  BF92               	btfsc	(?_timer1_lthread+4)& (0+255),7,b
  1492  0003FE  0793               	decf	(?_timer1_lthread+5)& (0+255),f,b
  1493  000400  0102               	movlb	2	; () banked
  1494  000402  0E02               	movlw	high main@msgbuffer
  1495  000404  0100               	movlb	0	; () banked
  1496  000406  0100               	movlb	0	; () banked
  1497  000408  6F95               	movwf	(?_timer1_lthread+7)& (0+255),b
  1498  00040A  0102               	movlb	2	; () banked
  1499  00040C  0E0E               	movlw	low main@msgbuffer
  1500  00040E  0100               	movlb	0	; () banked
  1501  000410  6F94               	movwf	(?_timer1_lthread+6)& (0+255),b
  1502  000412  EC1E  F00C         	call	_timer1_lthread	;wreg free
  1503                           
  1504                           ;main.c: 350: break;
  1505  000416  D6BA               	goto	l2960
  1506  000418                     l3006:
  1507                           
  1508                           ;main.c: 353: {
  1509                           ;main.c: 354: motor_control_thread(&motorthread_data, msgtype, length, msgbuffer);
  1510  000418  0102               	movlb	2	; () banked
  1511  00041A  0E02               	movlw	high main@motorthread_data
  1512  00041C  0100               	movlb	0	; () banked
  1513  00041E  0100               	movlb	0	; () banked
  1514  000420  6F8F               	movwf	(?_motor_control_thread+1)& (0+255),b
  1515  000422  0102               	movlb	2	; () banked
  1516  000424  0E05               	movlw	low main@motorthread_data
  1517  000426  0100               	movlb	0	; () banked
  1518  000428  6F8E               	movwf	?_motor_control_thread& (0+255),b
  1519  00042A  0102               	movlb	2	; () banked
  1520  00042C  0100               	movlb	0	; () banked
  1521  00042E  C21D  F090         	movff	main@msgtype,?_motor_control_thread+2
  1522  000432  0100               	movlb	0	; () banked
  1523  000434  0100               	movlb	0	; () banked
  1524  000436  6B91               	clrf	(?_motor_control_thread+3)& (0+255),b
  1525  000438  0102               	movlb	2	; () banked
  1526  00043A  0102               	movlb	2	; () banked
  1527  00043C  511E               	movf	main@length& (0+255),w,b
  1528  00043E  0100               	movlb	0	; () banked
  1529  000440  0100               	movlb	0	; () banked
  1530  000442  6F92               	movwf	(?_motor_control_thread+4)& (0+255),b
  1531  000444  0100               	movlb	0	; () banked
  1532  000446  6B93               	clrf	(?_motor_control_thread+5)& (0+255),b
  1533  000448  0100               	movlb	0	; () banked
  1534  00044A  BF92               	btfsc	(?_motor_control_thread+4)& (0+255),7,b
  1535  00044C  0793               	decf	(?_motor_control_thread+5)& (0+255),f,b
  1536  00044E  0102               	movlb	2	; () banked
  1537  000450  0E02               	movlw	high main@msgbuffer
  1538  000452  0100               	movlb	0	; () banked
  1539  000454  0100               	movlb	0	; () banked
  1540  000456  6F95               	movwf	(?_motor_control_thread+7)& (0+255),b
  1541  000458  0102               	movlb	2	; () banked
  1542  00045A  0E0E               	movlw	low main@msgbuffer
  1543  00045C  0100               	movlb	0	; () banked
  1544  00045E  6F94               	movwf	(?_motor_control_thread+6)& (0+255),b
  1545  000460  EC10  F005         	call	_motor_control_thread	;wreg free
  1546                           
  1547                           ;main.c: 355: break;
  1548  000464  D693               	goto	l2960
  1549  000466                     l3010:
  1550  000466  0102               	movlb	2	; () banked
  1551  000468  0102               	movlb	2	; () banked
  1552  00046A  511D               	movf	main@msgtype& (0+255),w,b
  1553                           
  1554                           ; Switch size 1, requested type "space"
  1555                           ; Number of cases is 4, Range of values is 11 to 60
  1556                           ; switch strategies available:
  1557                           ; Name         Instructions Cycles
  1558                           ; simple_byte           13     7 (average)
  1559                           ;	Chosen strategy is simple_byte
  1560  00046C  0A0B               	xorlw	11	; case 11
  1561  00046E  B4D8               	btfsc	status,2,c
  1562  000470  D7AC               	goto	l3004
  1563  000472  0A15               	xorlw	21	; case 30
  1564  000474  B4D8               	btfsc	status,2,c
  1565  000476  D68A               	goto	l2960
  1566  000478  0A01               	xorlw	1	; case 31
  1567  00047A  B4D8               	btfsc	status,2,c
  1568  00047C  D687               	goto	l2960
  1569  00047E  0A23               	xorlw	35	; case 60
  1570  000480  B4D8               	btfsc	status,2,c
  1571  000482  D7CA               	goto	l3006
  1572  000484  D683               	goto	l2960
  1573  000486                     __end_of_main:
  1574                           	opt stack 0
  1575                           tblptru	equ	0xFF8
  1576                           tblptrh	equ	0xFF7
  1577                           tblptrl	equ	0xFF6
  1578                           tablat	equ	0xFF5
  1579                           postinc0	equ	0xFEE
  1580                           wreg	equ	0xFE8
  1581                           status	equ	0xFD8
  1582                           
  1583 ;; *************** function _motor_control_thread *****************
  1584 ;; Defined at:
  1585 ;;		line 15 in file "../src/motor_control_thread.c"
  1586 ;; Parameters:    Size  Location     Type
  1587 ;;  mptr            2   14[BANK0 ] PTR struct __motor_contr
  1588 ;;		 -> main@motorthread_data(4), 
  1589 ;;  msgtype         2   16[BANK0 ] int 
  1590 ;;  length          2   18[BANK0 ] int 
  1591 ;;  msgbuffer       2   20[BANK0 ] PTR unsigned char 
  1592 ;;		 -> main@msgbuffer(11), 
  1593 ;; Auto vars:     Size  Location     Type
  1594 ;;  i               2   24[BANK0 ] int 
  1595 ;; Return value:  Size  Location     Type
  1596 ;;                  2   14[BANK0 ] int 
  1597 ;; Registers used:
  1598 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  1599 ;; Tracked objects:
  1600 ;;		On entry : 0/0
  1601 ;;		On exit  : 0/0
  1602 ;;		Unchanged: 0/0
  1603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1604 ;;      Params:         0       8       0       0       0
  1605 ;;      Locals:         0       2       0       0       0
  1606 ;;      Temps:          0       2       0       0       0
  1607 ;;      Totals:         0      12       0       0       0
  1608 ;;Total ram usage:       12 bytes
  1609 ;; Hardware stack levels used:    1
  1610 ;; Hardware stack levels required when called:    8
  1611 ;; This function calls:
  1612 ;;		Nothing
  1613 ;; This function is called by:
  1614 ;;		_main
  1615 ;; This function uses a non-reentrant model
  1616 ;;
  1617                           
  1618                           	psect	text1
  1619  000A20                     __ptext1:
  1620                           	opt stack 0
  1621  000A20                     _motor_control_thread:
  1622                           	opt stack 21
  1623                           
  1624                           ;motor_control_thread.c: 18: int i = 0;
  1625                           
  1626                           ; BSR set to: 2
  1627                           ;incstack = 0
  1628                           ;incstack = 0
  1629  000A20  0E00               	movlw	0
  1630  000A22  0100               	movlb	0	; () banked
  1631  000A24  0100               	movlb	0	; () banked
  1632  000A26  6F99               	movwf	(motor_control_thread@i+1)& (0+255),b
  1633  000A28  0E00               	movlw	0
  1634  000A2A  0100               	movlb	0	; () banked
  1635  000A2C  6F98               	movwf	motor_control_thread@i& (0+255),b
  1636                           
  1637                           ; BSR set to: 0
  1638                           ;motor_control_thread.c: 23: testbuffer[counter] = msgbuffer[0];
  1639  000A2E  C094  FFD9         	movff	motor_control_thread@msgbuffer,fsr2l
  1640  000A32  C095  FFDA         	movff	motor_control_thread@msgbuffer+1,fsr2h
  1641  000A36  0101               	movlb	1	; () banked
  1642  000A38  0E00               	movlw	low _testbuffer
  1643  000A3A  0100               	movlb	0	; () banked
  1644  000A3C  0100               	movlb	0	; () banked
  1645  000A3E  25AC               	addwf	_counter& (0+255),w,b
  1646  000A40  6EE1               	movwf	fsr1l,c
  1647  000A42  0101               	movlb	1	; () banked
  1648  000A44  0E01               	movlw	high _testbuffer
  1649  000A46  0100               	movlb	0	; () banked
  1650  000A48  0100               	movlb	0	; () banked
  1651  000A4A  21AD               	addwfc	(_counter+1)& (0+255),w,b
  1652  000A4C  6EE2               	movwf	fsr1h,c
  1653  000A4E  CFDF FFE7          	movff	indf2,indf1
  1654                           
  1655                           ; BSR set to: 0
  1656                           ;motor_control_thread.c: 24: testbuffer[counter+1] = msgbuffer[1];
  1657  000A52  0100               	movlb	0	; () banked
  1658  000A54  EE20 F001          	lfsr	2,1
  1659  000A58  0100               	movlb	0	; () banked
  1660  000A5A  5194               	movf	motor_control_thread@msgbuffer& (0+255),w,b
  1661  000A5C  26D9               	addwf	fsr2l,f,c
  1662  000A5E  0100               	movlb	0	; () banked
  1663  000A60  5195               	movf	(motor_control_thread@msgbuffer+1)& (0+255),w,b
  1664  000A62  22DA               	addwfc	fsr2h,f,c
  1665  000A64  0E01               	movlw	1
  1666  000A66  0100               	movlb	0	; () banked
  1667  000A68  0100               	movlb	0	; () banked
  1668  000A6A  25AC               	addwf	_counter& (0+255),w,b
  1669  000A6C  0100               	movlb	0	; () banked
  1670  000A6E  6F96               	movwf	??_motor_control_thread& (0+255),b
  1671  000A70  0E00               	movlw	0
  1672  000A72  0100               	movlb	0	; () banked
  1673  000A74  0100               	movlb	0	; () banked
  1674  000A76  21AD               	addwfc	(_counter+1)& (0+255),w,b
  1675  000A78  0100               	movlb	0	; () banked
  1676  000A7A  6F97               	movwf	(??_motor_control_thread+1)& (0+255),b
  1677  000A7C  0101               	movlb	1	; () banked
  1678  000A7E  0E00               	movlw	low _testbuffer
  1679  000A80  0100               	movlb	0	; () banked
  1680  000A82  2596               	addwf	??_motor_control_thread& (0+255),w,b
  1681  000A84  6EE1               	movwf	fsr1l,c
  1682  000A86  0101               	movlb	1	; () banked
  1683  000A88  0E01               	movlw	high _testbuffer
  1684  000A8A  0100               	movlb	0	; () banked
  1685  000A8C  2197               	addwfc	(??_motor_control_thread+1)& (0+255),w,b
  1686  000A8E  6EE2               	movwf	fsr1h,c
  1687  000A90  CFDF FFE7          	movff	indf2,indf1
  1688                           
  1689                           ; BSR set to: 0
  1690                           ;motor_control_thread.c: 25: testbuffer[counter+2] = msgbuffer[2];
  1691  000A94  0100               	movlb	0	; () banked
  1692  000A96  EE20 F002          	lfsr	2,2
  1693  000A9A  0100               	movlb	0	; () banked
  1694  000A9C  5194               	movf	motor_control_thread@msgbuffer& (0+255),w,b
  1695  000A9E  26D9               	addwf	fsr2l,f,c
  1696  000AA0  0100               	movlb	0	; () banked
  1697  000AA2  5195               	movf	(motor_control_thread@msgbuffer+1)& (0+255),w,b
  1698  000AA4  22DA               	addwfc	fsr2h,f,c
  1699  000AA6  0E02               	movlw	2
  1700  000AA8  0100               	movlb	0	; () banked
  1701  000AAA  0100               	movlb	0	; () banked
  1702  000AAC  25AC               	addwf	_counter& (0+255),w,b
  1703  000AAE  0100               	movlb	0	; () banked
  1704  000AB0  6F96               	movwf	??_motor_control_thread& (0+255),b
  1705  000AB2  0E00               	movlw	0
  1706  000AB4  0100               	movlb	0	; () banked
  1707  000AB6  0100               	movlb	0	; () banked
  1708  000AB8  21AD               	addwfc	(_counter+1)& (0+255),w,b
  1709  000ABA  0100               	movlb	0	; () banked
  1710  000ABC  6F97               	movwf	(??_motor_control_thread+1)& (0+255),b
  1711  000ABE  0101               	movlb	1	; () banked
  1712  000AC0  0E00               	movlw	low _testbuffer
  1713  000AC2  0100               	movlb	0	; () banked
  1714  000AC4  2596               	addwf	??_motor_control_thread& (0+255),w,b
  1715  000AC6  6EE1               	movwf	fsr1l,c
  1716  000AC8  0101               	movlb	1	; () banked
  1717  000ACA  0E01               	movlw	high _testbuffer
  1718  000ACC  0100               	movlb	0	; () banked
  1719  000ACE  2197               	addwfc	(??_motor_control_thread+1)& (0+255),w,b
  1720  000AD0  6EE2               	movwf	fsr1h,c
  1721  000AD2  CFDF FFE7          	movff	indf2,indf1
  1722                           
  1723                           ; BSR set to: 0
  1724                           ;motor_control_thread.c: 26: counter = counter + 3;
  1725  000AD6  0E03               	movlw	3
  1726  000AD8  0100               	movlb	0	; () banked
  1727  000ADA  0100               	movlb	0	; () banked
  1728  000ADC  25AC               	addwf	_counter& (0+255),w,b
  1729  000ADE  0100               	movlb	0	; () banked
  1730  000AE0  0100               	movlb	0	; () banked
  1731  000AE2  6FAC               	movwf	_counter& (0+255),b
  1732  000AE4  0E00               	movlw	0
  1733  000AE6  0100               	movlb	0	; () banked
  1734  000AE8  0100               	movlb	0	; () banked
  1735  000AEA  21AD               	addwfc	(_counter+1)& (0+255),w,b
  1736  000AEC  0100               	movlb	0	; () banked
  1737  000AEE  6FAD               	movwf	(_counter+1)& (0+255),b
  1738                           
  1739                           ; BSR set to: 0
  1740                           ;motor_control_thread.c: 27: if (counter == 45)
  1741  000AF0  0100               	movlb	0	; () banked
  1742  000AF2  0100               	movlb	0	; () banked
  1743  000AF4  51AC               	movf	_counter& (0+255),w,b
  1744  000AF6  0A2D               	xorlw	45
  1745  000AF8  11AD               	iorwf	(_counter+1)& (0+255),w,b
  1746  000AFA  A4D8               	btfss	status,2,c
  1747  000AFC  0012               	return	
  1748                           
  1749                           ; BSR set to: 0
  1750                           ;motor_control_thread.c: 28: counter = 0;
  1751  000AFE  0E00               	movlw	0
  1752  000B00  0100               	movlb	0	; () banked
  1753  000B02  0100               	movlb	0	; () banked
  1754  000B04  6FAD               	movwf	(_counter+1)& (0+255),b
  1755  000B06  0E00               	movlw	0
  1756  000B08  0100               	movlb	0	; () banked
  1757  000B0A  6FAC               	movwf	_counter& (0+255),b
  1758  000B0C  0012               	return	
  1759  000B0E                     __end_of_motor_control_thread:
  1760                           	opt stack 0
  1761                           tblptru	equ	0xFF8
  1762                           tblptrh	equ	0xFF7
  1763                           tblptrl	equ	0xFF6
  1764                           tablat	equ	0xFF5
  1765                           postinc0	equ	0xFEE
  1766                           wreg	equ	0xFE8
  1767                           indf1	equ	0xFE7
  1768                           fsr1h	equ	0xFE2
  1769                           fsr1l	equ	0xFE1
  1770                           indf2	equ	0xFDF
  1771                           fsr2h	equ	0xFDA
  1772                           fsr2l	equ	0xFD9
  1773                           status	equ	0xFD8
  1774                           
  1775 ;; *************** function _timer1_lthread *****************
  1776 ;; Defined at:
  1777 ;;		line 20 in file "../src/timer1_thread.c"
  1778 ;; Parameters:    Size  Location     Type
  1779 ;;  tptr            2   14[BANK0 ] PTR struct __timer1_thre
  1780 ;;		 -> main@t1thread_data(2), 
  1781 ;;  msgtype         2   16[BANK0 ] int 
  1782 ;;  length          2   18[BANK0 ] int 
  1783 ;;  msgbuffer       2   20[BANK0 ] PTR unsigned char 
  1784 ;;		 -> main@msgbuffer(11), 
  1785 ;; Auto vars:     Size  Location     Type
  1786 ;;  retval          1    0        char 
  1787 ;; Return value:  Size  Location     Type
  1788 ;;                  2   14[BANK0 ] int 
  1789 ;; Registers used:
  1790 ;;		None
  1791 ;; Tracked objects:
  1792 ;;		On entry : 0/0
  1793 ;;		On exit  : 0/0
  1794 ;;		Unchanged: 0/0
  1795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1796 ;;      Params:         0       8       0       0       0
  1797 ;;      Locals:         0       0       0       0       0
  1798 ;;      Temps:          0       0       0       0       0
  1799 ;;      Totals:         0       8       0       0       0
  1800 ;;Total ram usage:        8 bytes
  1801 ;; Hardware stack levels used:    1
  1802 ;; Hardware stack levels required when called:    8
  1803 ;; This function calls:
  1804 ;;		Nothing
  1805 ;; This function is called by:
  1806 ;;		_main
  1807 ;; This function uses a non-reentrant model
  1808 ;;
  1809                           
  1810                           	psect	text2
  1811  00183C                     __ptext2:
  1812                           	opt stack 0
  1813  00183C                     _timer1_lthread:
  1814                           	opt stack 21
  1815                           
  1816                           ;timer1_thread.c: 21: signed char retval;
  1817                           ;timer1_thread.c: 25: PIE1bits.TXIE = 1;
  1818                           
  1819                           ; BSR set to: 0
  1820                           ;incstack = 0
  1821                           ;incstack = 0
  1822  00183C  889D               	bsf	3997,4,c	;volatile
  1823  00183E  0012               	return	
  1824  001840                     __end_of_timer1_lthread:
  1825                           	opt stack 0
  1826                           tblptru	equ	0xFF8
  1827                           tblptrh	equ	0xFF7
  1828                           tblptrl	equ	0xFF6
  1829                           tablat	equ	0xFF5
  1830                           postinc0	equ	0xFEE
  1831                           wreg	equ	0xFE8
  1832                           indf1	equ	0xFE7
  1833                           fsr1h	equ	0xFE2
  1834                           fsr1l	equ	0xFE1
  1835                           indf2	equ	0xFDF
  1836                           fsr2h	equ	0xFDA
  1837                           fsr2l	equ	0xFD9
  1838                           status	equ	0xFD8
  1839                           
  1840 ;; *************** function _ToMainLow_recvmsg *****************
  1841 ;; Defined at:
  1842 ;;		line 112 in file "../src/messages.c"
  1843 ;; Parameters:    Size  Location     Type
  1844 ;;  maxlength       1   38[BANK0 ] unsigned char 
  1845 ;;  msgtype         2   39[BANK0 ] PTR unsigned char 
  1846 ;;		 -> main@msgtype(1), 
  1847 ;;  data            2   41[BANK0 ] PTR void 
  1848 ;;		 -> main@msgbuffer(11), 
  1849 ;; Auto vars:     Size  Location     Type
  1850 ;;		None
  1851 ;; Return value:  Size  Location     Type
  1852 ;;                  1    wreg      char 
  1853 ;; Registers used:
  1854 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1855 ;; Tracked objects:
  1856 ;;		On entry : 0/0
  1857 ;;		On exit  : 0/0
  1858 ;;		Unchanged: 0/0
  1859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1860 ;;      Params:         0       5       0       0       0
  1861 ;;      Locals:         0       0       0       0       0
  1862 ;;      Temps:          0       0       0       0       0
  1863 ;;      Totals:         0       5       0       0       0
  1864 ;;Total ram usage:        5 bytes
  1865 ;; Hardware stack levels used:    1
  1866 ;; Hardware stack levels required when called:   10
  1867 ;; This function calls:
  1868 ;;		_recv_msg
  1869 ;; This function is called by:
  1870 ;;		_main
  1871 ;; This function uses a non-reentrant model
  1872 ;;
  1873                           
  1874                           	psect	text3
  1875  00167A                     __ptext3:
  1876                           	opt stack 0
  1877  00167A                     _ToMainLow_recvmsg:
  1878                           	opt stack 19
  1879                           
  1880                           ;messages.c: 118: return (recv_msg(&ToMainLow_MQ, maxlength, msgtype, data));
  1881                           
  1882                           ;incstack = 0
  1883                           ;incstack = 0
  1884  00167A  0101               	movlb	1	; () banked
  1885  00167C  0E01               	movlw	high _ToMainLow_MQ
  1886  00167E  0100               	movlb	0	; () banked
  1887  001680  0100               	movlb	0	; () banked
  1888  001682  6F99               	movwf	(?_recv_msg+1)& (0+255),b
  1889  001684  0101               	movlb	1	; () banked
  1890  001686  0E9E               	movlw	low _ToMainLow_MQ
  1891  001688  0100               	movlb	0	; () banked
  1892  00168A  6F98               	movwf	?_recv_msg& (0+255),b
  1893  00168C  C0A6  F09A         	movff	ToMainLow_recvmsg@maxlength,?_recv_msg+2
  1894  001690  C0A7  F09B         	movff	ToMainLow_recvmsg@msgtype,?_recv_msg+3
  1895  001694  C0A8  F09C         	movff	ToMainLow_recvmsg@msgtype+1,?_recv_msg+4
  1896  001698  C0A9  F09D         	movff	ToMainLow_recvmsg@data,?_recv_msg+5
  1897  00169C  C0AA  F09E         	movff	ToMainLow_recvmsg@data+1,?_recv_msg+6
  1898  0016A0  ECF5  F003         	call	_recv_msg	;wreg free
  1899  0016A4  0012               	return	
  1900  0016A6                     __end_of_ToMainLow_recvmsg:
  1901                           	opt stack 0
  1902                           tblptru	equ	0xFF8
  1903                           tblptrh	equ	0xFF7
  1904                           tblptrl	equ	0xFF6
  1905                           tablat	equ	0xFF5
  1906                           postinc0	equ	0xFEE
  1907                           wreg	equ	0xFE8
  1908                           indf1	equ	0xFE7
  1909                           fsr1h	equ	0xFE2
  1910                           fsr1l	equ	0xFE1
  1911                           indf2	equ	0xFDF
  1912                           fsr2h	equ	0xFDA
  1913                           fsr2l	equ	0xFD9
  1914                           status	equ	0xFD8
  1915                           
  1916 ;; *************** function _start_i2c_slave_reply *****************
  1917 ;; Defined at:
  1918 ;;		line 230 in file "../src/my_i2c.c"
  1919 ;; Parameters:    Size  Location     Type
  1920 ;;  length          1   14[BANK0 ] unsigned char 
  1921 ;;  msg             2   15[BANK0 ] PTR unsigned char 
  1922 ;;		 -> main@msgbuffer(11), 
  1923 ;; Auto vars:     Size  Location     Type
  1924 ;;		None
  1925 ;; Return value:  Size  Location     Type
  1926 ;;		None               void
  1927 ;; Registers used:
  1928 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1929 ;; Tracked objects:
  1930 ;;		On entry : 0/0
  1931 ;;		On exit  : 0/0
  1932 ;;		Unchanged: 0/0
  1933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1934 ;;      Params:         0       3       0       0       0
  1935 ;;      Locals:         0       0       0       0       0
  1936 ;;      Temps:          0       2       0       0       0
  1937 ;;      Totals:         0       5       0       0       0
  1938 ;;Total ram usage:        5 bytes
  1939 ;; Hardware stack levels used:    1
  1940 ;; Hardware stack levels required when called:    8
  1941 ;; This function calls:
  1942 ;;		Nothing
  1943 ;; This function is called by:
  1944 ;;		_main
  1945 ;; This function uses a non-reentrant model
  1946 ;;
  1947                           
  1948                           	psect	text4
  1949  000916                     __ptext4:
  1950                           	opt stack 0
  1951  000916                     _start_i2c_slave_reply:
  1952                           	opt stack 21
  1953                           
  1954                           ;my_i2c.c: 232: for (ic_ptr->outbuflen = 0; ic_ptr->outbuflen < length; ic_ptr->outbufle
      +                          n++) {
  1955                           
  1956                           ;incstack = 0
  1957                           ;incstack = 0
  1958  000916  0100               	movlb	0	; () banked
  1959  000918  EE20 F01A          	lfsr	2,26
  1960  00091C  0100               	movlb	0	; () banked
  1961  00091E  51AF               	movf	_ic_ptr& (0+255),w,b
  1962  000920  26D9               	addwf	fsr2l,f,c
  1963  000922  0100               	movlb	0	; () banked
  1964  000924  51B0               	movf	(_ic_ptr+1)& (0+255),w,b
  1965  000926  22DA               	addwfc	fsr2h,f,c
  1966  000928  0E00               	movlw	0
  1967  00092A  6EDF               	movwf	indf2,c
  1968  00092C  D042               	goto	l3172
  1969  00092E                     l3168:
  1970                           
  1971                           ; BSR set to: 0
  1972                           ;my_i2c.c: 233: ic_ptr->outbuffer[ic_ptr->outbuflen] = msg[ic_ptr->outbuflen];
  1973  00092E  0100               	movlb	0	; () banked
  1974  000930  EE20 F01A          	lfsr	2,26
  1975  000934  0100               	movlb	0	; () banked
  1976  000936  51AF               	movf	_ic_ptr& (0+255),w,b
  1977  000938  26D9               	addwf	fsr2l,f,c
  1978  00093A  0100               	movlb	0	; () banked
  1979  00093C  51B0               	movf	(_ic_ptr+1)& (0+255),w,b
  1980  00093E  22DA               	addwfc	fsr2h,f,c
  1981  000940  50DF               	movf	indf2,w,c
  1982  000942  0100               	movlb	0	; () banked
  1983  000944  6F91               	movwf	??_start_i2c_slave_reply& (0+255),b
  1984  000946  0100               	movlb	0	; () banked
  1985  000948  5191               	movf	??_start_i2c_slave_reply& (0+255),w,b
  1986  00094A  0D01               	mullw	1
  1987  00094C  50F3               	movf	prodl,w,c
  1988  00094E  0100               	movlb	0	; () banked
  1989  000950  0100               	movlb	0	; () banked
  1990  000952  258F               	addwf	start_i2c_slave_reply@msg& (0+255),w,b
  1991  000954  6ED9               	movwf	fsr2l,c
  1992  000956  50F4               	movf	prodh,w,c
  1993  000958  0100               	movlb	0	; () banked
  1994  00095A  0100               	movlb	0	; () banked
  1995  00095C  2190               	addwfc	(start_i2c_slave_reply@msg+1)& (0+255),w,b
  1996  00095E  6EDA               	movwf	fsr2h,c
  1997  000960  0100               	movlb	0	; () banked
  1998  000962  EE10 F01A          	lfsr	1,26
  1999  000966  0100               	movlb	0	; () banked
  2000  000968  51AF               	movf	_ic_ptr& (0+255),w,b
  2001  00096A  26E1               	addwf	fsr1l,f,c
  2002  00096C  0100               	movlb	0	; () banked
  2003  00096E  51B0               	movf	(_ic_ptr+1)& (0+255),w,b
  2004  000970  22E2               	addwfc	fsr1h,f,c
  2005  000972  50E7               	movf	indf1,w,c
  2006  000974  0100               	movlb	0	; () banked
  2007  000976  6F92               	movwf	(??_start_i2c_slave_reply+1)& (0+255),b
  2008  000978  0100               	movlb	0	; () banked
  2009  00097A  5192               	movf	(??_start_i2c_slave_reply+1)& (0+255),w,b
  2010  00097C  0D01               	mullw	1
  2011  00097E  0E10               	movlw	16
  2012  000980  26F3               	addwf	prodl,f,c
  2013  000982  0E00               	movlw	0
  2014  000984  22F4               	addwfc	prodh,f,c
  2015  000986  50F3               	movf	prodl,w,c
  2016  000988  0100               	movlb	0	; () banked
  2017  00098A  0100               	movlb	0	; () banked
  2018  00098C  25AF               	addwf	_ic_ptr& (0+255),w,b
  2019  00098E  6EE1               	movwf	fsr1l,c
  2020  000990  50F4               	movf	prodh,w,c
  2021  000992  0100               	movlb	0	; () banked
  2022  000994  0100               	movlb	0	; () banked
  2023  000996  21B0               	addwfc	(_ic_ptr+1)& (0+255),w,b
  2024  000998  6EE2               	movwf	fsr1h,c
  2025  00099A  CFDF FFE7          	movff	indf2,indf1
  2026                           
  2027                           ; BSR set to: 0
  2028  00099E  0100               	movlb	0	; () banked
  2029  0009A0  EE20 F01A          	lfsr	2,26
  2030  0009A4  0100               	movlb	0	; () banked
  2031  0009A6  51AF               	movf	_ic_ptr& (0+255),w,b
  2032  0009A8  26D9               	addwf	fsr2l,f,c
  2033  0009AA  0100               	movlb	0	; () banked
  2034  0009AC  51B0               	movf	(_ic_ptr+1)& (0+255),w,b
  2035  0009AE  22DA               	addwfc	fsr2h,f,c
  2036  0009B0  2ADF               	incf	indf2,f,c
  2037  0009B2                     l3172:
  2038                           
  2039                           ; BSR set to: 0
  2040  0009B2  0100               	movlb	0	; () banked
  2041  0009B4  EE20 F01A          	lfsr	2,26
  2042  0009B8  0100               	movlb	0	; () banked
  2043  0009BA  51AF               	movf	_ic_ptr& (0+255),w,b
  2044  0009BC  26D9               	addwf	fsr2l,f,c
  2045  0009BE  0100               	movlb	0	; () banked
  2046  0009C0  51B0               	movf	(_ic_ptr+1)& (0+255),w,b
  2047  0009C2  22DA               	addwfc	fsr2h,f,c
  2048  0009C4  50DF               	movf	indf2,w,c
  2049  0009C6  0100               	movlb	0	; () banked
  2050  0009C8  6F91               	movwf	??_start_i2c_slave_reply& (0+255),b
  2051  0009CA  0100               	movlb	0	; () banked
  2052  0009CC  0100               	movlb	0	; () banked
  2053  0009CE  518E               	movf	start_i2c_slave_reply@length& (0+255),w,b
  2054  0009D0  0100               	movlb	0	; () banked
  2055  0009D2  5D91               	subwf	??_start_i2c_slave_reply& (0+255),w,b
  2056  0009D4  A0D8               	btfss	status,0,c
  2057  0009D6  D7AB               	goto	l3168
  2058                           
  2059                           ; BSR set to: 0
  2060                           ;my_i2c.c: 234: }
  2061                           ;my_i2c.c: 235: ic_ptr->outbuflen = length;
  2062                           
  2063                           ; BSR set to: 0
  2064  0009D8  0100               	movlb	0	; () banked
  2065  0009DA  EE20 F01A          	lfsr	2,26
  2066  0009DE  0100               	movlb	0	; () banked
  2067  0009E0  51AF               	movf	_ic_ptr& (0+255),w,b
  2068  0009E2  26D9               	addwf	fsr2l,f,c
  2069  0009E4  0100               	movlb	0	; () banked
  2070  0009E6  51B0               	movf	(_ic_ptr+1)& (0+255),w,b
  2071  0009E8  22DA               	addwfc	fsr2h,f,c
  2072  0009EA  0100               	movlb	0	; () banked
  2073  0009EC  C08E  FFDF         	movff	start_i2c_slave_reply@length,indf2
  2074                           
  2075                           ;my_i2c.c: 236: ic_ptr->outbufind = 1;
  2076  0009F0  0100               	movlb	0	; () banked
  2077  0009F2  EE20 F01B          	lfsr	2,27
  2078  0009F6  0100               	movlb	0	; () banked
  2079  0009F8  51AF               	movf	_ic_ptr& (0+255),w,b
  2080  0009FA  26D9               	addwf	fsr2l,f,c
  2081  0009FC  0100               	movlb	0	; () banked
  2082  0009FE  51B0               	movf	(_ic_ptr+1)& (0+255),w,b
  2083  000A00  22DA               	addwfc	fsr2h,f,c
  2084  000A02  0E01               	movlw	1
  2085  000A04  6EDF               	movwf	indf2,c
  2086                           
  2087                           ;my_i2c.c: 239: SSPBUF = ic_ptr->outbuffer[0];
  2088  000A06  0100               	movlb	0	; () banked
  2089  000A08  EE20 F010          	lfsr	2,16
  2090  000A0C  0100               	movlb	0	; () banked
  2091  000A0E  51AF               	movf	_ic_ptr& (0+255),w,b
  2092  000A10  26D9               	addwf	fsr2l,f,c
  2093  000A12  0100               	movlb	0	; () banked
  2094  000A14  51B0               	movf	(_ic_ptr+1)& (0+255),w,b
  2095  000A16  22DA               	addwfc	fsr2h,f,c
  2096  000A18  50DF               	movf	indf2,w,c
  2097  000A1A  6EC9               	movwf	4041,c	;volatile
  2098                           
  2099                           ; BSR set to: 0
  2100                           ;my_i2c.c: 242: SSPCON1bits.CKP = 1;
  2101  000A1C  88C6               	bsf	4038,4,c	;volatile
  2102                           
  2103                           ; BSR set to: 0
  2104  000A1E  0012               	return	
  2105  000A20                     __end_of_start_i2c_slave_reply:
  2106                           	opt stack 0
  2107                           tblptru	equ	0xFF8
  2108                           tblptrh	equ	0xFF7
  2109                           tblptrl	equ	0xFF6
  2110                           tablat	equ	0xFF5
  2111                           prodh	equ	0xFF4
  2112                           prodl	equ	0xFF3
  2113                           postinc0	equ	0xFEE
  2114                           wreg	equ	0xFE8
  2115                           indf1	equ	0xFE7
  2116                           fsr1h	equ	0xFE2
  2117                           fsr1l	equ	0xFE1
  2118                           indf2	equ	0xFDF
  2119                           fsr2h	equ	0xFDA
  2120                           fsr2l	equ	0xFD9
  2121                           status	equ	0xFD8
  2122                           
  2123 ;; *************** function _putIntoUARTBuffer *****************
  2124 ;; Defined at:
  2125 ;;		line 35 in file "../src/my_uart.c"
  2126 ;; Parameters:    Size  Location     Type
  2127 ;;  buffer          2   14[BANK0 ] PTR unsigned char 
  2128 ;;		 -> main@msgbuffer(11), 
  2129 ;; Auto vars:     Size  Location     Type
  2130 ;;		None
  2131 ;; Return value:  Size  Location     Type
  2132 ;;		None               void
  2133 ;; Registers used:
  2134 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2135 ;; Tracked objects:
  2136 ;;		On entry : 0/0
  2137 ;;		On exit  : 0/0
  2138 ;;		Unchanged: 0/0
  2139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2140 ;;      Params:         0       2       0       0       0
  2141 ;;      Locals:         0       0       0       0       0
  2142 ;;      Temps:          0       0       0       0       0
  2143 ;;      Totals:         0       2       0       0       0
  2144 ;;Total ram usage:        2 bytes
  2145 ;; Hardware stack levels used:    1
  2146 ;; Hardware stack levels required when called:    8
  2147 ;; This function calls:
  2148 ;;		Nothing
  2149 ;; This function is called by:
  2150 ;;		_main
  2151 ;; This function uses a non-reentrant model
  2152 ;;
  2153                           
  2154                           	psect	text5
  2155  000B0E                     __ptext5:
  2156                           	opt stack 0
  2157  000B0E                     _putIntoUARTBuffer:
  2158                           	opt stack 21
  2159                           
  2160                           ;my_uart.c: 42: uc_ptr->buffer[0] = buffer[0];
  2161                           
  2162                           ; BSR set to: 0
  2163                           ;incstack = 0
  2164                           ;incstack = 0
  2165  000B0E  C08E  FFD9         	movff	putIntoUARTBuffer@buffer,fsr2l
  2166  000B12  C08F  FFDA         	movff	putIntoUARTBuffer@buffer+1,fsr2h
  2167  000B16  C062  FFE1         	movff	_uc_ptr,fsr1l
  2168  000B1A  C063  FFE2         	movff	_uc_ptr+1,fsr1h
  2169  000B1E  CFDF FFE7          	movff	indf2,indf1
  2170                           
  2171                           ;my_uart.c: 43: uc_ptr->buffer[1] = buffer[1];
  2172  000B22  0100               	movlb	0	; () banked
  2173  000B24  EE20 F001          	lfsr	2,1
  2174  000B28  0100               	movlb	0	; () banked
  2175  000B2A  518E               	movf	putIntoUARTBuffer@buffer& (0+255),w,b
  2176  000B2C  26D9               	addwf	fsr2l,f,c
  2177  000B2E  0100               	movlb	0	; () banked
  2178  000B30  518F               	movf	(putIntoUARTBuffer@buffer+1)& (0+255),w,b
  2179  000B32  22DA               	addwfc	fsr2h,f,c
  2180  000B34  EE10 F001          	lfsr	1,1
  2181  000B38  5062               	movf	_uc_ptr,w,c
  2182  000B3A  26E1               	addwf	fsr1l,f,c
  2183  000B3C  5063               	movf	_uc_ptr+1,w,c
  2184  000B3E  22E2               	addwfc	fsr1h,f,c
  2185  000B40  CFDF FFE7          	movff	indf2,indf1
  2186                           
  2187                           ; BSR set to: 0
  2188                           ;my_uart.c: 44: uc_ptr->buffer[2] = buffer[2];
  2189  000B44  0100               	movlb	0	; () banked
  2190  000B46  EE20 F002          	lfsr	2,2
  2191  000B4A  0100               	movlb	0	; () banked
  2192  000B4C  518E               	movf	putIntoUARTBuffer@buffer& (0+255),w,b
  2193  000B4E  26D9               	addwf	fsr2l,f,c
  2194  000B50  0100               	movlb	0	; () banked
  2195  000B52  518F               	movf	(putIntoUARTBuffer@buffer+1)& (0+255),w,b
  2196  000B54  22DA               	addwfc	fsr2h,f,c
  2197  000B56  EE10 F002          	lfsr	1,2
  2198  000B5A  5062               	movf	_uc_ptr,w,c
  2199  000B5C  26E1               	addwf	fsr1l,f,c
  2200  000B5E  5063               	movf	_uc_ptr+1,w,c
  2201  000B60  22E2               	addwfc	fsr1h,f,c
  2202  000B62  CFDF FFE7          	movff	indf2,indf1
  2203                           
  2204                           ; BSR set to: 0
  2205                           ;my_uart.c: 45: uc_ptr->buffer[3] = buffer[3];
  2206  000B66  0100               	movlb	0	; () banked
  2207  000B68  EE20 F003          	lfsr	2,3
  2208  000B6C  0100               	movlb	0	; () banked
  2209  000B6E  518E               	movf	putIntoUARTBuffer@buffer& (0+255),w,b
  2210  000B70  26D9               	addwf	fsr2l,f,c
  2211  000B72  0100               	movlb	0	; () banked
  2212  000B74  518F               	movf	(putIntoUARTBuffer@buffer+1)& (0+255),w,b
  2213  000B76  22DA               	addwfc	fsr2h,f,c
  2214  000B78  EE10 F003          	lfsr	1,3
  2215  000B7C  5062               	movf	_uc_ptr,w,c
  2216  000B7E  26E1               	addwf	fsr1l,f,c
  2217  000B80  5063               	movf	_uc_ptr+1,w,c
  2218  000B82  22E2               	addwfc	fsr1h,f,c
  2219  000B84  CFDF FFE7          	movff	indf2,indf1
  2220                           
  2221                           ; BSR set to: 0
  2222                           ;my_uart.c: 46: uc_ptr->buffer[4] = buffer[4];
  2223  000B88  0100               	movlb	0	; () banked
  2224  000B8A  EE20 F004          	lfsr	2,4
  2225  000B8E  0100               	movlb	0	; () banked
  2226  000B90  518E               	movf	putIntoUARTBuffer@buffer& (0+255),w,b
  2227  000B92  26D9               	addwf	fsr2l,f,c
  2228  000B94  0100               	movlb	0	; () banked
  2229  000B96  518F               	movf	(putIntoUARTBuffer@buffer+1)& (0+255),w,b
  2230  000B98  22DA               	addwfc	fsr2h,f,c
  2231  000B9A  EE10 F004          	lfsr	1,4
  2232  000B9E  5062               	movf	_uc_ptr,w,c
  2233  000BA0  26E1               	addwf	fsr1l,f,c
  2234  000BA2  5063               	movf	_uc_ptr+1,w,c
  2235  000BA4  22E2               	addwfc	fsr1h,f,c
  2236  000BA6  CFDF FFE7          	movff	indf2,indf1
  2237                           
  2238                           ; BSR set to: 0
  2239                           ;my_uart.c: 47: uc_ptr->buffer[5] = buffer[5];
  2240  000BAA  0100               	movlb	0	; () banked
  2241  000BAC  EE20 F005          	lfsr	2,5
  2242  000BB0  0100               	movlb	0	; () banked
  2243  000BB2  518E               	movf	putIntoUARTBuffer@buffer& (0+255),w,b
  2244  000BB4  26D9               	addwf	fsr2l,f,c
  2245  000BB6  0100               	movlb	0	; () banked
  2246  000BB8  518F               	movf	(putIntoUARTBuffer@buffer+1)& (0+255),w,b
  2247  000BBA  22DA               	addwfc	fsr2h,f,c
  2248  000BBC  EE10 F005          	lfsr	1,5
  2249  000BC0  5062               	movf	_uc_ptr,w,c
  2250  000BC2  26E1               	addwf	fsr1l,f,c
  2251  000BC4  5063               	movf	_uc_ptr+1,w,c
  2252  000BC6  22E2               	addwfc	fsr1h,f,c
  2253  000BC8  CFDF FFE7          	movff	indf2,indf1
  2254                           
  2255                           ; BSR set to: 0
  2256                           ;my_uart.c: 48: uc_ptr->buflen = 6;
  2257  000BCC  EE20 F004          	lfsr	2,4
  2258  000BD0  5062               	movf	_uc_ptr,w,c
  2259  000BD2  26D9               	addwf	fsr2l,f,c
  2260  000BD4  5063               	movf	_uc_ptr+1,w,c
  2261  000BD6  22DA               	addwfc	fsr2h,f,c
  2262  000BD8  0E06               	movlw	6
  2263  000BDA  6EDF               	movwf	indf2,c
  2264                           
  2265                           ; BSR set to: 0
  2266                           ;my_uart.c: 49: uc_ptr->bufind = 0;
  2267  000BDC  EE20 F00B          	lfsr	2,11
  2268  000BE0  5062               	movf	_uc_ptr,w,c
  2269  000BE2  26D9               	addwf	fsr2l,f,c
  2270  000BE4  5063               	movf	_uc_ptr+1,w,c
  2271  000BE6  22DA               	addwfc	fsr2h,f,c
  2272  000BE8  0E00               	movlw	0
  2273  000BEA  6EDF               	movwf	indf2,c
  2274                           
  2275                           ; BSR set to: 0
  2276  000BEC  0012               	return	
  2277  000BEE                     __end_of_putIntoUARTBuffer:
  2278                           	opt stack 0
  2279                           tblptru	equ	0xFF8
  2280                           tblptrh	equ	0xFF7
  2281                           tblptrl	equ	0xFF6
  2282                           tablat	equ	0xFF5
  2283                           prodh	equ	0xFF4
  2284                           prodl	equ	0xFF3
  2285                           postinc0	equ	0xFEE
  2286                           wreg	equ	0xFE8
  2287                           indf1	equ	0xFE7
  2288                           fsr1h	equ	0xFE2
  2289                           fsr1l	equ	0xFE1
  2290                           indf2	equ	0xFDF
  2291                           fsr2h	equ	0xFDA
  2292                           fsr2l	equ	0xFD9
  2293                           status	equ	0xFD8
  2294                           
  2295 ;; *************** function _timer0_lthread *****************
  2296 ;; Defined at:
  2297 ;;		line 9 in file "../src/timer0_thread.c"
  2298 ;; Parameters:    Size  Location     Type
  2299 ;;  tptr            2   14[BANK0 ] PTR struct __timer0_thre
  2300 ;;		 -> main@t0thread_data(2), 
  2301 ;;  msgtype         2   16[BANK0 ] int 
  2302 ;;  length          2   18[BANK0 ] int 
  2303 ;;  msgbuffer       2   20[BANK0 ] PTR unsigned char 
  2304 ;;		 -> main@msgbuffer(11), 
  2305 ;; Auto vars:     Size  Location     Type
  2306 ;;  msgval          2   22[BANK0 ] PTR unsigned int 
  2307 ;;		 -> main@msgbuffer(11), 
  2308 ;; Return value:  Size  Location     Type
  2309 ;;                  2   14[BANK0 ] int 
  2310 ;; Registers used:
  2311 ;;		None
  2312 ;; Tracked objects:
  2313 ;;		On entry : 0/0
  2314 ;;		On exit  : 0/0
  2315 ;;		Unchanged: 0/0
  2316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2317 ;;      Params:         0       8       0       0       0
  2318 ;;      Locals:         0       2       0       0       0
  2319 ;;      Temps:          0       0       0       0       0
  2320 ;;      Totals:         0      10       0       0       0
  2321 ;;Total ram usage:       10 bytes
  2322 ;; Hardware stack levels used:    1
  2323 ;; Hardware stack levels required when called:    8
  2324 ;; This function calls:
  2325 ;;		Nothing
  2326 ;; This function is called by:
  2327 ;;		_main
  2328 ;; This function uses a non-reentrant model
  2329 ;;
  2330                           
  2331                           	psect	text6
  2332  001814                     __ptext6:
  2333                           	opt stack 0
  2334  001814                     _timer0_lthread:
  2335                           	opt stack 21
  2336                           
  2337                           ;timer0_thread.c: 10: unsigned int *msgval;
  2338                           ;timer0_thread.c: 12: msgval = (unsigned int *) msgbuffer;
  2339                           
  2340                           ; BSR set to: 0
  2341                           ;incstack = 0
  2342                           ;incstack = 0
  2343  001814  C094  F096         	movff	timer0_lthread@msgbuffer,timer0_lthread@msgval
  2344  001818  C095  F097         	movff	timer0_lthread@msgbuffer+1,timer0_lthread@msgval+1
  2345  00181C  0012               	return	
  2346  00181E                     __end_of_timer0_lthread:
  2347                           	opt stack 0
  2348                           tblptru	equ	0xFF8
  2349                           tblptrh	equ	0xFF7
  2350                           tblptrl	equ	0xFF6
  2351                           tablat	equ	0xFF5
  2352                           prodh	equ	0xFF4
  2353                           prodl	equ	0xFF3
  2354                           postinc0	equ	0xFEE
  2355                           wreg	equ	0xFE8
  2356                           indf1	equ	0xFE7
  2357                           fsr1h	equ	0xFE2
  2358                           fsr1l	equ	0xFE1
  2359                           indf2	equ	0xFDF
  2360                           fsr2h	equ	0xFDA
  2361                           fsr2l	equ	0xFD9
  2362                           status	equ	0xFD8
  2363                           
  2364 ;; *************** function _uart_lthread *****************
  2365 ;; Defined at:
  2366 ;;		line 11 in file "../src/uart_thread.c"
  2367 ;; Parameters:    Size  Location     Type
  2368 ;;  uptr            2   15[BANK0 ] PTR struct __uart_thread
  2369 ;;		 -> main@uthread_data(2), 
  2370 ;;  msgtype         2   17[BANK0 ] int 
  2371 ;;  length          2   19[BANK0 ] int 
  2372 ;;  msgbuffer       2   21[BANK0 ] PTR unsigned char 
  2373 ;;		 -> main@msgbuffer(11), 
  2374 ;; Auto vars:     Size  Location     Type
  2375 ;;  i               1   26[BANK0 ] unsigned char 
  2376 ;; Return value:  Size  Location     Type
  2377 ;;                  2   15[BANK0 ] int 
  2378 ;; Registers used:
  2379 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2380 ;; Tracked objects:
  2381 ;;		On entry : 0/0
  2382 ;;		On exit  : 0/0
  2383 ;;		Unchanged: 0/0
  2384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2385 ;;      Params:         0       8       0       0       0
  2386 ;;      Locals:         0       1       0       0       0
  2387 ;;      Temps:          0       3       0       0       0
  2388 ;;      Totals:         0      12       0       0       0
  2389 ;;Total ram usage:       12 bytes
  2390 ;; Hardware stack levels used:    1
  2391 ;; Hardware stack levels required when called:    9
  2392 ;; This function calls:
  2393 ;;		_WriteUSART
  2394 ;; This function is called by:
  2395 ;;		_main
  2396 ;; This function uses a non-reentrant model
  2397 ;;
  2398                           
  2399                           	psect	text7
  2400  000CBE                     __ptext7:
  2401                           	opt stack 0
  2402  000CBE                     _uart_lthread:
  2403                           	opt stack 20
  2404                           
  2405                           ;uart_thread.c: 12: if (msgtype == 30) {
  2406                           
  2407                           ;incstack = 0
  2408                           ;incstack = 0
  2409  000CBE  0100               	movlb	0	; () banked
  2410  000CC0  0100               	movlb	0	; () banked
  2411  000CC2  5191               	movf	uart_lthread@msgtype& (0+255),w,b
  2412  000CC4  0A1E               	xorlw	30
  2413  000CC6  1192               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  2414  000CC8  B4D8               	btfsc	status,2,c
  2415  000CCA  0012               	return	
  2416                           
  2417                           ; BSR set to: 0
  2418                           ;uart_thread.c: 14: else if (msgtype == 61)
  2419                           
  2420                           ; BSR set to: 0
  2421                           
  2422                           ; BSR set to: 0
  2423                           ;uart_thread.c: 13: }
  2424  000CCC  0100               	movlb	0	; () banked
  2425  000CCE  0100               	movlb	0	; () banked
  2426  000CD0  5191               	movf	uart_lthread@msgtype& (0+255),w,b
  2427  000CD2  0A3D               	xorlw	61
  2428  000CD4  1192               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  2429  000CD6  A4D8               	btfss	status,2,c
  2430  000CD8  0012               	return	
  2431                           
  2432                           ; BSR set to: 0
  2433                           ;uart_thread.c: 15: {
  2434                           ;uart_thread.c: 17: for(char i = 0; i < length; i++)
  2435  000CDA  0100               	movlb	0	; () banked
  2436  000CDC  6F97               	movwf	??_uart_lthread& (0+255),b
  2437  000CDE  0E00               	movlw	0
  2438  000CE0  0100               	movlb	0	; () banked
  2439  000CE2  0100               	movlb	0	; () banked
  2440  000CE4  6F9A               	movwf	uart_lthread@i& (0+255),b
  2441  000CE6  0100               	movlb	0	; () banked
  2442  000CE8  5197               	movf	??_uart_lthread& (0+255),w,b
  2443  000CEA  D02B               	goto	l3144
  2444  000CEC                     l3138:
  2445                           
  2446                           ; BSR set to: 0
  2447                           ;uart_thread.c: 18: {
  2448                           ;uart_thread.c: 19: buffertest = msgbuffer[i];
  2449  000CEC  0100               	movlb	0	; () banked
  2450  000CEE  0100               	movlb	0	; () banked
  2451  000CF0  519A               	movf	uart_lthread@i& (0+255),w,b
  2452  000CF2  0D01               	mullw	1
  2453  000CF4  50F3               	movf	prodl,w,c
  2454  000CF6  0100               	movlb	0	; () banked
  2455  000CF8  0100               	movlb	0	; () banked
  2456  000CFA  2595               	addwf	uart_lthread@msgbuffer& (0+255),w,b
  2457  000CFC  6ED9               	movwf	fsr2l,c
  2458  000CFE  50F4               	movf	prodh,w,c
  2459  000D00  0100               	movlb	0	; () banked
  2460  000D02  0100               	movlb	0	; () banked
  2461  000D04  2196               	addwfc	(uart_lthread@msgbuffer+1)& (0+255),w,b
  2462  000D06  6EDA               	movwf	fsr2h,c
  2463  000D08  50DF               	movf	indf2,w,c
  2464  000D0A  0100               	movlb	0	; () banked
  2465  000D0C  0100               	movlb	0	; () banked
  2466  000D0E  6FAE               	movwf	_buffertest& (0+255),b
  2467  000D10                     l400:
  2468  000D10  A2AC               	btfss	4012,1,c	;volatile
  2469  000D12  D7FE               	goto	l400
  2470                           
  2471                           ;uart_thread.c: 21: WriteUSART(msgbuffer[i]);
  2472  000D14  0100               	movlb	0	; () banked
  2473  000D16  0100               	movlb	0	; () banked
  2474  000D18  519A               	movf	uart_lthread@i& (0+255),w,b
  2475  000D1A  0D01               	mullw	1
  2476  000D1C  50F3               	movf	prodl,w,c
  2477  000D1E  0100               	movlb	0	; () banked
  2478  000D20  0100               	movlb	0	; () banked
  2479  000D22  2595               	addwf	uart_lthread@msgbuffer& (0+255),w,b
  2480  000D24  6ED9               	movwf	fsr2l,c
  2481  000D26  50F4               	movf	prodh,w,c
  2482  000D28  0100               	movlb	0	; () banked
  2483  000D2A  0100               	movlb	0	; () banked
  2484  000D2C  2196               	addwfc	(uart_lthread@msgbuffer+1)& (0+255),w,b
  2485  000D2E  6EDA               	movwf	fsr2h,c
  2486  000D30  50DF               	movf	indf2,w,c
  2487  000D32  0100               	movlb	0	; () banked
  2488  000D34  0100               	movlb	0	; () banked
  2489  000D36  6F8E               	movwf	?_WriteUSART& (0+255),b
  2490  000D38  ECF5  F00B         	call	_WriteUSART	;wreg free
  2491  000D3C  0100               	movlb	0	; () banked
  2492  000D3E  0100               	movlb	0	; () banked
  2493  000D40  2B9A               	incf	uart_lthread@i& (0+255),f,b
  2494  000D42                     l3144:
  2495                           
  2496                           ; BSR set to: 0
  2497  000D42  0100               	movlb	0	; () banked
  2498  000D44  0100               	movlb	0	; () banked
  2499  000D46  519A               	movf	uart_lthread@i& (0+255),w,b
  2500  000D48  0100               	movlb	0	; () banked
  2501  000D4A  6F97               	movwf	??_uart_lthread& (0+255),b
  2502  000D4C  6B98               	clrf	(??_uart_lthread+1)& (0+255),b
  2503  000D4E  0100               	movlb	0	; () banked
  2504  000D50  5198               	movf	(??_uart_lthread+1)& (0+255),w,b
  2505  000D52  0A80               	xorlw	128
  2506  000D54  0100               	movlb	0	; () banked
  2507  000D56  6F99               	movwf	(??_uart_lthread+2)& (0+255),b
  2508  000D58  0100               	movlb	0	; () banked
  2509  000D5A  5193               	movf	uart_lthread@length& (0+255),w,b
  2510  000D5C  0100               	movlb	0	; () banked
  2511  000D5E  5D97               	subwf	??_uart_lthread& (0+255),w,b
  2512  000D60  0100               	movlb	0	; () banked
  2513  000D62  0100               	movlb	0	; () banked
  2514  000D64  5194               	movf	(uart_lthread@length+1)& (0+255),w,b
  2515  000D66  0A80               	xorlw	128
  2516  000D68  0100               	movlb	0	; () banked
  2517  000D6A  5999               	subwfb	(??_uart_lthread+2)& (0+255),w,b
  2518  000D6C  A0D8               	btfss	status,0,c
  2519  000D6E  D7BE               	goto	l3138
  2520  000D70                     l404:
  2521  000D70  A2AC               	btfss	4012,1,c	;volatile
  2522  000D72  D7FE               	goto	l404
  2523                           
  2524                           ;uart_thread.c: 25: WriteUSART(0x55);
  2525  000D74  0100               	movlb	0	; () banked
  2526  000D76  6F97               	movwf	??_uart_lthread& (0+255),b
  2527  000D78  0E55               	movlw	85
  2528  000D7A  0100               	movlb	0	; () banked
  2529  000D7C  0100               	movlb	0	; () banked
  2530  000D7E  6F8E               	movwf	?_WriteUSART& (0+255),b
  2531  000D80  0100               	movlb	0	; () banked
  2532  000D82  5197               	movf	??_uart_lthread& (0+255),w,b
  2533  000D84  ECF5  F00B         	call	_WriteUSART	;wreg free
  2534  000D88  0012               	return	
  2535  000D8A                     __end_of_uart_lthread:
  2536                           	opt stack 0
  2537                           tblptru	equ	0xFF8
  2538                           tblptrh	equ	0xFF7
  2539                           tblptrl	equ	0xFF6
  2540                           tablat	equ	0xFF5
  2541                           prodh	equ	0xFF4
  2542                           prodl	equ	0xFF3
  2543                           postinc0	equ	0xFEE
  2544                           wreg	equ	0xFE8
  2545                           indf1	equ	0xFE7
  2546                           fsr1h	equ	0xFE2
  2547                           fsr1l	equ	0xFE1
  2548                           indf2	equ	0xFDF
  2549                           fsr2h	equ	0xFDA
  2550                           fsr2l	equ	0xFD9
  2551                           status	equ	0xFD8
  2552                           
  2553 ;; *************** function _WriteUSART *****************
  2554 ;; Defined at:
  2555 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic18\plib\USART\uwrite.c"
  2556 ;; Parameters:    Size  Location     Type
  2557 ;;  data            1   14[BANK0 ] unsigned char 
  2558 ;; Auto vars:     Size  Location     Type
  2559 ;;		None
  2560 ;; Return value:  Size  Location     Type
  2561 ;;		None               void
  2562 ;; Registers used:
  2563 ;;		None
  2564 ;; Tracked objects:
  2565 ;;		On entry : 0/0
  2566 ;;		On exit  : 0/0
  2567 ;;		Unchanged: 0/0
  2568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2569 ;;      Params:         0       1       0       0       0
  2570 ;;      Locals:         0       0       0       0       0
  2571 ;;      Temps:          0       0       0       0       0
  2572 ;;      Totals:         0       1       0       0       0
  2573 ;;Total ram usage:        1 bytes
  2574 ;; Hardware stack levels used:    1
  2575 ;; Hardware stack levels required when called:    8
  2576 ;; This function calls:
  2577 ;;		Nothing
  2578 ;; This function is called by:
  2579 ;;		_uart_lthread
  2580 ;; This function uses a non-reentrant model
  2581 ;;
  2582                           
  2583                           	psect	text8
  2584  0017EA                     __ptext8:
  2585                           	opt stack 0
  2586  0017EA                     _WriteUSART:
  2587                           	opt stack 20
  2588                           
  2589                           ;incstack = 0
  2590                           ;incstack = 0
  2591  0017EA  ACAC               	btfss	4012,6,c	;volatile
  2592  0017EC  D003               	goto	l558
  2593  0017EE  90AC               	bcf	4012,0,c	;volatile
  2594  0017F0  B253               	btfsc	_USART_Status,1,c
  2595  0017F2  80AC               	bsf	4012,0,c	;volatile
  2596  0017F4                     l558:
  2597  0017F4  C08E  FFAD         	movff	WriteUSART@data,4013	;volatile
  2598  0017F8  0012               	return	
  2599  0017FA                     __end_of_WriteUSART:
  2600                           	opt stack 0
  2601                           tblptru	equ	0xFF8
  2602                           tblptrh	equ	0xFF7
  2603                           tblptrl	equ	0xFF6
  2604                           tablat	equ	0xFF5
  2605                           prodh	equ	0xFF4
  2606                           prodl	equ	0xFF3
  2607                           postinc0	equ	0xFEE
  2608                           wreg	equ	0xFE8
  2609                           indf1	equ	0xFE7
  2610                           fsr1h	equ	0xFE2
  2611                           fsr1l	equ	0xFE1
  2612                           indf2	equ	0xFDF
  2613                           fsr2h	equ	0xFDA
  2614                           fsr2l	equ	0xFD9
  2615                           status	equ	0xFD8
  2616                           
  2617 ;; *************** function _ToMainHigh_recvmsg *****************
  2618 ;; Defined at:
  2619 ;;		line 135 in file "../src/messages.c"
  2620 ;; Parameters:    Size  Location     Type
  2621 ;;  maxlength       1   38[BANK0 ] unsigned char 
  2622 ;;  msgtype         2   39[BANK0 ] PTR unsigned char 
  2623 ;;		 -> main@msgtype(1), 
  2624 ;;  data            2   41[BANK0 ] PTR void 
  2625 ;;		 -> main@msgbuffer(11), 
  2626 ;; Auto vars:     Size  Location     Type
  2627 ;;		None
  2628 ;; Return value:  Size  Location     Type
  2629 ;;                  1    wreg      char 
  2630 ;; Registers used:
  2631 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2632 ;; Tracked objects:
  2633 ;;		On entry : 0/0
  2634 ;;		On exit  : 0/0
  2635 ;;		Unchanged: 0/0
  2636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2637 ;;      Params:         0       5       0       0       0
  2638 ;;      Locals:         0       0       0       0       0
  2639 ;;      Temps:          0       0       0       0       0
  2640 ;;      Totals:         0       5       0       0       0
  2641 ;;Total ram usage:        5 bytes
  2642 ;; Hardware stack levels used:    1
  2643 ;; Hardware stack levels required when called:   10
  2644 ;; This function calls:
  2645 ;;		_recv_msg
  2646 ;; This function is called by:
  2647 ;;		_main
  2648 ;; This function uses a non-reentrant model
  2649 ;;
  2650                           
  2651                           	psect	text9
  2652  0016A6                     __ptext9:
  2653                           	opt stack 0
  2654  0016A6                     _ToMainHigh_recvmsg:
  2655                           	opt stack 19
  2656                           
  2657                           ;messages.c: 141: return (recv_msg(&ToMainHigh_MQ, maxlength, msgtype, data));
  2658                           
  2659                           ;incstack = 0
  2660                           ;incstack = 0
  2661  0016A6  0101               	movlb	1	; () banked
  2662  0016A8  0E01               	movlw	high _ToMainHigh_MQ
  2663  0016AA  0100               	movlb	0	; () banked
  2664  0016AC  0100               	movlb	0	; () banked
  2665  0016AE  6F99               	movwf	(?_recv_msg+1)& (0+255),b
  2666  0016B0  0101               	movlb	1	; () banked
  2667  0016B2  0E68               	movlw	low _ToMainHigh_MQ
  2668  0016B4  0100               	movlb	0	; () banked
  2669  0016B6  6F98               	movwf	?_recv_msg& (0+255),b
  2670  0016B8  C0A6  F09A         	movff	ToMainHigh_recvmsg@maxlength,?_recv_msg+2
  2671  0016BC  C0A7  F09B         	movff	ToMainHigh_recvmsg@msgtype,?_recv_msg+3
  2672  0016C0  C0A8  F09C         	movff	ToMainHigh_recvmsg@msgtype+1,?_recv_msg+4
  2673  0016C4  C0A9  F09D         	movff	ToMainHigh_recvmsg@data,?_recv_msg+5
  2674  0016C8  C0AA  F09E         	movff	ToMainHigh_recvmsg@data+1,?_recv_msg+6
  2675  0016CC  ECF5  F003         	call	_recv_msg	;wreg free
  2676  0016D0  0012               	return	
  2677  0016D2                     __end_of_ToMainHigh_recvmsg:
  2678                           	opt stack 0
  2679                           tblptru	equ	0xFF8
  2680                           tblptrh	equ	0xFF7
  2681                           tblptrl	equ	0xFF6
  2682                           tablat	equ	0xFF5
  2683                           prodh	equ	0xFF4
  2684                           prodl	equ	0xFF3
  2685                           postinc0	equ	0xFEE
  2686                           wreg	equ	0xFE8
  2687                           indf1	equ	0xFE7
  2688                           fsr1h	equ	0xFE2
  2689                           fsr1l	equ	0xFE1
  2690                           indf2	equ	0xFDF
  2691                           fsr2h	equ	0xFDA
  2692                           fsr2l	equ	0xFD9
  2693                           status	equ	0xFD8
  2694                           
  2695 ;; *************** function _recv_msg *****************
  2696 ;; Defined at:
  2697 ;;		line 63 in file "../src/messages.c"
  2698 ;; Parameters:    Size  Location     Type
  2699 ;;  qptr            2   24[BANK0 ] PTR struct __msg_queue
  2700 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  2701 ;;  maxlength       1   26[BANK0 ] unsigned char 
  2702 ;;  msgtype         2   27[BANK0 ] PTR unsigned char 
  2703 ;;		 -> timer0_int_handler@msgtype(2), main@msgtype(1), 
  2704 ;;  data            2   29[BANK0 ] PTR void 
  2705 ;;		 -> timer0_int_handler@val(2), main@msgbuffer(11), 
  2706 ;; Auto vars:     Size  Location     Type
  2707 ;;  qmsg            2   36[BANK0 ] PTR struct __msg
  2708 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  2709 ;;  tlength         2   34[BANK0 ] unsigned int 
  2710 ;;  slot            1   33[BANK0 ] unsigned char 
  2711 ;; Return value:  Size  Location     Type
  2712 ;;                  1    wreg      char 
  2713 ;; Registers used:
  2714 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2715 ;; Tracked objects:
  2716 ;;		On entry : 0/0
  2717 ;;		On exit  : 0/0
  2718 ;;		Unchanged: 0/0
  2719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2720 ;;      Params:         0       7       0       0       0
  2721 ;;      Locals:         0       5       0       0       0
  2722 ;;      Temps:          0       2       0       0       0
  2723 ;;      Totals:         0      14       0       0       0
  2724 ;;Total ram usage:       14 bytes
  2725 ;; Hardware stack levels used:    1
  2726 ;; Hardware stack levels required when called:    9
  2727 ;; This function calls:
  2728 ;;		_memcpy
  2729 ;; This function is called by:
  2730 ;;		_ToMainLow_recvmsg
  2731 ;;		_ToMainHigh_recvmsg
  2732 ;;		_FromMainLow_recvmsg
  2733 ;; This function uses a non-reentrant model
  2734 ;;
  2735                           
  2736                           	psect	text10
  2737  0007EA                     __ptext10:
  2738                           	opt stack 0
  2739  0007EA                     _recv_msg:
  2740                           	opt stack 19
  2741                           
  2742                           ;messages.c: 64: unsigned char slot;
  2743                           ;messages.c: 68: msg *qmsg;
  2744                           ;messages.c: 69: size_t tlength;
  2745                           ;messages.c: 72: slot = qptr->cur_read_ind;
  2746                           
  2747                           ;incstack = 0
  2748                           ;incstack = 0
  2749  0007EA  0100               	movlb	0	; () banked
  2750  0007EC  EE20 F035          	lfsr	2,53
  2751  0007F0  0100               	movlb	0	; () banked
  2752  0007F2  5198               	movf	recv_msg@qptr& (0+255),w,b
  2753  0007F4  26D9               	addwf	fsr2l,f,c
  2754  0007F6  0100               	movlb	0	; () banked
  2755  0007F8  5199               	movf	(recv_msg@qptr+1)& (0+255),w,b
  2756  0007FA  22DA               	addwfc	fsr2h,f,c
  2757  0007FC  50DF               	movf	indf2,w,c
  2758  0007FE  0100               	movlb	0	; () banked
  2759  000800  0100               	movlb	0	; () banked
  2760  000802  6FA1               	movwf	recv_msg@slot& (0+255),b
  2761                           
  2762                           ; BSR set to: 0
  2763                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  2764  000804  0100               	movlb	0	; () banked
  2765  000806  0100               	movlb	0	; () banked
  2766  000808  51A1               	movf	recv_msg@slot& (0+255),w,b
  2767  00080A  0D0D               	mullw	13
  2768  00080C  50F3               	movf	prodl,w,c
  2769  00080E  0100               	movlb	0	; () banked
  2770  000810  0100               	movlb	0	; () banked
  2771  000812  2598               	addwf	recv_msg@qptr& (0+255),w,b
  2772  000814  0100               	movlb	0	; () banked
  2773  000816  0100               	movlb	0	; () banked
  2774  000818  6FA4               	movwf	recv_msg@qmsg& (0+255),b
  2775  00081A  50F4               	movf	prodh,w,c
  2776  00081C  0100               	movlb	0	; () banked
  2777  00081E  0100               	movlb	0	; () banked
  2778  000820  2199               	addwfc	(recv_msg@qptr+1)& (0+255),w,b
  2779  000822  0100               	movlb	0	; () banked
  2780  000824  6FA5               	movwf	(recv_msg@qmsg+1)& (0+255),b
  2781                           
  2782                           ; BSR set to: 0
  2783                           ;messages.c: 74: if (qmsg->full == 1) {
  2784  000826  0E01               	movlw	1
  2785  000828  C0A4  FFD9         	movff	recv_msg@qmsg,fsr2l
  2786  00082C  C0A5  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  2787  000830  62DF               	cpfseq	indf2,c
  2788  000832  D06F               	goto	l3274
  2789                           
  2790                           ; BSR set to: 0
  2791                           ;messages.c: 76: if (qmsg->length > maxlength) {
  2792  000834  0100               	movlb	0	; () banked
  2793  000836  EE20 F001          	lfsr	2,1
  2794  00083A  0100               	movlb	0	; () banked
  2795  00083C  51A4               	movf	recv_msg@qmsg& (0+255),w,b
  2796  00083E  26D9               	addwf	fsr2l,f,c
  2797  000840  0100               	movlb	0	; () banked
  2798  000842  51A5               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  2799  000844  22DA               	addwfc	fsr2h,f,c
  2800  000846  50DF               	movf	indf2,w,c
  2801  000848  0100               	movlb	0	; () banked
  2802  00084A  0100               	movlb	0	; () banked
  2803  00084C  619A               	cpfslt	recv_msg@maxlength& (0+255),b
  2804  00084E  D002               	goto	l3258
  2805                           
  2806                           ; BSR set to: 0
  2807                           ;messages.c: 77: return (-3);
  2808  000850  0EFD               	movlw	253
  2809  000852  0012               	return	
  2810  000854                     l3258:
  2811                           
  2812                           ; BSR set to: 0
  2813                           ;messages.c: 78: }
  2814                           ;messages.c: 80: tlength = qmsg->length;
  2815  000854  0100               	movlb	0	; () banked
  2816  000856  EE20 F001          	lfsr	2,1
  2817  00085A  0100               	movlb	0	; () banked
  2818  00085C  51A4               	movf	recv_msg@qmsg& (0+255),w,b
  2819  00085E  26D9               	addwf	fsr2l,f,c
  2820  000860  0100               	movlb	0	; () banked
  2821  000862  51A5               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  2822  000864  22DA               	addwfc	fsr2h,f,c
  2823  000866  50DF               	movf	indf2,w,c
  2824  000868  0100               	movlb	0	; () banked
  2825  00086A  6F9F               	movwf	??_recv_msg& (0+255),b
  2826  00086C  0100               	movlb	0	; () banked
  2827  00086E  519F               	movf	??_recv_msg& (0+255),w,b
  2828  000870  0100               	movlb	0	; () banked
  2829  000872  0100               	movlb	0	; () banked
  2830  000874  6FA2               	movwf	recv_msg@tlength& (0+255),b
  2831  000876  0100               	movlb	0	; () banked
  2832  000878  6BA3               	clrf	(recv_msg@tlength+1)& (0+255),b
  2833                           
  2834                           ; BSR set to: 0
  2835                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  2836  00087A  C09D  F08E         	movff	recv_msg@data,?_memcpy
  2837  00087E  C09E  F08F         	movff	recv_msg@data+1,?_memcpy+1
  2838  000882  0E03               	movlw	3
  2839  000884  0100               	movlb	0	; () banked
  2840  000886  0100               	movlb	0	; () banked
  2841  000888  25A4               	addwf	recv_msg@qmsg& (0+255),w,b
  2842  00088A  0100               	movlb	0	; () banked
  2843  00088C  6F9F               	movwf	??_recv_msg& (0+255),b
  2844  00088E  0E00               	movlw	0
  2845  000890  0100               	movlb	0	; () banked
  2846  000892  0100               	movlb	0	; () banked
  2847  000894  21A5               	addwfc	(recv_msg@qmsg+1)& (0+255),w,b
  2848  000896  0100               	movlb	0	; () banked
  2849  000898  6FA0               	movwf	(??_recv_msg+1)& (0+255),b
  2850  00089A  C09F  F090         	movff	??_recv_msg,?_memcpy+2
  2851  00089E  C0A0  F091         	movff	??_recv_msg+1,?_memcpy+3
  2852  0008A2  C0A2  F092         	movff	recv_msg@tlength,?_memcpy+4
  2853  0008A6  C0A3  F093         	movff	recv_msg@tlength+1,?_memcpy+5
  2854  0008AA  ECF1  F009         	call	_memcpy	;wreg free
  2855                           
  2856                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  2857  0008AE  0100               	movlb	0	; () banked
  2858  0008B0  EE20 F035          	lfsr	2,53
  2859  0008B4  0100               	movlb	0	; () banked
  2860  0008B6  5198               	movf	recv_msg@qptr& (0+255),w,b
  2861  0008B8  26D9               	addwf	fsr2l,f,c
  2862  0008BA  0100               	movlb	0	; () banked
  2863  0008BC  5199               	movf	(recv_msg@qptr+1)& (0+255),w,b
  2864  0008BE  22DA               	addwfc	fsr2h,f,c
  2865  0008C0  0100               	movlb	0	; () banked
  2866  0008C2  EE10 F035          	lfsr	1,53
  2867  0008C6  0100               	movlb	0	; () banked
  2868  0008C8  5198               	movf	recv_msg@qptr& (0+255),w,b
  2869  0008CA  26E1               	addwf	fsr1l,f,c
  2870  0008CC  0100               	movlb	0	; () banked
  2871  0008CE  5199               	movf	(recv_msg@qptr+1)& (0+255),w,b
  2872  0008D0  22E2               	addwfc	fsr1h,f,c
  2873  0008D2  50E7               	movf	indf1,w,c
  2874  0008D4  0100               	movlb	0	; () banked
  2875  0008D6  6F9F               	movwf	??_recv_msg& (0+255),b
  2876  0008D8  0100               	movlb	0	; () banked
  2877  0008DA  299F               	incf	??_recv_msg& (0+255),w,b
  2878  0008DC  0B03               	andlw	3
  2879  0008DE  6EDF               	movwf	indf2,c
  2880                           
  2881                           ; BSR set to: 0
  2882                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  2883  0008E0  0100               	movlb	0	; () banked
  2884  0008E2  EE20 F002          	lfsr	2,2
  2885  0008E6  0100               	movlb	0	; () banked
  2886  0008E8  51A4               	movf	recv_msg@qmsg& (0+255),w,b
  2887  0008EA  26D9               	addwf	fsr2l,f,c
  2888  0008EC  0100               	movlb	0	; () banked
  2889  0008EE  51A5               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  2890  0008F0  22DA               	addwfc	fsr2h,f,c
  2891  0008F2  C09B  FFE1         	movff	recv_msg@msgtype,fsr1l
  2892  0008F6  C09C  FFE2         	movff	recv_msg@msgtype+1,fsr1h
  2893  0008FA  CFDF FFE7          	movff	indf2,indf1
  2894                           
  2895                           ; BSR set to: 0
  2896                           ;messages.c: 91: qmsg->full = 0;
  2897  0008FE  C0A4  FFD9         	movff	recv_msg@qmsg,fsr2l
  2898  000902  C0A5  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  2899  000906  0E00               	movlw	0
  2900  000908  6EDF               	movwf	indf2,c
  2901                           
  2902                           ; BSR set to: 0
  2903                           ;messages.c: 92: return (tlength);
  2904  00090A  0100               	movlb	0	; () banked
  2905  00090C  0100               	movlb	0	; () banked
  2906  00090E  51A2               	movf	recv_msg@tlength& (0+255),w,b
  2907  000910  0012               	return	
  2908  000912                     l3274:
  2909                           
  2910                           ; BSR set to: 0
  2911                           ;messages.c: 94: return (-4);
  2912  000912  0EFC               	movlw	252
  2913  000914  0012               	return	
  2914  000916                     __end_of_recv_msg:
  2915                           	opt stack 0
  2916                           tblptru	equ	0xFF8
  2917                           tblptrh	equ	0xFF7
  2918                           tblptrl	equ	0xFF6
  2919                           tablat	equ	0xFF5
  2920                           prodh	equ	0xFF4
  2921                           prodl	equ	0xFF3
  2922                           postinc0	equ	0xFEE
  2923                           wreg	equ	0xFE8
  2924                           indf1	equ	0xFE7
  2925                           fsr1h	equ	0xFE2
  2926                           fsr1l	equ	0xFE1
  2927                           indf2	equ	0xFDF
  2928                           fsr2h	equ	0xFDA
  2929                           fsr2l	equ	0xFD9
  2930                           status	equ	0xFD8
  2931                           
  2932 ;; *************** function _memcpy *****************
  2933 ;; Defined at:
  2934 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\memcpy.c"
  2935 ;; Parameters:    Size  Location     Type
  2936 ;;  d1              2   14[BANK0 ] PTR void 
  2937 ;;		 -> timer0_int_handler@val(2), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  2938 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), 
  2939 ;;  s1              2   16[BANK0 ] PTR const void 
  2940 ;;		 -> timer0_int_handler@val(2), NULL(0), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  2941 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@ic(29), main@uc(12), 
  2942 ;;  n               2   18[BANK0 ] unsigned int 
  2943 ;; Auto vars:     Size  Location     Type
  2944 ;;  s               2   22[BANK0 ] PTR const unsigned char 
  2945 ;;		 -> timer0_int_handler@val(2), NULL(0), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  2946 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@ic(29), main@uc(12), 
  2947 ;;  d               2   20[BANK0 ] PTR unsigned char 
  2948 ;;		 -> timer0_int_handler@val(2), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  2949 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), 
  2950 ;; Return value:  Size  Location     Type
  2951 ;;                  2   14[BANK0 ] PTR void 
  2952 ;; Registers used:
  2953 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2954 ;; Tracked objects:
  2955 ;;		On entry : 0/0
  2956 ;;		On exit  : 0/0
  2957 ;;		Unchanged: 0/0
  2958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2959 ;;      Params:         0       6       0       0       0
  2960 ;;      Locals:         0       4       0       0       0
  2961 ;;      Temps:          0       0       0       0       0
  2962 ;;      Totals:         0      10       0       0       0
  2963 ;;Total ram usage:       10 bytes
  2964 ;; Hardware stack levels used:    1
  2965 ;; Hardware stack levels required when called:    8
  2966 ;; This function calls:
  2967 ;;		Nothing
  2968 ;; This function is called by:
  2969 ;;		_recv_msg
  2970 ;; This function uses a non-reentrant model
  2971 ;;
  2972                           
  2973                           	psect	text11
  2974  0013E2                     __ptext11:
  2975                           	opt stack 0
  2976  0013E2                     _memcpy:
  2977                           	opt stack 19
  2978                           
  2979                           ; BSR set to: 0
  2980                           ;incstack = 0
  2981                           ;incstack = 0
  2982  0013E2  C090  F096         	movff	memcpy@s1,memcpy@s
  2983  0013E6  C091  F097         	movff	memcpy@s1+1,memcpy@s+1
  2984  0013EA  C08E  F094         	movff	memcpy@d1,memcpy@d
  2985  0013EE  C08F  F095         	movff	memcpy@d1+1,memcpy@d+1
  2986  0013F2  D012               	goto	l3244
  2987  0013F4                     l3238:
  2988  0013F4  C096  FFD9         	movff	memcpy@s,fsr2l
  2989  0013F8  C097  FFDA         	movff	memcpy@s+1,fsr2h
  2990  0013FC  C094  FFE1         	movff	memcpy@d,fsr1l
  2991  001400  C095  FFE2         	movff	memcpy@d+1,fsr1h
  2992  001404  CFDF FFE7          	movff	indf2,indf1
  2993  001408  0100               	movlb	0	; () banked
  2994  00140A  0100               	movlb	0	; () banked
  2995  00140C  4B96               	infsnz	memcpy@s& (0+255),f,b
  2996  00140E  2B97               	incf	(memcpy@s+1)& (0+255),f,b
  2997                           
  2998                           ; BSR set to: 0
  2999  001410  0100               	movlb	0	; () banked
  3000  001412  0100               	movlb	0	; () banked
  3001  001414  4B94               	infsnz	memcpy@d& (0+255),f,b
  3002  001416  2B95               	incf	(memcpy@d+1)& (0+255),f,b
  3003  001418                     l3244:
  3004  001418  0100               	movlb	0	; () banked
  3005  00141A  0100               	movlb	0	; () banked
  3006  00141C  0792               	decf	memcpy@n& (0+255),f,b
  3007  00141E  A0D8               	btfss	status,0,c
  3008  001420  0793               	decf	(memcpy@n+1)& (0+255),f,b
  3009  001422  0100               	movlb	0	; () banked
  3010  001424  2992               	incf	memcpy@n& (0+255),w,b
  3011  001426  B4D8               	btfsc	status,2,c
  3012  001428  2993               	incf	(memcpy@n+1)& (0+255),w,b
  3013  00142A  B4D8               	btfsc	status,2,c
  3014                           
  3015                           ; BSR set to: 0
  3016                           
  3017                           ; BSR set to: 0
  3018                           ;	Return value of _memcpy is never used
  3019  00142C  0012               	return	
  3020  00142E  D7E2               	goto	l3238
  3021  001430                     __end_of_memcpy:
  3022                           	opt stack 0
  3023                           tblptru	equ	0xFF8
  3024                           tblptrh	equ	0xFF7
  3025                           tblptrl	equ	0xFF6
  3026                           tablat	equ	0xFF5
  3027                           prodh	equ	0xFF4
  3028                           prodl	equ	0xFF3
  3029                           postinc0	equ	0xFEE
  3030                           wreg	equ	0xFE8
  3031                           indf1	equ	0xFE7
  3032                           fsr1h	equ	0xFE2
  3033                           fsr1l	equ	0xFE1
  3034                           indf2	equ	0xFDF
  3035                           fsr2h	equ	0xFDA
  3036                           fsr2l	equ	0xFD9
  3037                           status	equ	0xFD8
  3038                           
  3039 ;; *************** function _block_on_To_msgqueues *****************
  3040 ;; Defined at:
  3041 ;;		line 258 in file "../src/messages.c"
  3042 ;; Parameters:    Size  Location     Type
  3043 ;;		None
  3044 ;; Auto vars:     Size  Location     Type
  3045 ;;		None
  3046 ;; Return value:  Size  Location     Type
  3047 ;;		None               void
  3048 ;; Registers used:
  3049 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3050 ;; Tracked objects:
  3051 ;;		On entry : 0/0
  3052 ;;		On exit  : 0/0
  3053 ;;		Unchanged: 0/0
  3054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3055 ;;      Params:         0       0       0       0       0
  3056 ;;      Locals:         0       0       0       0       0
  3057 ;;      Temps:          0       1       0       0       0
  3058 ;;      Totals:         0       1       0       0       0
  3059 ;;Total ram usage:        1 bytes
  3060 ;; Hardware stack levels used:    1
  3061 ;; Hardware stack levels required when called:   11
  3062 ;; This function calls:
  3063 ;;		_in_main
  3064 ;;		_check_msg
  3065 ;;		_Delay1KTCYx
  3066 ;; This function is called by:
  3067 ;;		_main
  3068 ;; This function uses a non-reentrant model
  3069 ;;
  3070                           
  3071                           	psect	text12
  3072  000D8A                     __ptext12:
  3073                           	opt stack 0
  3074  000D8A                     _block_on_To_msgqueues:
  3075                           	opt stack 18
  3076                           
  3077                           ;messages.c: 259: if (!in_main()) {
  3078                           
  3079                           ; BSR set to: 0
  3080                           ;incstack = 0
  3081                           ;incstack = 0
  3082  000D8A  EC62  F00A         	call	_in_main	;wreg free
  3083  000D8E  0100               	movlb	0	; () banked
  3084  000D90  0100               	movlb	0	; () banked
  3085  000D92  5193               	movf	(?_in_main+1)& (0+255),w,b
  3086  000D94  0100               	movlb	0	; () banked
  3087  000D96  1192               	iorwf	?_in_main& (0+255),w,b
  3088  000D98  B4D8               	btfsc	status,2,c
  3089  000D9A  0012               	return	
  3090                           
  3091                           ; BSR set to: 0
  3092                           ;messages.c: 261: }
  3093                           ;messages.c: 262: LATBbits.LATB3 = 1;
  3094                           
  3095                           ; BSR set to: 0
  3096                           ;messages.c: 260: return;
  3097  000D9C  868A               	bsf	3978,3,c	;volatile
  3098                           
  3099                           ; BSR set to: 0
  3100                           ;messages.c: 263: MQ_Main_Willing_to_block = 1;
  3101  000D9E  0100               	movlb	0	; () banked
  3102  000DA0  6F94               	movwf	??_block_on_To_msgqueues& (0+255),b
  3103  000DA2  0E01               	movlw	1
  3104  000DA4  6E52               	movwf	_MQ_Main_Willing_to_block,c
  3105  000DA6  0100               	movlb	0	; () banked
  3106  000DA8  5194               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3107  000DAA                     l3106:
  3108                           
  3109                           ; BSR set to: 0
  3110                           ;messages.c: 265: if (check_msg(&ToMainHigh_MQ)) {
  3111  000DAA  0101               	movlb	1	; () banked
  3112  000DAC  0E01               	movlw	high _ToMainHigh_MQ
  3113  000DAE  0100               	movlb	0	; () banked
  3114  000DB0  0100               	movlb	0	; () banked
  3115  000DB2  6F8F               	movwf	(?_check_msg+1)& (0+255),b
  3116  000DB4  0101               	movlb	1	; () banked
  3117  000DB6  0E68               	movlw	low _ToMainHigh_MQ
  3118  000DB8  0100               	movlb	0	; () banked
  3119  000DBA  6F8E               	movwf	?_check_msg& (0+255),b
  3120  000DBC  ECC1  F00A         	call	_check_msg	;wreg free
  3121  000DC0  0900               	iorlw	0
  3122  000DC2  B4D8               	btfsc	status,2,c
  3123  000DC4  D008               	goto	l3114
  3124                           
  3125                           ;messages.c: 266: MQ_Main_Willing_to_block = 0;
  3126  000DC6  0100               	movlb	0	; () banked
  3127  000DC8  6F94               	movwf	??_block_on_To_msgqueues& (0+255),b
  3128  000DCA  0E00               	movlw	0
  3129  000DCC  6E52               	movwf	_MQ_Main_Willing_to_block,c
  3130  000DCE  0100               	movlb	0	; () banked
  3131  000DD0  5194               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3132                           
  3133                           ; BSR set to: 0
  3134                           ;messages.c: 267: LATBbits.LATB3 = 0;
  3135  000DD2  968A               	bcf	3978,3,c	;volatile
  3136  000DD4  0012               	return	
  3137  000DD6                     l3114:
  3138                           
  3139                           ;messages.c: 269: }
  3140                           ;messages.c: 270: if (check_msg(&ToMainLow_MQ)) {
  3141  000DD6  0101               	movlb	1	; () banked
  3142  000DD8  0E01               	movlw	high _ToMainLow_MQ
  3143  000DDA  0100               	movlb	0	; () banked
  3144  000DDC  0100               	movlb	0	; () banked
  3145  000DDE  6F8F               	movwf	(?_check_msg+1)& (0+255),b
  3146  000DE0  0101               	movlb	1	; () banked
  3147  000DE2  0E9E               	movlw	low _ToMainLow_MQ
  3148  000DE4  0100               	movlb	0	; () banked
  3149  000DE6  6F8E               	movwf	?_check_msg& (0+255),b
  3150  000DE8  ECC1  F00A         	call	_check_msg	;wreg free
  3151  000DEC  0900               	iorlw	0
  3152  000DEE  B4D8               	btfsc	status,2,c
  3153  000DF0  D008               	goto	l3122
  3154                           
  3155                           ;messages.c: 271: MQ_Main_Willing_to_block = 0;
  3156  000DF2  0100               	movlb	0	; () banked
  3157  000DF4  6F94               	movwf	??_block_on_To_msgqueues& (0+255),b
  3158  000DF6  0E00               	movlw	0
  3159  000DF8  6E52               	movwf	_MQ_Main_Willing_to_block,c
  3160  000DFA  0100               	movlb	0	; () banked
  3161  000DFC  5194               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3162                           
  3163                           ; BSR set to: 0
  3164                           ;messages.c: 272: LATBbits.LATB3 = 0;
  3165  000DFE  968A               	bcf	3978,3,c	;volatile
  3166  000E00  0012               	return	
  3167  000E02                     l3122:
  3168                           
  3169                           ;messages.c: 274: }
  3170                           ;messages.c: 275: Delay1KTCYx(10);
  3171  000E02  0100               	movlb	0	; () banked
  3172  000E04  6F94               	movwf	??_block_on_To_msgqueues& (0+255),b
  3173  000E06  0E0A               	movlw	10
  3174  000E08  0100               	movlb	0	; () banked
  3175  000E0A  0100               	movlb	0	; () banked
  3176  000E0C  6F8E               	movwf	?_Delay1KTCYx& (0+255),b
  3177  000E0E  0100               	movlb	0	; () banked
  3178  000E10  5194               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3179  000E12  ECD1  F00B         	call	_Delay1KTCYx	;wreg free
  3180                           
  3181                           ;messages.c: 276: LATBbits.LATB3 = !LATBbits.LATB3;
  3182  000E16  B68A               	btfsc	3978,3,c	;volatile
  3183  000E18  D002               	goto	u2130
  3184  000E1A  0E01               	movlw	1
  3185  000E1C  D001               	goto	u2136
  3186  000E1E                     u2130:
  3187  000E1E  0E00               	movlw	0
  3188  000E20                     u2136:
  3189  000E20  0100               	movlb	0	; () banked
  3190  000E22  6F94               	movwf	??_block_on_To_msgqueues& (0+255),b
  3191  000E24  0100               	movlb	0	; () banked
  3192  000E26  4794               	rlncf	??_block_on_To_msgqueues& (0+255),f,b
  3193  000E28  4794               	rlncf	??_block_on_To_msgqueues& (0+255),f,b
  3194  000E2A  4794               	rlncf	??_block_on_To_msgqueues& (0+255),f,b
  3195  000E2C  508A               	movf	3978,w,c	;volatile
  3196  000E2E  0100               	movlb	0	; () banked
  3197  000E30  1994               	xorwf	??_block_on_To_msgqueues& (0+255),w,b
  3198  000E32  0BF7               	andlw	-9
  3199  000E34  1994               	xorwf	??_block_on_To_msgqueues& (0+255),w,b
  3200  000E36  6E8A               	movwf	3978,c	;volatile
  3201  000E38  D7B8               	goto	l3106
  3202  000E3A                     __end_of_block_on_To_msgqueues:
  3203                           	opt stack 0
  3204                           tblptru	equ	0xFF8
  3205                           tblptrh	equ	0xFF7
  3206                           tblptrl	equ	0xFF6
  3207                           tablat	equ	0xFF5
  3208                           prodh	equ	0xFF4
  3209                           prodl	equ	0xFF3
  3210                           postinc0	equ	0xFEE
  3211                           wreg	equ	0xFE8
  3212                           indf1	equ	0xFE7
  3213                           fsr1h	equ	0xFE2
  3214                           fsr1l	equ	0xFE1
  3215                           indf2	equ	0xFDF
  3216                           fsr2h	equ	0xFDA
  3217                           fsr2l	equ	0xFD9
  3218                           status	equ	0xFD8
  3219                           
  3220 ;; *************** function _Delay1KTCYx *****************
  3221 ;; Defined at:
  3222 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic18\d1ktcyx.c"
  3223 ;; Parameters:    Size  Location     Type
  3224 ;;  unit            1   14[BANK0 ] unsigned char 
  3225 ;; Auto vars:     Size  Location     Type
  3226 ;;		None
  3227 ;; Return value:  Size  Location     Type
  3228 ;;		None               void
  3229 ;; Registers used:
  3230 ;;		wreg
  3231 ;; Tracked objects:
  3232 ;;		On entry : 0/0
  3233 ;;		On exit  : 0/0
  3234 ;;		Unchanged: 0/0
  3235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3236 ;;      Params:         0       1       0       0       0
  3237 ;;      Locals:         0       0       0       0       0
  3238 ;;      Temps:          0       0       0       0       0
  3239 ;;      Totals:         0       1       0       0       0
  3240 ;;Total ram usage:        1 bytes
  3241 ;; Hardware stack levels used:    1
  3242 ;; Hardware stack levels required when called:    8
  3243 ;; This function calls:
  3244 ;;		Nothing
  3245 ;; This function is called by:
  3246 ;;		_block_on_To_msgqueues
  3247 ;; This function uses a non-reentrant model
  3248 ;;
  3249                           
  3250                           	psect	text13
  3251  0017A2                     __ptext13:
  3252                           	opt stack 0
  3253  0017A2                     _Delay1KTCYx:
  3254                           	opt stack 20
  3255  0017A2                     l782:
  3256  0017A2  0EFA               	movlw	250
  3257  0017A4                     u2437:
  3258  0017A4  F000               	nop	
  3259  0017A6  2EE8               	decfsz	wreg,f,c
  3260  0017A8  D7FD               	goto	u2437
  3261  0017AA  0100               	movlb	0	; () banked
  3262  0017AC  0100               	movlb	0	; () banked
  3263  0017AE  2F8E               	decfsz	Delay1KTCYx@unit& (0+255),f,b
  3264  0017B0  D7F8               	goto	l782
  3265  0017B2  0012               	return	
  3266  0017B4                     __end_of_Delay1KTCYx:
  3267                           	opt stack 0
  3268                           tblptru	equ	0xFF8
  3269                           tblptrh	equ	0xFF7
  3270                           tblptrl	equ	0xFF6
  3271                           tablat	equ	0xFF5
  3272                           prodh	equ	0xFF4
  3273                           prodl	equ	0xFF3
  3274                           postinc0	equ	0xFEE
  3275                           wreg	equ	0xFE8
  3276                           indf1	equ	0xFE7
  3277                           fsr1h	equ	0xFE2
  3278                           fsr1l	equ	0xFE1
  3279                           indf2	equ	0xFDF
  3280                           fsr2h	equ	0xFDA
  3281                           fsr2l	equ	0xFD9
  3282                           status	equ	0xFD8
  3283                           
  3284 ;; *************** function _check_msg *****************
  3285 ;; Defined at:
  3286 ;;		line 222 in file "../src/messages.c"
  3287 ;; Parameters:    Size  Location     Type
  3288 ;;  qptr            2   14[BANK0 ] PTR struct __msg_queue
  3289 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3290 ;; Auto vars:     Size  Location     Type
  3291 ;;		None
  3292 ;; Return value:  Size  Location     Type
  3293 ;;                  1    wreg      unsigned char 
  3294 ;; Registers used:
  3295 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3296 ;; Tracked objects:
  3297 ;;		On entry : 0/0
  3298 ;;		On exit  : 0/0
  3299 ;;		Unchanged: 0/0
  3300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3301 ;;      Params:         0       2       0       0       0
  3302 ;;      Locals:         0       0       0       0       0
  3303 ;;      Temps:          0       1       0       0       0
  3304 ;;      Totals:         0       3       0       0       0
  3305 ;;Total ram usage:        3 bytes
  3306 ;; Hardware stack levels used:    1
  3307 ;; Hardware stack levels required when called:    8
  3308 ;; This function calls:
  3309 ;;		Nothing
  3310 ;; This function is called by:
  3311 ;;		_block_on_To_msgqueues
  3312 ;; This function uses a non-reentrant model
  3313 ;;
  3314                           
  3315                           	psect	text14
  3316  001582                     __ptext14:
  3317                           	opt stack 0
  3318  001582                     _check_msg:
  3319                           	opt stack 20
  3320                           
  3321                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
  3322                           
  3323                           ; BSR set to: 0
  3324                           ;incstack = 0
  3325                           ;incstack = 0
  3326  001582  0100               	movlb	0	; () banked
  3327  001584  EE20 F035          	lfsr	2,53
  3328  001588  0100               	movlb	0	; () banked
  3329  00158A  518E               	movf	check_msg@qptr& (0+255),w,b
  3330  00158C  26D9               	addwf	fsr2l,f,c
  3331  00158E  0100               	movlb	0	; () banked
  3332  001590  518F               	movf	(check_msg@qptr+1)& (0+255),w,b
  3333  001592  22DA               	addwfc	fsr2h,f,c
  3334  001594  50DF               	movf	indf2,w,c
  3335  001596  0100               	movlb	0	; () banked
  3336  001598  6F90               	movwf	??_check_msg& (0+255),b
  3337  00159A  0100               	movlb	0	; () banked
  3338  00159C  5190               	movf	??_check_msg& (0+255),w,b
  3339  00159E  0D0D               	mullw	13
  3340  0015A0  50F3               	movf	prodl,w,c
  3341  0015A2  0100               	movlb	0	; () banked
  3342  0015A4  0100               	movlb	0	; () banked
  3343  0015A6  258E               	addwf	check_msg@qptr& (0+255),w,b
  3344  0015A8  6ED9               	movwf	fsr2l,c
  3345  0015AA  50F4               	movf	prodh,w,c
  3346  0015AC  0100               	movlb	0	; () banked
  3347  0015AE  0100               	movlb	0	; () banked
  3348  0015B0  218F               	addwfc	(check_msg@qptr+1)& (0+255),w,b
  3349  0015B2  6EDA               	movwf	fsr2h,c
  3350  0015B4  50DF               	movf	indf2,w,c
  3351  0015B6  0012               	return	
  3352  0015B8                     __end_of_check_msg:
  3353                           	opt stack 0
  3354                           tblptru	equ	0xFF8
  3355                           tblptrh	equ	0xFF7
  3356                           tblptrl	equ	0xFF6
  3357                           tablat	equ	0xFF5
  3358                           prodh	equ	0xFF4
  3359                           prodl	equ	0xFF3
  3360                           postinc0	equ	0xFEE
  3361                           wreg	equ	0xFE8
  3362                           indf1	equ	0xFE7
  3363                           fsr1h	equ	0xFE2
  3364                           fsr1l	equ	0xFE1
  3365                           indf2	equ	0xFDF
  3366                           fsr2h	equ	0xFDA
  3367                           fsr2l	equ	0xFD9
  3368                           status	equ	0xFD8
  3369                           
  3370 ;; *************** function _in_main *****************
  3371 ;; Defined at:
  3372 ;;		line 43 in file "../src/interrupts.c"
  3373 ;; Parameters:    Size  Location     Type
  3374 ;;		None
  3375 ;; Auto vars:     Size  Location     Type
  3376 ;;		None
  3377 ;; Return value:  Size  Location     Type
  3378 ;;                  2   18[BANK0 ] int 
  3379 ;; Registers used:
  3380 ;;		wreg, status,2, status,0, cstack
  3381 ;; Tracked objects:
  3382 ;;		On entry : 0/0
  3383 ;;		On exit  : 0/0
  3384 ;;		Unchanged: 0/0
  3385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3386 ;;      Params:         0       2       0       0       0
  3387 ;;      Locals:         0       0       0       0       0
  3388 ;;      Temps:          0       0       0       0       0
  3389 ;;      Totals:         0       2       0       0       0
  3390 ;;Total ram usage:        2 bytes
  3391 ;; Hardware stack levels used:    1
  3392 ;; Hardware stack levels required when called:   10
  3393 ;; This function calls:
  3394 ;;		_in_high_int
  3395 ;;		_in_low_int
  3396 ;; This function is called by:
  3397 ;;		_block_on_To_msgqueues
  3398 ;; This function uses a non-reentrant model
  3399 ;;
  3400                           
  3401                           	psect	text15
  3402  0014C4                     __ptext15:
  3403                           	opt stack 0
  3404  0014C4                     _in_main:
  3405                           	opt stack 18
  3406                           
  3407                           ;interrupts.c: 44: if ((!in_low_int()) && (!in_high_int())) {
  3408                           
  3409                           ; BSR set to: 0
  3410                           ;incstack = 0
  3411                           ;incstack = 0
  3412  0014C4  EC3F  F00A         	call	_in_low_int	;wreg free
  3413  0014C8  0100               	movlb	0	; () banked
  3414  0014CA  0100               	movlb	0	; () banked
  3415  0014CC  5191               	movf	(?_in_low_int+1)& (0+255),w,b
  3416  0014CE  0100               	movlb	0	; () banked
  3417  0014D0  1190               	iorwf	?_in_low_int& (0+255),w,b
  3418  0014D2  A4D8               	btfss	status,2,c
  3419  0014D4  D011               	goto	l2786
  3420                           
  3421                           ; BSR set to: 0
  3422  0014D6  ECDA  F00B         	call	_in_high_int	;wreg free
  3423  0014DA  0100               	movlb	0	; () banked
  3424  0014DC  0100               	movlb	0	; () banked
  3425  0014DE  518F               	movf	(?_in_high_int+1)& (0+255),w,b
  3426  0014E0  0100               	movlb	0	; () banked
  3427  0014E2  118E               	iorwf	?_in_high_int& (0+255),w,b
  3428  0014E4  A4D8               	btfss	status,2,c
  3429  0014E6  D008               	goto	l2786
  3430                           
  3431                           ; BSR set to: 0
  3432                           ;interrupts.c: 45: return (1);
  3433  0014E8  0E00               	movlw	0
  3434  0014EA  0100               	movlb	0	; () banked
  3435  0014EC  0100               	movlb	0	; () banked
  3436  0014EE  6F93               	movwf	(?_in_main+1)& (0+255),b
  3437  0014F0  0E01               	movlw	1
  3438  0014F2  0100               	movlb	0	; () banked
  3439  0014F4  6F92               	movwf	?_in_main& (0+255),b
  3440  0014F6  0012               	return	
  3441  0014F8                     l2786:
  3442                           
  3443                           ; BSR set to: 0
  3444                           ;interrupts.c: 47: return (0);
  3445  0014F8  0E00               	movlw	0
  3446  0014FA  0100               	movlb	0	; () banked
  3447  0014FC  0100               	movlb	0	; () banked
  3448  0014FE  6F93               	movwf	(?_in_main+1)& (0+255),b
  3449  001500  0E00               	movlw	0
  3450  001502  0100               	movlb	0	; () banked
  3451  001504  6F92               	movwf	?_in_main& (0+255),b
  3452  001506  0012               	return	
  3453  001508                     __end_of_in_main:
  3454                           	opt stack 0
  3455                           tblptru	equ	0xFF8
  3456                           tblptrh	equ	0xFF7
  3457                           tblptrl	equ	0xFF6
  3458                           tablat	equ	0xFF5
  3459                           prodh	equ	0xFF4
  3460                           prodl	equ	0xFF3
  3461                           postinc0	equ	0xFEE
  3462                           wreg	equ	0xFE8
  3463                           indf1	equ	0xFE7
  3464                           fsr1h	equ	0xFE2
  3465                           fsr1l	equ	0xFE1
  3466                           indf2	equ	0xFDF
  3467                           fsr2h	equ	0xFDA
  3468                           fsr2l	equ	0xFD9
  3469                           status	equ	0xFD8
  3470                           
  3471 ;; *************** function _in_low_int *****************
  3472 ;; Defined at:
  3473 ;;		line 33 in file "../src/interrupts.c"
  3474 ;; Parameters:    Size  Location     Type
  3475 ;;		None
  3476 ;; Auto vars:     Size  Location     Type
  3477 ;;		None
  3478 ;; Return value:  Size  Location     Type
  3479 ;;                  2   16[BANK0 ] int 
  3480 ;; Registers used:
  3481 ;;		wreg, status,2, status,0, cstack
  3482 ;; Tracked objects:
  3483 ;;		On entry : 0/0
  3484 ;;		On exit  : 0/0
  3485 ;;		Unchanged: 0/0
  3486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3487 ;;      Params:         0       2       0       0       0
  3488 ;;      Locals:         0       0       0       0       0
  3489 ;;      Temps:          0       0       0       0       0
  3490 ;;      Totals:         0       2       0       0       0
  3491 ;;Total ram usage:        2 bytes
  3492 ;; Hardware stack levels used:    1
  3493 ;; Hardware stack levels required when called:    9
  3494 ;; This function calls:
  3495 ;;		_in_high_int
  3496 ;; This function is called by:
  3497 ;;		_in_main
  3498 ;; This function uses a non-reentrant model
  3499 ;;
  3500                           
  3501                           	psect	text16
  3502  00147E                     __ptext16:
  3503                           	opt stack 0
  3504  00147E                     _in_low_int:
  3505                           	opt stack 18
  3506                           
  3507                           ;interrupts.c: 34: if (INTCONbits.GIEL == 1) {
  3508                           
  3509                           ; BSR set to: 0
  3510                           ;incstack = 0
  3511                           ;incstack = 0
  3512  00147E  ACF2               	btfss	intcon,6,c	;volatile
  3513  001480  D008               	goto	l2764
  3514                           
  3515                           ;interrupts.c: 35: return (0);
  3516  001482  0E00               	movlw	0
  3517  001484  0100               	movlb	0	; () banked
  3518  001486  0100               	movlb	0	; () banked
  3519  001488  6F91               	movwf	(?_in_low_int+1)& (0+255),b
  3520  00148A  0E00               	movlw	0
  3521  00148C  0100               	movlb	0	; () banked
  3522  00148E  6F90               	movwf	?_in_low_int& (0+255),b
  3523  001490  0012               	return	
  3524  001492                     l2764:
  3525  001492  ECDA  F00B         	call	_in_high_int	;wreg free
  3526  001496  0100               	movlb	0	; () banked
  3527  001498  0100               	movlb	0	; () banked
  3528  00149A  518F               	movf	(?_in_high_int+1)& (0+255),w,b
  3529  00149C  0100               	movlb	0	; () banked
  3530  00149E  118E               	iorwf	?_in_high_int& (0+255),w,b
  3531  0014A0  B4D8               	btfsc	status,2,c
  3532  0014A2  D008               	goto	l2772
  3533                           
  3534                           ; BSR set to: 0
  3535                           ;interrupts.c: 37: return (0);
  3536  0014A4  0E00               	movlw	0
  3537  0014A6  0100               	movlb	0	; () banked
  3538  0014A8  0100               	movlb	0	; () banked
  3539  0014AA  6F91               	movwf	(?_in_low_int+1)& (0+255),b
  3540  0014AC  0E00               	movlw	0
  3541  0014AE  0100               	movlb	0	; () banked
  3542  0014B0  6F90               	movwf	?_in_low_int& (0+255),b
  3543  0014B2  0012               	return	
  3544  0014B4                     l2772:
  3545                           
  3546                           ; BSR set to: 0
  3547                           ;interrupts.c: 39: return (1);
  3548  0014B4  0E00               	movlw	0
  3549  0014B6  0100               	movlb	0	; () banked
  3550  0014B8  0100               	movlb	0	; () banked
  3551  0014BA  6F91               	movwf	(?_in_low_int+1)& (0+255),b
  3552  0014BC  0E01               	movlw	1
  3553  0014BE  0100               	movlb	0	; () banked
  3554  0014C0  6F90               	movwf	?_in_low_int& (0+255),b
  3555  0014C2  0012               	return	
  3556  0014C4                     __end_of_in_low_int:
  3557                           	opt stack 0
  3558                           tblptru	equ	0xFF8
  3559                           tblptrh	equ	0xFF7
  3560                           tblptrl	equ	0xFF6
  3561                           tablat	equ	0xFF5
  3562                           prodh	equ	0xFF4
  3563                           prodl	equ	0xFF3
  3564                           intcon	equ	0xFF2
  3565                           postinc0	equ	0xFEE
  3566                           wreg	equ	0xFE8
  3567                           indf1	equ	0xFE7
  3568                           fsr1h	equ	0xFE2
  3569                           fsr1l	equ	0xFE1
  3570                           indf2	equ	0xFDF
  3571                           fsr2h	equ	0xFDA
  3572                           fsr2l	equ	0xFD9
  3573                           status	equ	0xFD8
  3574                           
  3575 ;; *************** function _in_high_int *****************
  3576 ;; Defined at:
  3577 ;;		line 25 in file "../src/interrupts.c"
  3578 ;; Parameters:    Size  Location     Type
  3579 ;;		None
  3580 ;; Auto vars:     Size  Location     Type
  3581 ;;		None
  3582 ;; Return value:  Size  Location     Type
  3583 ;;                  2   14[BANK0 ] int 
  3584 ;; Registers used:
  3585 ;;		wreg, status,2
  3586 ;; Tracked objects:
  3587 ;;		On entry : 0/0
  3588 ;;		On exit  : 0/0
  3589 ;;		Unchanged: 0/0
  3590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3591 ;;      Params:         0       2       0       0       0
  3592 ;;      Locals:         0       0       0       0       0
  3593 ;;      Temps:          0       0       0       0       0
  3594 ;;      Totals:         0       2       0       0       0
  3595 ;;Total ram usage:        2 bytes
  3596 ;; Hardware stack levels used:    1
  3597 ;; Hardware stack levels required when called:    8
  3598 ;; This function calls:
  3599 ;;		Nothing
  3600 ;; This function is called by:
  3601 ;;		_in_low_int
  3602 ;;		_in_main
  3603 ;; This function uses a non-reentrant model
  3604 ;;
  3605                           
  3606                           	psect	text17
  3607  0017B4                     __ptext17:
  3608                           	opt stack 0
  3609  0017B4                     _in_high_int:
  3610                           	opt stack 18
  3611                           
  3612                           ;interrupts.c: 26: return (!INTCONbits.GIEH);
  3613                           
  3614                           ; BSR set to: 0
  3615                           ;incstack = 0
  3616                           ;incstack = 0
  3617  0017B4  0E00               	movlw	0
  3618  0017B6  AEF2               	btfss	intcon,7,c	;volatile
  3619  0017B8  0E01               	movlw	1
  3620  0017BA  0100               	movlb	0	; () banked
  3621  0017BC  0100               	movlb	0	; () banked
  3622  0017BE  6F8E               	movwf	?_in_high_int& (0+255),b
  3623  0017C0  0100               	movlb	0	; () banked
  3624  0017C2  6B8F               	clrf	(?_in_high_int+1)& (0+255),b
  3625  0017C4  0012               	return	
  3626  0017C6                     __end_of_in_high_int:
  3627                           	opt stack 0
  3628                           tblptru	equ	0xFF8
  3629                           tblptrh	equ	0xFF7
  3630                           tblptrl	equ	0xFF6
  3631                           tablat	equ	0xFF5
  3632                           prodh	equ	0xFF4
  3633                           prodl	equ	0xFF3
  3634                           intcon	equ	0xFF2
  3635                           postinc0	equ	0xFEE
  3636                           wreg	equ	0xFE8
  3637                           indf1	equ	0xFE7
  3638                           fsr1h	equ	0xFE2
  3639                           fsr1l	equ	0xFE1
  3640                           indf2	equ	0xFDF
  3641                           fsr2h	equ	0xFDA
  3642                           fsr2l	equ	0xFD9
  3643                           status	equ	0xFD8
  3644                           
  3645 ;; *************** function _OpenUSART *****************
  3646 ;; Defined at:
  3647 ;;		line 74 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic18\plib\USART\uopen.c"
  3648 ;; Parameters:    Size  Location     Type
  3649 ;;  config          1   14[BANK0 ] unsigned char 
  3650 ;;  spbrg           2   15[BANK0 ] unsigned int 
  3651 ;; Auto vars:     Size  Location     Type
  3652 ;;		None
  3653 ;; Return value:  Size  Location     Type
  3654 ;;		None               void
  3655 ;; Registers used:
  3656 ;;		wreg, status,2
  3657 ;; Tracked objects:
  3658 ;;		On entry : 0/0
  3659 ;;		On exit  : 0/0
  3660 ;;		Unchanged: 0/0
  3661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3662 ;;      Params:         0       3       0       0       0
  3663 ;;      Locals:         0       0       0       0       0
  3664 ;;      Temps:          0       0       0       0       0
  3665 ;;      Totals:         0       3       0       0       0
  3666 ;;Total ram usage:        3 bytes
  3667 ;; Hardware stack levels used:    1
  3668 ;; Hardware stack levels required when called:    8
  3669 ;; This function calls:
  3670 ;;		Nothing
  3671 ;; This function is called by:
  3672 ;;		_main
  3673 ;; This function uses a non-reentrant model
  3674 ;;
  3675                           
  3676                           	psect	text18
  3677  0010C8                     __ptext18:
  3678                           	opt stack 0
  3679  0010C8                     _OpenUSART:
  3680                           	opt stack 21
  3681                           
  3682                           ; BSR set to: 0
  3683                           ;incstack = 0
  3684                           ;incstack = 0
  3685  0010C8  0E00               	movlw	0
  3686  0010CA  6EAC               	movwf	4012,c	;volatile
  3687  0010CC  0E00               	movlw	0
  3688  0010CE  6EAB               	movwf	4011,c	;volatile
  3689  0010D0  0100               	movlb	0	; () banked
  3690  0010D2  0100               	movlb	0	; () banked
  3691  0010D4  B18E               	btfsc	OpenUSART@config& (0+255),0,b
  3692                           
  3693                           ; BSR set to: 0
  3694  0010D6  88AC               	bsf	4012,4,c	;volatile
  3695                           
  3696                           ; BSR set to: 0
  3697  0010D8  0100               	movlb	0	; () banked
  3698  0010DA  0100               	movlb	0	; () banked
  3699  0010DC  A38E               	btfss	OpenUSART@config& (0+255),1,b
  3700  0010DE  D002               	goto	l525
  3701                           
  3702                           ; BSR set to: 0
  3703  0010E0  8CAC               	bsf	4012,6,c	;volatile
  3704  0010E2  8CAB               	bsf	4011,6,c	;volatile
  3705  0010E4                     l525:
  3706                           
  3707                           ; BSR set to: 0
  3708  0010E4  0100               	movlb	0	; () banked
  3709  0010E6  0100               	movlb	0	; () banked
  3710  0010E8  B58E               	btfsc	OpenUSART@config& (0+255),2,b
  3711                           
  3712                           ; BSR set to: 0
  3713  0010EA  8EAC               	bsf	4012,7,c	;volatile
  3714                           
  3715                           ; BSR set to: 0
  3716  0010EC  0100               	movlb	0	; () banked
  3717  0010EE  0100               	movlb	0	; () banked
  3718  0010F0  A78E               	btfss	OpenUSART@config& (0+255),3,b
  3719  0010F2  D002               	goto	l527
  3720                           
  3721                           ; BSR set to: 0
  3722  0010F4  88AB               	bsf	4011,4,c	;volatile
  3723  0010F6  D001               	goto	l528
  3724  0010F8                     l527:
  3725                           
  3726                           ; BSR set to: 0
  3727  0010F8  8AAB               	bsf	4011,5,c	;volatile
  3728  0010FA                     l528:
  3729                           
  3730                           ; BSR set to: 0
  3731  0010FA  0100               	movlb	0	; () banked
  3732  0010FC  0100               	movlb	0	; () banked
  3733  0010FE  B98E               	btfsc	OpenUSART@config& (0+255),4,b
  3734                           
  3735                           ; BSR set to: 0
  3736  001100  84AC               	bsf	4012,2,c	;volatile
  3737                           
  3738                           ; BSR set to: 0
  3739  001102  989E               	bcf	3998,4,c	;volatile
  3740  001104  0100               	movlb	0	; () banked
  3741  001106  0100               	movlb	0	; () banked
  3742  001108  BB8E               	btfsc	OpenUSART@config& (0+255),5,b
  3743                           
  3744                           ; BSR set to: 0
  3745  00110A  86AB               	bsf	4011,3,c	;volatile
  3746                           
  3747                           ; BSR set to: 0
  3748  00110C  0100               	movlb	0	; () banked
  3749  00110E  0100               	movlb	0	; () banked
  3750  001110  AD8E               	btfss	OpenUSART@config& (0+255),6,b
  3751  001112  D002               	goto	l531
  3752                           
  3753                           ; BSR set to: 0
  3754  001114  8A9D               	bsf	3997,5,c	;volatile
  3755  001116  D001               	goto	l532
  3756  001118                     l531:
  3757                           
  3758                           ; BSR set to: 0
  3759  001118  9A9D               	bcf	3997,5,c	;volatile
  3760  00111A                     l532:
  3761                           
  3762                           ; BSR set to: 0
  3763  00111A  9A9E               	bcf	3998,5,c	;volatile
  3764  00111C  0100               	movlb	0	; () banked
  3765  00111E  0100               	movlb	0	; () banked
  3766  001120  AF8E               	btfss	OpenUSART@config& (0+255),7,b
  3767  001122  D002               	goto	l533
  3768                           
  3769                           ; BSR set to: 0
  3770  001124  889D               	bsf	3997,4,c	;volatile
  3771  001126  D001               	goto	l534
  3772  001128                     l533:
  3773                           
  3774                           ; BSR set to: 0
  3775  001128  989D               	bcf	3997,4,c	;volatile
  3776  00112A                     l534:
  3777                           
  3778                           ; BSR set to: 0
  3779  00112A  C08F  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  3780                           
  3781                           ; BSR set to: 0
  3782  00112E  0100               	movlb	0	; () banked
  3783  001130  0100               	movlb	0	; () banked
  3784  001132  5190               	movf	(OpenUSART@spbrg+1)& (0+255),w,b
  3785  001134  6EB0               	movwf	4016,c	;volatile
  3786                           
  3787                           ; BSR set to: 0
  3788  001136  8AAC               	bsf	4012,5,c	;volatile
  3789                           
  3790                           ; BSR set to: 0
  3791  001138  8EAB               	bsf	4011,7,c	;volatile
  3792                           
  3793                           ; BSR set to: 0
  3794  00113A  9C94               	bcf	3988,6,c	;volatile
  3795                           
  3796                           ; BSR set to: 0
  3797  00113C  8E94               	bsf	3988,7,c	;volatile
  3798                           
  3799                           ; BSR set to: 0
  3800  00113E  A8AC               	btfss	4012,4,c	;volatile
  3801  001140  0012               	return	
  3802                           
  3803                           ; BSR set to: 0
  3804  001142  BEAC               	btfsc	4012,7,c	;volatile
  3805  001144  0012               	return	
  3806                           
  3807                           ; BSR set to: 0
  3808  001146  8C94               	bsf	3988,6,c	;volatile
  3809  001148  0012               	return	
  3810  00114A                     __end_of_OpenUSART:
  3811                           	opt stack 0
  3812                           tblptru	equ	0xFF8
  3813                           tblptrh	equ	0xFF7
  3814                           tblptrl	equ	0xFF6
  3815                           tablat	equ	0xFF5
  3816                           prodh	equ	0xFF4
  3817                           prodl	equ	0xFF3
  3818                           intcon	equ	0xFF2
  3819                           postinc0	equ	0xFEE
  3820                           wreg	equ	0xFE8
  3821                           indf1	equ	0xFE7
  3822                           fsr1h	equ	0xFE2
  3823                           fsr1l	equ	0xFE1
  3824                           indf2	equ	0xFDF
  3825                           fsr2h	equ	0xFDA
  3826                           fsr2l	equ	0xFD9
  3827                           status	equ	0xFD8
  3828                           
  3829 ;; *************** function _OpenTimer1 *****************
  3830 ;; Defined at:
  3831 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic18\plib\Timers\t1open.c"
  3832 ;; Parameters:    Size  Location     Type
  3833 ;;  config          1   14[BANK0 ] unsigned char 
  3834 ;; Auto vars:     Size  Location     Type
  3835 ;;		None
  3836 ;; Return value:  Size  Location     Type
  3837 ;;		None               void
  3838 ;; Registers used:
  3839 ;;		wreg, status,2, status,0
  3840 ;; Tracked objects:
  3841 ;;		On entry : 0/0
  3842 ;;		On exit  : 0/0
  3843 ;;		Unchanged: 0/0
  3844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3845 ;;      Params:         0       1       0       0       0
  3846 ;;      Locals:         0       0       0       0       0
  3847 ;;      Temps:          0       0       0       0       0
  3848 ;;      Totals:         0       1       0       0       0
  3849 ;;Total ram usage:        1 bytes
  3850 ;; Hardware stack levels used:    1
  3851 ;; Hardware stack levels required when called:    8
  3852 ;; This function calls:
  3853 ;;		Nothing
  3854 ;; This function is called by:
  3855 ;;		_main
  3856 ;; This function uses a non-reentrant model
  3857 ;;
  3858                           
  3859                           	psect	text19
  3860  0015B8                     __ptext19:
  3861                           	opt stack 0
  3862  0015B8                     _OpenTimer1:
  3863                           	opt stack 21
  3864                           
  3865                           ; BSR set to: 0
  3866                           ;incstack = 0
  3867                           ;incstack = 0
  3868  0015B8  0100               	movlb	0	; () banked
  3869  0015BA  0100               	movlb	0	; () banked
  3870  0015BC  518E               	movf	OpenTimer1@config& (0+255),w,b
  3871  0015BE  0B7E               	andlw	126
  3872  0015C0  6ECD               	movwf	4045,c	;volatile
  3873                           
  3874                           ; BSR set to: 0
  3875  0015C2  0100               	movlb	0	; () banked
  3876  0015C4  0100               	movlb	0	; () banked
  3877  0015C6  AD8E               	btfss	OpenTimer1@config& (0+255),6,b
  3878  0015C8  D002               	goto	l497
  3879                           
  3880                           ; BSR set to: 0
  3881  0015CA  8ECD               	bsf	4045,7,c	;volatile
  3882  0015CC  D001               	goto	l3056
  3883  0015CE                     l497:
  3884                           
  3885                           ; BSR set to: 0
  3886  0015CE  9ECD               	bcf	4045,7,c	;volatile
  3887  0015D0                     l3056:
  3888                           
  3889                           ; BSR set to: 0
  3890  0015D0  0E00               	movlw	0
  3891  0015D2  6ECF               	movwf	4047,c	;volatile
  3892  0015D4  0E00               	movlw	0
  3893  0015D6  6ECE               	movwf	4046,c	;volatile
  3894                           
  3895                           ; BSR set to: 0
  3896  0015D8  909E               	bcf	3998,0,c	;volatile
  3897                           
  3898                           ; BSR set to: 0
  3899  0015DA  0100               	movlb	0	; () banked
  3900  0015DC  0100               	movlb	0	; () banked
  3901  0015DE  AF8E               	btfss	OpenTimer1@config& (0+255),7,b
  3902  0015E0  D002               	goto	l499
  3903                           
  3904                           ; BSR set to: 0
  3905  0015E2  809D               	bsf	3997,0,c	;volatile
  3906  0015E4  D001               	goto	l500
  3907  0015E6                     l499:
  3908                           
  3909                           ; BSR set to: 0
  3910  0015E6  909D               	bcf	3997,0,c	;volatile
  3911  0015E8                     l500:
  3912                           
  3913                           ; BSR set to: 0
  3914  0015E8  80CD               	bsf	4045,0,c	;volatile
  3915                           
  3916                           ; BSR set to: 0
  3917  0015EA  0012               	return	
  3918  0015EC                     __end_of_OpenTimer1:
  3919                           	opt stack 0
  3920                           tblptru	equ	0xFF8
  3921                           tblptrh	equ	0xFF7
  3922                           tblptrl	equ	0xFF6
  3923                           tablat	equ	0xFF5
  3924                           prodh	equ	0xFF4
  3925                           prodl	equ	0xFF3
  3926                           intcon	equ	0xFF2
  3927                           postinc0	equ	0xFEE
  3928                           wreg	equ	0xFE8
  3929                           indf1	equ	0xFE7
  3930                           fsr1h	equ	0xFE2
  3931                           fsr1l	equ	0xFE1
  3932                           indf2	equ	0xFDF
  3933                           fsr2h	equ	0xFDA
  3934                           fsr2l	equ	0xFD9
  3935                           status	equ	0xFD8
  3936                           
  3937 ;; *************** function _init_queues *****************
  3938 ;; Defined at:
  3939 ;;		line 194 in file "../src/messages.c"
  3940 ;; Parameters:    Size  Location     Type
  3941 ;;		None
  3942 ;; Auto vars:     Size  Location     Type
  3943 ;;		None
  3944 ;; Return value:  Size  Location     Type
  3945 ;;		None               void
  3946 ;; Registers used:
  3947 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3948 ;; Tracked objects:
  3949 ;;		On entry : 0/0
  3950 ;;		On exit  : 0/0
  3951 ;;		Unchanged: 0/0
  3952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3953 ;;      Params:         0       0       0       0       0
  3954 ;;      Locals:         0       0       0       0       0
  3955 ;;      Temps:          0       1       0       0       0
  3956 ;;      Totals:         0       1       0       0       0
  3957 ;;Total ram usage:        1 bytes
  3958 ;; Hardware stack levels used:    1
  3959 ;; Hardware stack levels required when called:    9
  3960 ;; This function calls:
  3961 ;;		_init_queue
  3962 ;; This function is called by:
  3963 ;;		_main
  3964 ;; This function uses a non-reentrant model
  3965 ;;
  3966                           
  3967                           	psect	text20
  3968  001328                     __ptext20:
  3969                           	opt stack 0
  3970  001328                     _init_queues:
  3971                           	opt stack 20
  3972                           
  3973                           ;messages.c: 195: MQ_Main_Willing_to_block = 0;
  3974                           
  3975                           ; BSR set to: 0
  3976                           ;incstack = 0
  3977                           ;incstack = 0
  3978  001328  0100               	movlb	0	; () banked
  3979  00132A  6F92               	movwf	??_init_queues& (0+255),b
  3980  00132C  0E00               	movlw	0
  3981  00132E  6E52               	movwf	_MQ_Main_Willing_to_block,c
  3982  001330  0100               	movlb	0	; () banked
  3983  001332  5192               	movf	??_init_queues& (0+255),w,b
  3984                           
  3985                           ; BSR set to: 0
  3986                           ;messages.c: 196: init_queue(&ToMainLow_MQ);
  3987  001334  0101               	movlb	1	; () banked
  3988  001336  0E01               	movlw	high _ToMainLow_MQ
  3989  001338  0100               	movlb	0	; () banked
  3990  00133A  0100               	movlb	0	; () banked
  3991  00133C  6F8F               	movwf	(?_init_queue+1)& (0+255),b
  3992  00133E  0101               	movlb	1	; () banked
  3993  001340  0E9E               	movlw	low _ToMainLow_MQ
  3994  001342  0100               	movlb	0	; () banked
  3995  001344  6F8E               	movwf	?_init_queue& (0+255),b
  3996  001346  ECE4  F008         	call	_init_queue	;wreg free
  3997                           
  3998                           ;messages.c: 197: init_queue(&ToMainHigh_MQ);
  3999  00134A  0101               	movlb	1	; () banked
  4000  00134C  0E01               	movlw	high _ToMainHigh_MQ
  4001  00134E  0100               	movlb	0	; () banked
  4002  001350  0100               	movlb	0	; () banked
  4003  001352  6F8F               	movwf	(?_init_queue+1)& (0+255),b
  4004  001354  0101               	movlb	1	; () banked
  4005  001356  0E68               	movlw	low _ToMainHigh_MQ
  4006  001358  0100               	movlb	0	; () banked
  4007  00135A  6F8E               	movwf	?_init_queue& (0+255),b
  4008  00135C  ECE4  F008         	call	_init_queue	;wreg free
  4009                           
  4010                           ;messages.c: 198: init_queue(&FromMainLow_MQ);
  4011  001360  0101               	movlb	1	; () banked
  4012  001362  0E01               	movlw	high _FromMainLow_MQ
  4013  001364  0100               	movlb	0	; () banked
  4014  001366  0100               	movlb	0	; () banked
  4015  001368  6F8F               	movwf	(?_init_queue+1)& (0+255),b
  4016  00136A  0101               	movlb	1	; () banked
  4017  00136C  0E32               	movlw	low _FromMainLow_MQ
  4018  00136E  0100               	movlb	0	; () banked
  4019  001370  6F8E               	movwf	?_init_queue& (0+255),b
  4020  001372  ECE4  F008         	call	_init_queue	;wreg free
  4021                           
  4022                           ;messages.c: 199: init_queue(&FromMainHigh_MQ);
  4023  001376  0102               	movlb	2	; () banked
  4024  001378  0E02               	movlw	high _FromMainHigh_MQ
  4025  00137A  0100               	movlb	0	; () banked
  4026  00137C  0100               	movlb	0	; () banked
  4027  00137E  6F8F               	movwf	(?_init_queue+1)& (0+255),b
  4028  001380  0102               	movlb	2	; () banked
  4029  001382  0E48               	movlw	low _FromMainHigh_MQ
  4030  001384  0100               	movlb	0	; () banked
  4031  001386  6F8E               	movwf	?_init_queue& (0+255),b
  4032  001388  ECE4  F008         	call	_init_queue	;wreg free
  4033  00138C  0012               	return	
  4034  00138E                     __end_of_init_queues:
  4035                           	opt stack 0
  4036                           tblptru	equ	0xFF8
  4037                           tblptrh	equ	0xFF7
  4038                           tblptrl	equ	0xFF6
  4039                           tablat	equ	0xFF5
  4040                           prodh	equ	0xFF4
  4041                           prodl	equ	0xFF3
  4042                           intcon	equ	0xFF2
  4043                           postinc0	equ	0xFEE
  4044                           wreg	equ	0xFE8
  4045                           indf1	equ	0xFE7
  4046                           fsr1h	equ	0xFE2
  4047                           fsr1l	equ	0xFE1
  4048                           indf2	equ	0xFDF
  4049                           fsr2h	equ	0xFDA
  4050                           fsr2l	equ	0xFD9
  4051                           status	equ	0xFD8
  4052                           
  4053 ;; *************** function _init_queue *****************
  4054 ;; Defined at:
  4055 ;;		line 14 in file "../src/messages.c"
  4056 ;; Parameters:    Size  Location     Type
  4057 ;;  qptr            2   14[BANK0 ] PTR struct __msg_queue
  4058 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4059 ;; Auto vars:     Size  Location     Type
  4060 ;;  i               1   17[BANK0 ] unsigned char 
  4061 ;; Return value:  Size  Location     Type
  4062 ;;		None               void
  4063 ;; Registers used:
  4064 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4065 ;; Tracked objects:
  4066 ;;		On entry : 0/0
  4067 ;;		On exit  : 0/0
  4068 ;;		Unchanged: 0/0
  4069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4070 ;;      Params:         0       2       0       0       0
  4071 ;;      Locals:         0       1       0       0       0
  4072 ;;      Temps:          0       1       0       0       0
  4073 ;;      Totals:         0       4       0       0       0
  4074 ;;Total ram usage:        4 bytes
  4075 ;; Hardware stack levels used:    1
  4076 ;; Hardware stack levels required when called:    8
  4077 ;; This function calls:
  4078 ;;		Nothing
  4079 ;; This function is called by:
  4080 ;;		_init_queues
  4081 ;; This function uses a non-reentrant model
  4082 ;;
  4083                           
  4084                           	psect	text21
  4085  0011C8                     __ptext21:
  4086                           	opt stack 0
  4087  0011C8                     _init_queue:
  4088                           	opt stack 20
  4089                           
  4090                           ;messages.c: 15: unsigned char i;
  4091                           ;messages.c: 17: qptr->cur_write_ind = 0;
  4092                           
  4093                           ;incstack = 0
  4094                           ;incstack = 0
  4095  0011C8  0100               	movlb	0	; () banked
  4096  0011CA  EE20 F034          	lfsr	2,52
  4097  0011CE  0100               	movlb	0	; () banked
  4098  0011D0  518E               	movf	init_queue@qptr& (0+255),w,b
  4099  0011D2  26D9               	addwf	fsr2l,f,c
  4100  0011D4  0100               	movlb	0	; () banked
  4101  0011D6  518F               	movf	(init_queue@qptr+1)& (0+255),w,b
  4102  0011D8  22DA               	addwfc	fsr2h,f,c
  4103  0011DA  0E00               	movlw	0
  4104  0011DC  6EDF               	movwf	indf2,c
  4105                           
  4106                           ;messages.c: 18: qptr->cur_read_ind = 0;
  4107  0011DE  0100               	movlb	0	; () banked
  4108  0011E0  EE20 F035          	lfsr	2,53
  4109  0011E4  0100               	movlb	0	; () banked
  4110  0011E6  518E               	movf	init_queue@qptr& (0+255),w,b
  4111  0011E8  26D9               	addwf	fsr2l,f,c
  4112  0011EA  0100               	movlb	0	; () banked
  4113  0011EC  518F               	movf	(init_queue@qptr+1)& (0+255),w,b
  4114  0011EE  22DA               	addwfc	fsr2h,f,c
  4115  0011F0  0E00               	movlw	0
  4116  0011F2  6EDF               	movwf	indf2,c
  4117                           
  4118                           ; BSR set to: 0
  4119                           ;messages.c: 19: for (i = 0; i < 4; i++) {
  4120  0011F4  0100               	movlb	0	; () banked
  4121  0011F6  6F90               	movwf	??_init_queue& (0+255),b
  4122  0011F8  0E00               	movlw	0
  4123  0011FA  0100               	movlb	0	; () banked
  4124  0011FC  0100               	movlb	0	; () banked
  4125  0011FE  6F91               	movwf	init_queue@i& (0+255),b
  4126  001200  0100               	movlb	0	; () banked
  4127  001202  5190               	movf	??_init_queue& (0+255),w,b
  4128                           
  4129                           ; BSR set to: 0
  4130  001204  0E03               	movlw	3
  4131  001206  0100               	movlb	0	; () banked
  4132  001208  0100               	movlb	0	; () banked
  4133  00120A  6591               	cpfsgt	init_queue@i& (0+255),b
  4134  00120C  D001               	goto	l3206
  4135  00120E  0012               	return	
  4136  001210                     l3206:
  4137                           
  4138                           ; BSR set to: 0
  4139                           ;messages.c: 20: qptr->queue[i].full = 0;
  4140  001210  0100               	movlb	0	; () banked
  4141  001212  0100               	movlb	0	; () banked
  4142  001214  5191               	movf	init_queue@i& (0+255),w,b
  4143  001216  0D0D               	mullw	13
  4144  001218  50F3               	movf	prodl,w,c
  4145  00121A  0100               	movlb	0	; () banked
  4146  00121C  0100               	movlb	0	; () banked
  4147  00121E  258E               	addwf	init_queue@qptr& (0+255),w,b
  4148  001220  6ED9               	movwf	fsr2l,c
  4149  001222  50F4               	movf	prodh,w,c
  4150  001224  0100               	movlb	0	; () banked
  4151  001226  0100               	movlb	0	; () banked
  4152  001228  218F               	addwfc	(init_queue@qptr+1)& (0+255),w,b
  4153  00122A  6EDA               	movwf	fsr2h,c
  4154  00122C  0E00               	movlw	0
  4155  00122E  6EDF               	movwf	indf2,c
  4156                           
  4157                           ; BSR set to: 0
  4158  001230  0100               	movlb	0	; () banked
  4159  001232  0100               	movlb	0	; () banked
  4160  001234  2B91               	incf	init_queue@i& (0+255),f,b
  4161                           
  4162                           ; BSR set to: 0
  4163  001236  0E03               	movlw	3
  4164  001238  0100               	movlb	0	; () banked
  4165  00123A  0100               	movlb	0	; () banked
  4166  00123C  6591               	cpfsgt	init_queue@i& (0+255),b
  4167  00123E  D7E8               	goto	l3206
  4168  001240  0012               	return	
  4169  001242                     __end_of_init_queue:
  4170                           	opt stack 0
  4171                           tblptru	equ	0xFF8
  4172                           tblptrh	equ	0xFF7
  4173                           tblptrl	equ	0xFF6
  4174                           tablat	equ	0xFF5
  4175                           prodh	equ	0xFF4
  4176                           prodl	equ	0xFF3
  4177                           intcon	equ	0xFF2
  4178                           postinc0	equ	0xFEE
  4179                           wreg	equ	0xFE8
  4180                           indf1	equ	0xFE7
  4181                           fsr1h	equ	0xFE2
  4182                           fsr1l	equ	0xFE1
  4183                           indf2	equ	0xFDF
  4184                           fsr2h	equ	0xFDA
  4185                           fsr2l	equ	0xFD9
  4186                           status	equ	0xFD8
  4187                           
  4188 ;; *************** function _init_timer1_lthread *****************
  4189 ;; Defined at:
  4190 ;;		line 7 in file "../src/timer1_thread.c"
  4191 ;; Parameters:    Size  Location     Type
  4192 ;;  tptr            2   14[BANK0 ] PTR struct __timer1_thre
  4193 ;;		 -> main@t1thread_data(2), 
  4194 ;; Auto vars:     Size  Location     Type
  4195 ;;		None
  4196 ;; Return value:  Size  Location     Type
  4197 ;;		None               void
  4198 ;; Registers used:
  4199 ;;		wreg, fsr2l, fsr2h
  4200 ;; Tracked objects:
  4201 ;;		On entry : 0/0
  4202 ;;		On exit  : 0/0
  4203 ;;		Unchanged: 0/0
  4204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4205 ;;      Params:         0       2       0       0       0
  4206 ;;      Locals:         0       0       0       0       0
  4207 ;;      Temps:          0       0       0       0       0
  4208 ;;      Totals:         0       2       0       0       0
  4209 ;;Total ram usage:        2 bytes
  4210 ;; Hardware stack levels used:    1
  4211 ;; Hardware stack levels required when called:    8
  4212 ;; This function calls:
  4213 ;;		Nothing
  4214 ;; This function is called by:
  4215 ;;		_main
  4216 ;; This function uses a non-reentrant model
  4217 ;;
  4218                           
  4219                           	psect	text22
  4220  0017C6                     __ptext22:
  4221                           	opt stack 0
  4222  0017C6                     _init_timer1_lthread:
  4223                           	opt stack 21
  4224                           
  4225                           ;timer1_thread.c: 8: tptr->msgcount = 0;
  4226                           
  4227                           ; BSR set to: 0
  4228                           ;incstack = 0
  4229                           ;incstack = 0
  4230  0017C6  C08E  FFD9         	movff	init_timer1_lthread@tptr,fsr2l
  4231  0017CA  C08F  FFDA         	movff	init_timer1_lthread@tptr+1,fsr2h
  4232  0017CE  0E00               	movlw	0
  4233  0017D0  6EDE               	movwf	postinc2,c
  4234  0017D2  0E00               	movlw	0
  4235  0017D4  6EDD               	movwf	postdec2,c
  4236  0017D6  0012               	return	
  4237  0017D8                     __end_of_init_timer1_lthread:
  4238                           	opt stack 0
  4239                           tblptru	equ	0xFF8
  4240                           tblptrh	equ	0xFF7
  4241                           tblptrl	equ	0xFF6
  4242                           tablat	equ	0xFF5
  4243                           prodh	equ	0xFF4
  4244                           prodl	equ	0xFF3
  4245                           intcon	equ	0xFF2
  4246                           postinc0	equ	0xFEE
  4247                           wreg	equ	0xFE8
  4248                           indf1	equ	0xFE7
  4249                           fsr1h	equ	0xFE2
  4250                           fsr1l	equ	0xFE1
  4251                           indf2	equ	0xFDF
  4252                           postinc2	equ	0xFDE
  4253                           postdec2	equ	0xFDD
  4254                           fsr2h	equ	0xFDA
  4255                           fsr2l	equ	0xFD9
  4256                           status	equ	0xFD8
  4257                           
  4258 ;; *************** function _i2c_configure_master *****************
  4259 ;; Defined at:
  4260 ;;		line 21 in file "../src/my_i2c.c"
  4261 ;; Parameters:    Size  Location     Type
  4262 ;;  slave_addr      1   16[BANK0 ] unsigned char 
  4263 ;; Auto vars:     Size  Location     Type
  4264 ;;  i               2   19[BANK0 ] int 
  4265 ;; Return value:  Size  Location     Type
  4266 ;;		None               void
  4267 ;; Registers used:
  4268 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4269 ;; Tracked objects:
  4270 ;;		On entry : 0/0
  4271 ;;		On exit  : 0/0
  4272 ;;		Unchanged: 0/0
  4273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4274 ;;      Params:         0       1       0       0       0
  4275 ;;      Locals:         0       2       0       0       0
  4276 ;;      Temps:          0       2       0       0       0
  4277 ;;      Totals:         0       5       0       0       0
  4278 ;;Total ram usage:        5 bytes
  4279 ;; Hardware stack levels used:    1
  4280 ;; Hardware stack levels required when called:    9
  4281 ;; This function calls:
  4282 ;;		_OpenI2C1
  4283 ;; This function is called by:
  4284 ;;		_main
  4285 ;; This function uses a non-reentrant model
  4286 ;;
  4287                           
  4288                           	psect	text23
  4289  00103C                     __ptext23:
  4290                           	opt stack 0
  4291  00103C                     _i2c_configure_master:
  4292                           	opt stack 20
  4293                           
  4294                           ;my_i2c.c: 23: OpenI2C1(0b00001000, 0b10000000);
  4295                           
  4296                           ;incstack = 0
  4297                           ;incstack = 0
  4298  00103C  0100               	movlb	0	; () banked
  4299  00103E  6F91               	movwf	??_i2c_configure_master& (0+255),b
  4300  001040  0E08               	movlw	8
  4301  001042  0100               	movlb	0	; () banked
  4302  001044  0100               	movlb	0	; () banked
  4303  001046  6F8E               	movwf	?_OpenI2C1& (0+255),b
  4304  001048  0100               	movlb	0	; () banked
  4305  00104A  5191               	movf	??_i2c_configure_master& (0+255),w,b
  4306  00104C  0100               	movlb	0	; () banked
  4307  00104E  6F92               	movwf	(??_i2c_configure_master+1)& (0+255),b
  4308  001050  0E80               	movlw	128
  4309  001052  0100               	movlb	0	; () banked
  4310  001054  0100               	movlb	0	; () banked
  4311  001056  6F8F               	movwf	(?_OpenI2C1+1)& (0+255),b
  4312  001058  0100               	movlb	0	; () banked
  4313  00105A  5192               	movf	(??_i2c_configure_master+1)& (0+255),w,b
  4314  00105C  EC7C  F00B         	call	_OpenI2C1	;wreg free
  4315                           
  4316                           ;my_i2c.c: 24: SSPADD = 0x0A;
  4317  001060  0E0A               	movlw	10
  4318  001062  6EC8               	movwf	4040,c	;volatile
  4319                           
  4320                           ;my_i2c.c: 25: ic_ptr->slave_addr = slave_addr;
  4321  001064  0100               	movlb	0	; () banked
  4322  001066  EE20 F01C          	lfsr	2,28
  4323  00106A  0100               	movlb	0	; () banked
  4324  00106C  51AF               	movf	_ic_ptr& (0+255),w,b
  4325  00106E  26D9               	addwf	fsr2l,f,c
  4326  001070  0100               	movlb	0	; () banked
  4327  001072  51B0               	movf	(_ic_ptr+1)& (0+255),w,b
  4328  001074  22DA               	addwfc	fsr2h,f,c
  4329  001076  0100               	movlb	0	; () banked
  4330  001078  C090  FFDF         	movff	i2c_configure_master@slave_addr,indf2
  4331                           
  4332                           ; BSR set to: 0
  4333                           ;my_i2c.c: 27: for (int i = 0; i < 10; i++)
  4334  00107C  0E00               	movlw	0
  4335  00107E  0100               	movlb	0	; () banked
  4336  001080  0100               	movlb	0	; () banked
  4337  001082  6F94               	movwf	(i2c_configure_master@i+1)& (0+255),b
  4338  001084  0E00               	movlw	0
  4339  001086  0100               	movlb	0	; () banked
  4340  001088  6F93               	movwf	i2c_configure_master@i& (0+255),b
  4341  00108A                     
  4342                           ; BSR set to: 0
  4343  00108A  0100               	movlb	0	; () banked
  4344  00108C  0100               	movlb	0	; () banked
  4345  00108E  5194               	movf	(i2c_configure_master@i+1)& (0+255),w,b
  4346  001090  0A80               	xorlw	128
  4347  001092  0F80               	addlw	-128
  4348  001094  0E0A               	movlw	10
  4349  001096  B4D8               	btfsc	status,2,c
  4350  001098  5D93               	subwf	i2c_configure_master@i& (0+255),w,b
  4351  00109A  B0D8               	btfsc	status,0,c
  4352  00109C  0012               	return	
  4353                           
  4354                           ; BSR set to: 0
  4355                           ;my_i2c.c: 28: {
  4356                           ;my_i2c.c: 29: ic_ptr->buffer[i] = 0;
  4357                           
  4358                           ; BSR set to: 0
  4359                           
  4360                           ; BSR set to: 0
  4361  00109E  0100               	movlb	0	; () banked
  4362  0010A0  0100               	movlb	0	; () banked
  4363  0010A2  5193               	movf	i2c_configure_master@i& (0+255),w,b
  4364  0010A4  0100               	movlb	0	; () banked
  4365  0010A6  0100               	movlb	0	; () banked
  4366  0010A8  25AF               	addwf	_ic_ptr& (0+255),w,b
  4367  0010AA  6ED9               	movwf	fsr2l,c
  4368  0010AC  0100               	movlb	0	; () banked
  4369  0010AE  0100               	movlb	0	; () banked
  4370  0010B0  5194               	movf	(i2c_configure_master@i+1)& (0+255),w,b
  4371  0010B2  0100               	movlb	0	; () banked
  4372  0010B4  0100               	movlb	0	; () banked
  4373  0010B6  21B0               	addwfc	(_ic_ptr+1)& (0+255),w,b
  4374  0010B8  6EDA               	movwf	fsr2h,c
  4375  0010BA  0E00               	movlw	0
  4376  0010BC  6EDF               	movwf	indf2,c
  4377                           
  4378                           ; BSR set to: 0
  4379  0010BE  0100               	movlb	0	; () banked
  4380  0010C0  0100               	movlb	0	; () banked
  4381  0010C2  4B93               	infsnz	i2c_configure_master@i& (0+255),f,b
  4382  0010C4  2B94               	incf	(i2c_configure_master@i+1)& (0+255),f,b
  4383  0010C6  D7E1               	goto	L2
  4384  0010C8                     __end_of_i2c_configure_master:
  4385                           	opt stack 0
  4386                           tblptru	equ	0xFF8
  4387                           tblptrh	equ	0xFF7
  4388                           tblptrl	equ	0xFF6
  4389                           tablat	equ	0xFF5
  4390                           prodh	equ	0xFF4
  4391                           prodl	equ	0xFF3
  4392                           intcon	equ	0xFF2
  4393                           postinc0	equ	0xFEE
  4394                           wreg	equ	0xFE8
  4395                           indf1	equ	0xFE7
  4396                           fsr1h	equ	0xFE2
  4397                           fsr1l	equ	0xFE1
  4398                           indf2	equ	0xFDF
  4399                           postinc2	equ	0xFDE
  4400                           postdec2	equ	0xFDD
  4401                           fsr2h	equ	0xFDA
  4402                           fsr2l	equ	0xFD9
  4403                           status	equ	0xFD8
  4404                           
  4405 ;; *************** function _OpenI2C1 *****************
  4406 ;; Defined at:
  4407 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic18\plib\i2c\i2c1open.c"
  4408 ;; Parameters:    Size  Location     Type
  4409 ;;  sync_mode       1   14[BANK0 ] unsigned char 
  4410 ;;  slew            1   15[BANK0 ] unsigned char 
  4411 ;; Auto vars:     Size  Location     Type
  4412 ;;		None
  4413 ;; Return value:  Size  Location     Type
  4414 ;;		None               void
  4415 ;; Registers used:
  4416 ;;		wreg, status,2, status,0
  4417 ;; Tracked objects:
  4418 ;;		On entry : 0/0
  4419 ;;		On exit  : 0/0
  4420 ;;		Unchanged: 0/0
  4421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4422 ;;      Params:         0       2       0       0       0
  4423 ;;      Locals:         0       0       0       0       0
  4424 ;;      Temps:          0       0       0       0       0
  4425 ;;      Totals:         0       2       0       0       0
  4426 ;;Total ram usage:        2 bytes
  4427 ;; Hardware stack levels used:    1
  4428 ;; Hardware stack levels required when called:    8
  4429 ;; This function calls:
  4430 ;;		Nothing
  4431 ;; This function is called by:
  4432 ;;		_i2c_configure_master
  4433 ;; This function uses a non-reentrant model
  4434 ;;
  4435                           
  4436                           	psect	text24
  4437  0016F8                     __ptext24:
  4438                           	opt stack 0
  4439  0016F8                     _OpenI2C1:
  4440                           	opt stack 20
  4441                           
  4442                           ; BSR set to: 0
  4443                           ;incstack = 0
  4444                           ;incstack = 0
  4445  0016F8  0E3F               	movlw	63
  4446  0016FA  16C7               	andwf	4039,f,c	;volatile
  4447  0016FC  0E00               	movlw	0
  4448  0016FE  6EC6               	movwf	4038,c	;volatile
  4449  001700  0E00               	movlw	0
  4450  001702  6EC5               	movwf	4037,c	;volatile
  4451  001704  0100               	movlb	0	; () banked
  4452  001706  0100               	movlb	0	; () banked
  4453  001708  518E               	movf	OpenI2C1@sync_mode& (0+255),w,b
  4454  00170A  12C6               	iorwf	4038,f,c	;volatile
  4455  00170C  0100               	movlb	0	; () banked
  4456  00170E  0100               	movlb	0	; () banked
  4457  001710  518F               	movf	OpenI2C1@slew& (0+255),w,b
  4458  001712  12C7               	iorwf	4039,f,c	;volatile
  4459                           
  4460                           ; BSR set to: 0
  4461  001714  8694               	bsf	3988,3,c	;volatile
  4462                           
  4463                           ; BSR set to: 0
  4464  001716  8894               	bsf	3988,4,c	;volatile
  4465                           
  4466                           ; BSR set to: 0
  4467  001718  8AC6               	bsf	4038,5,c	;volatile
  4468                           
  4469                           ; BSR set to: 0
  4470  00171A  0012               	return	
  4471  00171C                     __end_of_OpenI2C1:
  4472                           	opt stack 0
  4473                           tblptru	equ	0xFF8
  4474                           tblptrh	equ	0xFF7
  4475                           tblptrl	equ	0xFF6
  4476                           tablat	equ	0xFF5
  4477                           prodh	equ	0xFF4
  4478                           prodl	equ	0xFF3
  4479                           intcon	equ	0xFF2
  4480                           postinc0	equ	0xFEE
  4481                           wreg	equ	0xFE8
  4482                           indf1	equ	0xFE7
  4483                           fsr1h	equ	0xFE2
  4484                           fsr1l	equ	0xFE1
  4485                           indf2	equ	0xFDF
  4486                           postinc2	equ	0xFDE
  4487                           postdec2	equ	0xFDD
  4488                           fsr2h	equ	0xFDA
  4489                           fsr2l	equ	0xFD9
  4490                           status	equ	0xFD8
  4491                           
  4492 ;; *************** function _init_i2c *****************
  4493 ;; Defined at:
  4494 ;;		line 472 in file "../src/my_i2c.c"
  4495 ;; Parameters:    Size  Location     Type
  4496 ;;  ic              2   14[BANK0 ] PTR struct __i2c_comm
  4497 ;;		 -> main@ic(29), 
  4498 ;; Auto vars:     Size  Location     Type
  4499 ;;		None
  4500 ;; Return value:  Size  Location     Type
  4501 ;;		None               void
  4502 ;; Registers used:
  4503 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4504 ;; Tracked objects:
  4505 ;;		On entry : 0/0
  4506 ;;		On exit  : 0/0
  4507 ;;		Unchanged: 0/0
  4508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4509 ;;      Params:         0       2       0       0       0
  4510 ;;      Locals:         0       0       0       0       0
  4511 ;;      Temps:          0       0       0       0       0
  4512 ;;      Totals:         0       2       0       0       0
  4513 ;;Total ram usage:        2 bytes
  4514 ;; Hardware stack levels used:    1
  4515 ;; Hardware stack levels required when called:    8
  4516 ;; This function calls:
  4517 ;;		Nothing
  4518 ;; This function is called by:
  4519 ;;		_main
  4520 ;; This function uses a non-reentrant model
  4521 ;;
  4522                           
  4523                           	psect	text25
  4524  001242                     __ptext25:
  4525                           	opt stack 0
  4526  001242                     _init_i2c:
  4527                           	opt stack 21
  4528                           
  4529                           ;my_i2c.c: 473: ic_ptr = ic;
  4530                           
  4531                           ; BSR set to: 0
  4532                           ;incstack = 0
  4533                           ;incstack = 0
  4534  001242  C08E  F0AF         	movff	init_i2c@ic,_ic_ptr
  4535  001246  C08F  F0B0         	movff	init_i2c@ic+1,_ic_ptr+1
  4536                           
  4537                           ;my_i2c.c: 474: ic_ptr->buflen = 0;
  4538  00124A  0100               	movlb	0	; () banked
  4539  00124C  EE20 F00A          	lfsr	2,10
  4540  001250  0100               	movlb	0	; () banked
  4541  001252  51AF               	movf	_ic_ptr& (0+255),w,b
  4542  001254  26D9               	addwf	fsr2l,f,c
  4543  001256  0100               	movlb	0	; () banked
  4544  001258  51B0               	movf	(_ic_ptr+1)& (0+255),w,b
  4545  00125A  22DA               	addwfc	fsr2h,f,c
  4546  00125C  0E00               	movlw	0
  4547  00125E  6EDF               	movwf	indf2,c
  4548                           
  4549                           ;my_i2c.c: 475: ic_ptr->event_count = 0;
  4550  001260  0100               	movlb	0	; () banked
  4551  001262  EE20 F00C          	lfsr	2,12
  4552  001266  0100               	movlb	0	; () banked
  4553  001268  51AF               	movf	_ic_ptr& (0+255),w,b
  4554  00126A  26D9               	addwf	fsr2l,f,c
  4555  00126C  0100               	movlb	0	; () banked
  4556  00126E  51B0               	movf	(_ic_ptr+1)& (0+255),w,b
  4557  001270  22DA               	addwfc	fsr2h,f,c
  4558  001272  0E00               	movlw	0
  4559  001274  6EDF               	movwf	indf2,c
  4560                           
  4561                           ;my_i2c.c: 476: ic_ptr->status = 0x5;
  4562  001276  0100               	movlb	0	; () banked
  4563  001278  EE20 F00D          	lfsr	2,13
  4564  00127C  0100               	movlb	0	; () banked
  4565  00127E  51AF               	movf	_ic_ptr& (0+255),w,b
  4566  001280  26D9               	addwf	fsr2l,f,c
  4567  001282  0100               	movlb	0	; () banked
  4568  001284  51B0               	movf	(_ic_ptr+1)& (0+255),w,b
  4569  001286  22DA               	addwfc	fsr2h,f,c
  4570  001288  0E05               	movlw	5
  4571  00128A  6EDF               	movwf	indf2,c
  4572                           
  4573                           ;my_i2c.c: 477: ic_ptr->error_count = 0;
  4574  00128C  0100               	movlb	0	; () banked
  4575  00128E  EE20 F00F          	lfsr	2,15
  4576  001292  0100               	movlb	0	; () banked
  4577  001294  51AF               	movf	_ic_ptr& (0+255),w,b
  4578  001296  26D9               	addwf	fsr2l,f,c
  4579  001298  0100               	movlb	0	; () banked
  4580  00129A  51B0               	movf	(_ic_ptr+1)& (0+255),w,b
  4581  00129C  22DA               	addwfc	fsr2h,f,c
  4582  00129E  0E00               	movlw	0
  4583  0012A0  6EDF               	movwf	indf2,c
  4584                           
  4585                           ;my_i2c.c: 478: ic_ptr->bufind = 0;
  4586  0012A2  0100               	movlb	0	; () banked
  4587  0012A4  EE20 F00B          	lfsr	2,11
  4588  0012A8  0100               	movlb	0	; () banked
  4589  0012AA  51AF               	movf	_ic_ptr& (0+255),w,b
  4590  0012AC  26D9               	addwf	fsr2l,f,c
  4591  0012AE  0100               	movlb	0	; () banked
  4592  0012B0  51B0               	movf	(_ic_ptr+1)& (0+255),w,b
  4593  0012B2  22DA               	addwfc	fsr2h,f,c
  4594  0012B4  0E00               	movlw	0
  4595  0012B6  6EDF               	movwf	indf2,c
  4596                           
  4597                           ; BSR set to: 0
  4598  0012B8  0012               	return	
  4599  0012BA                     __end_of_init_i2c:
  4600                           	opt stack 0
  4601                           tblptru	equ	0xFF8
  4602                           tblptrh	equ	0xFF7
  4603                           tblptrl	equ	0xFF6
  4604                           tablat	equ	0xFF5
  4605                           prodh	equ	0xFF4
  4606                           prodl	equ	0xFF3
  4607                           intcon	equ	0xFF2
  4608                           postinc0	equ	0xFEE
  4609                           wreg	equ	0xFE8
  4610                           indf1	equ	0xFE7
  4611                           fsr1h	equ	0xFE2
  4612                           fsr1l	equ	0xFE1
  4613                           indf2	equ	0xFDF
  4614                           postinc2	equ	0xFDE
  4615                           postdec2	equ	0xFDD
  4616                           fsr2h	equ	0xFDA
  4617                           fsr2l	equ	0xFD9
  4618                           status	equ	0xFD8
  4619                           
  4620 ;; *************** function _init_uart_recv *****************
  4621 ;; Defined at:
  4622 ;;		line 100 in file "../src/my_uart.c"
  4623 ;; Parameters:    Size  Location     Type
  4624 ;;  uc              2   14[BANK0 ] PTR struct __uart_comm
  4625 ;;		 -> main@uc(12), 
  4626 ;; Auto vars:     Size  Location     Type
  4627 ;;		None
  4628 ;; Return value:  Size  Location     Type
  4629 ;;		None               void
  4630 ;; Registers used:
  4631 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4632 ;; Tracked objects:
  4633 ;;		On entry : 0/0
  4634 ;;		On exit  : 0/0
  4635 ;;		Unchanged: 0/0
  4636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4637 ;;      Params:         0       2       0       0       0
  4638 ;;      Locals:         0       0       0       0       0
  4639 ;;      Temps:          0       0       0       0       0
  4640 ;;      Totals:         0       2       0       0       0
  4641 ;;Total ram usage:        2 bytes
  4642 ;; Hardware stack levels used:    1
  4643 ;; Hardware stack levels required when called:    8
  4644 ;; This function calls:
  4645 ;;		Nothing
  4646 ;; This function is called by:
  4647 ;;		_main
  4648 ;; This function uses a non-reentrant model
  4649 ;;
  4650                           
  4651                           	psect	text26
  4652  001548                     __ptext26:
  4653                           	opt stack 0
  4654  001548                     _init_uart_recv:
  4655                           	opt stack 21
  4656                           
  4657                           ;my_uart.c: 101: uc_ptr = uc;
  4658                           
  4659                           ; BSR set to: 0
  4660                           ;incstack = 0
  4661                           ;incstack = 0
  4662  001548  C08E  F062         	movff	init_uart_recv@uc,_uc_ptr
  4663  00154C  C08F  F063         	movff	init_uart_recv@uc+1,_uc_ptr+1
  4664                           
  4665                           ;my_uart.c: 102: uc_ptr->buflen = 0;
  4666  001550  EE20 F004          	lfsr	2,4
  4667  001554  5062               	movf	_uc_ptr,w,c
  4668  001556  26D9               	addwf	fsr2l,f,c
  4669  001558  5063               	movf	_uc_ptr+1,w,c
  4670  00155A  22DA               	addwfc	fsr2h,f,c
  4671  00155C  0E00               	movlw	0
  4672  00155E  6EDF               	movwf	indf2,c
  4673                           
  4674                           ;my_uart.c: 103: uc_ptr->inbuflen = 0;
  4675  001560  EE20 F009          	lfsr	2,9
  4676  001564  5062               	movf	_uc_ptr,w,c
  4677  001566  26D9               	addwf	fsr2l,f,c
  4678  001568  5063               	movf	_uc_ptr+1,w,c
  4679  00156A  22DA               	addwfc	fsr2h,f,c
  4680  00156C  0E00               	movlw	0
  4681  00156E  6EDF               	movwf	indf2,c
  4682                           
  4683                           ;my_uart.c: 104: uc_ptr->status = 49;
  4684  001570  EE20 F00A          	lfsr	2,10
  4685  001574  5062               	movf	_uc_ptr,w,c
  4686  001576  26D9               	addwf	fsr2l,f,c
  4687  001578  5063               	movf	_uc_ptr+1,w,c
  4688  00157A  22DA               	addwfc	fsr2h,f,c
  4689  00157C  0E31               	movlw	49
  4690  00157E  6EDF               	movwf	indf2,c
  4691  001580  0012               	return	
  4692  001582                     __end_of_init_uart_recv:
  4693                           	opt stack 0
  4694                           tblptru	equ	0xFF8
  4695                           tblptrh	equ	0xFF7
  4696                           tblptrl	equ	0xFF6
  4697                           tablat	equ	0xFF5
  4698                           prodh	equ	0xFF4
  4699                           prodl	equ	0xFF3
  4700                           intcon	equ	0xFF2
  4701                           postinc0	equ	0xFEE
  4702                           wreg	equ	0xFE8
  4703                           indf1	equ	0xFE7
  4704                           fsr1h	equ	0xFE2
  4705                           fsr1l	equ	0xFE1
  4706                           indf2	equ	0xFDF
  4707                           postinc2	equ	0xFDE
  4708                           postdec2	equ	0xFDD
  4709                           fsr2h	equ	0xFDA
  4710                           fsr2l	equ	0xFD9
  4711                           status	equ	0xFD8
  4712                           
  4713 ;; *************** function _enable_interrupts *****************
  4714 ;; Defined at:
  4715 ;;		line 17 in file "../src/interrupts.c"
  4716 ;; Parameters:    Size  Location     Type
  4717 ;;		None
  4718 ;; Auto vars:     Size  Location     Type
  4719 ;;		None
  4720 ;; Return value:  Size  Location     Type
  4721 ;;		None               void
  4722 ;; Registers used:
  4723 ;;		None
  4724 ;; Tracked objects:
  4725 ;;		On entry : 0/0
  4726 ;;		On exit  : 0/0
  4727 ;;		Unchanged: 0/0
  4728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4729 ;;      Params:         0       0       0       0       0
  4730 ;;      Locals:         0       0       0       0       0
  4731 ;;      Temps:          0       0       0       0       0
  4732 ;;      Totals:         0       0       0       0       0
  4733 ;;Total ram usage:        0 bytes
  4734 ;; Hardware stack levels used:    1
  4735 ;; Hardware stack levels required when called:    8
  4736 ;; This function calls:
  4737 ;;		Nothing
  4738 ;; This function is called by:
  4739 ;;		_main
  4740 ;; This function uses a non-reentrant model
  4741 ;;
  4742                           
  4743                           	psect	text27
  4744  001828                     __ptext27:
  4745                           	opt stack 0
  4746  001828                     _enable_interrupts:
  4747                           	opt stack 21
  4748                           
  4749                           ;interrupts.c: 20: RCONbits.IPEN = 1;
  4750                           
  4751                           ;incstack = 0
  4752                           ;incstack = 0
  4753  001828  8ED0               	bsf	4048,7,c	;volatile
  4754                           
  4755                           ;interrupts.c: 21: INTCONbits.GIEH = 1;
  4756  00182A  8EF2               	bsf	intcon,7,c	;volatile
  4757                           
  4758                           ;interrupts.c: 22: INTCONbits.GIEL = 1;
  4759  00182C  8CF2               	bsf	intcon,6,c	;volatile
  4760  00182E  0012               	return	
  4761  001830                     __end_of_enable_interrupts:
  4762                           	opt stack 0
  4763                           tblptru	equ	0xFF8
  4764                           tblptrh	equ	0xFF7
  4765                           tblptrl	equ	0xFF6
  4766                           tablat	equ	0xFF5
  4767                           prodh	equ	0xFF4
  4768                           prodl	equ	0xFF3
  4769                           intcon	equ	0xFF2
  4770                           postinc0	equ	0xFEE
  4771                           wreg	equ	0xFE8
  4772                           indf1	equ	0xFE7
  4773                           fsr1h	equ	0xFE2
  4774                           fsr1l	equ	0xFE1
  4775                           indf2	equ	0xFDF
  4776                           postinc2	equ	0xFDE
  4777                           postdec2	equ	0xFDD
  4778                           fsr2h	equ	0xFDA
  4779                           fsr2l	equ	0xFD9
  4780                           status	equ	0xFD8
  4781                           
  4782 ;; *************** function _InterruptHandlerLow *****************
  4783 ;; Defined at:
  4784 ;;		line 142 in file "../src/interrupts.c"
  4785 ;; Parameters:    Size  Location     Type
  4786 ;;		None
  4787 ;; Auto vars:     Size  Location     Type
  4788 ;;		None
  4789 ;; Return value:  Size  Location     Type
  4790 ;;		None               void
  4791 ;; Registers used:
  4792 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4793 ;; Tracked objects:
  4794 ;;		On entry : 0/0
  4795 ;;		On exit  : 0/0
  4796 ;;		Unchanged: 0/0
  4797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4798 ;;      Params:         0       0       0       0       0
  4799 ;;      Locals:         0       0       0       0       0
  4800 ;;      Temps:         17       0       0       0       0
  4801 ;;      Totals:        17       0       0       0       0
  4802 ;;Total ram usage:       17 bytes
  4803 ;; Hardware stack levels used:    1
  4804 ;; Hardware stack levels required when called:    7
  4805 ;; This function calls:
  4806 ;;		_timer1_int_handler
  4807 ;;		_uart_tx_int_handler
  4808 ;; This function is called by:
  4809 ;;		Interrupt level 1
  4810 ;; This function uses a non-reentrant model
  4811 ;;
  4812                           
  4813                           	psect	intcodelo
  4814  000018                     __pintcodelo:
  4815                           	opt stack 0
  4816  000018                     _InterruptHandlerLow:
  4817                           	opt stack 18
  4818                           
  4819                           ;incstack = 0
  4820  000018  CFD8 F003          	movff	status,??_InterruptHandlerLow
  4821  00001C  CFE8 F004          	movff	wreg,??_InterruptHandlerLow+1
  4822  000020  CFE0 F005          	movff	bsr,??_InterruptHandlerLow+2
  4823  000024  CFFA F006          	movff	pclath,??_InterruptHandlerLow+3
  4824  000028  CFFB F007          	movff	pclatu,??_InterruptHandlerLow+4
  4825  00002C  CFE9 F008          	movff	fsr0l,??_InterruptHandlerLow+5
  4826  000030  CFEA F009          	movff	fsr0h,??_InterruptHandlerLow+6
  4827  000034  CFE1 F00A          	movff	fsr1l,??_InterruptHandlerLow+7
  4828  000038  CFE2 F00B          	movff	fsr1h,??_InterruptHandlerLow+8
  4829  00003C  CFD9 F00C          	movff	fsr2l,??_InterruptHandlerLow+9
  4830  000040  CFDA F00D          	movff	fsr2h,??_InterruptHandlerLow+10
  4831  000044  CFF3 F00E          	movff	prodl,??_InterruptHandlerLow+11
  4832  000048  CFF4 F00F          	movff	prodh,??_InterruptHandlerLow+12
  4833  00004C  CFF6 F010          	movff	tblptrl,??_InterruptHandlerLow+13
  4834  000050  CFF7 F011          	movff	tblptrh,??_InterruptHandlerLow+14
  4835  000054  CFF8 F012          	movff	tblptru,??_InterruptHandlerLow+15
  4836  000058  CFF5 F013          	movff	tablat,??_InterruptHandlerLow+16
  4837  00005C                     
  4838                           ;interrupts.c: 144: if (PIR1bits.TMR1IF) {
  4839  00005C  A09E               	btfss	3998,0,c	;volatile
  4840  00005E  D001               	goto	i1u240_21
  4841  000060  D001               	goto	i1u240_20
  4842  000062                     i1u240_21:
  4843  000062  D004               	goto	i1l3428
  4844  000064                     i1u240_20:
  4845  000064                     
  4846                           ;interrupts.c: 145: PIR1bits.TMR1IF = 0;
  4847  000064  909E               	bcf	3998,0,c	;volatile
  4848  000066                     
  4849                           ;interrupts.c: 146: timer1_int_handler();
  4850  000066  ECFD  F00B         	call	_timer1_int_handler	;wreg free
  4851  00006A  D000               	goto	i1l3428
  4852  00006C                     i1l3428:
  4853                           
  4854                           ;interrupts.c: 147: }
  4855                           ;interrupts.c: 155: if (PIR1bits.TXIF && PIE1bits.TXIE) {
  4856  00006C  A89E               	btfss	3998,4,c	;volatile
  4857  00006E  D001               	goto	i1u241_21
  4858  000070  D001               	goto	i1u241_20
  4859  000072                     i1u241_21:
  4860  000072  D008               	goto	i1l55
  4861  000074                     i1u241_20:
  4862  000074  A89D               	btfss	3997,4,c	;volatile
  4863  000076  D001               	goto	i1u242_21
  4864  000078  D001               	goto	i1u242_20
  4865  00007A                     i1u242_21:
  4866  00007A  D004               	goto	i1l55
  4867  00007C                     i1u242_20:
  4868  00007C                     
  4869                           ;interrupts.c: 156: PIE1bits.TXIE = 0;
  4870  00007C  989D               	bcf	3997,4,c	;volatile
  4871  00007E                     
  4872                           ;interrupts.c: 158: uart_tx_int_handler();
  4873  00007E  ECA5  F008         	call	_uart_tx_int_handler	;wreg free
  4874  000082  D000               	goto	i1l55
  4875  000084                     i1l55:
  4876  000084  C013  FFF5         	movff	??_InterruptHandlerLow+16,tablat
  4877  000088  C012  FFF8         	movff	??_InterruptHandlerLow+15,tblptru
  4878  00008C  C011  FFF7         	movff	??_InterruptHandlerLow+14,tblptrh
  4879  000090  C010  FFF6         	movff	??_InterruptHandlerLow+13,tblptrl
  4880  000094  C00F  FFF4         	movff	??_InterruptHandlerLow+12,prodh
  4881  000098  C00E  FFF3         	movff	??_InterruptHandlerLow+11,prodl
  4882  00009C  C00D  FFDA         	movff	??_InterruptHandlerLow+10,fsr2h
  4883  0000A0  C00C  FFD9         	movff	??_InterruptHandlerLow+9,fsr2l
  4884  0000A4  C00B  FFE2         	movff	??_InterruptHandlerLow+8,fsr1h
  4885  0000A8  C00A  FFE1         	movff	??_InterruptHandlerLow+7,fsr1l
  4886  0000AC  C009  FFEA         	movff	??_InterruptHandlerLow+6,fsr0h
  4887  0000B0  C008  FFE9         	movff	??_InterruptHandlerLow+5,fsr0l
  4888  0000B4  C007  FFFB         	movff	??_InterruptHandlerLow+4,pclatu
  4889  0000B8  C006  FFFA         	movff	??_InterruptHandlerLow+3,pclath
  4890  0000BC  C005  FFE0         	movff	??_InterruptHandlerLow+2,bsr
  4891  0000C0  C004  FFE8         	movff	??_InterruptHandlerLow+1,wreg
  4892  0000C4  C003  FFD8         	movff	??_InterruptHandlerLow,status
  4893  0000C8  0010               	retfie	
  4894  0000CA                     __end_of_InterruptHandlerLow:
  4895                           	opt stack 0
  4896                           pclatu	equ	0xFFB
  4897                           pclath	equ	0xFFA
  4898                           tblptru	equ	0xFF8
  4899                           tblptrh	equ	0xFF7
  4900                           tblptrl	equ	0xFF6
  4901                           tablat	equ	0xFF5
  4902                           prodh	equ	0xFF4
  4903                           prodl	equ	0xFF3
  4904                           intcon	equ	0xFF2
  4905                           postinc0	equ	0xFEE
  4906                           fsr0h	equ	0xFEA
  4907                           fsr0l	equ	0xFE9
  4908                           wreg	equ	0xFE8
  4909                           indf1	equ	0xFE7
  4910                           fsr1h	equ	0xFE2
  4911                           fsr1l	equ	0xFE1
  4912                           bsr	equ	0xFE0
  4913                           indf2	equ	0xFDF
  4914                           postinc2	equ	0xFDE
  4915                           postdec2	equ	0xFDD
  4916                           fsr2h	equ	0xFDA
  4917                           fsr2l	equ	0xFD9
  4918                           status	equ	0xFD8
  4919                           
  4920 ;; *************** function _uart_tx_int_handler *****************
  4921 ;; Defined at:
  4922 ;;		line 58 in file "../src/my_uart.c"
  4923 ;; Parameters:    Size  Location     Type
  4924 ;;		None
  4925 ;; Auto vars:     Size  Location     Type
  4926 ;;  testbuffer      1    1[COMRAM] unsigned char 
  4927 ;; Return value:  Size  Location     Type
  4928 ;;		None               void
  4929 ;; Registers used:
  4930 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4931 ;; Tracked objects:
  4932 ;;		On entry : 0/0
  4933 ;;		On exit  : 0/0
  4934 ;;		Unchanged: 0/0
  4935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4936 ;;      Params:         0       0       0       0       0
  4937 ;;      Locals:         1       0       0       0       0
  4938 ;;      Temps:          1       0       0       0       0
  4939 ;;      Totals:         2       0       0       0       0
  4940 ;;Total ram usage:        2 bytes
  4941 ;; Hardware stack levels used:    1
  4942 ;; Hardware stack levels required when called:    5
  4943 ;; This function calls:
  4944 ;;		Nothing
  4945 ;; This function is called by:
  4946 ;;		_InterruptHandlerLow
  4947 ;; This function uses a non-reentrant model
  4948 ;;
  4949                           
  4950                           	psect	text29
  4951  00114A                     __ptext29:
  4952                           	opt stack 0
  4953  00114A                     _uart_tx_int_handler:
  4954                           	opt stack 19
  4955                           
  4956                           ;my_uart.c: 60: TXREG = uc_ptr->buffer[uc_ptr->bufind];
  4957                           
  4958                           ;incstack = 0
  4959                           ;incstack = 0
  4960  00114A  EE20 F00B          	lfsr	2,11
  4961  00114E  5062               	movf	_uc_ptr,w,c
  4962  001150  26D9               	addwf	fsr2l,f,c
  4963  001152  5063               	movf	_uc_ptr+1,w,c
  4964  001154  22DA               	addwfc	fsr2h,f,c
  4965  001156  50DF               	movf	indf2,w,c
  4966  001158  6E01               	movwf	??_uart_tx_int_handler& (0+255),c
  4967  00115A  5001               	movf	??_uart_tx_int_handler,w,c
  4968  00115C  0D01               	mullw	1
  4969  00115E  50F3               	movf	prodl,w,c
  4970  001160  2462               	addwf	_uc_ptr,w,c
  4971  001162  6ED9               	movwf	fsr2l,c
  4972  001164  50F4               	movf	prodh,w,c
  4973  001166  2063               	addwfc	_uc_ptr+1,w,c
  4974  001168  6EDA               	movwf	fsr2h,c
  4975  00116A  50DF               	movf	indf2,w,c
  4976  00116C  6EAD               	movwf	4013,c	;volatile
  4977                           
  4978                           ;my_uart.c: 61: char testbuffer = uc_ptr->buffer[uc_ptr->bufind];
  4979  00116E  EE20 F00B          	lfsr	2,11
  4980  001172  5062               	movf	_uc_ptr,w,c
  4981  001174  26D9               	addwf	fsr2l,f,c
  4982  001176  5063               	movf	_uc_ptr+1,w,c
  4983  001178  22DA               	addwfc	fsr2h,f,c
  4984  00117A  50DF               	movf	indf2,w,c
  4985  00117C  6E01               	movwf	??_uart_tx_int_handler& (0+255),c
  4986  00117E  5001               	movf	??_uart_tx_int_handler,w,c
  4987  001180  0D01               	mullw	1
  4988  001182  50F3               	movf	prodl,w,c
  4989  001184  2462               	addwf	_uc_ptr,w,c
  4990  001186  6ED9               	movwf	fsr2l,c
  4991  001188  50F4               	movf	prodh,w,c
  4992  00118A  2063               	addwfc	_uc_ptr+1,w,c
  4993  00118C  6EDA               	movwf	fsr2h,c
  4994  00118E  50DF               	movf	indf2,w,c
  4995  001190  6E02               	movwf	uart_tx_int_handler@testbuffer,c
  4996                           
  4997                           ;my_uart.c: 62: uc_ptr->bufind++;
  4998  001192  EE20 F00B          	lfsr	2,11
  4999  001196  5062               	movf	_uc_ptr,w,c
  5000  001198  26D9               	addwf	fsr2l,f,c
  5001  00119A  5063               	movf	_uc_ptr+1,w,c
  5002  00119C  22DA               	addwfc	fsr2h,f,c
  5003  00119E  2ADF               	incf	indf2,f,c
  5004                           
  5005                           ;my_uart.c: 63: if(uc_ptr->bufind < uc_ptr->buflen)
  5006  0011A0  EE20 F00B          	lfsr	2,11
  5007  0011A4  5062               	movf	_uc_ptr,w,c
  5008  0011A6  26D9               	addwf	fsr2l,f,c
  5009  0011A8  5063               	movf	_uc_ptr+1,w,c
  5010  0011AA  22DA               	addwfc	fsr2h,f,c
  5011  0011AC  50DF               	movf	indf2,w,c
  5012  0011AE  6E01               	movwf	??_uart_tx_int_handler& (0+255),c
  5013  0011B0  EE20 F004          	lfsr	2,4
  5014  0011B4  5062               	movf	_uc_ptr,w,c
  5015  0011B6  26D9               	addwf	fsr2l,f,c
  5016  0011B8  5063               	movf	_uc_ptr+1,w,c
  5017  0011BA  22DA               	addwfc	fsr2h,f,c
  5018  0011BC  50DF               	movf	indf2,w,c
  5019  0011BE  5C01               	subwf	??_uart_tx_int_handler,w,c
  5020  0011C0  B0D8               	btfsc	status,0,c
  5021  0011C2  0012               	return	
  5022                           
  5023                           ;my_uart.c: 64: {
  5024                           ;my_uart.c: 65: PIE1bits.TXIE = 1;
  5025  0011C4  889D               	bsf	3997,4,c	;volatile
  5026  0011C6  0012               	return	
  5027  0011C8                     __end_of_uart_tx_int_handler:
  5028                           	opt stack 0
  5029                           pclatu	equ	0xFFB
  5030                           pclath	equ	0xFFA
  5031                           tblptru	equ	0xFF8
  5032                           tblptrh	equ	0xFF7
  5033                           tblptrl	equ	0xFF6
  5034                           tablat	equ	0xFF5
  5035                           prodh	equ	0xFF4
  5036                           prodl	equ	0xFF3
  5037                           intcon	equ	0xFF2
  5038                           postinc0	equ	0xFEE
  5039                           fsr0h	equ	0xFEA
  5040                           fsr0l	equ	0xFE9
  5041                           wreg	equ	0xFE8
  5042                           indf1	equ	0xFE7
  5043                           fsr1h	equ	0xFE2
  5044                           fsr1l	equ	0xFE1
  5045                           bsr	equ	0xFE0
  5046                           indf2	equ	0xFDF
  5047                           postinc2	equ	0xFDE
  5048                           postdec2	equ	0xFDD
  5049                           fsr2h	equ	0xFDA
  5050                           fsr2l	equ	0xFD9
  5051                           status	equ	0xFD8
  5052                           
  5053 ;; *************** function _timer1_int_handler *****************
  5054 ;; Defined at:
  5055 ;;		line 38 in file "../src/user_interrupts.c"
  5056 ;; Parameters:    Size  Location     Type
  5057 ;;		None
  5058 ;; Auto vars:     Size  Location     Type
  5059 ;;		None
  5060 ;; Return value:  Size  Location     Type
  5061 ;;		None               void
  5062 ;; Registers used:
  5063 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5064 ;; Tracked objects:
  5065 ;;		On entry : 0/0
  5066 ;;		On exit  : 0/0
  5067 ;;		Unchanged: 0/0
  5068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5069 ;;      Params:         0       0       0       0       0
  5070 ;;      Locals:         0       0       0       0       0
  5071 ;;      Temps:          1       0       0       0       0
  5072 ;;      Totals:         1       0       0       0       0
  5073 ;;Total ram usage:        1 bytes
  5074 ;; Hardware stack levels used:    1
  5075 ;; Hardware stack levels required when called:    6
  5076 ;; This function calls:
  5077 ;;		_i2c_master_recv
  5078 ;; This function is called by:
  5079 ;;		_InterruptHandlerLow
  5080 ;; This function uses a non-reentrant model
  5081 ;;
  5082                           
  5083                           	psect	text30
  5084  0017FA                     __ptext30:
  5085                           	opt stack 0
  5086  0017FA                     _timer1_int_handler:
  5087                           	opt stack 18
  5088                           
  5089                           ;user_interrupts.c: 59: i2c_master_recv(6);
  5090                           
  5091                           ;incstack = 0
  5092                           ;incstack = 0
  5093  0017FA  6E02               	movwf	??_timer1_int_handler& (0+255),c
  5094  0017FC  0E06               	movlw	6
  5095  0017FE  6E01               	movwf	?_i2c_master_recv,c
  5096  001800  5002               	movf	??_timer1_int_handler& (0+255),w,c
  5097  001802  ECF6  F00A         	call	_i2c_master_recv	;wreg free
  5098  001806  0012               	return	
  5099  001808                     __end_of_timer1_int_handler:
  5100                           	opt stack 0
  5101                           pclatu	equ	0xFFB
  5102                           pclath	equ	0xFFA
  5103                           tblptru	equ	0xFF8
  5104                           tblptrh	equ	0xFF7
  5105                           tblptrl	equ	0xFF6
  5106                           tablat	equ	0xFF5
  5107                           prodh	equ	0xFF4
  5108                           prodl	equ	0xFF3
  5109                           intcon	equ	0xFF2
  5110                           postinc0	equ	0xFEE
  5111                           fsr0h	equ	0xFEA
  5112                           fsr0l	equ	0xFE9
  5113                           wreg	equ	0xFE8
  5114                           indf1	equ	0xFE7
  5115                           fsr1h	equ	0xFE2
  5116                           fsr1l	equ	0xFE1
  5117                           bsr	equ	0xFE0
  5118                           indf2	equ	0xFDF
  5119                           postinc2	equ	0xFDE
  5120                           postdec2	equ	0xFDD
  5121                           fsr2h	equ	0xFDA
  5122                           fsr2l	equ	0xFD9
  5123                           status	equ	0xFD8
  5124                           
  5125 ;; *************** function _i2c_master_recv *****************
  5126 ;; Defined at:
  5127 ;;		line 220 in file "../src/my_i2c.c"
  5128 ;; Parameters:    Size  Location     Type
  5129 ;;  length          1    0[COMRAM] unsigned char 
  5130 ;; Auto vars:     Size  Location     Type
  5131 ;;		None
  5132 ;; Return value:  Size  Location     Type
  5133 ;;                  1    wreg      unsigned char 
  5134 ;; Registers used:
  5135 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5136 ;; Tracked objects:
  5137 ;;		On entry : 0/0
  5138 ;;		On exit  : 0/0
  5139 ;;		Unchanged: 0/0
  5140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5141 ;;      Params:         1       0       0       0       0
  5142 ;;      Locals:         0       0       0       0       0
  5143 ;;      Temps:          0       0       0       0       0
  5144 ;;      Totals:         1       0       0       0       0
  5145 ;;Total ram usage:        1 bytes
  5146 ;; Hardware stack levels used:    1
  5147 ;; Hardware stack levels required when called:    5
  5148 ;; This function calls:
  5149 ;;		Nothing
  5150 ;; This function is called by:
  5151 ;;		_timer1_int_handler
  5152 ;; This function uses a non-reentrant model
  5153 ;;
  5154                           
  5155                           	psect	text31
  5156  0015EC                     __ptext31:
  5157                           	opt stack 0
  5158  0015EC                     _i2c_master_recv:
  5159                           	opt stack 18
  5160                           
  5161                           ;my_i2c.c: 222: ic_ptr->buflen = length;
  5162                           
  5163                           ;incstack = 0
  5164                           ;incstack = 0
  5165  0015EC  0100               	movlb	0	; () banked
  5166  0015EE  EE20 F00A          	lfsr	2,10
  5167  0015F2  0100               	movlb	0	; () banked
  5168  0015F4  51AF               	movf	_ic_ptr& (0+255),w,b
  5169  0015F6  26D9               	addwf	fsr2l,f,c
  5170  0015F8  0100               	movlb	0	; () banked
  5171  0015FA  51B0               	movf	(_ic_ptr+1)& (0+255),w,b
  5172  0015FC  22DA               	addwfc	fsr2h,f,c
  5173  0015FE  C001  FFDF         	movff	i2c_master_recv@length,indf2
  5174                           
  5175                           ;my_i2c.c: 223: ic_ptr->status = 0x12;
  5176  001602  0100               	movlb	0	; () banked
  5177  001604  EE20 F00D          	lfsr	2,13
  5178  001608  0100               	movlb	0	; () banked
  5179  00160A  51AF               	movf	_ic_ptr& (0+255),w,b
  5180  00160C  26D9               	addwf	fsr2l,f,c
  5181  00160E  0100               	movlb	0	; () banked
  5182  001610  51B0               	movf	(_ic_ptr+1)& (0+255),w,b
  5183  001612  22DA               	addwfc	fsr2h,f,c
  5184  001614  0E12               	movlw	18
  5185  001616  6EDF               	movwf	indf2,c
  5186                           
  5187                           ; BSR set to: 0
  5188                           ;my_i2c.c: 226: SSP1CON2bits.SEN=1;
  5189  001618  80C5               	bsf	4037,0,c	;volatile
  5190  00161A  0012               	return	
  5191  00161C                     __end_of_i2c_master_recv:
  5192                           	opt stack 0
  5193                           pclatu	equ	0xFFB
  5194                           pclath	equ	0xFFA
  5195                           tblptru	equ	0xFF8
  5196                           tblptrh	equ	0xFF7
  5197                           tblptrl	equ	0xFF6
  5198                           tablat	equ	0xFF5
  5199                           prodh	equ	0xFF4
  5200                           prodl	equ	0xFF3
  5201                           intcon	equ	0xFF2
  5202                           postinc0	equ	0xFEE
  5203                           fsr0h	equ	0xFEA
  5204                           fsr0l	equ	0xFE9
  5205                           wreg	equ	0xFE8
  5206                           indf1	equ	0xFE7
  5207                           fsr1h	equ	0xFE2
  5208                           fsr1l	equ	0xFE1
  5209                           bsr	equ	0xFE0
  5210                           indf2	equ	0xFDF
  5211                           postinc2	equ	0xFDE
  5212                           postdec2	equ	0xFDD
  5213                           fsr2h	equ	0xFDA
  5214                           fsr2l	equ	0xFD9
  5215                           status	equ	0xFD8
  5216                           
  5217 ;; *************** function _InterruptHandlerHigh *****************
  5218 ;; Defined at:
  5219 ;;		line 86 in file "../src/interrupts.c"
  5220 ;; Parameters:    Size  Location     Type
  5221 ;;		None
  5222 ;; Auto vars:     Size  Location     Type
  5223 ;;		None
  5224 ;; Return value:  Size  Location     Type
  5225 ;;		None               void
  5226 ;; Registers used:
  5227 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  5228 ;; Tracked objects:
  5229 ;;		On entry : 0/0
  5230 ;;		On exit  : 0/0
  5231 ;;		Unchanged: 0/0
  5232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5233 ;;      Params:         0       0       0       0       0
  5234 ;;      Locals:         0       0       0       0       0
  5235 ;;      Temps:          0      14       0       0       0
  5236 ;;      Totals:         0      14       0       0       0
  5237 ;;Total ram usage:       14 bytes
  5238 ;; Hardware stack levels used:    1
  5239 ;; Hardware stack levels required when called:    4
  5240 ;; This function calls:
  5241 ;;		_i2c_master_handler
  5242 ;;		_timer0_int_handler
  5243 ;;		_adc_int_handler
  5244 ;;		_uart_recv_int_handler
  5245 ;;		_SleepIfOkay
  5246 ;; This function is called by:
  5247 ;;		Interrupt level 2
  5248 ;; This function uses a non-reentrant model
  5249 ;;
  5250                           
  5251                           	psect	intcode
  5252  000008                     __pintcode:
  5253                           	opt stack 0
  5254  000008                     _InterruptHandlerHigh:
  5255                           	opt stack 18
  5256                           
  5257                           ; BSR set to: 0
  5258                           ;incstack = 0
  5259  000008  CFFA F080          	movff	pclath,??_InterruptHandlerHigh
  5260  00000C  CFFB F081          	movff	pclatu,??_InterruptHandlerHigh+1
  5261  000010  CFE9 F082          	movff	fsr0l,??_InterruptHandlerHigh+2
  5262  000014  EFCA  F007         	goto	int_func
  5263                           pclatu	equ	0xFFB
  5264                           pclath	equ	0xFFA
  5265                           tblptru	equ	0xFF8
  5266                           tblptrh	equ	0xFF7
  5267                           tblptrl	equ	0xFF6
  5268                           tablat	equ	0xFF5
  5269                           prodh	equ	0xFF4
  5270                           prodl	equ	0xFF3
  5271                           intcon	equ	0xFF2
  5272                           postinc0	equ	0xFEE
  5273                           fsr0h	equ	0xFEA
  5274                           fsr0l	equ	0xFE9
  5275                           wreg	equ	0xFE8
  5276                           indf1	equ	0xFE7
  5277                           fsr1h	equ	0xFE2
  5278                           fsr1l	equ	0xFE1
  5279                           bsr	equ	0xFE0
  5280                           indf2	equ	0xFDF
  5281                           postinc2	equ	0xFDE
  5282                           postdec2	equ	0xFDD
  5283                           fsr2h	equ	0xFDA
  5284                           fsr2l	equ	0xFD9
  5285                           status	equ	0xFD8
  5286                           
  5287                           	psect	intcode_body
  5288  000F94                     __pintcode_body:
  5289                           	opt stack 18
  5290  000F94                     int_func:
  5291                           	opt stack 18
  5292  000F94  CFEA F083          	movff	fsr0h,??_InterruptHandlerHigh+3
  5293  000F98  CFE1 F084          	movff	fsr1l,??_InterruptHandlerHigh+4
  5294  000F9C  CFE2 F085          	movff	fsr1h,??_InterruptHandlerHigh+5
  5295  000FA0  CFD9 F086          	movff	fsr2l,??_InterruptHandlerHigh+6
  5296  000FA4  CFDA F087          	movff	fsr2h,??_InterruptHandlerHigh+7
  5297  000FA8  CFF3 F088          	movff	prodl,??_InterruptHandlerHigh+8
  5298  000FAC  CFF4 F089          	movff	prodh,??_InterruptHandlerHigh+9
  5299  000FB0  CFF6 F08A          	movff	tblptrl,??_InterruptHandlerHigh+10
  5300  000FB4  CFF7 F08B          	movff	tblptrh,??_InterruptHandlerHigh+11
  5301  000FB8  CFF8 F08C          	movff	tblptru,??_InterruptHandlerHigh+12
  5302  000FBC  CFF5 F08D          	movff	tablat,??_InterruptHandlerHigh+13
  5303  000FC0                     
  5304                           ;interrupts.c: 91: if (PIR1bits.SSPIF) {
  5305  000FC0  A69E               	btfss	3998,3,c	;volatile
  5306  000FC2  D001               	goto	i2u173_41
  5307  000FC4  D001               	goto	i2u173_40
  5308  000FC6                     i2u173_41:
  5309  000FC6  D004               	goto	i2l2796
  5310  000FC8                     i2u173_40:
  5311  000FC8                     
  5312                           ;interrupts.c: 93: PIR1bits.SSPIF = 0;
  5313  000FC8  969E               	bcf	3998,3,c	;volatile
  5314  000FCA                     
  5315                           ;interrupts.c: 95: i2c_master_handler();
  5316  000FCA  EC43  F002         	call	_i2c_master_handler	;wreg free
  5317  000FCE  D000               	goto	i2l2796
  5318  000FD0                     i2l2796:
  5319                           
  5320                           ;interrupts.c: 96: }
  5321                           ;interrupts.c: 99: if (INTCONbits.TMR0IF) {
  5322  000FD0  A4F2               	btfss	intcon,2,c	;volatile
  5323  000FD2  D001               	goto	i2u174_41
  5324  000FD4  D001               	goto	i2u174_40
  5325  000FD6                     i2u174_41:
  5326  000FD6  D004               	goto	i2l2802
  5327  000FD8                     i2u174_40:
  5328  000FD8                     
  5329                           ;interrupts.c: 100: INTCONbits.TMR0IF = 0;
  5330  000FD8  94F2               	bcf	intcon,2,c	;volatile
  5331  000FDA                     
  5332                           ;interrupts.c: 102: timer0_int_handler();
  5333  000FDA  EC5D  F009         	call	_timer0_int_handler	;wreg free
  5334  000FDE  D000               	goto	i2l2802
  5335  000FE0                     i2l2802:
  5336                           
  5337                           ;interrupts.c: 104: }
  5338                           ;interrupts.c: 106: if(PIR1bits.ADIF)
  5339  000FE0  AC9E               	btfss	3998,6,c	;volatile
  5340  000FE2  D001               	goto	i2u175_41
  5341  000FE4  D001               	goto	i2u175_40
  5342  000FE6                     i2u175_41:
  5343  000FE6  D004               	goto	i2l2808
  5344  000FE8                     i2u175_40:
  5345  000FE8                     
  5346                           ;interrupts.c: 107: {
  5347                           ;interrupts.c: 108: PIR1bits.ADIF = 0;
  5348  000FE8  9C9E               	bcf	3998,6,c	;volatile
  5349  000FEA                     
  5350                           ;interrupts.c: 109: adc_int_handler();
  5351  000FEA  EC0E  F00B         	call	_adc_int_handler	;wreg free
  5352  000FEE  D000               	goto	i2l2808
  5353  000FF0                     i2l2808:
  5354                           
  5355                           ;interrupts.c: 111: }
  5356                           ;interrupts.c: 113: if (PIR1bits.RCIF)
  5357  000FF0  AA9E               	btfss	3998,5,c	;volatile
  5358  000FF2  D001               	goto	i2u176_41
  5359  000FF4  D001               	goto	i2u176_40
  5360  000FF6                     i2u176_41:
  5361  000FF6  D003               	goto	i2l2812
  5362  000FF8                     i2u176_40:
  5363  000FF8                     
  5364                           ;interrupts.c: 114: {
  5365                           ;interrupts.c: 115: uart_recv_int_handler();
  5366  000FF8  EC1D  F007         	call	_uart_recv_int_handler	;wreg free
  5367  000FFC  D000               	goto	i2l2812
  5368  000FFE                     i2l2812:
  5369                           
  5370                           ;interrupts.c: 119: }
  5371                           ;interrupts.c: 127: SleepIfOkay();
  5372  000FFE  EC18  F00A         	call	_SleepIfOkay	;wreg free
  5373  001002  C08D  FFF5         	movff	??_InterruptHandlerHigh+13,tablat
  5374  001006  C08C  FFF8         	movff	??_InterruptHandlerHigh+12,tblptru
  5375  00100A  C08B  FFF7         	movff	??_InterruptHandlerHigh+11,tblptrh
  5376  00100E  C08A  FFF6         	movff	??_InterruptHandlerHigh+10,tblptrl
  5377  001012  C089  FFF4         	movff	??_InterruptHandlerHigh+9,prodh
  5378  001016  C088  FFF3         	movff	??_InterruptHandlerHigh+8,prodl
  5379  00101A  C087  FFDA         	movff	??_InterruptHandlerHigh+7,fsr2h
  5380  00101E  C086  FFD9         	movff	??_InterruptHandlerHigh+6,fsr2l
  5381  001022  C085  FFE2         	movff	??_InterruptHandlerHigh+5,fsr1h
  5382  001026  C084  FFE1         	movff	??_InterruptHandlerHigh+4,fsr1l
  5383  00102A  C083  FFEA         	movff	??_InterruptHandlerHigh+3,fsr0h
  5384  00102E  C082  FFE9         	movff	??_InterruptHandlerHigh+2,fsr0l
  5385  001032  C081  FFFB         	movff	??_InterruptHandlerHigh+1,pclatu
  5386  001036  C080  FFFA         	movff	??_InterruptHandlerHigh,pclath
  5387  00103A  0011               	retfie		f
  5388  00103C                     __end_of_InterruptHandlerHigh:
  5389                           	opt stack 0
  5390                           pclatu	equ	0xFFB
  5391                           pclath	equ	0xFFA
  5392                           tblptru	equ	0xFF8
  5393                           tblptrh	equ	0xFF7
  5394                           tblptrl	equ	0xFF6
  5395                           tablat	equ	0xFF5
  5396                           prodh	equ	0xFF4
  5397                           prodl	equ	0xFF3
  5398                           intcon	equ	0xFF2
  5399                           postinc0	equ	0xFEE
  5400                           fsr0h	equ	0xFEA
  5401                           fsr0l	equ	0xFE9
  5402                           wreg	equ	0xFE8
  5403                           indf1	equ	0xFE7
  5404                           fsr1h	equ	0xFE2
  5405                           fsr1l	equ	0xFE1
  5406                           bsr	equ	0xFE0
  5407                           indf2	equ	0xFDF
  5408                           postinc2	equ	0xFDE
  5409                           postdec2	equ	0xFDD
  5410                           fsr2h	equ	0xFDA
  5411                           fsr2l	equ	0xFD9
  5412                           status	equ	0xFD8
  5413                           
  5414 ;; *************** function _SleepIfOkay *****************
  5415 ;; Defined at:
  5416 ;;		line 228 in file "../src/messages.c"
  5417 ;; Parameters:    Size  Location     Type
  5418 ;;		None
  5419 ;; Auto vars:     Size  Location     Type
  5420 ;;		None
  5421 ;; Return value:  Size  Location     Type
  5422 ;;		None               void
  5423 ;; Registers used:
  5424 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5425 ;; Tracked objects:
  5426 ;;		On entry : 0/0
  5427 ;;		On exit  : 0/0
  5428 ;;		Unchanged: 0/0
  5429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5430 ;;      Params:         0       0       0       0       0
  5431 ;;      Locals:         0       0       0       0       0
  5432 ;;      Temps:          0       0       0       0       0
  5433 ;;      Totals:         0       0       0       0       0
  5434 ;;Total ram usage:        0 bytes
  5435 ;; Hardware stack levels used:    1
  5436 ;; Hardware stack levels required when called:    2
  5437 ;; This function calls:
  5438 ;;		_enter_sleep_mode
  5439 ;;		i2_in_high_int
  5440 ;;		i2_in_low_int
  5441 ;;		i2_check_msg
  5442 ;; This function is called by:
  5443 ;;		_InterruptHandlerHigh
  5444 ;; This function uses a non-reentrant model
  5445 ;;
  5446                           
  5447                           	psect	text33
  5448  001430                     __ptext33:
  5449                           	opt stack 0
  5450  001430                     _SleepIfOkay:
  5451                           	opt stack 19
  5452                           
  5453                           ;messages.c: 230: if (MQ_Main_Willing_to_block == 0) {
  5454                           
  5455                           ;incstack = 0
  5456                           ;incstack = 0
  5457  001430  6652               	tstfsz	_MQ_Main_Willing_to_block,c
  5458  001432  D001               	goto	i2l2180
  5459  001434  0012               	return	
  5460  001436                     i2l2180:
  5461                           
  5462                           ;messages.c: 232: }
  5463                           ;messages.c: 235: if (in_low_int()) {
  5464  001436  EC26  F00B         	call	i2_in_low_int	;wreg free
  5465  00143A  5017               	movf	?i2_in_low_int+1,w,c
  5466  00143C  1016               	iorwf	?i2_in_low_int,w,c
  5467  00143E  A4D8               	btfss	status,2,c
  5468  001440  0012               	return	
  5469                           
  5470                           ;messages.c: 237: }
  5471                           ;messages.c: 240: if (!in_high_int()) {
  5472                           
  5473                           ;messages.c: 236: return;
  5474  001442  EC04  F00C         	call	i2_in_high_int	;wreg free
  5475  001446  5015               	movf	?i2_in_high_int+1,w,c
  5476  001448  1014               	iorwf	?i2_in_high_int,w,c
  5477  00144A  B4D8               	btfsc	status,2,c
  5478  00144C  0012               	return	
  5479                           
  5480                           ;messages.c: 242: }
  5481                           ;messages.c: 247: if (check_msg(&ToMainHigh_MQ)) {
  5482                           
  5483                           ;messages.c: 241: return;
  5484  00144E  0101               	movlb	1	; () banked
  5485  001450  0E01               	movlw	high _ToMainHigh_MQ
  5486  001452  6E15               	movwf	?i2_check_msg+1,c
  5487  001454  0101               	movlb	1	; () banked
  5488  001456  0E68               	movlw	low _ToMainHigh_MQ
  5489  001458  6E14               	movwf	?i2_check_msg,c
  5490  00145A  EC8E  F00B         	call	i2_check_msg	;wreg free
  5491  00145E  0900               	iorlw	0
  5492  001460  A4D8               	btfss	status,2,c
  5493  001462  0012               	return	
  5494                           
  5495                           ;messages.c: 249: }
  5496                           ;messages.c: 250: if (check_msg(&ToMainLow_MQ)) {
  5497                           
  5498                           ;messages.c: 248: return;
  5499  001464  0101               	movlb	1	; () banked
  5500  001466  0E01               	movlw	high _ToMainLow_MQ
  5501  001468  6E15               	movwf	?i2_check_msg+1,c
  5502  00146A  0101               	movlb	1	; () banked
  5503  00146C  0E9E               	movlw	low _ToMainLow_MQ
  5504  00146E  6E14               	movwf	?i2_check_msg,c
  5505  001470  EC8E  F00B         	call	i2_check_msg	;wreg free
  5506  001474  0900               	iorlw	0
  5507  001476  B4D8               	btfsc	status,2,c
  5508                           
  5509                           ;messages.c: 252: }
  5510                           ;messages.c: 253: enter_sleep_mode();
  5511                           
  5512                           ;messages.c: 251: return;
  5513  001478  EC18  F00C         	call	_enter_sleep_mode	;wreg free
  5514  00147C  0012               	return	
  5515  00147E                     __end_of_SleepIfOkay:
  5516                           	opt stack 0
  5517                           pclatu	equ	0xFFB
  5518                           pclath	equ	0xFFA
  5519                           tblptru	equ	0xFF8
  5520                           tblptrh	equ	0xFF7
  5521                           tblptrl	equ	0xFF6
  5522                           tablat	equ	0xFF5
  5523                           prodh	equ	0xFF4
  5524                           prodl	equ	0xFF3
  5525                           intcon	equ	0xFF2
  5526                           postinc0	equ	0xFEE
  5527                           fsr0h	equ	0xFEA
  5528                           fsr0l	equ	0xFE9
  5529                           wreg	equ	0xFE8
  5530                           indf1	equ	0xFE7
  5531                           fsr1h	equ	0xFE2
  5532                           fsr1l	equ	0xFE1
  5533                           bsr	equ	0xFE0
  5534                           indf2	equ	0xFDF
  5535                           postinc2	equ	0xFDE
  5536                           postdec2	equ	0xFDD
  5537                           fsr2h	equ	0xFDA
  5538                           fsr2l	equ	0xFD9
  5539                           status	equ	0xFD8
  5540                           
  5541 ;; *************** function i2_check_msg *****************
  5542 ;; Defined at:
  5543 ;;		line 222 in file "../src/messages.c"
  5544 ;; Parameters:    Size  Location     Type
  5545 ;;  check_msg       2   19[COMRAM] PTR struct __msg_queue
  5546 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5547 ;; Auto vars:     Size  Location     Type
  5548 ;;		None
  5549 ;; Return value:  Size  Location     Type
  5550 ;;                  1    wreg      unsigned char 
  5551 ;; Registers used:
  5552 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5553 ;; Tracked objects:
  5554 ;;		On entry : 0/0
  5555 ;;		On exit  : 0/0
  5556 ;;		Unchanged: 0/0
  5557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5558 ;;      Params:         2       0       0       0       0
  5559 ;;      Locals:         0       0       0       0       0
  5560 ;;      Temps:          1       0       0       0       0
  5561 ;;      Totals:         3       0       0       0       0
  5562 ;;Total ram usage:        3 bytes
  5563 ;; Hardware stack levels used:    1
  5564 ;; This function calls:
  5565 ;;		Nothing
  5566 ;; This function is called by:
  5567 ;;		_SleepIfOkay
  5568 ;; This function uses a non-reentrant model
  5569 ;;
  5570                           
  5571                           	psect	text34
  5572  00171C                     __ptext34:
  5573                           	opt stack 0
  5574  00171C                     i2_check_msg:
  5575                           	opt stack 20
  5576                           
  5577                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
  5578                           
  5579                           ;incstack = 0
  5580                           ;incstack = 0
  5581  00171C  EE20 F035          	lfsr	2,53
  5582  001720  5014               	movf	i2check_msg@qptr,w,c
  5583  001722  26D9               	addwf	fsr2l,f,c
  5584  001724  5015               	movf	i2check_msg@qptr+1,w,c
  5585  001726  22DA               	addwfc	fsr2h,f,c
  5586  001728  50DF               	movf	indf2,w,c
  5587  00172A  6E16               	movwf	??i2_check_msg& (0+255),c
  5588  00172C  5016               	movf	??i2_check_msg,w,c
  5589  00172E  0D0D               	mullw	13
  5590  001730  50F3               	movf	prodl,w,c
  5591  001732  2414               	addwf	i2check_msg@qptr,w,c
  5592  001734  6ED9               	movwf	fsr2l,c
  5593  001736  50F4               	movf	prodh,w,c
  5594  001738  2015               	addwfc	i2check_msg@qptr+1,w,c
  5595  00173A  6EDA               	movwf	fsr2h,c
  5596  00173C  50DF               	movf	indf2,w,c
  5597  00173E  0012               	return	
  5598  001740                     __end_ofi2_check_msg:
  5599                           	opt stack 0
  5600                           pclatu	equ	0xFFB
  5601                           pclath	equ	0xFFA
  5602                           tblptru	equ	0xFF8
  5603                           tblptrh	equ	0xFF7
  5604                           tblptrl	equ	0xFF6
  5605                           tablat	equ	0xFF5
  5606                           prodh	equ	0xFF4
  5607                           prodl	equ	0xFF3
  5608                           intcon	equ	0xFF2
  5609                           postinc0	equ	0xFEE
  5610                           fsr0h	equ	0xFEA
  5611                           fsr0l	equ	0xFE9
  5612                           wreg	equ	0xFE8
  5613                           indf1	equ	0xFE7
  5614                           fsr1h	equ	0xFE2
  5615                           fsr1l	equ	0xFE1
  5616                           bsr	equ	0xFE0
  5617                           indf2	equ	0xFDF
  5618                           postinc2	equ	0xFDE
  5619                           postdec2	equ	0xFDD
  5620                           fsr2h	equ	0xFDA
  5621                           fsr2l	equ	0xFD9
  5622                           status	equ	0xFD8
  5623                           
  5624 ;; *************** function i2_in_low_int *****************
  5625 ;; Defined at:
  5626 ;;		line 33 in file "../src/interrupts.c"
  5627 ;; Parameters:    Size  Location     Type
  5628 ;;		None
  5629 ;; Auto vars:     Size  Location     Type
  5630 ;;		None
  5631 ;; Return value:  Size  Location     Type
  5632 ;;                  2   21[COMRAM] int 
  5633 ;; Registers used:
  5634 ;;		wreg, status,2, status,0, cstack
  5635 ;; Tracked objects:
  5636 ;;		On entry : 0/0
  5637 ;;		On exit  : 0/0
  5638 ;;		Unchanged: 0/0
  5639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5640 ;;      Params:         2       0       0       0       0
  5641 ;;      Locals:         0       0       0       0       0
  5642 ;;      Temps:          0       0       0       0       0
  5643 ;;      Totals:         2       0       0       0       0
  5644 ;;Total ram usage:        2 bytes
  5645 ;; Hardware stack levels used:    1
  5646 ;; Hardware stack levels required when called:    1
  5647 ;; This function calls:
  5648 ;;		i2_in_high_int
  5649 ;; This function is called by:
  5650 ;;		_SleepIfOkay
  5651 ;; This function uses a non-reentrant model
  5652 ;;
  5653                           
  5654                           	psect	text35
  5655  00164C                     __ptext35:
  5656                           	opt stack 0
  5657  00164C                     i2_in_low_int:
  5658                           	opt stack 19
  5659                           
  5660                           ;interrupts.c: 34: if (INTCONbits.GIEL == 1) {
  5661                           
  5662                           ;incstack = 0
  5663                           ;incstack = 0
  5664  00164C  ACF2               	btfss	intcon,6,c	;volatile
  5665  00164E  D005               	goto	i2l2676
  5666                           
  5667                           ;interrupts.c: 35: return (0);
  5668  001650  0E00               	movlw	0
  5669  001652  6E17               	movwf	?i2_in_low_int+1,c
  5670  001654  0E00               	movlw	0
  5671  001656  6E16               	movwf	?i2_in_low_int,c
  5672  001658  0012               	return	
  5673  00165A                     i2l2676:
  5674  00165A  EC04  F00C         	call	i2_in_high_int	;wreg free
  5675  00165E  5015               	movf	?i2_in_high_int+1,w,c
  5676  001660  1014               	iorwf	?i2_in_high_int,w,c
  5677  001662  B4D8               	btfsc	status,2,c
  5678  001664  D005               	goto	i2l2684
  5679                           
  5680                           ;interrupts.c: 37: return (0);
  5681  001666  0E00               	movlw	0
  5682  001668  6E17               	movwf	?i2_in_low_int+1,c
  5683  00166A  0E00               	movlw	0
  5684  00166C  6E16               	movwf	?i2_in_low_int,c
  5685  00166E  0012               	return	
  5686  001670                     i2l2684:
  5687                           
  5688                           ;interrupts.c: 39: return (1);
  5689  001670  0E00               	movlw	0
  5690  001672  6E17               	movwf	?i2_in_low_int+1,c
  5691  001674  0E01               	movlw	1
  5692  001676  6E16               	movwf	?i2_in_low_int,c
  5693  001678  0012               	return	
  5694  00167A                     __end_ofi2_in_low_int:
  5695                           	opt stack 0
  5696                           pclatu	equ	0xFFB
  5697                           pclath	equ	0xFFA
  5698                           tblptru	equ	0xFF8
  5699                           tblptrh	equ	0xFF7
  5700                           tblptrl	equ	0xFF6
  5701                           tablat	equ	0xFF5
  5702                           prodh	equ	0xFF4
  5703                           prodl	equ	0xFF3
  5704                           intcon	equ	0xFF2
  5705                           postinc0	equ	0xFEE
  5706                           fsr0h	equ	0xFEA
  5707                           fsr0l	equ	0xFE9
  5708                           wreg	equ	0xFE8
  5709                           indf1	equ	0xFE7
  5710                           fsr1h	equ	0xFE2
  5711                           fsr1l	equ	0xFE1
  5712                           bsr	equ	0xFE0
  5713                           indf2	equ	0xFDF
  5714                           postinc2	equ	0xFDE
  5715                           postdec2	equ	0xFDD
  5716                           fsr2h	equ	0xFDA
  5717                           fsr2l	equ	0xFD9
  5718                           status	equ	0xFD8
  5719                           
  5720 ;; *************** function i2_in_high_int *****************
  5721 ;; Defined at:
  5722 ;;		line 25 in file "../src/interrupts.c"
  5723 ;; Parameters:    Size  Location     Type
  5724 ;;		None
  5725 ;; Auto vars:     Size  Location     Type
  5726 ;;		None
  5727 ;; Return value:  Size  Location     Type
  5728 ;;                  2   19[COMRAM] int 
  5729 ;; Registers used:
  5730 ;;		wreg, status,2
  5731 ;; Tracked objects:
  5732 ;;		On entry : 0/0
  5733 ;;		On exit  : 0/0
  5734 ;;		Unchanged: 0/0
  5735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5736 ;;      Params:         2       0       0       0       0
  5737 ;;      Locals:         0       0       0       0       0
  5738 ;;      Temps:          0       0       0       0       0
  5739 ;;      Totals:         2       0       0       0       0
  5740 ;;Total ram usage:        2 bytes
  5741 ;; Hardware stack levels used:    1
  5742 ;; This function calls:
  5743 ;;		Nothing
  5744 ;; This function is called by:
  5745 ;;		_SleepIfOkay
  5746 ;;		i2_in_low_int
  5747 ;; This function uses a non-reentrant model
  5748 ;;
  5749                           
  5750                           	psect	text36
  5751  001808                     __ptext36:
  5752                           	opt stack 0
  5753  001808                     i2_in_high_int:
  5754                           	opt stack 19
  5755                           
  5756                           ;interrupts.c: 26: return (!INTCONbits.GIEH);
  5757                           
  5758                           ;incstack = 0
  5759                           ;incstack = 0
  5760  001808  0E00               	movlw	0
  5761  00180A  AEF2               	btfss	intcon,7,c	;volatile
  5762  00180C  0E01               	movlw	1
  5763  00180E  6E14               	movwf	?i2_in_high_int,c
  5764  001810  6A15               	clrf	?i2_in_high_int+1,c
  5765  001812  0012               	return	
  5766  001814                     __end_ofi2_in_high_int:
  5767                           	opt stack 0
  5768                           pclatu	equ	0xFFB
  5769                           pclath	equ	0xFFA
  5770                           tblptru	equ	0xFF8
  5771                           tblptrh	equ	0xFF7
  5772                           tblptrl	equ	0xFF6
  5773                           tablat	equ	0xFF5
  5774                           prodh	equ	0xFF4
  5775                           prodl	equ	0xFF3
  5776                           intcon	equ	0xFF2
  5777                           postinc0	equ	0xFEE
  5778                           fsr0h	equ	0xFEA
  5779                           fsr0l	equ	0xFE9
  5780                           wreg	equ	0xFE8
  5781                           indf1	equ	0xFE7
  5782                           fsr1h	equ	0xFE2
  5783                           fsr1l	equ	0xFE1
  5784                           bsr	equ	0xFE0
  5785                           indf2	equ	0xFDF
  5786                           postinc2	equ	0xFDE
  5787                           postdec2	equ	0xFDD
  5788                           fsr2h	equ	0xFDA
  5789                           fsr2l	equ	0xFD9
  5790                           status	equ	0xFD8
  5791                           
  5792 ;; *************** function _enter_sleep_mode *****************
  5793 ;; Defined at:
  5794 ;;		line 202 in file "../src/messages.c"
  5795 ;; Parameters:    Size  Location     Type
  5796 ;;		None
  5797 ;; Auto vars:     Size  Location     Type
  5798 ;;		None
  5799 ;; Return value:  Size  Location     Type
  5800 ;;		None               void
  5801 ;; Registers used:
  5802 ;;		None
  5803 ;; Tracked objects:
  5804 ;;		On entry : 0/0
  5805 ;;		On exit  : 0/0
  5806 ;;		Unchanged: 0/0
  5807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5808 ;;      Params:         0       0       0       0       0
  5809 ;;      Locals:         0       0       0       0       0
  5810 ;;      Temps:          0       0       0       0       0
  5811 ;;      Totals:         0       0       0       0       0
  5812 ;;Total ram usage:        0 bytes
  5813 ;; Hardware stack levels used:    1
  5814 ;; This function calls:
  5815 ;;		Nothing
  5816 ;; This function is called by:
  5817 ;;		_SleepIfOkay
  5818 ;; This function uses a non-reentrant model
  5819 ;;
  5820                           
  5821                           	psect	text37
  5822  001830                     __ptext37:
  5823                           	opt stack 0
  5824  001830                     _enter_sleep_mode:
  5825                           	opt stack 20
  5826                           
  5827                           ;messages.c: 204: OSCCONbits.IDLEN = 1;
  5828                           
  5829                           ;incstack = 0
  5830                           ;incstack = 0
  5831  001830  8ED3               	bsf	4051,7,c	;volatile
  5832  001832  0003               	sleep		;# 
  5833  001834  0012               	return	
  5834  001836                     __end_of_enter_sleep_mode:
  5835                           	opt stack 0
  5836                           pclatu	equ	0xFFB
  5837                           pclath	equ	0xFFA
  5838                           tblptru	equ	0xFF8
  5839                           tblptrh	equ	0xFF7
  5840                           tblptrl	equ	0xFF6
  5841                           tablat	equ	0xFF5
  5842                           prodh	equ	0xFF4
  5843                           prodl	equ	0xFF3
  5844                           intcon	equ	0xFF2
  5845                           postinc0	equ	0xFEE
  5846                           fsr0h	equ	0xFEA
  5847                           fsr0l	equ	0xFE9
  5848                           wreg	equ	0xFE8
  5849                           indf1	equ	0xFE7
  5850                           fsr1h	equ	0xFE2
  5851                           fsr1l	equ	0xFE1
  5852                           bsr	equ	0xFE0
  5853                           indf2	equ	0xFDF
  5854                           postinc2	equ	0xFDE
  5855                           postdec2	equ	0xFDD
  5856                           fsr2h	equ	0xFDA
  5857                           fsr2l	equ	0xFD9
  5858                           status	equ	0xFD8
  5859                           
  5860 ;; *************** function _uart_recv_int_handler *****************
  5861 ;; Defined at:
  5862 ;;		line 11 in file "../src/my_uart.c"
  5863 ;; Parameters:    Size  Location     Type
  5864 ;;		None
  5865 ;; Auto vars:     Size  Location     Type
  5866 ;;		None
  5867 ;; Return value:  Size  Location     Type
  5868 ;;		None               void
  5869 ;; Registers used:
  5870 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5871 ;; Tracked objects:
  5872 ;;		On entry : 0/0
  5873 ;;		On exit  : 0/0
  5874 ;;		Unchanged: 0/0
  5875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5876 ;;      Params:         0       0       0       0       0
  5877 ;;      Locals:         0       0       0       0       0
  5878 ;;      Temps:          2       0       0       0       0
  5879 ;;      Totals:         2       0       0       0       0
  5880 ;;Total ram usage:        2 bytes
  5881 ;; Hardware stack levels used:    1
  5882 ;; Hardware stack levels required when called:    3
  5883 ;; This function calls:
  5884 ;;		_ToMainLow_sendmsg
  5885 ;;		_ReadUSART
  5886 ;; This function is called by:
  5887 ;;		_InterruptHandlerHigh
  5888 ;; This function uses a non-reentrant model
  5889 ;;
  5890                           
  5891                           	psect	text38
  5892  000E3A                     __ptext38:
  5893                           	opt stack 0
  5894  000E3A                     _uart_recv_int_handler:
  5895                           	opt stack 18
  5896                           
  5897                           ;my_uart.c: 12: if ((PIR1bits.RCIF)) {
  5898                           
  5899                           ;incstack = 0
  5900                           ;incstack = 0
  5901  000E3A  AA9E               	btfss	3998,5,c	;volatile
  5902  000E3C  D043               	goto	i2l2908
  5903                           
  5904                           ;my_uart.c: 13: uc_ptr->inbuffer[uc_ptr->inbuflen] = ReadUSART();
  5905  000E3E  EE20 F009          	lfsr	2,9
  5906  000E42  5062               	movf	_uc_ptr,w,c
  5907  000E44  26D9               	addwf	fsr2l,f,c
  5908  000E46  5063               	movf	_uc_ptr+1,w,c
  5909  000E48  22DA               	addwfc	fsr2h,f,c
  5910  000E4A  50DF               	movf	indf2,w,c
  5911  000E4C  6E2E               	movwf	??_uart_recv_int_handler& (0+255),c
  5912  000E4E  502E               	movf	??_uart_recv_int_handler,w,c
  5913  000E50  0D01               	mullw	1
  5914  000E52  0E05               	movlw	5
  5915  000E54  26F3               	addwf	prodl,f,c
  5916  000E56  0E00               	movlw	0
  5917  000E58  22F4               	addwfc	prodh,f,c
  5918  000E5A  50F3               	movf	prodl,w,c
  5919  000E5C  2462               	addwf	_uc_ptr,w,c
  5920  000E5E  6ED9               	movwf	fsr2l,c
  5921  000E60  50F4               	movf	prodh,w,c
  5922  000E62  2063               	addwfc	_uc_ptr+1,w,c
  5923  000E64  6EDA               	movwf	fsr2h,c
  5924  000E66  ECC2  F00B         	call	_ReadUSART	;wreg free
  5925  000E6A  6EDF               	movwf	indf2,c
  5926                           
  5927                           ;my_uart.c: 14: uc_ptr->inbuflen++;
  5928  000E6C  EE20 F009          	lfsr	2,9
  5929  000E70  5062               	movf	_uc_ptr,w,c
  5930  000E72  26D9               	addwf	fsr2l,f,c
  5931  000E74  5063               	movf	_uc_ptr+1,w,c
  5932  000E76  22DA               	addwfc	fsr2h,f,c
  5933  000E78  2ADF               	incf	indf2,f,c
  5934                           
  5935                           ;my_uart.c: 16: if (uc_ptr->inbuflen == 3) {
  5936  000E7A  EE20 F009          	lfsr	2,9
  5937  000E7E  5062               	movf	_uc_ptr,w,c
  5938  000E80  26D9               	addwf	fsr2l,f,c
  5939  000E82  5063               	movf	_uc_ptr+1,w,c
  5940  000E84  22DA               	addwfc	fsr2h,f,c
  5941  000E86  0E03               	movlw	3
  5942  000E88  62DF               	cpfseq	indf2,c
  5943  000E8A  D01C               	goto	i2l2908
  5944                           
  5945                           ;my_uart.c: 17: ToMainLow_sendmsg(uc_ptr->inbuflen, 60, (void *) uc_ptr->inbuffer);
  5946  000E8C  EE20 F009          	lfsr	2,9
  5947  000E90  5062               	movf	_uc_ptr,w,c
  5948  000E92  26D9               	addwf	fsr2l,f,c
  5949  000E94  5063               	movf	_uc_ptr+1,w,c
  5950  000E96  22DA               	addwfc	fsr2h,f,c
  5951  000E98  50DF               	movf	indf2,w,c
  5952  000E9A  6E2A               	movwf	?_ToMainLow_sendmsg,c
  5953  000E9C  6E2E               	movwf	??_uart_recv_int_handler& (0+255),c
  5954  000E9E  0E3C               	movlw	60
  5955  000EA0  6E2B               	movwf	?_ToMainLow_sendmsg+1,c
  5956  000EA2  502E               	movf	??_uart_recv_int_handler& (0+255),w,c
  5957  000EA4  0E05               	movlw	5
  5958  000EA6  2462               	addwf	_uc_ptr,w,c
  5959  000EA8  6E2C               	movwf	?_ToMainLow_sendmsg+2,c
  5960  000EAA  0E00               	movlw	0
  5961  000EAC  2063               	addwfc	_uc_ptr+1,w,c
  5962  000EAE  6E2D               	movwf	?_ToMainLow_sendmsg+3,c
  5963  000EB0  ECA0  F00B         	call	_ToMainLow_sendmsg	;wreg free
  5964                           
  5965                           ;my_uart.c: 18: uc_ptr->inbuflen = 0;
  5966  000EB4  EE20 F009          	lfsr	2,9
  5967  000EB8  5062               	movf	_uc_ptr,w,c
  5968  000EBA  26D9               	addwf	fsr2l,f,c
  5969  000EBC  5063               	movf	_uc_ptr+1,w,c
  5970  000EBE  22DA               	addwfc	fsr2h,f,c
  5971  000EC0  0E00               	movlw	0
  5972  000EC2  6EDF               	movwf	indf2,c
  5973  000EC4                     i2l2908:
  5974                           
  5975                           ;my_uart.c: 19: }
  5976                           ;my_uart.c: 20: }
  5977                           ;my_uart.c: 21: if (USART_Status.OVERRUN_ERROR == 1) {
  5978  000EC4  A653               	btfss	_USART_Status,3,c
  5979  000EC6  0012               	return	
  5980                           
  5981                           ;my_uart.c: 24: RCSTAbits.CREN = 0;
  5982  000EC8  98AB               	bcf	4011,4,c	;volatile
  5983                           
  5984                           ;my_uart.c: 25: RCSTAbits.CREN = 1;
  5985  000ECA  88AB               	bsf	4011,4,c	;volatile
  5986                           
  5987                           ;my_uart.c: 26: ToMainLow_sendmsg(0, 30, (void *) 0);
  5988  000ECC  6E2E               	movwf	??_uart_recv_int_handler& (0+255),c
  5989  000ECE  0E00               	movlw	0
  5990  000ED0  6E2A               	movwf	?_ToMainLow_sendmsg,c
  5991  000ED2  502E               	movf	??_uart_recv_int_handler& (0+255),w,c
  5992  000ED4  6E2F               	movwf	(??_uart_recv_int_handler+1)& (0+255),c
  5993  000ED6  0E1E               	movlw	30
  5994  000ED8  6E2B               	movwf	?_ToMainLow_sendmsg+1,c
  5995  000EDA  502F               	movf	(??_uart_recv_int_handler+1)& (0+255),w,c
  5996  000EDC  0E00               	movlw	0
  5997  000EDE  6E2D               	movwf	?_ToMainLow_sendmsg+3,c
  5998  000EE0  0E00               	movlw	0
  5999  000EE2  6E2C               	movwf	?_ToMainLow_sendmsg+2,c
  6000  000EE4  ECA0  F00B         	call	_ToMainLow_sendmsg	;wreg free
  6001  000EE8  0012               	return	
  6002  000EEA                     __end_of_uart_recv_int_handler:
  6003                           	opt stack 0
  6004                           pclatu	equ	0xFFB
  6005                           pclath	equ	0xFFA
  6006                           tblptru	equ	0xFF8
  6007                           tblptrh	equ	0xFF7
  6008                           tblptrl	equ	0xFF6
  6009                           tablat	equ	0xFF5
  6010                           prodh	equ	0xFF4
  6011                           prodl	equ	0xFF3
  6012                           intcon	equ	0xFF2
  6013                           postinc0	equ	0xFEE
  6014                           fsr0h	equ	0xFEA
  6015                           fsr0l	equ	0xFE9
  6016                           wreg	equ	0xFE8
  6017                           indf1	equ	0xFE7
  6018                           fsr1h	equ	0xFE2
  6019                           fsr1l	equ	0xFE1
  6020                           bsr	equ	0xFE0
  6021                           indf2	equ	0xFDF
  6022                           postinc2	equ	0xFDE
  6023                           postdec2	equ	0xFDD
  6024                           fsr2h	equ	0xFDA
  6025                           fsr2l	equ	0xFD9
  6026                           status	equ	0xFD8
  6027                           
  6028 ;; *************** function _ReadUSART *****************
  6029 ;; Defined at:
  6030 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic18\plib\USART\uread.c"
  6031 ;; Parameters:    Size  Location     Type
  6032 ;;		None
  6033 ;; Auto vars:     Size  Location     Type
  6034 ;;  data            1   19[COMRAM] unsigned char 
  6035 ;; Return value:  Size  Location     Type
  6036 ;;                  1    wreg      unsigned char 
  6037 ;; Registers used:
  6038 ;;		wreg, status,2, status,0
  6039 ;; Tracked objects:
  6040 ;;		On entry : 0/0
  6041 ;;		On exit  : 0/0
  6042 ;;		Unchanged: 0/0
  6043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6044 ;;      Params:         0       0       0       0       0
  6045 ;;      Locals:         1       0       0       0       0
  6046 ;;      Temps:          0       0       0       0       0
  6047 ;;      Totals:         1       0       0       0       0
  6048 ;;Total ram usage:        1 bytes
  6049 ;; Hardware stack levels used:    1
  6050 ;; This function calls:
  6051 ;;		Nothing
  6052 ;; This function is called by:
  6053 ;;		_uart_recv_int_handler
  6054 ;; This function uses a non-reentrant model
  6055 ;;
  6056                           
  6057                           	psect	text39
  6058  001784                     __ptext39:
  6059                           	opt stack 0
  6060  001784                     _ReadUSART:
  6061                           	opt stack 20
  6062                           
  6063                           ;incstack = 0
  6064                           ;incstack = 0
  6065  001784  0EF2               	movlw	242
  6066  001786  1653               	andwf	_USART_Status,f,c
  6067  001788  ACAB               	btfss	4011,6,c	;volatile
  6068  00178A  D003               	goto	i2l545
  6069  00178C  9053               	bcf	_USART_Status,0,c
  6070  00178E  B0AB               	btfsc	4011,0,c	;volatile
  6071  001790  8053               	bsf	_USART_Status,0,c
  6072  001792                     i2l545:
  6073  001792  B4AB               	btfsc	4011,2,c	;volatile
  6074  001794  8453               	bsf	_USART_Status,2,c
  6075  001796  B2AB               	btfsc	4011,1,c	;volatile
  6076  001798  8653               	bsf	_USART_Status,3,c
  6077  00179A  CFAE F014          	movff	4014,ReadUSART@data	;volatile
  6078  00179E  5014               	movf	ReadUSART@data,w,c
  6079  0017A0  0012               	return	
  6080  0017A2                     __end_of_ReadUSART:
  6081                           	opt stack 0
  6082                           pclatu	equ	0xFFB
  6083                           pclath	equ	0xFFA
  6084                           tblptru	equ	0xFF8
  6085                           tblptrh	equ	0xFF7
  6086                           tblptrl	equ	0xFF6
  6087                           tablat	equ	0xFF5
  6088                           prodh	equ	0xFF4
  6089                           prodl	equ	0xFF3
  6090                           intcon	equ	0xFF2
  6091                           postinc0	equ	0xFEE
  6092                           fsr0h	equ	0xFEA
  6093                           fsr0l	equ	0xFE9
  6094                           wreg	equ	0xFE8
  6095                           indf1	equ	0xFE7
  6096                           fsr1h	equ	0xFE2
  6097                           fsr1l	equ	0xFE1
  6098                           bsr	equ	0xFE0
  6099                           indf2	equ	0xFDF
  6100                           postinc2	equ	0xFDE
  6101                           postdec2	equ	0xFDD
  6102                           fsr2h	equ	0xFDA
  6103                           fsr2l	equ	0xFD9
  6104                           status	equ	0xFD8
  6105                           
  6106 ;; *************** function _ToMainLow_sendmsg *****************
  6107 ;; Defined at:
  6108 ;;		line 103 in file "../src/messages.c"
  6109 ;; Parameters:    Size  Location     Type
  6110 ;;  length          1   41[COMRAM] unsigned char 
  6111 ;;  msgtype         1   42[COMRAM] unsigned char 
  6112 ;;  data            2   43[COMRAM] PTR void 
  6113 ;;		 -> NULL(0), main@uc(12), 
  6114 ;; Auto vars:     Size  Location     Type
  6115 ;;		None
  6116 ;; Return value:  Size  Location     Type
  6117 ;;                  1    wreg      char 
  6118 ;; Registers used:
  6119 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6120 ;; Tracked objects:
  6121 ;;		On entry : 0/0
  6122 ;;		On exit  : 0/0
  6123 ;;		Unchanged: 0/0
  6124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6125 ;;      Params:         4       0       0       0       0
  6126 ;;      Locals:         0       0       0       0       0
  6127 ;;      Temps:          0       0       0       0       0
  6128 ;;      Totals:         4       0       0       0       0
  6129 ;;Total ram usage:        4 bytes
  6130 ;; Hardware stack levels used:    1
  6131 ;; Hardware stack levels required when called:    2
  6132 ;; This function calls:
  6133 ;;		_send_msg
  6134 ;; This function is called by:
  6135 ;;		_uart_recv_int_handler
  6136 ;; This function uses a non-reentrant model
  6137 ;;
  6138                           
  6139                           	psect	text40
  6140  001740                     __ptext40:
  6141                           	opt stack 0
  6142  001740                     _ToMainLow_sendmsg:
  6143                           	opt stack 18
  6144                           
  6145                           ;messages.c: 109: return (send_msg(&ToMainLow_MQ, length, msgtype, data));
  6146                           ;	Return value of _ToMainLow_sendmsg is never used
  6147                           
  6148                           ;incstack = 0
  6149                           ;incstack = 0
  6150  001740  0101               	movlb	1	; () banked
  6151  001742  0E01               	movlw	high _ToMainLow_MQ
  6152  001744  6E1F               	movwf	?_send_msg+1,c
  6153  001746  0101               	movlb	1	; () banked
  6154  001748  0E9E               	movlw	low _ToMainLow_MQ
  6155  00174A  6E1E               	movwf	?_send_msg,c
  6156  00174C  C02A  F020         	movff	ToMainLow_sendmsg@length,?_send_msg+2
  6157  001750  C02B  F021         	movff	ToMainLow_sendmsg@msgtype,?_send_msg+3
  6158  001754  C02C  F022         	movff	ToMainLow_sendmsg@data,?_send_msg+4
  6159  001758  C02D  F023         	movff	ToMainLow_sendmsg@data+1,?_send_msg+5
  6160  00175C  EC75  F007         	call	_send_msg	;wreg free
  6161  001760  0012               	return	
  6162  001762                     __end_of_ToMainLow_sendmsg:
  6163                           	opt stack 0
  6164                           pclatu	equ	0xFFB
  6165                           pclath	equ	0xFFA
  6166                           tblptru	equ	0xFF8
  6167                           tblptrh	equ	0xFF7
  6168                           tblptrl	equ	0xFF6
  6169                           tablat	equ	0xFF5
  6170                           prodh	equ	0xFF4
  6171                           prodl	equ	0xFF3
  6172                           intcon	equ	0xFF2
  6173                           postinc0	equ	0xFEE
  6174                           fsr0h	equ	0xFEA
  6175                           fsr0l	equ	0xFE9
  6176                           wreg	equ	0xFE8
  6177                           indf1	equ	0xFE7
  6178                           fsr1h	equ	0xFE2
  6179                           fsr1l	equ	0xFE1
  6180                           bsr	equ	0xFE0
  6181                           indf2	equ	0xFDF
  6182                           postinc2	equ	0xFDE
  6183                           postdec2	equ	0xFDD
  6184                           fsr2h	equ	0xFDA
  6185                           fsr2l	equ	0xFD9
  6186                           status	equ	0xFD8
  6187                           
  6188 ;; *************** function _adc_int_handler *****************
  6189 ;; Defined at:
  6190 ;;		line 78 in file "../src/user_interrupts.c"
  6191 ;; Parameters:    Size  Location     Type
  6192 ;;		None
  6193 ;; Auto vars:     Size  Location     Type
  6194 ;;		None
  6195 ;; Return value:  Size  Location     Type
  6196 ;;		None               void
  6197 ;; Registers used:
  6198 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  6199 ;; Tracked objects:
  6200 ;;		On entry : 0/0
  6201 ;;		On exit  : 0/0
  6202 ;;		Unchanged: 0/0
  6203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6204 ;;      Params:         0       0       0       0       0
  6205 ;;      Locals:         0       0       0       0       0
  6206 ;;      Temps:          0       0       0       0       0
  6207 ;;      Totals:         0       0       0       0       0
  6208 ;;Total ram usage:        0 bytes
  6209 ;; Hardware stack levels used:    1
  6210 ;; Hardware stack levels required when called:    1
  6211 ;; This function calls:
  6212 ;;		_ReadADC
  6213 ;;		_CloseTimer1
  6214 ;; This function is called by:
  6215 ;;		_InterruptHandlerHigh
  6216 ;; This function uses a non-reentrant model
  6217 ;;
  6218                           
  6219                           	psect	text41
  6220  00161C                     __ptext41:
  6221                           	opt stack 0
  6222  00161C                     _adc_int_handler:
  6223                           	opt stack 20
  6224                           
  6225                           ;user_interrupts.c: 80: ADCValue = ReadADC();
  6226                           
  6227                           ;incstack = 0
  6228                           ;incstack = 0
  6229  00161C  EC0F  F00C         	call	_ReadADC	;wreg free
  6230  001620  C014  F048         	movff	?_ReadADC,_ADCValue
  6231  001624  C015  F049         	movff	?_ReadADC+1,_ADCValue+1
  6232                           
  6233                           ;user_interrupts.c: 87: if(counter2 < 299)
  6234  001628  504D               	movf	_counter2+1,w,c
  6235  00162A  0A80               	xorlw	128
  6236  00162C  0F7F               	addlw	-129
  6237  00162E  0E2B               	movlw	43
  6238  001630  B4D8               	btfsc	status,2,c
  6239  001632  5C4C               	subwf	_counter2,w,c
  6240  001634  B0D8               	btfsc	status,0,c
  6241  001636  D003               	goto	i2l1328
  6242                           
  6243                           ;user_interrupts.c: 88: counter2++;
  6244  001638  4A4C               	infsnz	_counter2,f,c
  6245  00163A  2A4D               	incf	_counter2+1,f,c
  6246  00163C  0012               	return	
  6247  00163E                     i2l1328:
  6248                           
  6249                           ;user_interrupts.c: 89: else
  6250                           ;user_interrupts.c: 90: {
  6251                           ;user_interrupts.c: 91: counter2 = 0;
  6252  00163E  0E00               	movlw	0
  6253  001640  6E4D               	movwf	_counter2+1,c
  6254  001642  0E00               	movlw	0
  6255  001644  6E4C               	movwf	_counter2,c
  6256                           
  6257                           ;user_interrupts.c: 92: CloseTimer1();
  6258  001646  EC1B  F00C         	call	_CloseTimer1	;wreg free
  6259  00164A  0012               	return	
  6260  00164C                     __end_of_adc_int_handler:
  6261                           	opt stack 0
  6262                           pclatu	equ	0xFFB
  6263                           pclath	equ	0xFFA
  6264                           tblptru	equ	0xFF8
  6265                           tblptrh	equ	0xFF7
  6266                           tblptrl	equ	0xFF6
  6267                           tablat	equ	0xFF5
  6268                           prodh	equ	0xFF4
  6269                           prodl	equ	0xFF3
  6270                           intcon	equ	0xFF2
  6271                           postinc0	equ	0xFEE
  6272                           fsr0h	equ	0xFEA
  6273                           fsr0l	equ	0xFE9
  6274                           wreg	equ	0xFE8
  6275                           indf1	equ	0xFE7
  6276                           fsr1h	equ	0xFE2
  6277                           fsr1l	equ	0xFE1
  6278                           bsr	equ	0xFE0
  6279                           indf2	equ	0xFDF
  6280                           postinc2	equ	0xFDE
  6281                           postdec2	equ	0xFDD
  6282                           fsr2h	equ	0xFDA
  6283                           fsr2l	equ	0xFD9
  6284                           status	equ	0xFD8
  6285                           
  6286 ;; *************** function _CloseTimer1 *****************
  6287 ;; Defined at:
  6288 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic18\plib\Timers\t1close.c"
  6289 ;; Parameters:    Size  Location     Type
  6290 ;;		None
  6291 ;; Auto vars:     Size  Location     Type
  6292 ;;		None
  6293 ;; Return value:  Size  Location     Type
  6294 ;;		None               void
  6295 ;; Registers used:
  6296 ;;		None
  6297 ;; Tracked objects:
  6298 ;;		On entry : 0/0
  6299 ;;		On exit  : 0/0
  6300 ;;		Unchanged: 0/0
  6301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6302 ;;      Params:         0       0       0       0       0
  6303 ;;      Locals:         0       0       0       0       0
  6304 ;;      Temps:          0       0       0       0       0
  6305 ;;      Totals:         0       0       0       0       0
  6306 ;;Total ram usage:        0 bytes
  6307 ;; Hardware stack levels used:    1
  6308 ;; This function calls:
  6309 ;;		Nothing
  6310 ;; This function is called by:
  6311 ;;		_adc_int_handler
  6312 ;; This function uses a non-reentrant model
  6313 ;;
  6314                           
  6315                           	psect	text42
  6316  001836                     __ptext42:
  6317                           	opt stack 0
  6318  001836                     _CloseTimer1:
  6319                           	opt stack 20
  6320                           
  6321                           ;incstack = 0
  6322                           ;incstack = 0
  6323  001836  90CD               	bcf	4045,0,c	;volatile
  6324  001838  909D               	bcf	3997,0,c	;volatile
  6325  00183A  0012               	return	
  6326  00183C                     __end_of_CloseTimer1:
  6327                           	opt stack 0
  6328                           pclatu	equ	0xFFB
  6329                           pclath	equ	0xFFA
  6330                           tblptru	equ	0xFF8
  6331                           tblptrh	equ	0xFF7
  6332                           tblptrl	equ	0xFF6
  6333                           tablat	equ	0xFF5
  6334                           prodh	equ	0xFF4
  6335                           prodl	equ	0xFF3
  6336                           intcon	equ	0xFF2
  6337                           postinc0	equ	0xFEE
  6338                           fsr0h	equ	0xFEA
  6339                           fsr0l	equ	0xFE9
  6340                           wreg	equ	0xFE8
  6341                           indf1	equ	0xFE7
  6342                           fsr1h	equ	0xFE2
  6343                           fsr1l	equ	0xFE1
  6344                           bsr	equ	0xFE0
  6345                           indf2	equ	0xFDF
  6346                           postinc2	equ	0xFDE
  6347                           postdec2	equ	0xFDD
  6348                           fsr2h	equ	0xFDA
  6349                           fsr2l	equ	0xFD9
  6350                           status	equ	0xFD8
  6351                           
  6352 ;; *************** function _ReadADC *****************
  6353 ;; Defined at:
  6354 ;;		line 25 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic18\plib\ADC\adcread.c"
  6355 ;; Parameters:    Size  Location     Type
  6356 ;;		None
  6357 ;; Auto vars:     Size  Location     Type
  6358 ;;		None
  6359 ;; Return value:  Size  Location     Type
  6360 ;;                  2   19[COMRAM] int 
  6361 ;; Registers used:
  6362 ;;		wreg, status,2
  6363 ;; Tracked objects:
  6364 ;;		On entry : 0/0
  6365 ;;		On exit  : 0/0
  6366 ;;		Unchanged: 0/0
  6367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6368 ;;      Params:         2       0       0       0       0
  6369 ;;      Locals:         0       0       0       0       0
  6370 ;;      Temps:          0       0       0       0       0
  6371 ;;      Totals:         2       0       0       0       0
  6372 ;;Total ram usage:        2 bytes
  6373 ;; Hardware stack levels used:    1
  6374 ;; This function calls:
  6375 ;;		Nothing
  6376 ;; This function is called by:
  6377 ;;		_adc_int_handler
  6378 ;; This function uses a non-reentrant model
  6379 ;;
  6380                           
  6381                           	psect	text43
  6382  00181E                     __ptext43:
  6383                           	opt stack 0
  6384  00181E                     _ReadADC:
  6385                           	opt stack 20
  6386                           
  6387                           ;incstack = 0
  6388                           ;incstack = 0
  6389  00181E  50C4               	movf	4036,w,c	;volatile
  6390  001820  6E15               	movwf	?_ReadADC+1,c
  6391  001822  50C3               	movf	4035,w,c	;volatile
  6392  001824  6E14               	movwf	?_ReadADC,c
  6393  001826  0012               	return	
  6394  001828                     __end_of_ReadADC:
  6395                           	opt stack 0
  6396                           pclatu	equ	0xFFB
  6397                           pclath	equ	0xFFA
  6398                           tblptru	equ	0xFF8
  6399                           tblptrh	equ	0xFF7
  6400                           tblptrl	equ	0xFF6
  6401                           tablat	equ	0xFF5
  6402                           prodh	equ	0xFF4
  6403                           prodl	equ	0xFF3
  6404                           intcon	equ	0xFF2
  6405                           postinc0	equ	0xFEE
  6406                           fsr0h	equ	0xFEA
  6407                           fsr0l	equ	0xFE9
  6408                           wreg	equ	0xFE8
  6409                           indf1	equ	0xFE7
  6410                           fsr1h	equ	0xFE2
  6411                           fsr1l	equ	0xFE1
  6412                           bsr	equ	0xFE0
  6413                           indf2	equ	0xFDF
  6414                           postinc2	equ	0xFDE
  6415                           postdec2	equ	0xFDD
  6416                           fsr2h	equ	0xFDA
  6417                           fsr2l	equ	0xFD9
  6418                           status	equ	0xFD8
  6419                           
  6420 ;; *************** function _timer0_int_handler *****************
  6421 ;; Defined at:
  6422 ;;		line 19 in file "../src/user_interrupts.c"
  6423 ;; Parameters:    Size  Location     Type
  6424 ;;		None
  6425 ;; Auto vars:     Size  Location     Type
  6426 ;;  val             2   54[COMRAM] unsigned int 
  6427 ;;  msgtype         2   52[COMRAM] int 
  6428 ;;  length          2   50[COMRAM] int 
  6429 ;; Return value:  Size  Location     Type
  6430 ;;		None               void
  6431 ;; Registers used:
  6432 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6433 ;; Tracked objects:
  6434 ;;		On entry : 0/0
  6435 ;;		On exit  : 0/0
  6436 ;;		Unchanged: 0/0
  6437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6438 ;;      Params:         0       0       0       0       0
  6439 ;;      Locals:         6       0       0       0       0
  6440 ;;      Temps:          2       0       0       0       0
  6441 ;;      Totals:         8       0       0       0       0
  6442 ;;Total ram usage:        8 bytes
  6443 ;; Hardware stack levels used:    1
  6444 ;; Hardware stack levels required when called:    3
  6445 ;; This function calls:
  6446 ;;		_ToMainHigh_sendmsg
  6447 ;;		_FromMainHigh_recvmsg
  6448 ;;		_WriteTimer0
  6449 ;; This function is called by:
  6450 ;;		_InterruptHandlerHigh
  6451 ;; This function uses a non-reentrant model
  6452 ;;
  6453                           
  6454                           	psect	text44
  6455  0012BA                     __ptext44:
  6456                           	opt stack 0
  6457  0012BA                     _timer0_int_handler:
  6458                           	opt stack 18
  6459                           
  6460                           ;user_interrupts.c: 20: unsigned int val;
  6461                           ;user_interrupts.c: 21: int length, msgtype;
  6462                           ;user_interrupts.c: 24: LATBbits.LATB0 = !LATBbits.LATB0;
  6463                           
  6464                           ;incstack = 0
  6465                           ;incstack = 0
  6466  0012BA  B08A               	btfsc	3978,0,c	;volatile
  6467  0012BC  D002               	goto	i2u187_40
  6468  0012BE  0E01               	movlw	1
  6469  0012C0  D001               	goto	i2u187_46
  6470  0012C2                     i2u187_40:
  6471  0012C2  0E00               	movlw	0
  6472  0012C4                     i2u187_46:
  6473  0012C4  6E31               	movwf	??_timer0_int_handler& (0+255),c
  6474  0012C6  508A               	movf	3978,w,c	;volatile
  6475  0012C8  1831               	xorwf	??_timer0_int_handler,w,c
  6476  0012CA  0BFE               	andlw	-2
  6477  0012CC  1831               	xorwf	??_timer0_int_handler,w,c
  6478  0012CE  6E8A               	movwf	3978,c	;volatile
  6479                           
  6480                           ;user_interrupts.c: 26: WriteTimer0(0);
  6481  0012D0  0E00               	movlw	0
  6482  0012D2  6E15               	movwf	?_WriteTimer0+1,c
  6483  0012D4  0E00               	movlw	0
  6484  0012D6  6E14               	movwf	?_WriteTimer0,c
  6485  0012D8  ECEC  F00B         	call	_WriteTimer0	;wreg free
  6486                           
  6487                           ;user_interrupts.c: 28: length = FromMainHigh_recvmsg(sizeof(val), (unsigned char *)&msg
      +                          type, (void *) &val);
  6488  0012DC  6E31               	movwf	??_timer0_int_handler& (0+255),c
  6489  0012DE  0E02               	movlw	2
  6490  0012E0  6E2C               	movwf	?_FromMainHigh_recvmsg,c
  6491  0012E2  5031               	movf	??_timer0_int_handler& (0+255),w,c
  6492  0012E4  0E00               	movlw	high timer0_int_handler@msgtype
  6493  0012E6  6E2E               	movwf	?_FromMainHigh_recvmsg+2,c
  6494  0012E8  0E35               	movlw	low timer0_int_handler@msgtype
  6495  0012EA  6E2D               	movwf	?_FromMainHigh_recvmsg+1,c
  6496  0012EC  0E00               	movlw	high timer0_int_handler@val
  6497  0012EE  6E30               	movwf	?_FromMainHigh_recvmsg+4,c
  6498  0012F0  0E37               	movlw	low timer0_int_handler@val
  6499  0012F2  6E2F               	movwf	?_FromMainHigh_recvmsg+3,c
  6500  0012F4  EC69  F00B         	call	_FromMainHigh_recvmsg	;wreg free
  6501  0012F8  6E33               	movwf	timer0_int_handler@length,c
  6502  0012FA  6A34               	clrf	timer0_int_handler@length+1,c
  6503  0012FC  BE33               	btfsc	timer0_int_handler@length,7,c
  6504  0012FE  0634               	decf	timer0_int_handler@length+1,f,c
  6505                           
  6506                           ;user_interrupts.c: 29: if (length == sizeof (val)) {
  6507  001300  5033               	movf	timer0_int_handler@length,w,c
  6508  001302  0A02               	xorlw	2
  6509  001304  1034               	iorwf	timer0_int_handler@length+1,w,c
  6510  001306  A4D8               	btfss	status,2,c
  6511  001308  0012               	return	
  6512                           
  6513                           ;user_interrupts.c: 30: ToMainHigh_sendmsg(sizeof (val), 10, (void *) &val);
  6514  00130A  6E31               	movwf	??_timer0_int_handler& (0+255),c
  6515  00130C  0E02               	movlw	2
  6516  00130E  6E2A               	movwf	?_ToMainHigh_sendmsg,c
  6517  001310  5031               	movf	??_timer0_int_handler& (0+255),w,c
  6518  001312  6E32               	movwf	(??_timer0_int_handler+1)& (0+255),c
  6519  001314  0E0A               	movlw	10
  6520  001316  6E2B               	movwf	?_ToMainHigh_sendmsg+1,c
  6521  001318  5032               	movf	(??_timer0_int_handler+1)& (0+255),w,c
  6522  00131A  0E00               	movlw	high timer0_int_handler@val
  6523  00131C  6E2D               	movwf	?_ToMainHigh_sendmsg+3,c
  6524  00131E  0E37               	movlw	low timer0_int_handler@val
  6525  001320  6E2C               	movwf	?_ToMainHigh_sendmsg+2,c
  6526  001322  ECB1  F00B         	call	_ToMainHigh_sendmsg	;wreg free
  6527  001326  0012               	return	
  6528  001328                     __end_of_timer0_int_handler:
  6529                           	opt stack 0
  6530                           pclatu	equ	0xFFB
  6531                           pclath	equ	0xFFA
  6532                           tblptru	equ	0xFF8
  6533                           tblptrh	equ	0xFF7
  6534                           tblptrl	equ	0xFF6
  6535                           tablat	equ	0xFF5
  6536                           prodh	equ	0xFF4
  6537                           prodl	equ	0xFF3
  6538                           intcon	equ	0xFF2
  6539                           postinc0	equ	0xFEE
  6540                           fsr0h	equ	0xFEA
  6541                           fsr0l	equ	0xFE9
  6542                           wreg	equ	0xFE8
  6543                           indf1	equ	0xFE7
  6544                           fsr1h	equ	0xFE2
  6545                           fsr1l	equ	0xFE1
  6546                           bsr	equ	0xFE0
  6547                           indf2	equ	0xFDF
  6548                           postinc2	equ	0xFDE
  6549                           postdec2	equ	0xFDD
  6550                           fsr2h	equ	0xFDA
  6551                           fsr2l	equ	0xFD9
  6552                           status	equ	0xFD8
  6553                           
  6554 ;; *************** function _WriteTimer0 *****************
  6555 ;; Defined at:
  6556 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic18\plib\Timers\t0write.c"
  6557 ;; Parameters:    Size  Location     Type
  6558 ;;  timer0          2   19[COMRAM] unsigned int 
  6559 ;; Auto vars:     Size  Location     Type
  6560 ;;  timer           2   21[COMRAM] struct Timers
  6561 ;; Return value:  Size  Location     Type
  6562 ;;		None               void
  6563 ;; Registers used:
  6564 ;;		None
  6565 ;; Tracked objects:
  6566 ;;		On entry : 0/0
  6567 ;;		On exit  : 0/0
  6568 ;;		Unchanged: 0/0
  6569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6570 ;;      Params:         2       0       0       0       0
  6571 ;;      Locals:         2       0       0       0       0
  6572 ;;      Temps:          0       0       0       0       0
  6573 ;;      Totals:         4       0       0       0       0
  6574 ;;Total ram usage:        4 bytes
  6575 ;; Hardware stack levels used:    1
  6576 ;; This function calls:
  6577 ;;		Nothing
  6578 ;; This function is called by:
  6579 ;;		_timer0_int_handler
  6580 ;; This function uses a non-reentrant model
  6581 ;;
  6582                           
  6583                           	psect	text45
  6584  0017D8                     __ptext45:
  6585                           	opt stack 0
  6586  0017D8                     _WriteTimer0:
  6587                           	opt stack 20
  6588                           
  6589                           ;incstack = 0
  6590                           ;incstack = 0
  6591  0017D8  C014  F016         	movff	WriteTimer0@timer0,WriteTimer0@timer
  6592  0017DC  C015  F017         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  6593  0017E0  C017  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  6594  0017E4  C016  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  6595  0017E8  0012               	return	
  6596  0017EA                     __end_of_WriteTimer0:
  6597                           	opt stack 0
  6598                           pclatu	equ	0xFFB
  6599                           pclath	equ	0xFFA
  6600                           tblptru	equ	0xFF8
  6601                           tblptrh	equ	0xFF7
  6602                           tblptrl	equ	0xFF6
  6603                           tablat	equ	0xFF5
  6604                           prodh	equ	0xFF4
  6605                           prodl	equ	0xFF3
  6606                           intcon	equ	0xFF2
  6607                           postinc0	equ	0xFEE
  6608                           fsr0h	equ	0xFEA
  6609                           fsr0l	equ	0xFE9
  6610                           wreg	equ	0xFE8
  6611                           indf1	equ	0xFE7
  6612                           fsr1h	equ	0xFE2
  6613                           fsr1l	equ	0xFE1
  6614                           bsr	equ	0xFE0
  6615                           indf2	equ	0xFDF
  6616                           postinc2	equ	0xFDE
  6617                           postdec2	equ	0xFDD
  6618                           fsr2h	equ	0xFDA
  6619                           fsr2l	equ	0xFD9
  6620                           status	equ	0xFD8
  6621                           
  6622 ;; *************** function _FromMainHigh_recvmsg *****************
  6623 ;; Defined at:
  6624 ;;		line 183 in file "../src/messages.c"
  6625 ;; Parameters:    Size  Location     Type
  6626 ;;  maxlength       1   43[COMRAM] unsigned char 
  6627 ;;  msgtype         2   44[COMRAM] PTR unsigned char 
  6628 ;;		 -> timer0_int_handler@msgtype(2), 
  6629 ;;  data            2   46[COMRAM] PTR void 
  6630 ;;		 -> timer0_int_handler@val(2), 
  6631 ;; Auto vars:     Size  Location     Type
  6632 ;;		None
  6633 ;; Return value:  Size  Location     Type
  6634 ;;                  1    wreg      char 
  6635 ;; Registers used:
  6636 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6637 ;; Tracked objects:
  6638 ;;		On entry : 0/0
  6639 ;;		On exit  : 0/0
  6640 ;;		Unchanged: 0/0
  6641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6642 ;;      Params:         5       0       0       0       0
  6643 ;;      Locals:         0       0       0       0       0
  6644 ;;      Temps:          0       0       0       0       0
  6645 ;;      Totals:         5       0       0       0       0
  6646 ;;Total ram usage:        5 bytes
  6647 ;; Hardware stack levels used:    1
  6648 ;; Hardware stack levels required when called:    2
  6649 ;; This function calls:
  6650 ;;		i2_recv_msg
  6651 ;; This function is called by:
  6652 ;;		_timer0_int_handler
  6653 ;; This function uses a non-reentrant model
  6654 ;;
  6655                           
  6656                           	psect	text46
  6657  0016D2                     __ptext46:
  6658                           	opt stack 0
  6659  0016D2                     _FromMainHigh_recvmsg:
  6660                           	opt stack 18
  6661                           
  6662                           ;messages.c: 189: return (recv_msg(&FromMainHigh_MQ, maxlength, msgtype, data));
  6663                           
  6664                           ;incstack = 0
  6665                           ;incstack = 0
  6666  0016D2  0102               	movlb	2	; () banked
  6667  0016D4  0E02               	movlw	high _FromMainHigh_MQ
  6668  0016D6  6E1F               	movwf	?i2_recv_msg+1,c
  6669  0016D8  0102               	movlb	2	; () banked
  6670  0016DA  0E48               	movlw	low _FromMainHigh_MQ
  6671  0016DC  6E1E               	movwf	?i2_recv_msg,c
  6672  0016DE  C02C  F020         	movff	FromMainHigh_recvmsg@maxlength,?i2_recv_msg+2
  6673  0016E2  C02D  F021         	movff	FromMainHigh_recvmsg@msgtype,?i2_recv_msg+3
  6674  0016E6  C02E  F022         	movff	FromMainHigh_recvmsg@msgtype+1,?i2_recv_msg+4
  6675  0016EA  C02F  F023         	movff	FromMainHigh_recvmsg@data,?i2_recv_msg+5
  6676  0016EE  C030  F024         	movff	FromMainHigh_recvmsg@data+1,?i2_recv_msg+6
  6677  0016F2  ECF7  F005         	call	i2_recv_msg	;wreg free
  6678  0016F6  0012               	return	
  6679  0016F8                     __end_of_FromMainHigh_recvmsg:
  6680                           	opt stack 0
  6681                           pclatu	equ	0xFFB
  6682                           pclath	equ	0xFFA
  6683                           tblptru	equ	0xFF8
  6684                           tblptrh	equ	0xFF7
  6685                           tblptrl	equ	0xFF6
  6686                           tablat	equ	0xFF5
  6687                           prodh	equ	0xFF4
  6688                           prodl	equ	0xFF3
  6689                           intcon	equ	0xFF2
  6690                           postinc0	equ	0xFEE
  6691                           fsr0h	equ	0xFEA
  6692                           fsr0l	equ	0xFE9
  6693                           wreg	equ	0xFE8
  6694                           indf1	equ	0xFE7
  6695                           fsr1h	equ	0xFE2
  6696                           fsr1l	equ	0xFE1
  6697                           bsr	equ	0xFE0
  6698                           indf2	equ	0xFDF
  6699                           postinc2	equ	0xFDE
  6700                           postdec2	equ	0xFDD
  6701                           fsr2h	equ	0xFDA
  6702                           fsr2l	equ	0xFD9
  6703                           status	equ	0xFD8
  6704                           
  6705 ;; *************** function i2_recv_msg *****************
  6706 ;; Defined at:
  6707 ;;		line 63 in file "../src/messages.c"
  6708 ;; Parameters:    Size  Location     Type
  6709 ;;  recv_msg        2   29[COMRAM] PTR struct __msg_queue
  6710 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  6711 ;;  recv_msg        1   31[COMRAM] unsigned char 
  6712 ;;  recv_msg        2   32[COMRAM] PTR unsigned char 
  6713 ;;		 -> timer0_int_handler@msgtype(2), main@msgtype(1), 
  6714 ;;  recv_msg        2   34[COMRAM] PTR void 
  6715 ;;		 -> timer0_int_handler@val(2), main@msgbuffer(11), 
  6716 ;; Auto vars:     Size  Location     Type
  6717 ;;  recv_msg        2   41[COMRAM] PTR struct __msg
  6718 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  6719 ;;  recv_msg        2   39[COMRAM] unsigned int 
  6720 ;;  recv_msg        1   38[COMRAM] unsigned char 
  6721 ;; Return value:  Size  Location     Type
  6722 ;;                  1    wreg      char 
  6723 ;; Registers used:
  6724 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6725 ;; Tracked objects:
  6726 ;;		On entry : 0/0
  6727 ;;		On exit  : 0/0
  6728 ;;		Unchanged: 0/0
  6729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6730 ;;      Params:         7       0       0       0       0
  6731 ;;      Locals:         5       0       0       0       0
  6732 ;;      Temps:          2       0       0       0       0
  6733 ;;      Totals:        14       0       0       0       0
  6734 ;;Total ram usage:       14 bytes
  6735 ;; Hardware stack levels used:    1
  6736 ;; Hardware stack levels required when called:    1
  6737 ;; This function calls:
  6738 ;;		i2_memcpy
  6739 ;; This function is called by:
  6740 ;;		_FromMainHigh_recvmsg
  6741 ;; This function uses a non-reentrant model
  6742 ;;
  6743                           
  6744                           	psect	text47
  6745  000BEE                     __ptext47:
  6746                           	opt stack 0
  6747  000BEE                     i2_recv_msg:
  6748                           	opt stack 18
  6749                           
  6750                           ;messages.c: 64: unsigned char slot;
  6751                           ;messages.c: 68: msg *qmsg;
  6752                           ;messages.c: 69: size_t tlength;
  6753                           ;messages.c: 72: slot = qptr->cur_read_ind;
  6754                           
  6755                           ;incstack = 0
  6756                           ;incstack = 0
  6757  000BEE  EE20 F035          	lfsr	2,53
  6758  000BF2  501E               	movf	i2recv_msg@qptr,w,c
  6759  000BF4  26D9               	addwf	fsr2l,f,c
  6760  000BF6  501F               	movf	i2recv_msg@qptr+1,w,c
  6761  000BF8  22DA               	addwfc	fsr2h,f,c
  6762  000BFA  50DF               	movf	indf2,w,c
  6763  000BFC  6E27               	movwf	i2recv_msg@slot,c
  6764                           
  6765                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  6766  000BFE  5027               	movf	i2recv_msg@slot,w,c
  6767  000C00  0D0D               	mullw	13
  6768  000C02  50F3               	movf	prodl,w,c
  6769  000C04  241E               	addwf	i2recv_msg@qptr,w,c
  6770  000C06  6E2A               	movwf	i2recv_msg@qmsg,c
  6771  000C08  50F4               	movf	prodh,w,c
  6772  000C0A  201F               	addwfc	i2recv_msg@qptr+1,w,c
  6773  000C0C  6E2B               	movwf	i2recv_msg@qmsg+1,c
  6774                           
  6775                           ;messages.c: 74: if (qmsg->full == 1) {
  6776  000C0E  0E01               	movlw	1
  6777  000C10  C02A  FFD9         	movff	i2recv_msg@qmsg,fsr2l
  6778  000C14  C02B  FFDA         	movff	i2recv_msg@qmsg+1,fsr2h
  6779  000C18  62DF               	cpfseq	indf2,c
  6780  000C1A  D04F               	goto	i2l3406
  6781                           
  6782                           ;messages.c: 76: if (qmsg->length > maxlength) {
  6783  000C1C  EE20 F001          	lfsr	2,1
  6784  000C20  502A               	movf	i2recv_msg@qmsg,w,c
  6785  000C22  26D9               	addwf	fsr2l,f,c
  6786  000C24  502B               	movf	i2recv_msg@qmsg+1,w,c
  6787  000C26  22DA               	addwfc	fsr2h,f,c
  6788  000C28  50DF               	movf	indf2,w,c
  6789  000C2A  6020               	cpfslt	i2recv_msg@maxlength,c
  6790  000C2C  D002               	goto	i2l3390
  6791                           
  6792                           ;messages.c: 77: return (-3);
  6793  000C2E  0EFD               	movlw	253
  6794  000C30  0012               	return	
  6795  000C32                     i2l3390:
  6796                           
  6797                           ;messages.c: 78: }
  6798                           ;messages.c: 80: tlength = qmsg->length;
  6799  000C32  EE20 F001          	lfsr	2,1
  6800  000C36  502A               	movf	i2recv_msg@qmsg,w,c
  6801  000C38  26D9               	addwf	fsr2l,f,c
  6802  000C3A  502B               	movf	i2recv_msg@qmsg+1,w,c
  6803  000C3C  22DA               	addwfc	fsr2h,f,c
  6804  000C3E  50DF               	movf	indf2,w,c
  6805  000C40  6E25               	movwf	??i2_recv_msg& (0+255),c
  6806  000C42  5025               	movf	??i2_recv_msg,w,c
  6807  000C44  6E28               	movwf	i2recv_msg@tlength,c
  6808  000C46  6A29               	clrf	i2recv_msg@tlength+1,c
  6809                           
  6810                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  6811  000C48  C023  F014         	movff	i2recv_msg@data,?i2_memcpy
  6812  000C4C  C024  F015         	movff	i2recv_msg@data+1,?i2_memcpy+1
  6813  000C50  0E03               	movlw	3
  6814  000C52  242A               	addwf	i2recv_msg@qmsg,w,c
  6815  000C54  6E25               	movwf	??i2_recv_msg& (0+255),c
  6816  000C56  0E00               	movlw	0
  6817  000C58  202B               	addwfc	i2recv_msg@qmsg+1,w,c
  6818  000C5A  6E26               	movwf	(??i2_recv_msg+1)& (0+255),c
  6819  000C5C  C025  F016         	movff	??i2_recv_msg,?i2_memcpy+2
  6820  000C60  C026  F017         	movff	??i2_recv_msg+1,?i2_memcpy+3
  6821  000C64  C028  F018         	movff	i2recv_msg@tlength,?i2_memcpy+4
  6822  000C68  C029  F019         	movff	i2recv_msg@tlength+1,?i2_memcpy+5
  6823  000C6C  EC84  F00A         	call	i2_memcpy	;wreg free
  6824                           
  6825                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  6826  000C70  EE20 F035          	lfsr	2,53
  6827  000C74  501E               	movf	i2recv_msg@qptr,w,c
  6828  000C76  26D9               	addwf	fsr2l,f,c
  6829  000C78  501F               	movf	i2recv_msg@qptr+1,w,c
  6830  000C7A  22DA               	addwfc	fsr2h,f,c
  6831  000C7C  EE10 F035          	lfsr	1,53
  6832  000C80  501E               	movf	i2recv_msg@qptr,w,c
  6833  000C82  26E1               	addwf	fsr1l,f,c
  6834  000C84  501F               	movf	i2recv_msg@qptr+1,w,c
  6835  000C86  22E2               	addwfc	fsr1h,f,c
  6836  000C88  50E7               	movf	indf1,w,c
  6837  000C8A  6E25               	movwf	??i2_recv_msg& (0+255),c
  6838  000C8C  2825               	incf	??i2_recv_msg,w,c
  6839  000C8E  0B03               	andlw	3
  6840  000C90  6EDF               	movwf	indf2,c
  6841                           
  6842                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  6843  000C92  EE20 F002          	lfsr	2,2
  6844  000C96  502A               	movf	i2recv_msg@qmsg,w,c
  6845  000C98  26D9               	addwf	fsr2l,f,c
  6846  000C9A  502B               	movf	i2recv_msg@qmsg+1,w,c
  6847  000C9C  22DA               	addwfc	fsr2h,f,c
  6848  000C9E  C021  FFE1         	movff	i2recv_msg@msgtype,fsr1l
  6849  000CA2  C022  FFE2         	movff	i2recv_msg@msgtype+1,fsr1h
  6850  000CA6  CFDF FFE7          	movff	indf2,indf1
  6851                           
  6852                           ;messages.c: 91: qmsg->full = 0;
  6853  000CAA  C02A  FFD9         	movff	i2recv_msg@qmsg,fsr2l
  6854  000CAE  C02B  FFDA         	movff	i2recv_msg@qmsg+1,fsr2h
  6855  000CB2  0E00               	movlw	0
  6856  000CB4  6EDF               	movwf	indf2,c
  6857                           
  6858                           ;messages.c: 92: return (tlength);
  6859  000CB6  5028               	movf	i2recv_msg@tlength,w,c
  6860  000CB8  0012               	return	
  6861  000CBA                     i2l3406:
  6862                           
  6863                           ;messages.c: 94: return (-4);
  6864  000CBA  0EFC               	movlw	252
  6865  000CBC  0012               	return	
  6866  000CBE                     __end_ofi2_recv_msg:
  6867                           	opt stack 0
  6868                           pclatu	equ	0xFFB
  6869                           pclath	equ	0xFFA
  6870                           tblptru	equ	0xFF8
  6871                           tblptrh	equ	0xFF7
  6872                           tblptrl	equ	0xFF6
  6873                           tablat	equ	0xFF5
  6874                           prodh	equ	0xFF4
  6875                           prodl	equ	0xFF3
  6876                           intcon	equ	0xFF2
  6877                           postinc0	equ	0xFEE
  6878                           fsr0h	equ	0xFEA
  6879                           fsr0l	equ	0xFE9
  6880                           wreg	equ	0xFE8
  6881                           indf1	equ	0xFE7
  6882                           fsr1h	equ	0xFE2
  6883                           fsr1l	equ	0xFE1
  6884                           bsr	equ	0xFE0
  6885                           indf2	equ	0xFDF
  6886                           postinc2	equ	0xFDE
  6887                           postdec2	equ	0xFDD
  6888                           fsr2h	equ	0xFDA
  6889                           fsr2l	equ	0xFD9
  6890                           status	equ	0xFD8
  6891                           
  6892 ;; *************** function _i2c_master_handler *****************
  6893 ;; Defined at:
  6894 ;;		line 35 in file "../src/my_i2c.c"
  6895 ;; Parameters:    Size  Location     Type
  6896 ;;		None
  6897 ;; Auto vars:     Size  Location     Type
  6898 ;;  data_read       1   55[COMRAM] unsigned char 
  6899 ;;  overrun_erro    1   54[COMRAM] unsigned char 
  6900 ;;  i2c_data        1   53[COMRAM] unsigned char 
  6901 ;;  msg_sent        1   52[COMRAM] unsigned char 
  6902 ;;  data_written    1   51[COMRAM] unsigned char 
  6903 ;;  data            1    0        unsigned char 
  6904 ;; Return value:  Size  Location     Type
  6905 ;;                  2    8[COMRAM] int 
  6906 ;; Registers used:
  6907 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6908 ;; Tracked objects:
  6909 ;;		On entry : 0/0
  6910 ;;		On exit  : 0/0
  6911 ;;		Unchanged: 0/0
  6912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6913 ;;      Params:         0       0       0       0       0
  6914 ;;      Locals:         5       0       0       0       0
  6915 ;;      Temps:          6       0       0       0       0
  6916 ;;      Totals:        11       0       0       0       0
  6917 ;;Total ram usage:       11 bytes
  6918 ;; Hardware stack levels used:    1
  6919 ;; Hardware stack levels required when called:    3
  6920 ;; This function calls:
  6921 ;;		_ToMainHigh_sendmsg
  6922 ;; This function is called by:
  6923 ;;		_InterruptHandlerHigh
  6924 ;; This function uses a non-reentrant model
  6925 ;;
  6926                           
  6927                           	psect	text48
  6928  000486                     __ptext48:
  6929                           	opt stack 0
  6930  000486                     _i2c_master_handler:
  6931                           	opt stack 18
  6932                           
  6933                           ;my_i2c.c: 36: unsigned char i2c_data;
  6934                           ;my_i2c.c: 37: unsigned char data;
  6935                           ;my_i2c.c: 38: unsigned char data_read = 0;
  6936                           
  6937                           ;incstack = 0
  6938                           ;incstack = 0
  6939  000486  6E2E               	movwf	??_i2c_master_handler& (0+255),c
  6940  000488  0E00               	movlw	0
  6941  00048A  6E38               	movwf	i2c_master_handler@data_read,c
  6942  00048C  502E               	movf	??_i2c_master_handler& (0+255),w,c
  6943                           
  6944                           ;my_i2c.c: 39: unsigned char data_written = 0;
  6945  00048E  6E2E               	movwf	??_i2c_master_handler& (0+255),c
  6946  000490  0E00               	movlw	0
  6947  000492  6E34               	movwf	i2c_master_handler@data_written,c
  6948  000494  502E               	movf	??_i2c_master_handler& (0+255),w,c
  6949                           
  6950                           ;my_i2c.c: 40: unsigned char msg_sent = 0;
  6951  000496  6E2E               	movwf	??_i2c_master_handler& (0+255),c
  6952  000498  0E00               	movlw	0
  6953  00049A  6E35               	movwf	i2c_master_handler@msg_sent,c
  6954  00049C  502E               	movf	??_i2c_master_handler& (0+255),w,c
  6955                           
  6956                           ;my_i2c.c: 41: unsigned char overrun_error = 0;
  6957  00049E  6E2E               	movwf	??_i2c_master_handler& (0+255),c
  6958  0004A0  0E00               	movlw	0
  6959  0004A2  6E37               	movwf	i2c_master_handler@overrun_error,c
  6960  0004A4  502E               	movf	??_i2c_master_handler& (0+255),w,c
  6961                           
  6962                           ;my_i2c.c: 43: if (SSPSTATbits.BF == 1)
  6963  0004A6  A0C7               	btfss	4039,0,c	;volatile
  6964  0004A8  D006               	goto	i2l2822
  6965                           
  6966                           ;my_i2c.c: 44: {
  6967                           ;my_i2c.c: 45: i2c_data = SSPBUF;
  6968  0004AA  CFC9 F036          	movff	4041,i2c_master_handler@i2c_data	;volatile
  6969                           
  6970                           ;my_i2c.c: 46: data_read = 1;
  6971  0004AE  6E2E               	movwf	??_i2c_master_handler& (0+255),c
  6972  0004B0  0E01               	movlw	1
  6973  0004B2  6E38               	movwf	i2c_master_handler@data_read,c
  6974  0004B4  502E               	movf	??_i2c_master_handler& (0+255),w,c
  6975  0004B6                     i2l2822:
  6976                           
  6977                           ;my_i2c.c: 47: }
  6978                           ;my_i2c.c: 48: if (!overrun_error)
  6979  0004B6  6637               	tstfsz	i2c_master_handler@overrun_error,c
  6980  0004B8  0012               	return	
  6981  0004BA  D177               	goto	i2l2884
  6982  0004BC                     i2l2826:
  6983  0004BC  30C7               	rrcf	4039,w,c	;volatile
  6984  0004BE  32E8               	rrcf	wreg,f,c
  6985  0004C0  0B01               	andlw	1
  6986  0004C2  6E2E               	movwf	??_i2c_master_handler& (0+255),c
  6987  0004C4  50C5               	movf	4037,w,c	;volatile
  6988  0004C6  0B1F               	andlw	31
  6989  0004C8  102E               	iorwf	??_i2c_master_handler,w,c
  6990  0004CA  0900               	iorlw	0
  6991  0004CC  B4D8               	btfsc	status,2,c
  6992  0004CE  0012               	return	
  6993  0004D0  D7F5               	goto	i2l2826
  6994  0004D2                     i2l2828:
  6995                           
  6996                           ;my_i2c.c: 59: {
  6997                           ;my_i2c.c: 60: ic_ptr->status = 0x10;
  6998  0004D2  0100               	movlb	0	; () banked
  6999  0004D4  EE20 F00D          	lfsr	2,13
  7000  0004D8  0100               	movlb	0	; () banked
  7001  0004DA  51AF               	movf	_ic_ptr& (0+255),w,b
  7002  0004DC  26D9               	addwf	fsr2l,f,c
  7003  0004DE  0100               	movlb	0	; () banked
  7004  0004E0  51B0               	movf	(_ic_ptr+1)& (0+255),w,b
  7005  0004E2  22DA               	addwfc	fsr2h,f,c
  7006  0004E4  0E10               	movlw	16
  7007  0004E6  6EDF               	movwf	indf2,c
  7008                           
  7009                           ;my_i2c.c: 62: SSPBUF = (ic_ptr->slave_addr & 0xFE);
  7010  0004E8  0100               	movlb	0	; () banked
  7011  0004EA  EE20 F01C          	lfsr	2,28
  7012  0004EE  0100               	movlb	0	; () banked
  7013  0004F0  51AF               	movf	_ic_ptr& (0+255),w,b
  7014  0004F2  26D9               	addwf	fsr2l,f,c
  7015  0004F4  0100               	movlb	0	; () banked
  7016  0004F6  51B0               	movf	(_ic_ptr+1)& (0+255),w,b
  7017  0004F8  22DA               	addwfc	fsr2h,f,c
  7018  0004FA  50DF               	movf	indf2,w,c
  7019  0004FC  0BFE               	andlw	254
  7020  0004FE  6EC9               	movwf	4041,c	;volatile
  7021                           
  7022                           ;my_i2c.c: 63: break;
  7023  000500  0012               	return	
  7024  000502                     i2l2830:
  7025                           
  7026                           ; BSR set to: 0
  7027                           ;my_i2c.c: 66: {
  7028                           ;my_i2c.c: 67: ic_ptr->event_count++;
  7029  000502  0100               	movlb	0	; () banked
  7030  000504  EE20 F00C          	lfsr	2,12
  7031  000508  0100               	movlb	0	; () banked
  7032  00050A  51AF               	movf	_ic_ptr& (0+255),w,b
  7033  00050C  26D9               	addwf	fsr2l,f,c
  7034  00050E  0100               	movlb	0	; () banked
  7035  000510  51B0               	movf	(_ic_ptr+1)& (0+255),w,b
  7036  000512  22DA               	addwfc	fsr2h,f,c
  7037  000514  2ADF               	incf	indf2,f,c
  7038                           
  7039                           ;my_i2c.c: 69: if (ic_ptr->outbufind < ic_ptr->outbuflen && !SSPCON2bits.ACKSTAT)
  7040  000516  0100               	movlb	0	; () banked
  7041  000518  EE20 F01B          	lfsr	2,27
  7042  00051C  0100               	movlb	0	; () banked
  7043  00051E  51AF               	movf	_ic_ptr& (0+255),w,b
  7044  000520  26D9               	addwf	fsr2l,f,c
  7045  000522  0100               	movlb	0	; () banked
  7046  000524  51B0               	movf	(_ic_ptr+1)& (0+255),w,b
  7047  000526  22DA               	addwfc	fsr2h,f,c
  7048  000528  50DF               	movf	indf2,w,c
  7049  00052A  6E2E               	movwf	??_i2c_master_handler& (0+255),c
  7050  00052C  0100               	movlb	0	; () banked
  7051  00052E  EE20 F01A          	lfsr	2,26
  7052  000532  0100               	movlb	0	; () banked
  7053  000534  51AF               	movf	_ic_ptr& (0+255),w,b
  7054  000536  26D9               	addwf	fsr2l,f,c
  7055  000538  0100               	movlb	0	; () banked
  7056  00053A  51B0               	movf	(_ic_ptr+1)& (0+255),w,b
  7057  00053C  22DA               	addwfc	fsr2h,f,c
  7058  00053E  50DF               	movf	indf2,w,c
  7059  000540  5C2E               	subwf	??_i2c_master_handler,w,c
  7060  000542  A0D8               	btfss	status,0,c
  7061                           
  7062                           ; BSR set to: 0
  7063  000544  BCC5               	btfsc	4037,6,c	;volatile
  7064  000546  D028               	goto	i2l2838
  7065                           
  7066                           ; BSR set to: 0
  7067                           ;my_i2c.c: 70: {
  7068                           ;my_i2c.c: 71: SSPBUF = ic_ptr->outbuffer[ic_ptr->outbufind];
  7069  000548  0100               	movlb	0	; () banked
  7070  00054A  EE20 F01B          	lfsr	2,27
  7071  00054E  0100               	movlb	0	; () banked
  7072  000550  51AF               	movf	_ic_ptr& (0+255),w,b
  7073  000552  26D9               	addwf	fsr2l,f,c
  7074  000554  0100               	movlb	0	; () banked
  7075  000556  51B0               	movf	(_ic_ptr+1)& (0+255),w,b
  7076  000558  22DA               	addwfc	fsr2h,f,c
  7077  00055A  50DF               	movf	indf2,w,c
  7078  00055C  6E2E               	movwf	??_i2c_master_handler& (0+255),c
  7079  00055E  502E               	movf	??_i2c_master_handler,w,c
  7080  000560  0D01               	mullw	1
  7081  000562  0E10               	movlw	16
  7082  000564  26F3               	addwf	prodl,f,c
  7083  000566  0E00               	movlw	0
  7084  000568  22F4               	addwfc	prodh,f,c
  7085  00056A  50F3               	movf	prodl,w,c
  7086  00056C  0100               	movlb	0	; () banked
  7087  00056E  0100               	movlb	0	; () banked
  7088  000570  25AF               	addwf	_ic_ptr& (0+255),w,b
  7089  000572  6ED9               	movwf	fsr2l,c
  7090  000574  50F4               	movf	prodh,w,c
  7091  000576  0100               	movlb	0	; () banked
  7092  000578  0100               	movlb	0	; () banked
  7093  00057A  21B0               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7094  00057C  6EDA               	movwf	fsr2h,c
  7095  00057E  50DF               	movf	indf2,w,c
  7096  000580  6EC9               	movwf	4041,c	;volatile
  7097                           
  7098                           ; BSR set to: 0
  7099                           ;my_i2c.c: 74: ic_ptr->outbufind++;
  7100  000582  0100               	movlb	0	; () banked
  7101  000584  EE20 F01B          	lfsr	2,27
  7102  000588  0100               	movlb	0	; () banked
  7103  00058A  51AF               	movf	_ic_ptr& (0+255),w,b
  7104  00058C  26D9               	addwf	fsr2l,f,c
  7105  00058E  0100               	movlb	0	; () banked
  7106  000590  51B0               	movf	(_ic_ptr+1)& (0+255),w,b
  7107  000592  22DA               	addwfc	fsr2h,f,c
  7108  000594  2ADF               	incf	indf2,f,c
  7109                           
  7110                           ;my_i2c.c: 75: }
  7111  000596  0012               	return	
  7112  000598                     i2l2838:
  7113                           
  7114                           ; BSR set to: 0
  7115                           ;my_i2c.c: 76: else if (ic_ptr->outbufind >= ic_ptr->outbuflen)
  7116  000598  0100               	movlb	0	; () banked
  7117  00059A  EE20 F01B          	lfsr	2,27
  7118  00059E  0100               	movlb	0	; () banked
  7119  0005A0  51AF               	movf	_ic_ptr& (0+255),w,b
  7120  0005A2  26D9               	addwf	fsr2l,f,c
  7121  0005A4  0100               	movlb	0	; () banked
  7122  0005A6  51B0               	movf	(_ic_ptr+1)& (0+255),w,b
  7123  0005A8  22DA               	addwfc	fsr2h,f,c
  7124  0005AA  50DF               	movf	indf2,w,c
  7125  0005AC  6E2E               	movwf	??_i2c_master_handler& (0+255),c
  7126  0005AE  0100               	movlb	0	; () banked
  7127  0005B0  EE20 F01A          	lfsr	2,26
  7128  0005B4  0100               	movlb	0	; () banked
  7129  0005B6  51AF               	movf	_ic_ptr& (0+255),w,b
  7130  0005B8  26D9               	addwf	fsr2l,f,c
  7131  0005BA  0100               	movlb	0	; () banked
  7132  0005BC  51B0               	movf	(_ic_ptr+1)& (0+255),w,b
  7133  0005BE  22DA               	addwfc	fsr2h,f,c
  7134  0005C0  50DF               	movf	indf2,w,c
  7135  0005C2  5C2E               	subwf	??_i2c_master_handler,w,c
  7136  0005C4  A0D8               	btfss	status,0,c
  7137  0005C6  D00D               	goto	i2l2844
  7138                           
  7139                           ; BSR set to: 0
  7140                           ;my_i2c.c: 77: {
  7141                           ;my_i2c.c: 78: ic_ptr->status = 0x5;
  7142  0005C8  0100               	movlb	0	; () banked
  7143  0005CA  EE20 F00D          	lfsr	2,13
  7144  0005CE  0100               	movlb	0	; () banked
  7145  0005D0  51AF               	movf	_ic_ptr& (0+255),w,b
  7146  0005D2  26D9               	addwf	fsr2l,f,c
  7147  0005D4  0100               	movlb	0	; () banked
  7148  0005D6  51B0               	movf	(_ic_ptr+1)& (0+255),w,b
  7149  0005D8  22DA               	addwfc	fsr2h,f,c
  7150  0005DA  0E05               	movlw	5
  7151  0005DC  6EDF               	movwf	indf2,c
  7152                           
  7153                           ; BSR set to: 0
  7154                           ;my_i2c.c: 79: SSP1CON2bits.PEN = 1;
  7155  0005DE  84C5               	bsf	4037,2,c	;volatile
  7156                           
  7157                           ;my_i2c.c: 81: }
  7158  0005E0  0012               	return	
  7159  0005E2                     i2l2844:
  7160                           
  7161                           ; BSR set to: 0
  7162                           ;my_i2c.c: 82: else
  7163                           ;my_i2c.c: 83: {
  7164                           ;my_i2c.c: 84: ic_ptr->status = 0x13;
  7165  0005E2  0100               	movlb	0	; () banked
  7166  0005E4  EE20 F00D          	lfsr	2,13
  7167  0005E8  0100               	movlb	0	; () banked
  7168  0005EA  51AF               	movf	_ic_ptr& (0+255),w,b
  7169  0005EC  26D9               	addwf	fsr2l,f,c
  7170  0005EE  0100               	movlb	0	; () banked
  7171  0005F0  51B0               	movf	(_ic_ptr+1)& (0+255),w,b
  7172  0005F2  22DA               	addwfc	fsr2h,f,c
  7173  0005F4  0E13               	movlw	19
  7174  0005F6  6EDF               	movwf	indf2,c
  7175  0005F8  0012               	return	
  7176  0005FA                     i2l2846:
  7177                           
  7178                           ; BSR set to: 0
  7179                           ;my_i2c.c: 89: {
  7180                           ;my_i2c.c: 90: ic_ptr->status = 0x13;
  7181  0005FA  0100               	movlb	0	; () banked
  7182  0005FC  EE20 F00D          	lfsr	2,13
  7183  000600  0100               	movlb	0	; () banked
  7184  000602  51AF               	movf	_ic_ptr& (0+255),w,b
  7185  000604  26D9               	addwf	fsr2l,f,c
  7186  000606  0100               	movlb	0	; () banked
  7187  000608  51B0               	movf	(_ic_ptr+1)& (0+255),w,b
  7188  00060A  22DA               	addwfc	fsr2h,f,c
  7189  00060C  0E13               	movlw	19
  7190  00060E  6EDF               	movwf	indf2,c
  7191                           
  7192                           ;my_i2c.c: 92: SSPBUF = ic_ptr->slave_addr | 0x01;
  7193  000610  0100               	movlb	0	; () banked
  7194  000612  EE20 F01C          	lfsr	2,28
  7195  000616  0100               	movlb	0	; () banked
  7196  000618  51AF               	movf	_ic_ptr& (0+255),w,b
  7197  00061A  26D9               	addwf	fsr2l,f,c
  7198  00061C  0100               	movlb	0	; () banked
  7199  00061E  51B0               	movf	(_ic_ptr+1)& (0+255),w,b
  7200  000620  22DA               	addwfc	fsr2h,f,c
  7201  000622  50DF               	movf	indf2,w,c
  7202  000624  0901               	iorlw	1
  7203  000626  6EC9               	movwf	4041,c	;volatile
  7204                           
  7205                           ; BSR set to: 0
  7206                           ;my_i2c.c: 93: SSPCON2bits.RCEN = 1;
  7207  000628  86C5               	bsf	4037,3,c	;volatile
  7208                           
  7209                           ;my_i2c.c: 94: break;
  7210  00062A  0012               	return	
  7211  00062C                     i2l286:
  7212                           
  7213                           ; BSR set to: 0
  7214                           ;my_i2c.c: 97: {
  7215                           ;my_i2c.c: 98: if (!SSPCON2bits.ACKSTAT)
  7216  00062C  BCC5               	btfsc	4037,6,c	;volatile
  7217  00062E  D017               	goto	i2l2854
  7218                           
  7219                           ; BSR set to: 0
  7220                           ;my_i2c.c: 99: {
  7221                           ;my_i2c.c: 100: SSPCON2bits.RCEN = 1;
  7222  000630  86C5               	bsf	4037,3,c	;volatile
  7223                           
  7224                           ; BSR set to: 0
  7225                           ;my_i2c.c: 102: ic_ptr->status = 0x14;
  7226  000632  0100               	movlb	0	; () banked
  7227  000634  EE20 F00D          	lfsr	2,13
  7228  000638  0100               	movlb	0	; () banked
  7229  00063A  51AF               	movf	_ic_ptr& (0+255),w,b
  7230  00063C  26D9               	addwf	fsr2l,f,c
  7231  00063E  0100               	movlb	0	; () banked
  7232  000640  51B0               	movf	(_ic_ptr+1)& (0+255),w,b
  7233  000642  22DA               	addwfc	fsr2h,f,c
  7234  000644  0E14               	movlw	20
  7235  000646  6EDF               	movwf	indf2,c
  7236                           
  7237                           ;my_i2c.c: 103: ic_ptr->event_count++;
  7238  000648  0100               	movlb	0	; () banked
  7239  00064A  EE20 F00C          	lfsr	2,12
  7240  00064E  0100               	movlb	0	; () banked
  7241  000650  51AF               	movf	_ic_ptr& (0+255),w,b
  7242  000652  26D9               	addwf	fsr2l,f,c
  7243  000654  0100               	movlb	0	; () banked
  7244  000656  51B0               	movf	(_ic_ptr+1)& (0+255),w,b
  7245  000658  22DA               	addwfc	fsr2h,f,c
  7246  00065A  2ADF               	incf	indf2,f,c
  7247                           
  7248                           ;my_i2c.c: 104: }
  7249  00065C  0012               	return	
  7250  00065E                     i2l2854:
  7251                           
  7252                           ; BSR set to: 0
  7253                           ;my_i2c.c: 105: else
  7254                           ;my_i2c.c: 106: {
  7255                           ;my_i2c.c: 107: ic_ptr->status = 0x5;
  7256  00065E  0100               	movlb	0	; () banked
  7257  000660  EE20 F00D          	lfsr	2,13
  7258  000664  0100               	movlb	0	; () banked
  7259  000666  51AF               	movf	_ic_ptr& (0+255),w,b
  7260  000668  26D9               	addwf	fsr2l,f,c
  7261  00066A  0100               	movlb	0	; () banked
  7262  00066C  51B0               	movf	(_ic_ptr+1)& (0+255),w,b
  7263  00066E  22DA               	addwfc	fsr2h,f,c
  7264  000670  0E05               	movlw	5
  7265  000672  6EDF               	movwf	indf2,c
  7266                           
  7267                           ; BSR set to: 0
  7268                           ;my_i2c.c: 109: SSP1CON2bits.PEN = 1;
  7269  000674  84C5               	bsf	4037,2,c	;volatile
  7270  000676  0012               	return	
  7271  000678                     i2l2858:
  7272                           
  7273                           ; BSR set to: 0
  7274                           ;my_i2c.c: 114: {
  7275                           ;my_i2c.c: 115: if (data_read )
  7276  000678  5038               	movf	i2c_master_handler@data_read,w,c
  7277  00067A  B4D8               	btfsc	status,2,c
  7278  00067C  0012               	return	
  7279                           
  7280                           ; BSR set to: 0
  7281                           ;my_i2c.c: 116: {
  7282                           ;my_i2c.c: 117: ic_ptr->buffer[ic_ptr->bufind] = i2c_data;
  7283  00067E  0100               	movlb	0	; () banked
  7284  000680  EE20 F00B          	lfsr	2,11
  7285  000684  0100               	movlb	0	; () banked
  7286  000686  51AF               	movf	_ic_ptr& (0+255),w,b
  7287  000688  26D9               	addwf	fsr2l,f,c
  7288  00068A  0100               	movlb	0	; () banked
  7289  00068C  51B0               	movf	(_ic_ptr+1)& (0+255),w,b
  7290  00068E  22DA               	addwfc	fsr2h,f,c
  7291  000690  50DF               	movf	indf2,w,c
  7292  000692  6E2E               	movwf	??_i2c_master_handler& (0+255),c
  7293  000694  502E               	movf	??_i2c_master_handler,w,c
  7294  000696  0D01               	mullw	1
  7295  000698  50F3               	movf	prodl,w,c
  7296  00069A  0100               	movlb	0	; () banked
  7297  00069C  0100               	movlb	0	; () banked
  7298  00069E  25AF               	addwf	_ic_ptr& (0+255),w,b
  7299  0006A0  6ED9               	movwf	fsr2l,c
  7300  0006A2  50F4               	movf	prodh,w,c
  7301  0006A4  0100               	movlb	0	; () banked
  7302  0006A6  0100               	movlb	0	; () banked
  7303  0006A8  21B0               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7304  0006AA  6EDA               	movwf	fsr2h,c
  7305  0006AC  C036  FFDF         	movff	i2c_master_handler@i2c_data,indf2
  7306                           
  7307                           ; BSR set to: 0
  7308                           ;my_i2c.c: 118: if(ic_ptr->bufind < ic_ptr->buflen-1)
  7309  0006B0  0100               	movlb	0	; () banked
  7310  0006B2  EE20 F00A          	lfsr	2,10
  7311  0006B6  0100               	movlb	0	; () banked
  7312  0006B8  51AF               	movf	_ic_ptr& (0+255),w,b
  7313  0006BA  26D9               	addwf	fsr2l,f,c
  7314  0006BC  0100               	movlb	0	; () banked
  7315  0006BE  51B0               	movf	(_ic_ptr+1)& (0+255),w,b
  7316  0006C0  22DA               	addwfc	fsr2h,f,c
  7317  0006C2  50DF               	movf	indf2,w,c
  7318  0006C4  6E2E               	movwf	??_i2c_master_handler& (0+255),c
  7319  0006C6  0EFF               	movlw	255
  7320  0006C8  242E               	addwf	??_i2c_master_handler,w,c
  7321  0006CA  6E2F               	movwf	(??_i2c_master_handler+1)& (0+255),c
  7322  0006CC  6A30               	clrf	(??_i2c_master_handler+2)& (0+255),c
  7323  0006CE  0EFF               	movlw	255
  7324  0006D0  2230               	addwfc	(??_i2c_master_handler+2)& (0+255),f,c
  7325  0006D2  0100               	movlb	0	; () banked
  7326  0006D4  EE20 F00B          	lfsr	2,11
  7327  0006D8  0100               	movlb	0	; () banked
  7328  0006DA  51AF               	movf	_ic_ptr& (0+255),w,b
  7329  0006DC  26D9               	addwf	fsr2l,f,c
  7330  0006DE  0100               	movlb	0	; () banked
  7331  0006E0  51B0               	movf	(_ic_ptr+1)& (0+255),w,b
  7332  0006E2  22DA               	addwfc	fsr2h,f,c
  7333  0006E4  50DF               	movf	indf2,w,c
  7334  0006E6  6E31               	movwf	(??_i2c_master_handler+3)& (0+255),c
  7335  0006E8  6A32               	clrf	(??_i2c_master_handler+4)& (0+255),c
  7336  0006EA  5032               	movf	??_i2c_master_handler+4,w,c
  7337  0006EC  0A80               	xorlw	128
  7338  0006EE  6E33               	movwf	(??_i2c_master_handler+5)& (0+255),c
  7339  0006F0  502F               	movf	??_i2c_master_handler+1,w,c
  7340  0006F2  5C31               	subwf	??_i2c_master_handler+3,w,c
  7341  0006F4  5030               	movf	??_i2c_master_handler+2,w,c
  7342  0006F6  0A80               	xorlw	128
  7343  0006F8  5833               	subwfb	(??_i2c_master_handler+5)& (0+255),w,c
  7344  0006FA  B0D8               	btfsc	status,0,c
  7345  0006FC  D018               	goto	i2l291
  7346                           
  7347                           ; BSR set to: 0
  7348                           ;my_i2c.c: 119: {
  7349                           ;my_i2c.c: 120: ic_ptr->status = 0x13;
  7350  0006FE  0100               	movlb	0	; () banked
  7351  000700  EE20 F00D          	lfsr	2,13
  7352  000704  0100               	movlb	0	; () banked
  7353  000706  51AF               	movf	_ic_ptr& (0+255),w,b
  7354  000708  26D9               	addwf	fsr2l,f,c
  7355  00070A  0100               	movlb	0	; () banked
  7356  00070C  51B0               	movf	(_ic_ptr+1)& (0+255),w,b
  7357  00070E  22DA               	addwfc	fsr2h,f,c
  7358  000710  0E13               	movlw	19
  7359  000712  6EDF               	movwf	indf2,c
  7360                           
  7361                           ;my_i2c.c: 121: ic_ptr->bufind++;
  7362  000714  0100               	movlb	0	; () banked
  7363  000716  EE20 F00B          	lfsr	2,11
  7364  00071A  0100               	movlb	0	; () banked
  7365  00071C  51AF               	movf	_ic_ptr& (0+255),w,b
  7366  00071E  26D9               	addwf	fsr2l,f,c
  7367  000720  0100               	movlb	0	; () banked
  7368  000722  51B0               	movf	(_ic_ptr+1)& (0+255),w,b
  7369  000724  22DA               	addwfc	fsr2h,f,c
  7370  000726  2ADF               	incf	indf2,f,c
  7371                           
  7372                           ; BSR set to: 0
  7373                           ;my_i2c.c: 122: SSPCON2bits.ACKDT = 0;
  7374  000728  9AC5               	bcf	4037,5,c	;volatile
  7375                           
  7376                           ; BSR set to: 0
  7377                           ;my_i2c.c: 123: SSPCON2bits.ACKEN = 1;
  7378  00072A  88C5               	bsf	4037,4,c	;volatile
  7379                           
  7380                           ;my_i2c.c: 125: }
  7381  00072C  0012               	return	
  7382  00072E                     i2l291:
  7383                           
  7384                           ; BSR set to: 0
  7385                           ;my_i2c.c: 126: else
  7386                           ;my_i2c.c: 127: {
  7387                           ;my_i2c.c: 129: SSPCON2bits.ACKDT = 1;
  7388  00072E  8AC5               	bsf	4037,5,c	;volatile
  7389                           
  7390                           ;my_i2c.c: 130: SSPCON2bits.ACKEN = 1;
  7391  000730  88C5               	bsf	4037,4,c	;volatile
  7392  000732                     i2l2870:
  7393  000732  30C7               	rrcf	4039,w,c	;volatile
  7394  000734  32E8               	rrcf	wreg,f,c
  7395  000736  0B01               	andlw	1
  7396  000738  6E2E               	movwf	??_i2c_master_handler& (0+255),c
  7397  00073A  50C5               	movf	4037,w,c	;volatile
  7398  00073C  0B1F               	andlw	31
  7399  00073E  102E               	iorwf	??_i2c_master_handler,w,c
  7400  000740  0900               	iorlw	0
  7401  000742  A4D8               	btfss	status,2,c
  7402  000744  D7F6               	goto	i2l2870
  7403                           
  7404                           ;my_i2c.c: 133: ToMainHigh_sendmsg(6, 40, ic_ptr->buffer);
  7405  000746  6E2E               	movwf	??_i2c_master_handler& (0+255),c
  7406  000748  0E06               	movlw	6
  7407  00074A  6E2A               	movwf	?_ToMainHigh_sendmsg,c
  7408  00074C  502E               	movf	??_i2c_master_handler& (0+255),w,c
  7409  00074E  6E2F               	movwf	(??_i2c_master_handler+1)& (0+255),c
  7410  000750  0E28               	movlw	40
  7411  000752  6E2B               	movwf	?_ToMainHigh_sendmsg+1,c
  7412  000754  502F               	movf	(??_i2c_master_handler+1)& (0+255),w,c
  7413  000756  C0AF  F02C         	movff	_ic_ptr,?_ToMainHigh_sendmsg+2
  7414  00075A  C0B0  F02D         	movff	_ic_ptr+1,?_ToMainHigh_sendmsg+3
  7415  00075E  ECB1  F00B         	call	_ToMainHigh_sendmsg	;wreg free
  7416                           
  7417                           ;my_i2c.c: 134: ic_ptr->status = 0x15;
  7418  000762  0100               	movlb	0	; () banked
  7419  000764  EE20 F00D          	lfsr	2,13
  7420  000768  0100               	movlb	0	; () banked
  7421  00076A  51AF               	movf	_ic_ptr& (0+255),w,b
  7422  00076C  26D9               	addwf	fsr2l,f,c
  7423  00076E  0100               	movlb	0	; () banked
  7424  000770  51B0               	movf	(_ic_ptr+1)& (0+255),w,b
  7425  000772  22DA               	addwfc	fsr2h,f,c
  7426  000774  0E15               	movlw	21
  7427  000776  6EDF               	movwf	indf2,c
  7428                           
  7429                           ; BSR set to: 0
  7430                           ;my_i2c.c: 135: ic_ptr->bufind = 0;
  7431  000778  0100               	movlb	0	; () banked
  7432  00077A  EE20 F00B          	lfsr	2,11
  7433  00077E  0100               	movlb	0	; () banked
  7434  000780  51AF               	movf	_ic_ptr& (0+255),w,b
  7435  000782  26D9               	addwf	fsr2l,f,c
  7436  000784  0100               	movlb	0	; () banked
  7437  000786  51B0               	movf	(_ic_ptr+1)& (0+255),w,b
  7438  000788  22DA               	addwfc	fsr2h,f,c
  7439  00078A  0E00               	movlw	0
  7440  00078C  6EDF               	movwf	indf2,c
  7441  00078E  0012               	return	
  7442  000790                     i2l2878:
  7443                           
  7444                           ; BSR set to: 0
  7445                           ;my_i2c.c: 141: {
  7446                           ;my_i2c.c: 142: ic_ptr->status = 0x5;
  7447  000790  0100               	movlb	0	; () banked
  7448  000792  EE20 F00D          	lfsr	2,13
  7449  000796  0100               	movlb	0	; () banked
  7450  000798  51AF               	movf	_ic_ptr& (0+255),w,b
  7451  00079A  26D9               	addwf	fsr2l,f,c
  7452  00079C  0100               	movlb	0	; () banked
  7453  00079E  51B0               	movf	(_ic_ptr+1)& (0+255),w,b
  7454  0007A0  22DA               	addwfc	fsr2h,f,c
  7455  0007A2  0E05               	movlw	5
  7456  0007A4  6EDF               	movwf	indf2,c
  7457                           
  7458                           ; BSR set to: 0
  7459                           ;my_i2c.c: 144: SSPCON2bits.PEN = 1;
  7460  0007A6  84C5               	bsf	4037,2,c	;volatile
  7461                           
  7462                           ;my_i2c.c: 147: break;
  7463  0007A8  0012               	return	
  7464  0007AA                     i2l2884:
  7465  0007AA  0100               	movlb	0	; () banked
  7466  0007AC  EE20 F00D          	lfsr	2,13
  7467  0007B0  0100               	movlb	0	; () banked
  7468  0007B2  51AF               	movf	_ic_ptr& (0+255),w,b
  7469  0007B4  26D9               	addwf	fsr2l,f,c
  7470  0007B6  0100               	movlb	0	; () banked
  7471  0007B8  51B0               	movf	(_ic_ptr+1)& (0+255),w,b
  7472  0007BA  22DA               	addwfc	fsr2h,f,c
  7473  0007BC  50DF               	movf	indf2,w,c
  7474                           
  7475                           ; Switch size 1, requested type "space"
  7476                           ; Number of cases is 7, Range of values is 5 to 21
  7477                           ; switch strategies available:
  7478                           ; Name         Instructions Cycles
  7479                           ; simple_byte           22    12 (average)
  7480                           ;	Chosen strategy is simple_byte
  7481  0007BE  0A05               	xorlw	5	; case 5
  7482  0007C0  B4D8               	btfsc	status,2,c
  7483  0007C2  D67C               	goto	i2l2826
  7484  0007C4  0A0C               	xorlw	12	; case 9
  7485  0007C6  B4D8               	btfsc	status,2,c
  7486  0007C8  D684               	goto	i2l2828
  7487  0007CA  0A19               	xorlw	25	; case 16
  7488  0007CC  B4D8               	btfsc	status,2,c
  7489  0007CE  D699               	goto	i2l2830
  7490  0007D0  0A02               	xorlw	2	; case 18
  7491  0007D2  B4D8               	btfsc	status,2,c
  7492  0007D4  D712               	goto	i2l2846
  7493  0007D6  0A01               	xorlw	1	; case 19
  7494  0007D8  B4D8               	btfsc	status,2,c
  7495  0007DA  D728               	goto	i2l286
  7496  0007DC  0A07               	xorlw	7	; case 20
  7497  0007DE  B4D8               	btfsc	status,2,c
  7498  0007E0  D74B               	goto	i2l2858
  7499  0007E2  0A01               	xorlw	1	; case 21
  7500  0007E4  A4D8               	btfss	status,2,c
  7501  0007E6  0012               	return	
  7502  0007E8  D7D3               	goto	i2l2878
  7503  0007EA                     __end_of_i2c_master_handler:
  7504                           	opt stack 0
  7505                           pclatu	equ	0xFFB
  7506                           pclath	equ	0xFFA
  7507                           tblptru	equ	0xFF8
  7508                           tblptrh	equ	0xFF7
  7509                           tblptrl	equ	0xFF6
  7510                           tablat	equ	0xFF5
  7511                           prodh	equ	0xFF4
  7512                           prodl	equ	0xFF3
  7513                           intcon	equ	0xFF2
  7514                           postinc0	equ	0xFEE
  7515                           fsr0h	equ	0xFEA
  7516                           fsr0l	equ	0xFE9
  7517                           wreg	equ	0xFE8
  7518                           indf1	equ	0xFE7
  7519                           fsr1h	equ	0xFE2
  7520                           fsr1l	equ	0xFE1
  7521                           bsr	equ	0xFE0
  7522                           indf2	equ	0xFDF
  7523                           postinc2	equ	0xFDE
  7524                           postdec2	equ	0xFDD
  7525                           fsr2h	equ	0xFDA
  7526                           fsr2l	equ	0xFD9
  7527                           status	equ	0xFD8
  7528                           
  7529 ;; *************** function _ToMainHigh_sendmsg *****************
  7530 ;; Defined at:
  7531 ;;		line 126 in file "../src/messages.c"
  7532 ;; Parameters:    Size  Location     Type
  7533 ;;  length          1   41[COMRAM] unsigned char 
  7534 ;;  msgtype         1   42[COMRAM] unsigned char 
  7535 ;;  data            2   43[COMRAM] PTR void 
  7536 ;;		 -> timer0_int_handler@val(2), NULL(0), main@ic(29), 
  7537 ;; Auto vars:     Size  Location     Type
  7538 ;;		None
  7539 ;; Return value:  Size  Location     Type
  7540 ;;                  1    wreg      char 
  7541 ;; Registers used:
  7542 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7543 ;; Tracked objects:
  7544 ;;		On entry : 0/0
  7545 ;;		On exit  : 0/0
  7546 ;;		Unchanged: 0/0
  7547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7548 ;;      Params:         4       0       0       0       0
  7549 ;;      Locals:         0       0       0       0       0
  7550 ;;      Temps:          0       0       0       0       0
  7551 ;;      Totals:         4       0       0       0       0
  7552 ;;Total ram usage:        4 bytes
  7553 ;; Hardware stack levels used:    1
  7554 ;; Hardware stack levels required when called:    2
  7555 ;; This function calls:
  7556 ;;		_send_msg
  7557 ;; This function is called by:
  7558 ;;		_i2c_master_handler
  7559 ;;		_timer0_int_handler
  7560 ;; This function uses a non-reentrant model
  7561 ;;
  7562                           
  7563                           	psect	text49
  7564  001762                     __ptext49:
  7565                           	opt stack 0
  7566  001762                     _ToMainHigh_sendmsg:
  7567                           	opt stack 18
  7568                           
  7569                           ;messages.c: 132: return (send_msg(&ToMainHigh_MQ, length, msgtype, data));
  7570                           ;	Return value of _ToMainHigh_sendmsg is never used
  7571                           
  7572                           ;incstack = 0
  7573                           ;incstack = 0
  7574  001762  0101               	movlb	1	; () banked
  7575  001764  0E01               	movlw	high _ToMainHigh_MQ
  7576  001766  6E1F               	movwf	?_send_msg+1,c
  7577  001768  0101               	movlb	1	; () banked
  7578  00176A  0E68               	movlw	low _ToMainHigh_MQ
  7579  00176C  6E1E               	movwf	?_send_msg,c
  7580  00176E  C02A  F020         	movff	ToMainHigh_sendmsg@length,?_send_msg+2
  7581  001772  C02B  F021         	movff	ToMainHigh_sendmsg@msgtype,?_send_msg+3
  7582  001776  C02C  F022         	movff	ToMainHigh_sendmsg@data,?_send_msg+4
  7583  00177A  C02D  F023         	movff	ToMainHigh_sendmsg@data+1,?_send_msg+5
  7584  00177E  EC75  F007         	call	_send_msg	;wreg free
  7585  001782  0012               	return	
  7586  001784                     __end_of_ToMainHigh_sendmsg:
  7587                           	opt stack 0
  7588                           pclatu	equ	0xFFB
  7589                           pclath	equ	0xFFA
  7590                           tblptru	equ	0xFF8
  7591                           tblptrh	equ	0xFF7
  7592                           tblptrl	equ	0xFF6
  7593                           tablat	equ	0xFF5
  7594                           prodh	equ	0xFF4
  7595                           prodl	equ	0xFF3
  7596                           intcon	equ	0xFF2
  7597                           postinc0	equ	0xFEE
  7598                           fsr0h	equ	0xFEA
  7599                           fsr0l	equ	0xFE9
  7600                           wreg	equ	0xFE8
  7601                           indf1	equ	0xFE7
  7602                           fsr1h	equ	0xFE2
  7603                           fsr1l	equ	0xFE1
  7604                           bsr	equ	0xFE0
  7605                           indf2	equ	0xFDF
  7606                           postinc2	equ	0xFDE
  7607                           postdec2	equ	0xFDD
  7608                           fsr2h	equ	0xFDA
  7609                           fsr2l	equ	0xFD9
  7610                           status	equ	0xFD8
  7611                           
  7612 ;; *************** function _send_msg *****************
  7613 ;; Defined at:
  7614 ;;		line 24 in file "../src/messages.c"
  7615 ;; Parameters:    Size  Location     Type
  7616 ;;  qptr            2   29[COMRAM] PTR struct __msg_queue
  7617 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  7618 ;;  length          1   31[COMRAM] unsigned char 
  7619 ;;  msgtype         1   32[COMRAM] unsigned char 
  7620 ;;  data            2   33[COMRAM] PTR void 
  7621 ;;		 -> timer0_int_handler@val(2), NULL(0), main@ic(29), main@uc(12), 
  7622 ;; Auto vars:     Size  Location     Type
  7623 ;;  qmsg            2   39[COMRAM] PTR struct __msg
  7624 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  7625 ;;  tlength         2   36[COMRAM] unsigned int 
  7626 ;;  slot            1   38[COMRAM] unsigned char 
  7627 ;; Return value:  Size  Location     Type
  7628 ;;                  1    wreg      char 
  7629 ;; Registers used:
  7630 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7631 ;; Tracked objects:
  7632 ;;		On entry : 0/0
  7633 ;;		On exit  : 0/0
  7634 ;;		Unchanged: 0/0
  7635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7636 ;;      Params:         6       0       0       0       0
  7637 ;;      Locals:         5       0       0       0       0
  7638 ;;      Temps:          1       0       0       0       0
  7639 ;;      Totals:        12       0       0       0       0
  7640 ;;Total ram usage:       12 bytes
  7641 ;; Hardware stack levels used:    1
  7642 ;; Hardware stack levels required when called:    1
  7643 ;; This function calls:
  7644 ;;		i2_memcpy
  7645 ;; This function is called by:
  7646 ;;		_ToMainLow_sendmsg
  7647 ;;		_ToMainHigh_sendmsg
  7648 ;;		_FromMainLow_sendmsg
  7649 ;;		_FromMainHigh_sendmsg
  7650 ;; This function uses a non-reentrant model
  7651 ;;
  7652                           
  7653                           	psect	text50
  7654  000EEA                     __ptext50:
  7655                           	opt stack 0
  7656  000EEA                     _send_msg:
  7657                           	opt stack 18
  7658                           
  7659                           ;messages.c: 25: unsigned char slot;
  7660                           ;messages.c: 27: msg *qmsg;
  7661                           ;messages.c: 28: size_t tlength = length;
  7662                           
  7663                           ;incstack = 0
  7664                           ;incstack = 0
  7665  000EEA  C020  F025         	movff	send_msg@length,send_msg@tlength
  7666  000EEE  6A26               	clrf	send_msg@tlength+1,c
  7667                           
  7668                           ;messages.c: 38: slot = qptr->cur_write_ind;
  7669  000EF0  EE20 F034          	lfsr	2,52
  7670  000EF4  501E               	movf	send_msg@qptr,w,c
  7671  000EF6  26D9               	addwf	fsr2l,f,c
  7672  000EF8  501F               	movf	send_msg@qptr+1,w,c
  7673  000EFA  22DA               	addwfc	fsr2h,f,c
  7674  000EFC  50DF               	movf	indf2,w,c
  7675  000EFE  6E27               	movwf	send_msg@slot,c
  7676                           
  7677                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  7678  000F00  5027               	movf	send_msg@slot,w,c
  7679  000F02  0D0D               	mullw	13
  7680  000F04  50F3               	movf	prodl,w,c
  7681  000F06  241E               	addwf	send_msg@qptr,w,c
  7682  000F08  6E28               	movwf	send_msg@qmsg,c
  7683  000F0A  50F4               	movf	prodh,w,c
  7684  000F0C  201F               	addwfc	send_msg@qptr+1,w,c
  7685  000F0E  6E29               	movwf	send_msg@qmsg+1,c
  7686                           
  7687                           ;messages.c: 41: if (qmsg->full != 0) {
  7688  000F10  C028  FFD9         	movff	send_msg@qmsg,fsr2l
  7689  000F14  C029  FFDA         	movff	send_msg@qmsg+1,fsr2h
  7690  000F18  50DF               	movf	indf2,w,c
  7691  000F1A  B4D8               	btfsc	status,2,c
  7692  000F1C  D002               	goto	i2l3224
  7693                           
  7694                           ;messages.c: 42: return (-1);
  7695  000F1E  0EFF               	movlw	255
  7696  000F20  0012               	return	
  7697  000F22                     i2l3224:
  7698                           
  7699                           ;messages.c: 43: }
  7700                           ;messages.c: 46: qmsg->length = length;
  7701  000F22  EE20 F001          	lfsr	2,1
  7702  000F26  5028               	movf	send_msg@qmsg,w,c
  7703  000F28  26D9               	addwf	fsr2l,f,c
  7704  000F2A  5029               	movf	send_msg@qmsg+1,w,c
  7705  000F2C  22DA               	addwfc	fsr2h,f,c
  7706  000F2E  C020  FFDF         	movff	send_msg@length,indf2
  7707                           
  7708                           ;messages.c: 47: qmsg->msgtype = msgtype;
  7709  000F32  EE20 F002          	lfsr	2,2
  7710  000F36  5028               	movf	send_msg@qmsg,w,c
  7711  000F38  26D9               	addwf	fsr2l,f,c
  7712  000F3A  5029               	movf	send_msg@qmsg+1,w,c
  7713  000F3C  22DA               	addwfc	fsr2h,f,c
  7714  000F3E  C021  FFDF         	movff	send_msg@msgtype,indf2
  7715                           
  7716                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  7717  000F42  0E03               	movlw	3
  7718  000F44  2428               	addwf	send_msg@qmsg,w,c
  7719  000F46  6E14               	movwf	?i2_memcpy,c
  7720  000F48  0E00               	movlw	0
  7721  000F4A  2029               	addwfc	send_msg@qmsg+1,w,c
  7722  000F4C  6E15               	movwf	?i2_memcpy+1,c
  7723  000F4E  C022  F016         	movff	send_msg@data,?i2_memcpy+2
  7724  000F52  C023  F017         	movff	send_msg@data+1,?i2_memcpy+3
  7725  000F56  C025  F018         	movff	send_msg@tlength,?i2_memcpy+4
  7726  000F5A  C026  F019         	movff	send_msg@tlength+1,?i2_memcpy+5
  7727  000F5E  EC84  F00A         	call	i2_memcpy	;wreg free
  7728                           
  7729                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  7730  000F62  EE20 F034          	lfsr	2,52
  7731  000F66  501E               	movf	send_msg@qptr,w,c
  7732  000F68  26D9               	addwf	fsr2l,f,c
  7733  000F6A  501F               	movf	send_msg@qptr+1,w,c
  7734  000F6C  22DA               	addwfc	fsr2h,f,c
  7735  000F6E  EE10 F034          	lfsr	1,52
  7736  000F72  501E               	movf	send_msg@qptr,w,c
  7737  000F74  26E1               	addwf	fsr1l,f,c
  7738  000F76  501F               	movf	send_msg@qptr+1,w,c
  7739  000F78  22E2               	addwfc	fsr1h,f,c
  7740  000F7A  50E7               	movf	indf1,w,c
  7741  000F7C  6E24               	movwf	??_send_msg& (0+255),c
  7742  000F7E  2824               	incf	??_send_msg,w,c
  7743  000F80  0B03               	andlw	3
  7744  000F82  6EDF               	movwf	indf2,c
  7745                           
  7746                           ;messages.c: 59: qmsg->full = 1;
  7747  000F84  C028  FFD9         	movff	send_msg@qmsg,fsr2l
  7748  000F88  C029  FFDA         	movff	send_msg@qmsg+1,fsr2h
  7749  000F8C  0E01               	movlw	1
  7750  000F8E  6EDF               	movwf	indf2,c
  7751                           
  7752                           ;messages.c: 60: return (1);
  7753  000F90  0E01               	movlw	1
  7754  000F92  0012               	return	
  7755  000F94                     __end_of_send_msg:
  7756                           	opt stack 0
  7757                           pclatu	equ	0xFFB
  7758                           pclath	equ	0xFFA
  7759                           tblptru	equ	0xFF8
  7760                           tblptrh	equ	0xFF7
  7761                           tblptrl	equ	0xFF6
  7762                           tablat	equ	0xFF5
  7763                           prodh	equ	0xFF4
  7764                           prodl	equ	0xFF3
  7765                           intcon	equ	0xFF2
  7766                           postinc0	equ	0xFEE
  7767                           fsr0h	equ	0xFEA
  7768                           fsr0l	equ	0xFE9
  7769                           wreg	equ	0xFE8
  7770                           indf1	equ	0xFE7
  7771                           fsr1h	equ	0xFE2
  7772                           fsr1l	equ	0xFE1
  7773                           bsr	equ	0xFE0
  7774                           indf2	equ	0xFDF
  7775                           postinc2	equ	0xFDE
  7776                           postdec2	equ	0xFDD
  7777                           fsr2h	equ	0xFDA
  7778                           fsr2l	equ	0xFD9
  7779                           status	equ	0xFD8
  7780                           
  7781 ;; *************** function i2_memcpy *****************
  7782 ;; Defined at:
  7783 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\memcpy.c"
  7784 ;; Parameters:    Size  Location     Type
  7785 ;;  memcpy          2   19[COMRAM] PTR void 
  7786 ;;		 -> timer0_int_handler@val(2), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  7787 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), 
  7788 ;;  memcpy          2   21[COMRAM] PTR const void 
  7789 ;;		 -> timer0_int_handler@val(2), NULL(0), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  7790 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@ic(29), main@uc(12), 
  7791 ;;  memcpy          2   23[COMRAM] unsigned int 
  7792 ;; Auto vars:     Size  Location     Type
  7793 ;;  memcpy          2   27[COMRAM] PTR const unsigned char 
  7794 ;;		 -> timer0_int_handler@val(2), NULL(0), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  7795 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@ic(29), main@uc(12), 
  7796 ;;  memcpy          2   25[COMRAM] PTR unsigned char 
  7797 ;;		 -> timer0_int_handler@val(2), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  7798 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), 
  7799 ;; Return value:  Size  Location     Type
  7800 ;;                  2   19[COMRAM] PTR void 
  7801 ;; Registers used:
  7802 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  7803 ;; Tracked objects:
  7804 ;;		On entry : 0/0
  7805 ;;		On exit  : 0/0
  7806 ;;		Unchanged: 0/0
  7807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7808 ;;      Params:         6       0       0       0       0
  7809 ;;      Locals:         4       0       0       0       0
  7810 ;;      Temps:          0       0       0       0       0
  7811 ;;      Totals:        10       0       0       0       0
  7812 ;;Total ram usage:       10 bytes
  7813 ;; Hardware stack levels used:    1
  7814 ;; This function calls:
  7815 ;;		Nothing
  7816 ;; This function is called by:
  7817 ;;		_send_msg
  7818 ;;		i2_recv_msg
  7819 ;; This function uses a non-reentrant model
  7820 ;;
  7821                           
  7822                           	psect	text51
  7823  001508                     __ptext51:
  7824                           	opt stack 0
  7825  001508                     i2_memcpy:
  7826                           	opt stack 18
  7827                           
  7828                           ;incstack = 0
  7829                           ;incstack = 0
  7830  001508  C016  F01C         	movff	i2memcpy@s1,i2memcpy@s
  7831  00150C  C017  F01D         	movff	i2memcpy@s1+1,i2memcpy@s+1
  7832  001510  C014  F01A         	movff	i2memcpy@d1,i2memcpy@d
  7833  001514  C015  F01B         	movff	i2memcpy@d1+1,i2memcpy@d+1
  7834  001518  D00E               	goto	i2l3418
  7835  00151A                     i2l3412:
  7836  00151A  C01C  FFD9         	movff	i2memcpy@s,fsr2l
  7837  00151E  C01D  FFDA         	movff	i2memcpy@s+1,fsr2h
  7838  001522  C01A  FFE1         	movff	i2memcpy@d,fsr1l
  7839  001526  C01B  FFE2         	movff	i2memcpy@d+1,fsr1h
  7840  00152A  CFDF FFE7          	movff	indf2,indf1
  7841  00152E  4A1C               	infsnz	i2memcpy@s,f,c
  7842  001530  2A1D               	incf	i2memcpy@s+1,f,c
  7843  001532  4A1A               	infsnz	i2memcpy@d,f,c
  7844  001534  2A1B               	incf	i2memcpy@d+1,f,c
  7845  001536                     i2l3418:
  7846  001536  0618               	decf	i2memcpy@n,f,c
  7847  001538  A0D8               	btfss	status,0,c
  7848  00153A  0619               	decf	i2memcpy@n+1,f,c
  7849  00153C  2818               	incf	i2memcpy@n& (0+255),w,c
  7850  00153E  B4D8               	btfsc	status,2,c
  7851  001540  2819               	incf	(i2memcpy@n+1)& (0+255),w,c
  7852  001542  B4D8               	btfsc	status,2,c
  7853                           
  7854                           ;	Return value of i2_memcpy is never used
  7855  001544  0012               	return	
  7856  001546  D7E9               	goto	i2l3412
  7857  001548                     __end_ofi2_memcpy:
  7858                           	opt stack 0
  7859  0000                     pclatu	equ	0xFFB
  7860                           pclath	equ	0xFFA
  7861                           tblptru	equ	0xFF8
  7862                           tblptrh	equ	0xFF7
  7863                           tblptrl	equ	0xFF6
  7864                           tablat	equ	0xFF5
  7865                           prodh	equ	0xFF4
  7866                           prodl	equ	0xFF3
  7867                           intcon	equ	0xFF2
  7868                           postinc0	equ	0xFEE
  7869                           fsr0h	equ	0xFEA
  7870                           fsr0l	equ	0xFE9
  7871                           wreg	equ	0xFE8
  7872                           indf1	equ	0xFE7
  7873                           fsr1h	equ	0xFE2
  7874                           fsr1l	equ	0xFE1
  7875                           bsr	equ	0xFE0
  7876                           indf2	equ	0xFDF
  7877                           postinc2	equ	0xFDE
  7878                           postdec2	equ	0xFDD
  7879                           fsr2h	equ	0xFDA
  7880                           fsr2l	equ	0xFD9
  7881                           status	equ	0xFD8
  7882                           pclatu	equ	0xFFB
  7883                           pclath	equ	0xFFA
  7884                           tblptru	equ	0xFF8
  7885                           tblptrh	equ	0xFF7
  7886                           tblptrl	equ	0xFF6
  7887                           tablat	equ	0xFF5
  7888                           prodh	equ	0xFF4
  7889                           prodl	equ	0xFF3
  7890                           intcon	equ	0xFF2
  7891                           postinc0	equ	0xFEE
  7892                           fsr0h	equ	0xFEA
  7893                           fsr0l	equ	0xFE9
  7894                           wreg	equ	0xFE8
  7895                           indf1	equ	0xFE7
  7896                           fsr1h	equ	0xFE2
  7897                           fsr1l	equ	0xFE1
  7898                           bsr	equ	0xFE0
  7899                           indf2	equ	0xFDF
  7900                           postinc2	equ	0xFDE
  7901                           postdec2	equ	0xFDD
  7902                           fsr2h	equ	0xFDA
  7903                           fsr2l	equ	0xFD9
  7904                           status	equ	0xFD8
  7905                           
  7906                           	psect	rparam
  7907  0000                     pclatu	equ	0xFFB
  7908                           pclath	equ	0xFFA
  7909                           tblptru	equ	0xFF8
  7910                           tblptrh	equ	0xFF7
  7911                           tblptrl	equ	0xFF6
  7912                           tablat	equ	0xFF5
  7913                           prodh	equ	0xFF4
  7914                           prodl	equ	0xFF3
  7915                           intcon	equ	0xFF2
  7916                           postinc0	equ	0xFEE
  7917                           fsr0h	equ	0xFEA
  7918                           fsr0l	equ	0xFE9
  7919                           wreg	equ	0xFE8
  7920                           indf1	equ	0xFE7
  7921                           fsr1h	equ	0xFE2
  7922                           fsr1l	equ	0xFE1
  7923                           bsr	equ	0xFE0
  7924                           indf2	equ	0xFDF
  7925                           postinc2	equ	0xFDE
  7926                           postdec2	equ	0xFDD
  7927                           fsr2h	equ	0xFDA
  7928                           fsr2l	equ	0xFD9
  7929                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        3
    BSS         307
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     56      99
    BANK0           128     44      49
    BANK1           256      0     212
    BANK2           256     72     126
    BANK3           256      0       0

Pointer List with Targets:

    ?_ReadADC	int  size(2) Largest target is 0

    ?_memcpy	PTR void  size(2) Largest target is 54
		 -> timer0_int_handler@val(COMRAM[2]), FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), 
		 -> ToMainLow_MQ(BANK1[54]), main@msgbuffer(BANK2[11]), 

    motor_control_thread@mptr	PTR struct __motor_control_thread_struct size(2) Largest target is 4
		 -> main@motorthread_data(BANK2[4]), 

    timer1_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK2[2]), 

    timer0_lthread@tptr	PTR struct __timer0_thread_struct size(2) Largest target is 2
		 -> main@t0thread_data(BANK2[2]), 

    uart_lthread@uptr	PTR struct __uart_thread_struct size(2) Largest target is 2
		 -> main@uthread_data(BANK2[2]), 

    ?_in_high_int	int  size(2) Largest target is 0

    memcpy@d1	PTR void  size(2) Largest target is 54
		 -> timer0_int_handler@val(COMRAM[2]), FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), 
		 -> ToMainLow_MQ(BANK1[54]), main@msgbuffer(BANK2[11]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 54
		 -> timer0_int_handler@val(COMRAM[2]), FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), 
		 -> ToMainLow_MQ(BANK1[54]), main@msgbuffer(BANK2[11]), 

    memcpy@s1	PTR const void  size(2) Largest target is 54
		 -> timer0_int_handler@val(COMRAM[2]), NULL(NULL[0]), FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), 
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), main@ic(BANK2[29]), main@uc(BANK2[12]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 54
		 -> timer0_int_handler@val(COMRAM[2]), NULL(NULL[0]), FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), 
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), main@ic(BANK2[29]), main@uc(BANK2[12]), 

    motor_control_thread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    uart_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    init_timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK2[2]), 

    timer0_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    timer0_lthread@msgval	PTR unsigned int  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    init_uart_recv@uc	PTR struct __uart_comm size(2) Largest target is 12
		 -> main@uc(BANK2[12]), 

    putIntoUARTBuffer@buffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    uc_ptr	PTR struct __uart_comm size(2) Largest target is 12
		 -> NULL(NULL[0]), main@uc(BANK2[12]), 

    init_i2c@ic	PTR struct __i2c_comm size(2) Largest target is 29
		 -> main@ic(BANK2[29]), 

    start_i2c_slave_reply@msg	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    ic_ptr	PTR struct __i2c_comm size(2) Largest target is 29
		 -> NULL(NULL[0]), main@ic(BANK2[29]), 

    check_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    FromMainHigh_recvmsg@data	PTR void  size(2) Largest target is 2
		 -> timer0_int_handler@val(COMRAM[2]), 

    FromMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 2
		 -> timer0_int_handler@msgtype(COMRAM[2]), 

    ToMainHigh_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    ToMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK2[1]), 

    ToMainHigh_sendmsg@data	PTR void  size(2) Largest target is 29
		 -> timer0_int_handler@val(COMRAM[2]), NULL(NULL[0]), main@ic(BANK2[29]), 

    ToMainLow_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    ToMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK2[1]), 

    ToMainLow_sendmsg@data	PTR void  size(2) Largest target is 12
		 -> NULL(NULL[0]), main@uc(BANK2[12]), 

    recv_msg@msgtype	PTR unsigned char  size(2) Largest target is 2
		 -> timer0_int_handler@msgtype(COMRAM[2]), main@msgtype(BANK2[1]), 

    recv_msg@data	PTR void  size(2) Largest target is 11
		 -> timer0_int_handler@val(COMRAM[2]), main@msgbuffer(BANK2[11]), 

    recv_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    recv_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    sp__memcpy	PTR void  size(2) Largest target is 54
		 -> timer0_int_handler@val(COMRAM[2]), FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), 
		 -> ToMainLow_MQ(BANK1[54]), main@msgbuffer(BANK2[11]), 

    send_msg@data	PTR void  size(2) Largest target is 29
		 -> timer0_int_handler@val(COMRAM[2]), NULL(NULL[0]), main@ic(BANK2[29]), main@uc(BANK2[12]), 

    send_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    send_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    init_queue@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptHandlerHigh in COMRAM

    _InterruptHandlerHigh->_i2c_master_handler
    _InterruptHandlerHigh->_timer0_int_handler
    _SleepIfOkay->i2_in_low_int
    i2_in_low_int->i2_in_high_int
    _uart_recv_int_handler->_ToMainLow_sendmsg
    _ToMainLow_sendmsg->_send_msg
    _adc_int_handler->_ReadADC
    _timer0_int_handler->_FromMainHigh_recvmsg
    _FromMainHigh_recvmsg->i2_recv_msg
    i2_recv_msg->i2_memcpy
    _i2c_master_handler->_ToMainHigh_sendmsg
    _ToMainHigh_sendmsg->_send_msg
    _send_msg->i2_memcpy
    _InterruptHandlerLow->_timer1_int_handler
    _InterruptHandlerLow->_uart_tx_int_handler
    _timer1_int_handler->_i2c_master_recv

Critical Paths under _main in BANK0

    _main->_ToMainHigh_recvmsg
    _main->_ToMainLow_recvmsg
    _ToMainLow_recvmsg->_recv_msg
    _uart_lthread->_WriteUSART
    _ToMainHigh_recvmsg->_recv_msg
    _recv_msg->_memcpy
    _block_on_To_msgqueues->_in_main
    _in_main->_in_low_int
    _in_low_int->_in_high_int
    _init_queues->_init_queue
    _i2c_configure_master->_OpenI2C1

Critical Paths under _InterruptHandlerHigh in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _InterruptHandlerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptHandlerHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptHandlerHigh in BANK3

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                75    75      0    5055
                                             43 BANK0      1     1      0
                                              0 BANK2     72    72      0
                  _enable_interrupts
                     _init_uart_recv
                           _init_i2c
               _i2c_configure_master
                _init_timer1_lthread
                        _init_queues
                         _OpenTimer1
                          _OpenUSART
              _block_on_To_msgqueues
                 _ToMainHigh_recvmsg
                       _uart_lthread
                     _timer0_lthread
                  _putIntoUARTBuffer
              _start_i2c_slave_reply
                  _ToMainLow_recvmsg
                     _timer1_lthread
               _motor_control_thread
 ---------------------------------------------------------------------------------
 (1) _motor_control_thread                                12     4      8      96
                                             14 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (1) _timer1_lthread                                       9     1      8       0
                                             14 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (1) _ToMainLow_recvmsg                                    5     0      5     772
                                             38 BANK0      5     0      5
                           _recv_msg
 ---------------------------------------------------------------------------------
 (1) _start_i2c_slave_reply                                5     2      3      93
                                             14 BANK0      5     2      3
 ---------------------------------------------------------------------------------
 (1) _putIntoUARTBuffer                                    2     0      2     186
                                             14 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _timer0_lthread                                      10     2      8      34
                                             14 BANK0     10     2      8
 ---------------------------------------------------------------------------------
 (1) _uart_lthread                                        12     4      8     285
                                             15 BANK0     12     4      8
                         _WriteUSART
 ---------------------------------------------------------------------------------
 (2) _WriteUSART                                           1     0      1      31
                                             14 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 (1) _ToMainHigh_recvmsg                                   5     0      5     772
                                             38 BANK0      5     0      5
                           _recv_msg
 ---------------------------------------------------------------------------------
 (2) _recv_msg                                            14     7      7     679
                                             24 BANK0     14     7      7
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _memcpy                                              10     4      6     174
                                             14 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (1) _block_on_To_msgqueues                                1     1      0      93
                                             20 BANK0      1     1      0
                            _in_main
                          _check_msg
                        _Delay1KTCYx
 ---------------------------------------------------------------------------------
 (2) _Delay1KTCYx                                          1     0      1      31
                                             14 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 (2) _check_msg                                            3     1      2      62
                                             14 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _in_main                                              2     0      2       0
                                             18 BANK0      2     0      2
                        _in_high_int
                         _in_low_int
 ---------------------------------------------------------------------------------
 (3) _in_low_int                                           2     0      2       0
                                             16 BANK0      2     0      2
                        _in_high_int
 ---------------------------------------------------------------------------------
 (4) _in_high_int                                          2     0      2       0
                                             14 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _OpenUSART                                            3     0      3     310
                                             14 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (1) _OpenTimer1                                           1     0      1      93
                                             14 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 (1) _init_queues                                          1     1      0     192
                                             18 BANK0      1     1      0
                         _init_queue
 ---------------------------------------------------------------------------------
 (2) _init_queue                                           4     2      2     192
                                             14 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _init_timer1_lthread                                  2     0      2      31
                                             14 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _i2c_configure_master                                 5     4      1     192
                                             16 BANK0      5     4      1
                           _OpenI2C1
 ---------------------------------------------------------------------------------
 (2) _OpenI2C1                                             2     0      2      62
                                             14 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_i2c                                             2     0      2      31
                                             14 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_uart_recv                                       2     0      2      31
                                             14 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _enable_interrupts                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _InterruptHandlerLow                                 17    17      0      34
                                              2 COMRAM    17    17      0
                 _timer1_int_handler
                _uart_tx_int_handler
 ---------------------------------------------------------------------------------
 (6) _uart_tx_int_handler                                  2     2      0       3
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (6) _timer1_int_handler                                   1     1      0      31
                                              1 COMRAM     1     1      0
                    _i2c_master_recv
 ---------------------------------------------------------------------------------
 (7) _i2c_master_recv                                      1     0      1      31
                                              0 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (8) _InterruptHandlerHigh                                14    14      0    5656
                                              0 BANK0     14    14      0
                 _i2c_master_handler
                 _timer0_int_handler
                    _adc_int_handler
              _uart_recv_int_handler
                        _SleepIfOkay
 ---------------------------------------------------------------------------------
 (9) _SleepIfOkay                                          0     0      0     146
                   _enter_sleep_mode
                      i2_in_high_int
                       i2_in_low_int
                        i2_check_msg
 ---------------------------------------------------------------------------------
 (10) i2_check_msg                                         3     1      2     146
                                             19 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (10) i2_in_low_int                                        2     0      2       0
                                             21 COMRAM     2     0      2
                      i2_in_high_int
 ---------------------------------------------------------------------------------
 (11) i2_in_high_int                                       2     0      2       0
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (10) _enter_sleep_mode                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _uart_recv_int_handler                                2     2      0    1085
                                             45 COMRAM     2     2      0
                  _ToMainLow_sendmsg
                          _ReadUSART
 ---------------------------------------------------------------------------------
 (10) _ReadUSART                                           1     1      0      34
                                             19 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (10) _ToMainLow_sendmsg                                   4     0      4    1051
                                             41 COMRAM     4     0      4
                           _send_msg
 ---------------------------------------------------------------------------------
 (9) _adc_int_handler                                      0     0      0       0
                            _ReadADC
                        _CloseTimer1
 ---------------------------------------------------------------------------------
 (10) _CloseTimer1                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _ReadADC                                             2     0      2       0
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (9) _timer0_int_handler                                   8     8      0    3263
                                             48 COMRAM     8     8      0
                 _ToMainHigh_sendmsg
               _FromMainHigh_recvmsg
                        _WriteTimer0
 ---------------------------------------------------------------------------------
 (10) _WriteTimer0                                         4     2      2      45
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (10) _FromMainHigh_recvmsg                                5     0      5    2000
                                             43 COMRAM     5     0      5
                         i2_recv_msg
 ---------------------------------------------------------------------------------
 (11) i2_recv_msg                                         14     7      7    1907
                                             29 COMRAM    14     7      7
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (9) _i2c_master_handler                                  12    12      0    1162
                                             45 COMRAM    11    11      0
                 _ToMainHigh_sendmsg
 ---------------------------------------------------------------------------------
 (10) _ToMainHigh_sendmsg                                  4     0      4    1051
                                             41 COMRAM     4     0      4
                           _send_msg
 ---------------------------------------------------------------------------------
 (11) _send_msg                                           12     6      6     958
                                             29 COMRAM    12     6      6
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (12) i2_memcpy                                           10     4      6     484
                                             19 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _enable_interrupts
   _init_uart_recv
   _init_i2c
   _i2c_configure_master
     _OpenI2C1
   _init_timer1_lthread
   _init_queues
     _init_queue
   _OpenTimer1
   _OpenUSART
   _block_on_To_msgqueues
     _in_main
       _in_high_int
       _in_low_int
         _in_high_int
     _check_msg
     _Delay1KTCYx
   _ToMainHigh_recvmsg
     _recv_msg
       _memcpy
   _uart_lthread
     _WriteUSART
   _timer0_lthread
   _putIntoUARTBuffer
   _start_i2c_slave_reply
   _ToMainLow_recvmsg
     _recv_msg
       _memcpy
   _timer1_lthread
   _motor_control_thread

 _InterruptHandlerLow (ROOT)
   _timer1_int_handler
     _i2c_master_recv
   _uart_tx_int_handler

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3FF      0       0      13        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100     48      7E       8       49.2%
BITBANK1           100      0       0      10        0.0%
BANK1              100      0      D4       6       82.8%
BITBANK0            80      0       0       4        0.0%
BANK0               80     2C      31       5       38.3%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     38      63       1       78.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0      1A       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1E6       9        0.0%
DATA                 0      0     200       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.20 build 52243 
Symbol Table                                                                                   Wed Oct 16 19:05:59 2013

               main@uthread_data 0209         _MQ_Main_Willing_to_block 0052  
                    _SSPSTATbits 000FC7        __end_of_ToMainLow_recvmsg 16A6  
                             bsr 000FE0        __end_of_ToMainLow_sendmsg 1762  
                   __CFG_CP0$OFF 000000                i2recv_msg@msgtype 0021  
              i2recv_msg@tlength 0028                              l113 0272  
                            l400 0D10                              l500 15E8  
                            l404 0D70                              l531 1118  
                            l532 111A                              l533 1128  
                            l525 10E4                              l534 112A  
                            l527 10F8                              l528 10FA  
                            l558 17F4                              l497 15CE  
                            l499 15E6                              l782 17A2  
           __size_of_WriteTimer0 0012                   _FromMainLow_MQ 0132  
                            wreg 000FE8                     __CFG_IESO$ON 000000  
                   ?_in_high_int 008E                 ??_init_uart_recv 0090  
    __size_of_i2c_master_handler 0364              i2recv_msg@maxlength 0020  
                           l3010 0466                             l3004 03CA  
                           l3006 0418                             l3122 0E02  
                           l3114 0DD6                             l3106 0DAA  
                           l3206 1210                             l3056 15D0  
                           l3144 0D42                             l3138 0CEC  
                           l3244 1418                             l3172 09B2  
                           l3238 13F4                             l3168 092E  
                           l3258 0854                             l3274 0912  
                           l2772 14B4                             l2764 1492  
                           l2960 018C                             l2786 14F8  
                           l2970 0224                             l2990 032A  
                           l2984 02F0                             l2992 0342  
                           l2976 02A4                             l2968 01D8  
                           l2986 0308                             l2996 035E  
                           l2998 0382                             u2130 0E1E  
                           _LATB 000F8A                             u2136 0E20  
                           u2437 17A4                             i1l53 006C  
                           i1l54 0084                             i1l55 0084  
                           i2l50 1002                             i2l46 0FD0  
                           i2l47 0FE0                             i2l48 0FF0  
                           i2l49 0FFE     __size_of_uart_tx_int_handler 007E  
                _FromMainHigh_MQ 0248                    __CFG_FCMEN$ON 000000  
         ?_block_on_To_msgqueues 0001                             _main 00CE  
          ?_motor_control_thread 008E                             _time 005E  
                           _test 0061                             fsr0h 000FEA  
                           fsr1h 000FE2                             fsr0l 000FE9  
                           fsr2h 000FDA                             indf1 000FE7  
                           fsr1l 000FE1                             indf2 000FDF  
                           fsr2l 000FD9                      main@msgtype 021D  
                           pclat 000FFA                      i2_check_msg 171C  
                           prodh 000FF4                             prodl 000FF3  
                           start 00CA                       i2_recv_msg 0BEE  
                  __CFG_FOSC2$ON 000000                 ?_adc_int_handler 0001  
    i2c_master_handler@data_read 0038    __size_of_i2c_configure_master 008C  
            __end_of_CloseTimer1 183C        ToMainHigh_recvmsg@msgtype 00A7  
                __end_of_ReadADC 1828                   send_msg@length 0020  
    __size_of_timer0_int_handler 006E                      _Delay1KTCYx 17A2  
                          ?_main 0001                            _T1CON 000FCD  
                          i2l291 072E                            i2l286 062C  
                          i2l545 1792      FromMainHigh_recvmsg@msgtype 002D  
                          _RCREG 000FAE                            _RCSTA 000FAB  
                          _TMR0H 000FD7                            _TMR1H 000FCF  
                          _TMR0L 000FD6                            _TMR1L 000FCE  
                          _SPBRG 000FAF                            _TRISB 000F93  
                          _TXREG 000FAD                            _TXSTA 000FAC  
                     i2memcpy@d1 0014                       i2memcpy@s1 0016  
                   ?_init_queues 0001            motor_control_thread@i 0098  
      __size_of_enter_sleep_mode 0006                  __end_of_in_main 1508  
                          _count 0054       ToMainLow_recvmsg@maxlength 00A6  
        timer0_lthread@msgbuffer 0094                            tablat 000FF5  
                   main@test_var 0219                            status 000FD8  
               __end_ofi2_memcpy 1548                   WriteUSART@data 008E  
                __initialization 138E                     __end_of_main 0486  
  uart_tx_int_handler@testbuffer 0002      __size_of_timer1_int_handler 000E  
     __size_of_ToMainLow_recvmsg 002C       __size_of_ToMainLow_sendmsg 0022  
  __size_of_FromMainHigh_recvmsg 0026            __size_ofi2_in_low_int 002E  
               __end_of_OpenI2C1 171C                           ??_main 00AB  
                send_msg@msgtype 0021                    __activetblptr 000002  
                send_msg@tlength 0025                           _ADRESH 000FC4  
                         _ADRESL 000FC3          ??_uart_recv_int_handler 002E  
                         i1l3430 0074                           i1l3422 005C  
                         i1l3432 007C                           i1l3424 0064  
                         i1l3434 007E                           i1l3426 0066  
                         i1l3428 006C                           i2l1328 163E  
                         i2l2180 1436                           i2l3224 0F22  
                     _OpenTimer1 15B8                           i2l3412 151A  
                         i2l3406 0CBA                   __CFG_WDTEN$OFF 000000  
                         i2l2800 0FDA                           i2l3418 1536  
                         i2l2810 0FF8                           i2l2802 0FE0  
                         i2l2812 0FFE                           i2l2804 0FE8  
                         i2l2830 0502                           i2l2822 04B6  
                         i2l3390 0C32                           i2l2806 0FEA  
                         i2l2808 0FF0                           i2l2826 04BC  
                         i2l2844 05E2                           i2l2828 04D2  
                         i2l2908 0EC4                           i2l2684 1670  
                         i2l2676 165A                           i2l2870 0732  
                         i2l2854 065E                           i2l2846 05FA  
                         i2l2838 0598                           i2l2790 0FC0  
                         i2l2792 0FC8                           i2l2858 0678  
                         i2l2794 0FCA                           i2l2884 07AA  
                         i2l2796 0FD0                           i2l2878 0790  
                         i2l2798 0FD8           ??_motor_control_thread 0096  
                  ??_SleepIfOkay 0018               __size_of_ReadUSART 001E  
                         _OSCCON 000FD3                      _CloseTimer1 1836  
                         _SPBRGH 000FB0                           _SSPADD 000FC8  
                         _SSPBUF 000FC9       i2c_master_handler@i2c_data 0036  
 __size_of_start_i2c_slave_reply 010A                        ??_ReadADC 0016  
  __end_of_start_i2c_slave_reply 0A20               timer0_lthread@tptr 008E  
                    ?i2_recv_msg 001E                     i2_in_low_int 164C  
                 __CFG_XINST$OFF 000000               __size_of_OpenUSART 0082  
                _i2c_master_recv 15EC                           _ic_ptr 00AF  
                  main@msgbuffer 020E                 __end_of_init_i2c 12BA  
               OpenTimer1@config 008E                           _length 004E  
                         _memcpy 13E2                           clear_0 1394  
                         clear_1 13A0                           clear_2 13B4  
                         _uc_ptr 0062                           main@ic 022B  
                         main@uc 021F                 __end_of_recv_msg 0916  
    start_i2c_slave_reply@length 008E                        ??_in_main 0094  
               __end_of_send_msg 0F94                     __pdataCOMRAM 005F  
          timer0_int_handler@val 0037                           tblptrh 000FF7  
                         tblptrl 000FF6                           tblptru 000FF8  
                    init_queue@i 0091                  _motor_direction 0058  
       ToMainLow_recvmsg@msgtype 00A7             __size_of_in_high_int 0012  
                __CFG_FOSC$HSPLL 000000                       __accesstop 0080  
        __end_of__initialization 13D8       __end_of_ToMainHigh_recvmsg 16D2  
     __end_of_ToMainHigh_sendmsg 1784            i2c_configure_master@i 0093  
    __end_of_init_timer1_lthread 17D8              __end_of_SleepIfOkay 147E  
                     _WriteUSART 17EA                   __pcstackCOMRAM 0001  
     i2c_master_handler@msg_sent 0035           __size_ofi2_in_high_int 000C  
             __size_of_check_msg 0036              _uart_tx_int_handler 114A  
              __end_of_ReadUSART 17A2        timer0_int_handler@msgtype 0035  
  __size_of_InterruptHandlerHigh 1034      __end_of_InterruptHandlerLow 00CA  
                      ?i2_memcpy 0014                    _ToMainHigh_MQ 0168  
            __size_ofi2_recv_msg 00D0                 _enter_sleep_mode 1830  
           timer1_lthread@length 0092                    ReadUSART@data 0014  
              __end_of_OpenUSART 114A                    check_msg@qptr 008E  
        ??_block_on_To_msgqueues 0094             __size_of_init_queues 0066  
                     __pbssBANK0 00AC                       __pbssBANK1 0100  
                     __pbssBANK2 0248                      ?_OpenTimer1 008E  
           ?_uart_tx_int_handler 0001                       __pnvCOMRAM 0062  
                      ?_OpenI2C1 008E                     ?i2_check_msg 0014  
        __end_of_i2c_master_recv 161C               timer1_lthread@tptr 008E  
                   OpenI2C1@slew 008F                recv_msg@maxlength 009A  
                recv_msg@msgtype 009B                  recv_msg@tlength 00A2  
                   ?_Delay1KTCYx 008E                 WriteTimer0@timer 0016  
                        ?_memcpy 008E                    ??_WriteTimer0 0016  
        __size_of_timer0_lthread 000A          __size_of_timer1_lthread 0004  
     __end_of_i2c_master_handler 07EA     __end_of_i2c_configure_master 10C8  
                     ??i2_memcpy 001A                       _buffertest 00AE  
                  i2_in_high_int 1808                          _SSPCON1 000FC6  
                        _SSPCON2 000FC5                          _SSPSTAT 000FC7  
          ??_uart_tx_int_handler 0001                __end_of_check_msg 15B8  
                      ?_init_i2c 008E                      _SleepIfOkay 1430  
                     ??_OpenI2C1 0090                          _ReadADC 181E  
                      ?_recv_msg 0098                       _first_time 005F  
                     _in_low_int 147E                          __Hparam 0000  
                      ?_send_msg 001E                          __Lparam 0000  
     __end_of_timer0_int_handler 1328                      ?_WriteUSART 008E  
               init_uart_recv@uc 008E                  __CFG_STVREN$OFF 000000  
                        __pcinit 138E                  __size_of_memcpy 004E  
       __size_of_adc_int_handler 0030                       _init_queue 11C8  
                        __ramtop 0400              __size_of_OpenTimer1 0034  
                        __ptext0 00CE                          __ptext1 0A20  
                        __ptext2 183C                          __ptext3 167A  
                        __ptext4 0916                          __ptext5 0B0E  
                        __ptext6 1814                          __ptext7 0CBE  
                        __ptext8 17EA                          __ptext9 16A6  
                        _buflen1 004A                          _in_main 14C4  
                      _T1CONbits 000FCD                          _counter 00AC  
                        _message 0057              __end_of_WriteTimer0 17EA  
                 ?i2_in_high_int 0014                          _msgtype 0059  
                 __pintcode_body 0F94     __end_of_FromMainHigh_recvmsg 16F8  
           end_of_initialization 13D8          timer1_lthread@msgbuffer 0094  
 __size_of_uart_recv_int_handler 00B0                          memcpy@d 0094  
                   ?_CloseTimer1 0001                          memcpy@n 0092  
                        memcpy@s 0096    __end_of_uart_recv_int_handler 0EEA  
                     ??_init_i2c 0090                    __Lmediumconst 0000  
                        int_func 0F94                    ?_uart_lthread 008F  
        __size_of_init_uart_recv 003A                     ??i2_recv_msg 0025  
               ?_i2c_master_recv 0001                       ??_recv_msg 009F  
              _putIntoUARTBuffer 0B0E                       ??_send_msg 0024  
     __end_of_timer1_int_handler 1808               ?_putIntoUARTBuffer 008E  
                      _RCSTAbits 000FAB                          postdec2 000FDD  
                        postinc0 000FEE                          postinc2 000FDE  
      ToMainHigh_sendmsg@msgtype 002B          putIntoUARTBuffer@buffer 008E  
            ??_putIntoUARTBuffer 0090                       _testbuffer 0100  
                 _last_reg_recvd 0055                        _TRISCbits 000F94  
             __end_ofi2_recv_msg 0CBE              __size_of_WriteUSART 0010  
  FromMainHigh_recvmsg@maxlength 002C                   ??_uart_lthread 0097  
      __end_of_putIntoUARTBuffer 0BEE                        _TXSTAbits 000FAC  
  __size_of_motor_control_thread 00EE                       main@length 021E  
                    ?_in_low_int 0090            timer0_lthread@msgtype 0090  
           _i2c_configure_master 103C            _start_i2c_slave_reply 0916  
           __size_ofi2_check_msg 0024         __end_of_enter_sleep_mode 1836  
  motor_control_thread@msgbuffer 0094               _ToMainHigh_recvmsg 16A6  
             _ToMainHigh_sendmsg 1762                    __pidataCOMRAM 1840  
                 _timer0_lthread 1814                      ?_init_queue 008E  
                      i2memcpy@d 001A                      _WriteTimer0 17D8  
                      i2memcpy@n 0018                        i2memcpy@s 001C  
                 _timer1_lthread 183C                   __end_of_memcpy 1430  
              _enable_interrupts 1828             __size_of_Delay1KTCYx 0012  
            ?_ToMainHigh_recvmsg 00A6                  ??i2_in_high_int 0016  
            ?_ToMainHigh_sendmsg 002A               ?_enable_interrupts 0001  
            start_initialization 138E                    ??_in_high_int 0090  
                      _ReadUSART 1784                ??_adc_int_handler 0016  
              __size_ofi2_memcpy 0040              ??_enable_interrupts 008E  
                   ??_OpenTimer1 008F   __size_of_block_on_To_msgqueues 00B0  
  __end_of_block_on_To_msgqueues 0E3A                        _OpenUSART 10C8  
   __end_of_InterruptHandlerHigh 103C                       init_i2c@ic 008E  
           ??_ToMainHigh_recvmsg 00AB             ??_ToMainHigh_sendmsg 002E  
          ?_i2c_configure_master 0090                __size_of_OpenI2C1 0024  
         __end_of_timer0_lthread 181E           __end_of_timer1_lthread 1840  
      __end_of_enable_interrupts 1830                         ??_memcpy 0094  
          timer1_lthread@msgtype 0090             _FromMainHigh_recvmsg 16D2  
   __size_of_init_timer1_lthread 0012               __end_of_OpenTimer1 15EC  
                    __pbssCOMRAM 0039                       ?_ReadUSART 0001  
                  ??_init_queues 0092                    __pcstackBANK0 0080  
                  __pcstackBANK2 0200              __size_of_in_low_int 0046  
       start_i2c_slave_reply@msg 008F              __CFG_CCP2MX$DEFAULT 000000  
                Delay1KTCYx@unit 008E         ToMainLow_sendmsg@msgtype 002B  
   __size_of_InterruptHandlerLow 00B2              __end_of_in_high_int 17C6  
                     ?_OpenUSART 008E                     ?_SleepIfOkay 0001  
             _i2c_master_handler 0486       __size_of_putIntoUARTBuffer 00E0  
          ToMainLow_recvmsg@data 00A9                     _ToMainLow_MQ 019E  
            __size_of_init_queue 007A                   _init_uart_recv 1548  
                       ?_ReadADC 0014                        _check_msg 1582  
                      __pnvBANK0 00AF             __size_of_CloseTimer1 0006  
         ?_start_i2c_slave_reply 008E                __size_of_init_i2c 0078  
                   recv_msg@data 009D                     ??_WriteUSART 008F  
            ?_i2c_master_handler 0001                     recv_msg@qmsg 00A4  
                   recv_msg@slot 00A1                     recv_msg@qptr 0098  
              __size_of_recv_msg 012C                        __pintcode 0008  
              __size_of_send_msg 00AA                  ?_timer0_lthread 008E  
          ?_FromMainHigh_recvmsg 002C                  ?_timer1_lthread 008E  
                    __pintcodelo 0018           ToMainHigh_recvmsg@data 00A9  
           __end_of_uart_lthread 0D8A                         ?_in_main 0092  
              WriteTimer0@timer0 0014               _timer0_int_handler 12BA  
                      _magnitude 0056      __end_of_uart_tx_int_handler 11C8  
            uart_lthread@msgtype 0091                         _ADCValue 0048  
           ??_i2c_master_handler 002E            ToMainLow_sendmsg@data 002C  
           main@motorthread_data 0205              ?_timer0_int_handler 0001  
             __end_of_WriteUSART 17FA                 uart_lthread@uptr 008F  
         __end_of_init_uart_recv 1582              __end_of_init_queues 138E  
          i2c_master_recv@length 0001                         _LATBbits 000F8A  
         ??_i2c_configure_master 0091                  i2check_msg@qptr 0014  
                     ?_check_msg 008E                         _IPR1bits 000F9F  
                       _PIE1bits 000F9D                        _msgbuffer 0039  
                  ?i2_in_low_int 0016                         i1u240_20 0064  
                       i1u240_21 0062                         i1u241_20 0074  
                       i1u241_21 0072                         i1u242_20 007C  
                       i1u242_21 007A                         i2u173_40 0FC8  
                       i2u173_41 0FC6                         i2u174_40 0FD8  
                       i2u174_41 0FD6                         i2u175_40 0FE8  
                       i2u175_41 0FE6                         i2u176_40 0FF8  
                       i2u176_41 0FF6                         _PIR1bits 000F9E  
                       i2u187_40 12C2                         i2u187_46 12C4  
         ToMainHigh_sendmsg@data 002C                         _RCONbits 000FD0  
               __CFG_WDTPS$32768 000000                         _SSP1CON1 000FC6  
                       _SSP1CON2 000FC5             ??_timer0_int_handler 0031  
                       _SSP1STAT 000FC7       __size_of_enable_interrupts 0008  
           timer0_lthread@length 0092               _timer1_int_handler 17FA  
           _InterruptHandlerHigh 0008                      ??_ReadUSART 0014  
                       i2_memcpy 1508             timer0_lthread@msgval 0096  
       FromMainHigh_recvmsg@data 002F                      _in_high_int 17B4  
                   send_msg@data 0022                     send_msg@qmsg 0028  
                   send_msg@slot 0027                     send_msg@qptr 001E  
          uart_lthread@msgbuffer 0095              ?_timer1_int_handler 0001  
i2c_master_handler@overrun_error 0037                  ?_init_uart_recv 008E  
                    ??_OpenUSART 0091                         _OpenI2C1 16F8  
                OpenUSART@config 008E                   ??i2_in_low_int 0018  
          _uart_recv_int_handler 0E3A                     ??_in_low_int 0092  
               __size_of_ReadADC 000A                         __Hrparam 0000  
       motor_control_thread@mptr 008E                         __Lrparam 0000  
              ?_enter_sleep_mode 0001           ??_FromMainHigh_recvmsg 0031  
           ??_timer1_int_handler 0002                  _adc_int_handler 161C  
             ??_enter_sleep_mode 0014         __size_of_i2c_master_recv 0030  
                   ??_init_queue 0090                     ?_WriteTimer0 0014  
        ToMainLow_sendmsg@length 002A     __end_of_motor_control_thread 0B0E  
              main@t0thread_data 020B            ?_InterruptHandlerHigh 0001  
               __size_of_in_main 0044      ToMainHigh_recvmsg@maxlength 00A6  
        init_timer1_lthread@tptr 008E                      _init_queues 1328  
             __end_of_in_low_int 14C4                         __ptext10 07EA  
                       __ptext11 13E2                         __ptext20 1328  
                       __ptext12 0D8A                         __ptext21 11C8  
                       __ptext13 17A2                         __ptext30 17FA  
                       __ptext22 17C6                         __ptext14 1582  
                       __ptext31 15EC                         __ptext23 103C  
                       __ptext15 14C4                         __ptext40 1740  
                       __ptext24 16F8                         __ptext16 147E  
                       __ptext41 161C                         __ptext33 1430  
                       __ptext25 1242                         __ptext17 17B4  
                       __ptext50 0EEA                         __ptext42 1836  
                       __ptext34 171C                         __ptext26 1548  
                       __ptext18 10C8                         __ptext51 1508  
                       __ptext43 181E                         __ptext35 164C  
                       __ptext27 1828                         __ptext19 15B8  
                       __ptext44 12BA                         __ptext36 1808  
                       __ptext45 17D8                         __ptext37 1830  
                       __ptext29 114A                         __ptext46 16D2  
                       __ptext38 0E3A                         __ptext47 0BEE  
                       __ptext39 1784                         __ptext48 0486  
                       __ptext49 1762                     _SSP1CON2bits 000FC5  
 i2c_configure_master@slave_addr 0090               uart_lthread@length 0093  
       timer0_int_handler@length 0033                         _counter2 004C  
                       _init_i2c 1242              _init_timer1_lthread 17C6  
                  __size_of_main 03B8                    ??i2_check_msg 0016  
                       _message3 0050                main@t1thread_data 021B  
                    ??_check_msg 0090               __end_of_init_queue 1242  
           __size_of_SleepIfOkay 004E                         _recv_msg 07EA  
                       _send_msg 0EEA                   init_queue@qptr 008E  
          __size_of_uart_lthread 00CC                   i2recv_msg@data 0023  
                 i2recv_msg@qmsg 002A                    ??_Delay1KTCYx 008F  
                 i2recv_msg@slot 0027                   i2recv_msg@qptr 001E  
                   _SSP1STATbits 000FC7              _InterruptHandlerLow 0018  
           ?_init_timer1_lthread 008E                OpenI2C1@sync_mode 008E  
 i2c_master_handler@data_written 0034                      _OSCTUNEbits 000F9B  
                     _INTCONbits 000FF2                   OpenUSART@spbrg 008F  
                       memcpy@d1 008E                         memcpy@s1 0090  
          __end_ofi2_in_high_int 1814                    _bufferForUART 0044  
                       intlevel1 0000                         intlevel2 0000  
           ?_InterruptHandlerLow 0001          ??_start_i2c_slave_reply 0091  
                main@testbuffer1 0200                  main@testbuffer2 0201  
                main@testbuffer3 0202                  main@testbuffer4 0203  
                main@testbuffer5 0204           ?_uart_recv_int_handler 0001  
                   _uart_lthread 0CBE            _block_on_To_msgqueues 0D8A  
               ??_timer0_lthread 0096      __size_of_ToMainHigh_recvmsg 002C  
        __end_of_adc_int_handler 164C      __size_of_ToMainHigh_sendmsg 0022  
                     _OSCCONbits 000FD3                 ??_timer1_lthread 0096  
       ToMainHigh_sendmsg@length 002A              __end_ofi2_check_msg 1740  
    motor_control_thread@msgtype 0090            ??_init_timer1_lthread 0090  
         ??_InterruptHandlerHigh 0080                _ToMainLow_recvmsg 167A  
              _ToMainLow_sendmsg 1740               main@last_reg_recvd 020D  
           __end_ofi2_in_low_int 167A               ?_ToMainLow_recvmsg 00A6  
            __end_of_Delay1KTCYx 17B4               ?_ToMainLow_sendmsg 002A  
                  uart_lthread@i 009A                ??_i2c_master_recv 0002  
     motor_control_thread@length 0092                      _SSPCON1bits 000FC6  
                    _SSPCON2bits 000FC5            ??_InterruptHandlerLow 0003  
            ??_ToMainLow_recvmsg 00AB              ??_ToMainLow_sendmsg 002E  
                  ??_CloseTimer1 0014                      _testbuffer3 005A  
                    _testbuffer4 005B                      _testbuffer5 005C  
                    _testbuffer6 005D             _motor_control_thread 0A20  
                   _USART_Status 0053  
