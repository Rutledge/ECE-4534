

Microchip Technology PIC18 LITE Macro Assembler V1.20 build 52243 
                                                                                               Tue Sep 24 08:25:16 2013

Microchip Technology Omniscient Code Generator (Lite mode) build 52243
     1                           	processor	18F45J10
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1
    10                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    47                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1
    60                           	psect	text46,global,reloc=2,class=CODE,delta=1
    61                           	psect	text47,global,reloc=2,class=CODE,delta=1
    62                           	psect	text48,global,reloc=2,class=CODE,delta=1
    63                           	psect	text49,global,reloc=2,class=CODE,delta=1
    64                           	psect	text50,global,reloc=2,class=CODE,delta=1
    65                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    66                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    67  0000                     _ADCON0	set	4034
    68  0000                     _ADCON0bits	set	4034
    69  0000                     _ADCON1	set	4033
    70  0000                     _ADCON2	set	4032
    71  0000                     _ADRESH	set	4036
    72  0000                     _ADRESL	set	4035
    73  0000                     _INTCONbits	set	4082
    74  0000                     _IPR1bits	set	3999
    75  0000                     _LATB	set	3978
    76  0000                     _LATBbits	set	3978
    77  0000                     _OSCCON	set	4051
    78  0000                     _OSCCONbits	set	4051
    79  0000                     _OSCTUNEbits	set	3995
    80  0000                     _PIE1bits	set	3997
    81  0000                     _PIR1bits	set	3998
    82  0000                     _RCONbits	set	4048
    83  0000                     _RCREG	set	4014
    84  0000                     _RCSTAbits	set	4011
    85  0000                     _SSPADD	set	4040
    86  0000                     _SSPBUF	set	4041
    87  0000                     _SSPCON1	set	4038
    88  0000                     _SSPCON1bits	set	4038
    89  0000                     _SSPCON2	set	4037
    90  0000                     _SSPCON2bits	set	4037
    91  0000                     _SSPSTAT	set	4039
    92  0000                     _SSPSTATbits	set	4039
    93  0000                     _T1CON	set	4045
    94  0000                     _T1CONbits	set	4045
    95  0000                     _TMR0H	set	4055
    96  0000                     _TMR0L	set	4054
    97  0000                     _TMR1H	set	4047
    98  0000                     _TMR1L	set	4046
    99  0000                     _TRISB	set	3987
   100  0000                     _TRISCbits	set	3988
   101                           
   102                           	psect	nvBANK0
   103  0000C7                     __pnvBANK0:
   104                           	opt stack 0
   105  0000C7                     _ic_ptr:
   106                           	opt stack 0
   107  0000C7                     	ds	2
   108                           
   109                           ; #config settings
   110  0000                     
   111                           	psect	cinit
   112  0017BC                     __pcinit:
   113                           	opt stack 0
   114  0017BC                     start_initialization:
   115                           	opt stack 0
   116  0017BC                     __initialization:
   117                           	opt stack 0
   118                           
   119                           ; Clear objects allocated to BIGRAM (320 bytes)
   120  0017BC  EE02  F032         	lfsr	0,__pbssBIGRAM
   121  0017C0  EE11 F040          	lfsr	1,320
   122  0017C4                     clear_0:
   123  0017C4  6AEE               	clrf	postinc0,c
   124  0017C6  50E5               	movf	postdec1,w,c
   125  0017C8  50E1               	movf	fsr1l,w,c
   126  0017CA  E1FC               	bnz	clear_0
   127  0017CC  50E2               	movf	fsr1h,w,c
   128  0017CE  E1FA               	bnz	clear_0
   129                           
   130                           ; Clear objects allocated to BANK1 (216 bytes)
   131  0017D0  EE01  F000         	lfsr	0,__pbssBANK1
   132  0017D4  0ED8               	movlw	216
   133  0017D6                     clear_1:
   134  0017D6  6AEE               	clrf	postinc0,c
   135  0017D8  06E8               	decf	wreg,f,c
   136  0017DA  E1FD               	bnz	clear_1
   137                           
   138                           ; Clear objects allocated to COMRAM (22 bytes)
   139  0017DC  EE00  F03D         	lfsr	0,__pbssCOMRAM
   140  0017E0  0E16               	movlw	22
   141  0017E2                     clear_2:
   142  0017E2  6AEE               	clrf	postinc0,c
   143  0017E4  06E8               	decf	wreg,f,c
   144  0017E6  E1FD               	bnz	clear_2
   145  0017E8                     end_of_initialization:
   146                           	opt stack 0
   147  0017E8                     __end_of__initialization:
   148                           	opt stack 0
   149  0017E8  0E00               	movlw	low (__Lmediumconst shr (0+16))
   150  0017EA  6EF8               	movwf	tblptru,c
   151  0017EC  0100               	movlb	0
   152  0017EE  EF80  F003         	goto	_main	;jump to C main() function
   153                           tblptru	equ	0xFF8
   154                           postinc0	equ	0xFEE
   155                           wreg	equ	0xFE8
   156                           postdec1	equ	0xFE5
   157                           fsr1h	equ	0xFE2
   158                           fsr1l	equ	0xFE1
   159                           
   160                           	psect	bssCOMRAM
   161  00003D                     __pbssCOMRAM:
   162                           	opt stack 0
   163  00003D                     _msgbuffer:
   164                           	opt stack 0
   165  00003D                     	ds	11
   166  000048                     _ADCValue:
   167                           	opt stack 0
   168  000048                     	ds	2
   169  00004A                     _counter2:
   170                           	opt stack 0
   171  00004A                     	ds	2
   172  00004C                     _length:
   173                           	opt stack 0
   174  00004C                     	ds	2
   175  00004E                     _uc_ptr:
   176                           	opt stack 0
   177  00004E                     	ds	2
   178  000050                     _MQ_Main_Willing_to_block:
   179                           	opt stack 0
   180  000050                     	ds	1
   181  000051                     _USART_Status:
   182                           	opt stack 0
   183  000051                     	ds	1
   184  000052                     _last_reg_recvd:
   185                           	opt stack 0
   186  000052                     	ds	1
   187                           tblptru	equ	0xFF8
   188                           postinc0	equ	0xFEE
   189                           wreg	equ	0xFE8
   190                           postdec1	equ	0xFE5
   191                           fsr1h	equ	0xFE2
   192                           fsr1l	equ	0xFE1
   193                           
   194                           	psect	bssBANK1
   195  000100                     __pbssBANK1:
   196                           	opt stack 0
   197  000100                     _FromMainHigh_MQ:
   198                           	opt stack 0
   199  000100                     	ds	54
   200  000136                     _FromMainLow_MQ:
   201                           	opt stack 0
   202  000136                     	ds	54
   203  00016C                     _ToMainHigh_MQ:
   204                           	opt stack 0
   205  00016C                     	ds	54
   206  0001A2                     _ToMainLow_MQ:
   207                           	opt stack 0
   208  0001A2                     	ds	54
   209                           tblptru	equ	0xFF8
   210                           postinc0	equ	0xFEE
   211                           wreg	equ	0xFE8
   212                           postdec1	equ	0xFE5
   213                           fsr1h	equ	0xFE2
   214                           fsr1l	equ	0xFE1
   215                           
   216                           	psect	bssBIGRAM
   217  000232                     __pbssBIGRAM:
   218                           	opt stack 0
   219  000232                     _x:
   220                           	opt stack 0
   221  000232                     	ds	320
   222                           tblptru	equ	0xFF8
   223                           postinc0	equ	0xFEE
   224                           wreg	equ	0xFE8
   225                           postdec1	equ	0xFE5
   226                           fsr1h	equ	0xFE2
   227                           fsr1l	equ	0xFE1
   228                           
   229                           	psect	cstackBANK2
   230  000200                     __pcstackBANK2:
   231                           	opt stack 0
   232  000200                     main@msgbuffer:
   233                           	opt stack 0
   234                           
   235                           ; 11 bytes @ 0x0
   236  000200                     	ds	11
   237  00020B                     main@uthread_data:
   238                           	opt stack 0
   239                           
   240                           ; 2 bytes @ 0xB
   241  00020B                     	ds	2
   242  00020D                     main@t0thread_data:
   243                           	opt stack 0
   244                           
   245                           ; 2 bytes @ 0xD
   246  00020D                     	ds	2
   247  00020F                     main@last_reg_recvd:
   248                           	opt stack 0
   249                           
   250                           ; 1 bytes @ 0xF
   251  00020F                     	ds	1
   252  000210                     main@test_var:
   253                           	opt stack 0
   254                           
   255                           ; 2 bytes @ 0x10
   256  000210                     	ds	2
   257  000212                     main@t1thread_data:
   258                           	opt stack 0
   259                           
   260                           ; 2 bytes @ 0x12
   261  000212                     	ds	2
   262  000214                     main@msgtype:
   263                           	opt stack 0
   264                           
   265                           ; 1 bytes @ 0x14
   266  000214                     	ds	1
   267  000215                     main@length:
   268                           	opt stack 0
   269                           
   270                           ; 1 bytes @ 0x15
   271  000215                     	ds	1
   272  000216                     main@ic:
   273                           	opt stack 0
   274                           
   275                           ; 28 bytes @ 0x16
   276  000216                     	ds	28
   277                           tblptru	equ	0xFF8
   278                           postinc0	equ	0xFEE
   279                           wreg	equ	0xFE8
   280                           postdec1	equ	0xFE5
   281                           fsr1h	equ	0xFE2
   282                           fsr1l	equ	0xFE1
   283                           
   284                           	psect	cstackBANK0
   285  000080                     __pcstackBANK0:
   286                           	opt stack 0
   287  000080                     ?i2_send_msg:
   288                           	opt stack 0
   289  000080                     ?i2_recv_msg:
   290                           	opt stack 0
   291  000080                     i2send_msg@qptr:
   292                           	opt stack 0
   293  000080                     i2recv_msg@qptr:
   294                           	opt stack 0
   295                           
   296                           ; 2 bytes @ 0x0
   297  000080                     	ds	2
   298  000082                     i2send_msg@length:
   299                           	opt stack 0
   300  000082                     i2recv_msg@maxlength:
   301                           	opt stack 0
   302                           
   303                           ; 1 bytes @ 0x2
   304  000082                     	ds	1
   305  000083                     i2send_msg@msgtype:
   306                           	opt stack 0
   307  000083                     i2recv_msg@msgtype:
   308                           	opt stack 0
   309                           
   310                           ; 2 bytes @ 0x3
   311  000083                     	ds	1
   312  000084                     i2send_msg@data:
   313                           	opt stack 0
   314                           
   315                           ; 2 bytes @ 0x4
   316  000084                     	ds	1
   317  000085                     i2recv_msg@data:
   318                           	opt stack 0
   319                           
   320                           ; 2 bytes @ 0x5
   321  000085                     	ds	1
   322  000086                     i2send_msg@tlength:
   323                           	opt stack 0
   324                           
   325                           ; 2 bytes @ 0x6
   326  000086                     	ds	1
   327  000087                     i2recv_msg@slot:
   328                           	opt stack 0
   329                           
   330                           ; 1 bytes @ 0x7
   331  000087                     	ds	1
   332  000088                     i2send_msg@slot:
   333                           	opt stack 0
   334  000088                     i2recv_msg@tlength:
   335                           	opt stack 0
   336                           
   337                           ; 2 bytes @ 0x8
   338  000088                     	ds	1
   339  000089                     i2send_msg@qmsg:
   340                           	opt stack 0
   341                           
   342                           ; 2 bytes @ 0x9
   343  000089                     	ds	1
   344  00008A                     i2recv_msg@qmsg:
   345                           	opt stack 0
   346                           
   347                           ; 2 bytes @ 0xA
   348  00008A                     	ds	1
   349  00008B                     ??_i2c_int_handler:
   350                           
   351                           ; 0 bytes @ 0xB
   352  00008B                     	ds	1
   353  00008C                     ?_FromMainHigh_recvmsg:
   354                           	opt stack 0
   355  00008C                     FromMainHigh_recvmsg@maxlength:
   356                           	opt stack 0
   357                           
   358                           ; 1 bytes @ 0xC
   359  00008C                     	ds	1
   360  00008D                     FromMainHigh_recvmsg@msgtype:
   361                           	opt stack 0
   362  00008D                     i2c_int_handler@error_buf:
   363                           	opt stack 0
   364                           
   365                           ; 3 bytes @ 0xD
   366  00008D                     	ds	2
   367  00008F                     FromMainHigh_recvmsg@data:
   368                           	opt stack 0
   369                           
   370                           ; 2 bytes @ 0xF
   371  00008F                     	ds	1
   372  000090                     i2c_int_handler@data_written:
   373                           	opt stack 0
   374                           
   375                           ; 1 bytes @ 0x10
   376  000090                     	ds	1
   377  000091                     ??_timer0_int_handler:
   378  000091                     i2c_int_handler@overrun_error:
   379                           	opt stack 0
   380                           
   381                           ; 1 bytes @ 0x11
   382  000091                     	ds	1
   383  000092                     i2c_int_handler@msg_to_send:
   384                           	opt stack 0
   385                           
   386                           ; 1 bytes @ 0x12
   387  000092                     	ds	1
   388  000093                     i2c_int_handler@i2c_data:
   389                           	opt stack 0
   390  000093                     timer0_int_handler@length:
   391                           	opt stack 0
   392                           
   393                           ; 2 bytes @ 0x13
   394  000093                     	ds	1
   395  000094                     i2c_int_handler@msg_ready:
   396                           	opt stack 0
   397                           
   398                           ; 1 bytes @ 0x14
   399  000094                     	ds	1
   400  000095                     i2c_int_handler@data_read:
   401                           	opt stack 0
   402  000095                     timer0_int_handler@msgtype:
   403                           	opt stack 0
   404                           
   405                           ; 2 bytes @ 0x15
   406  000095                     	ds	2
   407  000097                     timer0_int_handler@val:
   408                           	opt stack 0
   409                           
   410                           ; 2 bytes @ 0x17
   411  000097                     	ds	2
   412  000099                     ??_InterruptHandlerHigh:
   413                           
   414                           ; 0 bytes @ 0x19
   415  000099                     	ds	14
   416  0000A7                     ?_init_i2c:
   417                           	opt stack 0
   418  0000A7                     ?_init_timer1_lthread:
   419                           	opt stack 0
   420  0000A7                     ?_OpenTimer1:
   421                           	opt stack 0
   422  0000A7                     ?_OpenADC:
   423                           	opt stack 0
   424  0000A7                     ?_i2c_configure_slave:
   425                           	opt stack 0
   426  0000A7                     ?_start_i2c_slave_reply:
   427                           	opt stack 0
   428  0000A7                     ?_Delay1KTCYx:
   429                           	opt stack 0
   430  0000A7                     ?_init_queue:
   431                           	opt stack 0
   432  0000A7                     ?_check_msg:
   433                           	opt stack 0
   434  0000A7                     ?_timer0_lthread:
   435                           	opt stack 0
   436  0000A7                     ?_timer1_lthread:
   437                           	opt stack 0
   438  0000A7                     ?_uart_lthread:
   439                           	opt stack 0
   440  0000A7                     ?_memcpy:
   441                           	opt stack 0
   442  0000A7                     ?_in_high_int:
   443                           	opt stack 0
   444  0000A7                     ?___awdiv:
   445                           	opt stack 0
   446  0000A7                     start_i2c_slave_reply@length:
   447                           	opt stack 0
   448  0000A7                     i2c_configure_slave@addr:
   449                           	opt stack 0
   450  0000A7                     OpenADC@config:
   451                           	opt stack 0
   452  0000A7                     OpenTimer1@config:
   453                           	opt stack 0
   454  0000A7                     Delay1KTCYx@unit:
   455                           	opt stack 0
   456  0000A7                     init_queue@qptr:
   457                           	opt stack 0
   458  0000A7                     check_msg@qptr:
   459                           	opt stack 0
   460  0000A7                     init_i2c@ic:
   461                           	opt stack 0
   462  0000A7                     init_timer1_lthread@tptr:
   463                           	opt stack 0
   464  0000A7                     timer1_lthread@tptr:
   465                           	opt stack 0
   466  0000A7                     ___awdiv@dividend:
   467                           	opt stack 0
   468  0000A7                     memcpy@d1:
   469                           	opt stack 0
   470                           
   471                           ; 2 bytes @ 0x27
   472  0000A7                     	ds	1
   473  0000A8                     OpenADC@config2:
   474                           	opt stack 0
   475  0000A8                     start_i2c_slave_reply@msg:
   476                           	opt stack 0
   477                           
   478                           ; 2 bytes @ 0x28
   479  0000A8                     	ds	1
   480  0000A9                     ??_init_queue:
   481  0000A9                     ??_check_msg:
   482  0000A9                     ?_in_low_int:
   483                           	opt stack 0
   484  0000A9                     OpenADC@portconfig:
   485                           	opt stack 0
   486  0000A9                     uart_lthread@msgtype:
   487                           	opt stack 0
   488  0000A9                     ___awdiv@divisor:
   489                           	opt stack 0
   490  0000A9                     memcpy@s1:
   491                           	opt stack 0
   492                           
   493                           ; 2 bytes @ 0x29
   494  0000A9                     	ds	1
   495  0000AA                     ??_OpenADC:
   496  0000AA                     ??_start_i2c_slave_reply:
   497  0000AA                     init_queue@i:
   498                           	opt stack 0
   499                           
   500                           ; 1 bytes @ 0x2A
   501  0000AA                     	ds	1
   502  0000AB                     ??_init_queues:
   503  0000AB                     ??___awdiv:
   504  0000AB                     ?_in_main:
   505                           	opt stack 0
   506  0000AB                     uart_lthread@length:
   507                           	opt stack 0
   508  0000AB                     memcpy@n:
   509                           	opt stack 0
   510                           
   511                           ; 2 bytes @ 0x2B
   512  0000AB                     	ds	1
   513  0000AC                     ___awdiv@counter:
   514                           	opt stack 0
   515                           
   516                           ; 1 bytes @ 0x2C
   517  0000AC                     	ds	1
   518  0000AD                     ??_block_on_To_msgqueues:
   519  0000AD                     ___awdiv@sign:
   520                           	opt stack 0
   521  0000AD                     timer0_lthread@msgbuffer:
   522                           	opt stack 0
   523  0000AD                     uart_lthread@msgbuffer:
   524                           	opt stack 0
   525  0000AD                     memcpy@d:
   526                           	opt stack 0
   527                           
   528                           ; 2 bytes @ 0x2D
   529  0000AD                     	ds	1
   530  0000AE                     ___awdiv@quotient:
   531                           	opt stack 0
   532                           
   533                           ; 2 bytes @ 0x2E
   534  0000AE                     	ds	1
   535  0000AF                     timer0_lthread@msgval:
   536                           	opt stack 0
   537  0000AF                     memcpy@s:
   538                           	opt stack 0
   539                           
   540                           ; 2 bytes @ 0x2F
   541  0000AF                     	ds	2
   542  0000B1                     ?_recv_msg:
   543                           	opt stack 0
   544  0000B1                     recv_msg@qptr:
   545                           	opt stack 0
   546                           
   547                           ; 2 bytes @ 0x31
   548  0000B1                     	ds	2
   549  0000B3                     recv_msg@maxlength:
   550                           	opt stack 0
   551                           
   552                           ; 1 bytes @ 0x33
   553  0000B3                     	ds	1
   554  0000B4                     recv_msg@msgtype:
   555                           	opt stack 0
   556                           
   557                           ; 2 bytes @ 0x34
   558  0000B4                     	ds	2
   559  0000B6                     recv_msg@data:
   560                           	opt stack 0
   561                           
   562                           ; 2 bytes @ 0x36
   563  0000B6                     	ds	2
   564  0000B8                     ??_recv_msg:
   565                           
   566                           ; 0 bytes @ 0x38
   567  0000B8                     	ds	2
   568  0000BA                     recv_msg@slot:
   569                           	opt stack 0
   570                           
   571                           ; 1 bytes @ 0x3A
   572  0000BA                     	ds	1
   573  0000BB                     recv_msg@tlength:
   574                           	opt stack 0
   575                           
   576                           ; 2 bytes @ 0x3B
   577  0000BB                     	ds	2
   578  0000BD                     recv_msg@qmsg:
   579                           	opt stack 0
   580                           
   581                           ; 2 bytes @ 0x3D
   582  0000BD                     	ds	2
   583  0000BF                     ?_ToMainHigh_recvmsg:
   584                           	opt stack 0
   585  0000BF                     ?_ToMainLow_recvmsg:
   586                           	opt stack 0
   587  0000BF                     ToMainLow_recvmsg@maxlength:
   588                           	opt stack 0
   589  0000BF                     ToMainHigh_recvmsg@maxlength:
   590                           	opt stack 0
   591                           
   592                           ; 1 bytes @ 0x3F
   593  0000BF                     	ds	1
   594  0000C0                     ToMainLow_recvmsg@msgtype:
   595                           	opt stack 0
   596  0000C0                     ToMainHigh_recvmsg@msgtype:
   597                           	opt stack 0
   598                           
   599                           ; 2 bytes @ 0x40
   600  0000C0                     	ds	2
   601  0000C2                     ToMainLow_recvmsg@data:
   602                           	opt stack 0
   603  0000C2                     ToMainHigh_recvmsg@data:
   604                           	opt stack 0
   605                           
   606                           ; 2 bytes @ 0x42
   607  0000C2                     	ds	2
   608  0000C4                     ??_main:
   609                           
   610                           ; 0 bytes @ 0x44
   611  0000C4                     	ds	3
   612                           tblptru	equ	0xFF8
   613                           postinc0	equ	0xFEE
   614                           wreg	equ	0xFE8
   615                           postdec1	equ	0xFE5
   616                           fsr1h	equ	0xFE2
   617                           fsr1l	equ	0xFE1
   618                           
   619                           	psect	cstackCOMRAM
   620  000001                     __pcstackCOMRAM:
   621                           	opt stack 0
   622  000001                     ?_WriteTimer1:
   623                           	opt stack 0
   624  000001                     ?i1_memcpy:
   625                           	opt stack 0
   626  000001                     ReadUSART@data:
   627                           	opt stack 0
   628  000001                     WriteTimer1@timer1:
   629                           	opt stack 0
   630  000001                     i1memcpy@d1:
   631                           	opt stack 0
   632                           
   633                           ; 2 bytes @ 0x0
   634  000001                     	ds	2
   635  000003                     WriteTimer1@timer:
   636                           	opt stack 0
   637  000003                     i1memcpy@s1:
   638                           	opt stack 0
   639                           
   640                           ; 2 bytes @ 0x2
   641  000003                     	ds	2
   642  000005                     i1memcpy@n:
   643                           	opt stack 0
   644                           
   645                           ; 2 bytes @ 0x4
   646  000005                     	ds	2
   647  000007                     i1memcpy@d:
   648                           	opt stack 0
   649                           
   650                           ; 2 bytes @ 0x6
   651  000007                     	ds	2
   652  000009                     i1memcpy@s:
   653                           	opt stack 0
   654                           
   655                           ; 2 bytes @ 0x8
   656  000009                     	ds	2
   657  00000B                     ?_send_msg:
   658                           	opt stack 0
   659  00000B                     send_msg@qptr:
   660                           	opt stack 0
   661                           
   662                           ; 2 bytes @ 0xA
   663  00000B                     	ds	2
   664  00000D                     send_msg@length:
   665                           	opt stack 0
   666                           
   667                           ; 1 bytes @ 0xC
   668  00000D                     	ds	1
   669  00000E                     send_msg@msgtype:
   670                           	opt stack 0
   671                           
   672                           ; 1 bytes @ 0xD
   673  00000E                     	ds	1
   674  00000F                     send_msg@data:
   675                           	opt stack 0
   676                           
   677                           ; 2 bytes @ 0xE
   678  00000F                     	ds	2
   679  000011                     ??_send_msg:
   680                           
   681                           ; 0 bytes @ 0x10
   682  000011                     	ds	1
   683  000012                     send_msg@tlength:
   684                           	opt stack 0
   685                           
   686                           ; 2 bytes @ 0x11
   687  000012                     	ds	2
   688  000014                     send_msg@slot:
   689                           	opt stack 0
   690                           
   691                           ; 1 bytes @ 0x13
   692  000014                     	ds	1
   693  000015                     send_msg@qmsg:
   694                           	opt stack 0
   695                           
   696                           ; 2 bytes @ 0x14
   697  000015                     	ds	2
   698  000017                     ?_ToMainLow_sendmsg:
   699                           	opt stack 0
   700  000017                     ToMainLow_sendmsg@length:
   701                           	opt stack 0
   702                           
   703                           ; 1 bytes @ 0x16
   704  000017                     	ds	1
   705  000018                     ToMainLow_sendmsg@msgtype:
   706                           	opt stack 0
   707                           
   708                           ; 1 bytes @ 0x17
   709  000018                     	ds	1
   710  000019                     ToMainLow_sendmsg@data:
   711                           	opt stack 0
   712                           
   713                           ; 2 bytes @ 0x18
   714  000019                     	ds	2
   715  00001B                     ??_uart_recv_int_handler:
   716  00001B                     
   717                           ; 0 bytes @ 0x1A
   718  00001B                     	ds	2
   719  00001D                     ??_InterruptHandlerLow:
   720                           
   721                           ; 0 bytes @ 0x1C
   722  00001D                     	ds	17
   723  00002E                     ?_WriteTimer0:
   724                           	opt stack 0
   725  00002E                     ?_handle_start:
   726                           	opt stack 0
   727  00002E                     ?i2_check_msg:
   728                           	opt stack 0
   729  00002E                     ?_ReadADC:
   730                           	opt stack 0
   731  00002E                     ?i2_in_high_int:
   732                           	opt stack 0
   733  00002E                     ?i2_memcpy:
   734                           	opt stack 0
   735  00002E                     handle_start@data_read:
   736                           	opt stack 0
   737  00002E                     WriteTimer0@timer0:
   738                           	opt stack 0
   739  00002E                     i2check_msg@qptr:
   740                           	opt stack 0
   741  00002E                     i2memcpy@d1:
   742                           	opt stack 0
   743                           
   744                           ; 2 bytes @ 0x2D
   745  00002E                     	ds	1
   746  00002F                     
   747                           ; 0 bytes @ 0x2E
   748  00002F                     	ds	1
   749  000030                     ??_adc_int_handler:
   750  000030                     ??i2_check_msg:
   751  000030                     ?i2_in_low_int:
   752                           	opt stack 0
   753  000030                     WriteTimer0@timer:
   754                           	opt stack 0
   755  000030                     i2memcpy@s1:
   756                           	opt stack 0
   757                           
   758                           ; 2 bytes @ 0x2F
   759  000030                     	ds	2
   760  000032                     i2memcpy@n:
   761                           	opt stack 0
   762                           
   763                           ; 2 bytes @ 0x31
   764  000032                     	ds	2
   765  000034                     i2memcpy@d:
   766                           	opt stack 0
   767                           
   768                           ; 2 bytes @ 0x33
   769  000034                     	ds	2
   770  000036                     i2memcpy@s:
   771                           	opt stack 0
   772                           
   773                           ; 2 bytes @ 0x35
   774  000036                     	ds	2
   775  000038                     ??i2_send_msg:
   776  000038                     ??i2_recv_msg:
   777                           
   778                           ; 0 bytes @ 0x37
   779  000038                     	ds	1
   780  000039                     ?_ToMainHigh_sendmsg:
   781                           	opt stack 0
   782  000039                     ToMainHigh_sendmsg@length:
   783                           	opt stack 0
   784                           
   785                           ; 1 bytes @ 0x38
   786  000039                     	ds	1
   787  00003A                     ToMainHigh_sendmsg@msgtype:
   788                           	opt stack 0
   789                           
   790                           ; 1 bytes @ 0x39
   791  00003A                     	ds	1
   792  00003B                     ToMainHigh_sendmsg@data:
   793                           	opt stack 0
   794                           
   795                           ; 2 bytes @ 0x3A
   796  00003B                     	ds	2
   797  00003D                     tblptru	equ	0xFF8
   798                           postinc0	equ	0xFEE
   799                           wreg	equ	0xFE8
   800                           postdec1	equ	0xFE5
   801                           fsr1h	equ	0xFE2
   802                           fsr1l	equ	0xFE1
   803                           
   804                           ; 0 bytes @ 0x3C
   805 ;;
   806 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   807 ;;
   808 ;; *************** function _main *****************
   809 ;; Defined at:
   810 ;;		line 85 in file "../src/main.c"
   811 ;; Parameters:    Size  Location     Type
   812 ;;		None
   813 ;; Auto vars:     Size  Location     Type
   814 ;;  ic             28   22[BANK2 ] struct __i2c_comm
   815 ;;  msgbuffer      11    0[BANK2 ] unsigned char [11]
   816 ;;  uc              5    0        struct __uart_comm
   817 ;;  t1thread_dat    2   18[BANK2 ] struct __timer1_thread_s
   818 ;;  test_var        2   16[BANK2 ] int 
   819 ;;  t0thread_dat    2   13[BANK2 ] struct __timer0_thread_s
   820 ;;  uthread_data    2   11[BANK2 ] struct __uart_thread_str
   821 ;;  length          1   21[BANK2 ] char 
   822 ;;  msgtype         1   20[BANK2 ] unsigned char 
   823 ;;  last_reg_rec    1   15[BANK2 ] unsigned char 
   824 ;;  i               1    0        unsigned char 
   825 ;;  c               1    0        unsigned char 
   826 ;; Return value:  Size  Location     Type
   827 ;;		None               void
   828 ;; Registers used:
   829 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   830 ;; Tracked objects:
   831 ;;		On entry : 0/0
   832 ;;		On exit  : 0/0
   833 ;;		Unchanged: 0/0
   834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
   835 ;;      Params:         0       0       0       0       0
   836 ;;      Locals:         0       0       0      50       0
   837 ;;      Temps:          0       3       0       0       0
   838 ;;      Totals:         0       3       0      50       0
   839 ;;Total ram usage:       53 bytes
   840 ;; Hardware stack levels required when called:   14
   841 ;; This function calls:
   842 ;;		_enable_interrupts
   843 ;;		_init_i2c
   844 ;;		_init_timer1_lthread
   845 ;;		_init_queues
   846 ;;		_OpenTimer1
   847 ;;		_OpenADC
   848 ;;		_i2c_configure_slave
   849 ;;		_block_on_To_msgqueues
   850 ;;		_ToMainHigh_recvmsg
   851 ;;		_timer0_lthread
   852 ;;		_start_i2c_slave_reply
   853 ;;		_ToMainLow_recvmsg
   854 ;;		_timer1_lthread
   855 ;;		_uart_lthread
   856 ;;		___awdiv
   857 ;; This function is called by:
   858 ;;		Startup code after reset
   859 ;; This function uses a non-reentrant model
   860 ;;
   861                           
   862                           	psect	text0
   863  000700                     __ptext0:
   864                           	opt stack 0
   865  000700                     _main:
   866                           	opt stack 17
   867                           
   868                           ;main.c: 86: char c;
   869                           ;main.c: 87: signed char length;
   870                           ;main.c: 88: unsigned char msgtype;
   871                           ;main.c: 89: int test_var = 0;
   872                           
   873                           ; BSR set to: 0
   874                           ;incstack = 0
   875                           ;incstack = 0
   876  000700  0E00               	movlw	0
   877  000702  0102               	movlb	2	; () banked
   878  000704  0102               	movlb	2	; () banked
   879  000706  6F11               	movwf	(main@test_var+1)& (0+255),b
   880  000708  0E00               	movlw	0
   881  00070A  0102               	movlb	2	; () banked
   882  00070C  6F10               	movwf	main@test_var& (0+255),b
   883                           
   884                           ;main.c: 90: unsigned char last_reg_recvd;
   885                           ;main.c: 91: uart_comm uc;
   886                           ;main.c: 92: i2c_comm ic;
   887                           ;main.c: 93: unsigned char msgbuffer[10 + 1];
   888                           ;main.c: 94: unsigned char i;
   889                           ;main.c: 95: uart_thread_struct uthread_data;
   890                           ;main.c: 96: timer1_thread_struct t1thread_data;
   891                           ;main.c: 97: timer0_thread_struct t0thread_data;
   892                           ;main.c: 104: OSCCON = 0x82;
   893  00070E  0E82               	movlw	130
   894  000710  6ED3               	movwf	4051,c	;volatile
   895                           
   896                           ; BSR set to: 2
   897                           ;main.c: 105: OSCTUNEbits.PLLEN = 0;
   898  000712  9C9B               	bcf	3995,6,c	;volatile
   899                           
   900                           ; BSR set to: 2
   901                           ;main.c: 112: init_i2c(&ic);
   902  000714  0102               	movlb	2	; () banked
   903  000716  0E02               	movlw	high main@ic
   904  000718  0100               	movlb	0	; () banked
   905  00071A  0100               	movlb	0	; () banked
   906  00071C  6FA8               	movwf	(?_init_i2c+1)& (0+255),b
   907  00071E  0102               	movlb	2	; () banked
   908  000720  0E16               	movlw	low main@ic
   909  000722  0100               	movlb	0	; () banked
   910  000724  6FA7               	movwf	?_init_i2c& (0+255),b
   911  000726  EC94  F00A         	call	_init_i2c	;wreg free
   912                           
   913                           ;main.c: 115: init_timer1_lthread(&t1thread_data);
   914  00072A  0102               	movlb	2	; () banked
   915  00072C  0E02               	movlw	high main@t1thread_data
   916  00072E  0100               	movlb	0	; () banked
   917  000730  0100               	movlb	0	; () banked
   918  000732  6FA8               	movwf	(?_init_timer1_lthread+1)& (0+255),b
   919  000734  0102               	movlb	2	; () banked
   920  000736  0E12               	movlw	low main@t1thread_data
   921  000738  0100               	movlb	0	; () banked
   922  00073A  6FA7               	movwf	?_init_timer1_lthread& (0+255),b
   923  00073C  ECF1  F00C         	call	_init_timer1_lthread	;wreg free
   924                           
   925                           ;main.c: 118: init_queues();
   926  000740  EC61  F00A         	call	_init_queues	;wreg free
   927                           
   928                           ;main.c: 121: TRISB = 0x0;
   929  000744  0E00               	movlw	0
   930  000746  6E93               	movwf	3987,c	;volatile
   931                           
   932                           ;main.c: 122: LATB = 0x0;
   933  000748  0E00               	movlw	0
   934  00074A  6E8A               	movwf	3978,c	;volatile
   935                           
   936                           ;main.c: 135: OpenTimer1(0b11111111 & 0b11001111 & 0b11111111 & 0b11111101 & 0b11110111 
      +                          & 0b11111111);
   937  00074C  0100               	movlb	0	; () banked
   938  00074E  6FC4               	movwf	??_main& (0+255),b
   939  000750  0EC5               	movlw	197
   940  000752  0100               	movlb	0	; () banked
   941  000754  0100               	movlb	0	; () banked
   942  000756  6FA7               	movwf	?_OpenTimer1& (0+255),b
   943  000758  0100               	movlb	0	; () banked
   944  00075A  51C4               	movf	??_main& (0+255),w,b
   945  00075C  EC14  F00C         	call	_OpenTimer1	;wreg free
   946                           
   947                           ;main.c: 139: enable_interrupts();
   948  000760  EC2D  F00D         	call	_enable_interrupts	;wreg free
   949                           
   950                           ;main.c: 144: IPR1bits.TMR1IP = 0;
   951  000764  909F               	bcf	3999,0,c	;volatile
   952                           
   953                           ;main.c: 148: IPR1bits.SSPIP = 1;
   954  000766  869F               	bsf	3999,3,c	;volatile
   955                           
   956                           ;main.c: 152: OpenADC( 0b11011111 & 0b11111111 & 0b11110101, 0b10000111 & 0b11111111
   957                           ;main.c: 153: & 0b11111110 & 0b11111101, 0b11111111);
   958  000768  0100               	movlb	0	; () banked
   959  00076A  6FC4               	movwf	??_main& (0+255),b
   960  00076C  0ED5               	movlw	213
   961  00076E  0100               	movlb	0	; () banked
   962  000770  0100               	movlb	0	; () banked
   963  000772  6FA7               	movwf	?_OpenADC& (0+255),b
   964  000774  0100               	movlb	0	; () banked
   965  000776  51C4               	movf	??_main& (0+255),w,b
   966  000778  0100               	movlb	0	; () banked
   967  00077A  6FC5               	movwf	(??_main+1)& (0+255),b
   968  00077C  0E84               	movlw	132
   969  00077E  0100               	movlb	0	; () banked
   970  000780  0100               	movlb	0	; () banked
   971  000782  6FA8               	movwf	(?_OpenADC+1)& (0+255),b
   972  000784  0100               	movlb	0	; () banked
   973  000786  51C5               	movf	(??_main+1)& (0+255),w,b
   974  000788  0100               	movlb	0	; () banked
   975  00078A  6FC6               	movwf	(??_main+2)& (0+255),b
   976  00078C  0EFF               	movlw	255
   977  00078E  0100               	movlb	0	; () banked
   978  000790  0100               	movlb	0	; () banked
   979  000792  6FA9               	movwf	(?_OpenADC+2)& (0+255),b
   980  000794  0100               	movlb	0	; () banked
   981  000796  51C6               	movf	(??_main+2)& (0+255),w,b
   982  000798  ECE4  F009         	call	_OpenADC	;wreg free
   983                           
   984                           ;main.c: 162: i2c_configure_slave(0x9E);
   985  00079C  0100               	movlb	0	; () banked
   986  00079E  6FC4               	movwf	??_main& (0+255),b
   987  0007A0  0E9E               	movlw	158
   988  0007A2  0100               	movlb	0	; () banked
   989  0007A4  0100               	movlb	0	; () banked
   990  0007A6  6FA7               	movwf	?_i2c_configure_slave& (0+255),b
   991  0007A8  0100               	movlb	0	; () banked
   992  0007AA  51C4               	movf	??_main& (0+255),w,b
   993  0007AC  EC9B  F00C         	call	_i2c_configure_slave	;wreg free
   994                           
   995                           ;main.c: 175: PIE1bits.SSPIE = 1;
   996  0007B0  869D               	bsf	3997,3,c	;volatile
   997  0007B2                     l95:
   998                           
   999                           ;main.c: 203: block_on_To_msgqueues();
  1000  0007B2  EC45  F008         	call	_block_on_To_msgqueues	;wreg free
  1001                           
  1002                           ;main.c: 210: length = ToMainHigh_recvmsg(10, &msgtype, (void *) msgbuffer);
  1003  0007B6  0100               	movlb	0	; () banked
  1004  0007B8  6FC4               	movwf	??_main& (0+255),b
  1005  0007BA  0E0A               	movlw	10
  1006  0007BC  0100               	movlb	0	; () banked
  1007  0007BE  0100               	movlb	0	; () banked
  1008  0007C0  6FBF               	movwf	?_ToMainHigh_recvmsg& (0+255),b
  1009  0007C2  0100               	movlb	0	; () banked
  1010  0007C4  51C4               	movf	??_main& (0+255),w,b
  1011  0007C6  0102               	movlb	2	; () banked
  1012  0007C8  0E02               	movlw	high main@msgtype
  1013  0007CA  0100               	movlb	0	; () banked
  1014  0007CC  0100               	movlb	0	; () banked
  1015  0007CE  6FC1               	movwf	(?_ToMainHigh_recvmsg+2)& (0+255),b
  1016  0007D0  0102               	movlb	2	; () banked
  1017  0007D2  0E14               	movlw	low main@msgtype
  1018  0007D4  0100               	movlb	0	; () banked
  1019  0007D6  6FC0               	movwf	(?_ToMainHigh_recvmsg+1)& (0+255),b
  1020  0007D8  0102               	movlb	2	; () banked
  1021  0007DA  0E02               	movlw	high main@msgbuffer
  1022  0007DC  0100               	movlb	0	; () banked
  1023  0007DE  0100               	movlb	0	; () banked
  1024  0007E0  6FC3               	movwf	(?_ToMainHigh_recvmsg+4)& (0+255),b
  1025  0007E2  0102               	movlb	2	; () banked
  1026  0007E4  0E00               	movlw	low main@msgbuffer
  1027  0007E6  0100               	movlb	0	; () banked
  1028  0007E8  6FC2               	movwf	(?_ToMainHigh_recvmsg+3)& (0+255),b
  1029  0007EA  EC5B  F00C         	call	_ToMainHigh_recvmsg	;wreg free
  1030  0007EE  0102               	movlb	2	; () banked
  1031  0007F0  0102               	movlb	2	; () banked
  1032  0007F2  6F15               	movwf	main@length& (0+255),b
  1033                           
  1034                           ; BSR set to: 2
  1035                           ;main.c: 211: if (length < 0) {
  1036  0007F4  0102               	movlb	2	; () banked
  1037  0007F6  0102               	movlb	2	; () banked
  1038  0007F8  BF15               	btfsc	main@length& (0+255),7,b
  1039  0007FA  D0B7               	goto	l2976
  1040  0007FC  D0A7               	goto	l2974
  1041  0007FE                     l2950:
  1042                           
  1043                           ; BSR set to: 2
  1044                           ;main.c: 219: {
  1045                           ;main.c: 220: timer0_lthread(&t0thread_data, msgtype, length, msgbuffer);
  1046  0007FE  0102               	movlb	2	; () banked
  1047  000800  0E02               	movlw	high main@t0thread_data
  1048  000802  0100               	movlb	0	; () banked
  1049  000804  0100               	movlb	0	; () banked
  1050  000806  6FA8               	movwf	(?_timer0_lthread+1)& (0+255),b
  1051  000808  0102               	movlb	2	; () banked
  1052  00080A  0E0D               	movlw	low main@t0thread_data
  1053  00080C  0100               	movlb	0	; () banked
  1054  00080E  6FA7               	movwf	?_timer0_lthread& (0+255),b
  1055  000810  0102               	movlb	2	; () banked
  1056  000812  0100               	movlb	0	; () banked
  1057  000814  C214  F0A9         	movff	main@msgtype,?_timer0_lthread+2
  1058  000818  0100               	movlb	0	; () banked
  1059  00081A  0100               	movlb	0	; () banked
  1060  00081C  6BAA               	clrf	(?_timer0_lthread+3)& (0+255),b
  1061  00081E  0102               	movlb	2	; () banked
  1062  000820  0102               	movlb	2	; () banked
  1063  000822  5115               	movf	main@length& (0+255),w,b
  1064  000824  0100               	movlb	0	; () banked
  1065  000826  0100               	movlb	0	; () banked
  1066  000828  6FAB               	movwf	(?_timer0_lthread+4)& (0+255),b
  1067  00082A  0100               	movlb	0	; () banked
  1068  00082C  6BAC               	clrf	(?_timer0_lthread+5)& (0+255),b
  1069  00082E  0100               	movlb	0	; () banked
  1070  000830  BFAB               	btfsc	(?_timer0_lthread+4)& (0+255),7,b
  1071  000832  07AC               	decf	(?_timer0_lthread+5)& (0+255),f,b
  1072  000834  0102               	movlb	2	; () banked
  1073  000836  0E02               	movlw	high main@msgbuffer
  1074  000838  0100               	movlb	0	; () banked
  1075  00083A  0100               	movlb	0	; () banked
  1076  00083C  6FAE               	movwf	(?_timer0_lthread+7)& (0+255),b
  1077  00083E  0102               	movlb	2	; () banked
  1078  000840  0E00               	movlw	low main@msgbuffer
  1079  000842  0100               	movlb	0	; () banked
  1080  000844  6FAD               	movwf	(?_timer0_lthread+6)& (0+255),b
  1081  000846  EC23  F00D         	call	_timer0_lthread	;wreg free
  1082                           
  1083                           ;main.c: 221: break;
  1084  00084A  D08F               	goto	l2976
  1085  00084C                     l103:
  1086                           
  1087                           ;main.c: 224: case 41:
  1088                           ;main.c: 225: {
  1089                           ;main.c: 228: last_reg_recvd = msgbuffer[0];
  1090  00084C  C200  F20F         	movff	main@msgbuffer,main@last_reg_recvd
  1091                           
  1092                           ;main.c: 229: break;
  1093  000850  D08C               	goto	l2976
  1094  000852                     l2952:
  1095                           
  1096                           ;main.c: 242: {
  1097                           ;main.c: 243: length = 2;
  1098  000852  0100               	movlb	0	; () banked
  1099  000854  6FC4               	movwf	??_main& (0+255),b
  1100  000856  0E02               	movlw	2
  1101  000858  0102               	movlb	2	; () banked
  1102  00085A  0102               	movlb	2	; () banked
  1103  00085C  6F15               	movwf	main@length& (0+255),b
  1104  00085E  0100               	movlb	0	; () banked
  1105  000860  51C4               	movf	??_main& (0+255),w,b
  1106                           
  1107                           ; BSR set to: 0
  1108                           ;main.c: 245: msgbuffer[0] = x[test_var]/4;
  1109  000862  90D8               	bcf	status,0,c
  1110  000864  0102               	movlb	2	; () banked
  1111  000866  0102               	movlb	2	; () banked
  1112  000868  3510               	rlcf	main@test_var& (0+255),w,b
  1113  00086A  0100               	movlb	0	; () banked
  1114  00086C  6FC4               	movwf	??_main& (0+255),b
  1115  00086E  0102               	movlb	2	; () banked
  1116  000870  0102               	movlb	2	; () banked
  1117  000872  3511               	rlcf	(main@test_var+1)& (0+255),w,b
  1118  000874  0100               	movlb	0	; () banked
  1119  000876  6FC5               	movwf	(??_main+1)& (0+255),b
  1120  000878  0E32               	movlw	low _x
  1121  00087A  0100               	movlb	0	; () banked
  1122  00087C  25C4               	addwf	??_main& (0+255),w,b
  1123  00087E  6ED9               	movwf	fsr2l,c
  1124  000880  0E02               	movlw	high _x
  1125  000882  0100               	movlb	0	; () banked
  1126  000884  21C5               	addwfc	(??_main+1)& (0+255),w,b
  1127  000886  6EDA               	movwf	fsr2h,c
  1128  000888  0100               	movlb	0	; () banked
  1129  00088A  CFDE F0A7          	movff	postinc2,?___awdiv
  1130  00088E  0100               	movlb	0	; () banked
  1131  000890  CFDD F0A8          	movff	postdec2,?___awdiv+1
  1132  000894  0E00               	movlw	0
  1133  000896  0100               	movlb	0	; () banked
  1134  000898  0100               	movlb	0	; () banked
  1135  00089A  6FAA               	movwf	(?___awdiv+3)& (0+255),b
  1136  00089C  0E04               	movlw	4
  1137  00089E  0100               	movlb	0	; () banked
  1138  0008A0  6FA9               	movwf	(?___awdiv+2)& (0+255),b
  1139  0008A2  EC5A  F006         	call	___awdiv	;wreg free
  1140  0008A6  0100               	movlb	0	; () banked
  1141  0008A8  0100               	movlb	0	; () banked
  1142  0008AA  51A7               	movf	?___awdiv& (0+255),w,b
  1143  0008AC  0102               	movlb	2	; () banked
  1144  0008AE  0102               	movlb	2	; () banked
  1145  0008B0  6F00               	movwf	main@msgbuffer& (0+255),b
  1146                           
  1147                           ; BSR set to: 2
  1148                           ;main.c: 250: test_var++;
  1149  0008B2  0102               	movlb	2	; () banked
  1150  0008B4  0102               	movlb	2	; () banked
  1151  0008B6  4B10               	infsnz	main@test_var& (0+255),f,b
  1152  0008B8  2B11               	incf	(main@test_var+1)& (0+255),f,b
  1153                           
  1154                           ; BSR set to: 2
  1155                           ;main.c: 251: if(test_var > 159)
  1156  0008BA  0102               	movlb	2	; () banked
  1157  0008BC  0102               	movlb	2	; () banked
  1158  0008BE  5111               	movf	(main@test_var+1)& (0+255),w,b
  1159  0008C0  0A80               	xorlw	128
  1160  0008C2  0F80               	addlw	-128
  1161  0008C4  0EA0               	movlw	160
  1162  0008C6  B4D8               	btfsc	status,2,c
  1163  0008C8  5D10               	subwf	main@test_var& (0+255),w,b
  1164  0008CA  A0D8               	btfss	status,0,c
  1165  0008CC  D031               	goto	l2970
  1166                           
  1167                           ; BSR set to: 2
  1168                           ;main.c: 252: {
  1169                           ;main.c: 253: test_var = 0;
  1170  0008CE  0E00               	movlw	0
  1171  0008D0  0102               	movlb	2	; () banked
  1172  0008D2  0102               	movlb	2	; () banked
  1173  0008D4  6F11               	movwf	(main@test_var+1)& (0+255),b
  1174  0008D6  0E00               	movlw	0
  1175  0008D8  0102               	movlb	2	; () banked
  1176  0008DA  6F10               	movwf	main@test_var& (0+255),b
  1177  0008DC  D029               	goto	l2970
  1178  0008DE                     l2962:
  1179                           
  1180                           ; BSR set to: 2
  1181                           ;main.c: 260: {
  1182                           ;main.c: 261: length = 1;
  1183  0008DE  0100               	movlb	0	; () banked
  1184  0008E0  6FC4               	movwf	??_main& (0+255),b
  1185  0008E2  0E01               	movlw	1
  1186  0008E4  0102               	movlb	2	; () banked
  1187  0008E6  0102               	movlb	2	; () banked
  1188  0008E8  6F15               	movwf	main@length& (0+255),b
  1189  0008EA  0100               	movlb	0	; () banked
  1190  0008EC  51C4               	movf	??_main& (0+255),w,b
  1191                           
  1192                           ;main.c: 262: msgbuffer[0] = 0x3A;
  1193  0008EE  0100               	movlb	0	; () banked
  1194  0008F0  6FC4               	movwf	??_main& (0+255),b
  1195  0008F2  0E3A               	movlw	58
  1196  0008F4  D00B               	goto	L1
  1197  0008F6                     l2964:
  1198                           
  1199                           ;main.c: 266: {
  1200                           ;main.c: 267: length = 1;
  1201  0008F6  0100               	movlb	0	; () banked
  1202  0008F8  6FC4               	movwf	??_main& (0+255),b
  1203  0008FA  0E01               	movlw	1
  1204  0008FC  0102               	movlb	2	; () banked
  1205  0008FE  0102               	movlb	2	; () banked
  1206  000900  6F15               	movwf	main@length& (0+255),b
  1207  000902  0100               	movlb	0	; () banked
  1208  000904  51C4               	movf	??_main& (0+255),w,b
  1209                           
  1210                           ;main.c: 268: msgbuffer[0] = 0xA3;
  1211  000906  0100               	movlb	0	; () banked
  1212  000908  6FC4               	movwf	??_main& (0+255),b
  1213  00090A  0EA3               	movlw	163
  1214  00090C                     L1:
  1215  00090C  0102               	movlb	2	; () banked
  1216  00090E  0102               	movlb	2	; () banked
  1217  000910  6F00               	movwf	main@msgbuffer& (0+255),b
  1218  000912  0100               	movlb	0	; () banked
  1219  000914  51C4               	movf	??_main& (0+255),w,b
  1220                           
  1221                           ;main.c: 269: break;
  1222  000916  D00C               	goto	l2970
  1223  000918                     l2968:
  1224  000918  0102               	movlb	2	; () banked
  1225  00091A  0102               	movlb	2	; () banked
  1226  00091C  510F               	movf	main@last_reg_recvd& (0+255),w,b
  1227                           
  1228                           ; Switch size 1, requested type "space"
  1229                           ; Number of cases is 3, Range of values is 168 to 170
  1230                           ; switch strategies available:
  1231                           ; Name         Instructions Cycles
  1232                           ; simple_byte           10     6 (average)
  1233                           ;	Chosen strategy is simple_byte
  1234  00091E  0AA8               	xorlw	168	; case 168
  1235  000920  B4D8               	btfsc	status,2,c
  1236  000922  D7DD               	goto	l2962
  1237  000924  0A01               	xorlw	1	; case 169
  1238  000926  B4D8               	btfsc	status,2,c
  1239  000928  D7E6               	goto	l2964
  1240  00092A  0A03               	xorlw	3	; case 170
  1241  00092C  B4D8               	btfsc	status,2,c
  1242  00092E  D791               	goto	l2952
  1243  000930                     l2970:
  1244                           
  1245                           ;main.c: 272: start_i2c_slave_reply(length, msgbuffer);
  1246  000930  C215  F0A7         	movff	main@length,?_start_i2c_slave_reply
  1247  000934  0102               	movlb	2	; () banked
  1248  000936  0E02               	movlw	high main@msgbuffer
  1249  000938  0100               	movlb	0	; () banked
  1250  00093A  0100               	movlb	0	; () banked
  1251  00093C  6FA9               	movwf	(?_start_i2c_slave_reply+2)& (0+255),b
  1252  00093E  0102               	movlb	2	; () banked
  1253  000940  0E00               	movlw	low main@msgbuffer
  1254  000942  0100               	movlb	0	; () banked
  1255  000944  6FA8               	movwf	(?_start_i2c_slave_reply+1)& (0+255),b
  1256  000946  ECE5  F006         	call	_start_i2c_slave_reply	;wreg free
  1257                           
  1258                           ;main.c: 273: break;
  1259  00094A  D00F               	goto	l2976
  1260  00094C                     l2974:
  1261  00094C  0102               	movlb	2	; () banked
  1262  00094E  0102               	movlb	2	; () banked
  1263  000950  5114               	movf	main@msgtype& (0+255),w,b
  1264                           
  1265                           ; Switch size 1, requested type "space"
  1266                           ; Number of cases is 4, Range of values is 10 to 42
  1267                           ; switch strategies available:
  1268                           ; Name         Instructions Cycles
  1269                           ; simple_byte           13     7 (average)
  1270                           ;	Chosen strategy is simple_byte
  1271  000952  0A0A               	xorlw	10	; case 10
  1272  000954  B4D8               	btfsc	status,2,c
  1273  000956  D753               	goto	l2950
  1274  000958  0A22               	xorlw	34	; case 40
  1275  00095A  B4D8               	btfsc	status,2,c
  1276  00095C  D777               	goto	l103
  1277  00095E  0A01               	xorlw	1	; case 41
  1278  000960  B4D8               	btfsc	status,2,c
  1279  000962  D774               	goto	l103
  1280  000964  0A03               	xorlw	3	; case 42
  1281  000966  B4D8               	btfsc	status,2,c
  1282  000968  D7D7               	goto	l2968
  1283  00096A                     l2976:
  1284                           
  1285                           ;main.c: 281: }
  1286                           ;main.c: 284: length = ToMainLow_recvmsg(10, &msgtype, (void *) msgbuffer);
  1287  00096A  0100               	movlb	0	; () banked
  1288  00096C  6FC4               	movwf	??_main& (0+255),b
  1289  00096E  0E0A               	movlw	10
  1290  000970  0100               	movlb	0	; () banked
  1291  000972  0100               	movlb	0	; () banked
  1292  000974  6FBF               	movwf	?_ToMainLow_recvmsg& (0+255),b
  1293  000976  0100               	movlb	0	; () banked
  1294  000978  51C4               	movf	??_main& (0+255),w,b
  1295  00097A  0102               	movlb	2	; () banked
  1296  00097C  0E02               	movlw	high main@msgtype
  1297  00097E  0100               	movlb	0	; () banked
  1298  000980  0100               	movlb	0	; () banked
  1299  000982  6FC1               	movwf	(?_ToMainLow_recvmsg+2)& (0+255),b
  1300  000984  0102               	movlb	2	; () banked
  1301  000986  0E14               	movlw	low main@msgtype
  1302  000988  0100               	movlb	0	; () banked
  1303  00098A  6FC0               	movwf	(?_ToMainLow_recvmsg+1)& (0+255),b
  1304  00098C  0102               	movlb	2	; () banked
  1305  00098E  0E02               	movlw	high main@msgbuffer
  1306  000990  0100               	movlb	0	; () banked
  1307  000992  0100               	movlb	0	; () banked
  1308  000994  6FC3               	movwf	(?_ToMainLow_recvmsg+4)& (0+255),b
  1309  000996  0102               	movlb	2	; () banked
  1310  000998  0E00               	movlw	low main@msgbuffer
  1311  00099A  0100               	movlb	0	; () banked
  1312  00099C  6FC2               	movwf	(?_ToMainLow_recvmsg+3)& (0+255),b
  1313  00099E  EC45  F00C         	call	_ToMainLow_recvmsg	;wreg free
  1314  0009A2  0102               	movlb	2	; () banked
  1315  0009A4  0102               	movlb	2	; () banked
  1316  0009A6  6F15               	movwf	main@length& (0+255),b
  1317                           
  1318                           ; BSR set to: 2
  1319                           ;main.c: 285: if (length < 0) {
  1320  0009A8  0102               	movlb	2	; () banked
  1321  0009AA  0102               	movlb	2	; () banked
  1322  0009AC  BF15               	btfsc	main@length& (0+255),7,b
  1323  0009AE  D701               	goto	l95
  1324  0009B0  D04E               	goto	l2988
  1325  0009B2                     l2982:
  1326                           
  1327                           ; BSR set to: 2
  1328                           ;main.c: 293: {
  1329                           ;main.c: 294: timer1_lthread(&t1thread_data, msgtype, length, msgbuffer);
  1330  0009B2  0102               	movlb	2	; () banked
  1331  0009B4  0E02               	movlw	high main@t1thread_data
  1332  0009B6  0100               	movlb	0	; () banked
  1333  0009B8  0100               	movlb	0	; () banked
  1334  0009BA  6FA8               	movwf	(?_timer1_lthread+1)& (0+255),b
  1335  0009BC  0102               	movlb	2	; () banked
  1336  0009BE  0E12               	movlw	low main@t1thread_data
  1337  0009C0  0100               	movlb	0	; () banked
  1338  0009C2  6FA7               	movwf	?_timer1_lthread& (0+255),b
  1339  0009C4  0102               	movlb	2	; () banked
  1340  0009C6  0100               	movlb	0	; () banked
  1341  0009C8  C214  F0A9         	movff	main@msgtype,?_timer1_lthread+2
  1342  0009CC  0100               	movlb	0	; () banked
  1343  0009CE  0100               	movlb	0	; () banked
  1344  0009D0  6BAA               	clrf	(?_timer1_lthread+3)& (0+255),b
  1345  0009D2  0102               	movlb	2	; () banked
  1346  0009D4  0102               	movlb	2	; () banked
  1347  0009D6  5115               	movf	main@length& (0+255),w,b
  1348  0009D8  0100               	movlb	0	; () banked
  1349  0009DA  0100               	movlb	0	; () banked
  1350  0009DC  6FAB               	movwf	(?_timer1_lthread+4)& (0+255),b
  1351  0009DE  0100               	movlb	0	; () banked
  1352  0009E0  6BAC               	clrf	(?_timer1_lthread+5)& (0+255),b
  1353  0009E2  0100               	movlb	0	; () banked
  1354  0009E4  BFAB               	btfsc	(?_timer1_lthread+4)& (0+255),7,b
  1355  0009E6  07AC               	decf	(?_timer1_lthread+5)& (0+255),f,b
  1356  0009E8  0102               	movlb	2	; () banked
  1357  0009EA  0E02               	movlw	high main@msgbuffer
  1358  0009EC  0100               	movlb	0	; () banked
  1359  0009EE  0100               	movlb	0	; () banked
  1360  0009F0  6FAE               	movwf	(?_timer1_lthread+7)& (0+255),b
  1361  0009F2  0102               	movlb	2	; () banked
  1362  0009F4  0E00               	movlw	low main@msgbuffer
  1363  0009F6  0100               	movlb	0	; () banked
  1364  0009F8  6FAD               	movwf	(?_timer1_lthread+6)& (0+255),b
  1365  0009FA  EC15  F00D         	call	_timer1_lthread	;wreg free
  1366                           
  1367                           ;main.c: 295: break;
  1368  0009FE  D6D9               	goto	l95
  1369  000A00                     l2984:
  1370                           
  1371                           ;main.c: 298: case 31:
  1372                           ;main.c: 299: {
  1373                           ;main.c: 300: uart_lthread(&uthread_data, msgtype, length, msgbuffer);
  1374  000A00  0102               	movlb	2	; () banked
  1375  000A02  0E02               	movlw	high main@uthread_data
  1376  000A04  0100               	movlb	0	; () banked
  1377  000A06  0100               	movlb	0	; () banked
  1378  000A08  6FA8               	movwf	(?_uart_lthread+1)& (0+255),b
  1379  000A0A  0102               	movlb	2	; () banked
  1380  000A0C  0E0B               	movlw	low main@uthread_data
  1381  000A0E  0100               	movlb	0	; () banked
  1382  000A10  6FA7               	movwf	?_uart_lthread& (0+255),b
  1383  000A12  0102               	movlb	2	; () banked
  1384  000A14  0100               	movlb	0	; () banked
  1385  000A16  C214  F0A9         	movff	main@msgtype,?_uart_lthread+2
  1386  000A1A  0100               	movlb	0	; () banked
  1387  000A1C  0100               	movlb	0	; () banked
  1388  000A1E  6BAA               	clrf	(?_uart_lthread+3)& (0+255),b
  1389  000A20  0102               	movlb	2	; () banked
  1390  000A22  0102               	movlb	2	; () banked
  1391  000A24  5115               	movf	main@length& (0+255),w,b
  1392  000A26  0100               	movlb	0	; () banked
  1393  000A28  0100               	movlb	0	; () banked
  1394  000A2A  6FAB               	movwf	(?_uart_lthread+4)& (0+255),b
  1395  000A2C  0100               	movlb	0	; () banked
  1396  000A2E  6BAC               	clrf	(?_uart_lthread+5)& (0+255),b
  1397  000A30  0100               	movlb	0	; () banked
  1398  000A32  BFAB               	btfsc	(?_uart_lthread+4)& (0+255),7,b
  1399  000A34  07AC               	decf	(?_uart_lthread+5)& (0+255),f,b
  1400  000A36  0102               	movlb	2	; () banked
  1401  000A38  0E02               	movlw	high main@msgbuffer
  1402  000A3A  0100               	movlb	0	; () banked
  1403  000A3C  0100               	movlb	0	; () banked
  1404  000A3E  6FAE               	movwf	(?_uart_lthread+7)& (0+255),b
  1405  000A40  0102               	movlb	2	; () banked
  1406  000A42  0E00               	movlw	low main@msgbuffer
  1407  000A44  0100               	movlb	0	; () banked
  1408  000A46  6FAD               	movwf	(?_uart_lthread+6)& (0+255),b
  1409  000A48  ECBF  F00B         	call	_uart_lthread	;wreg free
  1410                           
  1411                           ;main.c: 301: break;
  1412  000A4C  D6B2               	goto	l95
  1413  000A4E                     l2988:
  1414  000A4E  0102               	movlb	2	; () banked
  1415  000A50  0102               	movlb	2	; () banked
  1416  000A52  5114               	movf	main@msgtype& (0+255),w,b
  1417                           
  1418                           ; Switch size 1, requested type "space"
  1419                           ; Number of cases is 3, Range of values is 11 to 31
  1420                           ; switch strategies available:
  1421                           ; Name         Instructions Cycles
  1422                           ; simple_byte           10     6 (average)
  1423                           ;	Chosen strategy is simple_byte
  1424  000A54  0A0B               	xorlw	11	; case 11
  1425  000A56  B4D8               	btfsc	status,2,c
  1426  000A58  D7AC               	goto	l2982
  1427  000A5A  0A15               	xorlw	21	; case 30
  1428  000A5C  B4D8               	btfsc	status,2,c
  1429  000A5E  D7D0               	goto	l2984
  1430  000A60  0A01               	xorlw	1	; case 31
  1431  000A62  B4D8               	btfsc	status,2,c
  1432  000A64  D7CD               	goto	l2984
  1433  000A66  D6A5               	goto	l95
  1434  000A68                     __end_of_main:
  1435                           	opt stack 0
  1436                           tblptru	equ	0xFF8
  1437                           postinc0	equ	0xFEE
  1438                           wreg	equ	0xFE8
  1439                           postdec1	equ	0xFE5
  1440                           fsr1h	equ	0xFE2
  1441                           fsr1l	equ	0xFE1
  1442                           postinc2	equ	0xFDE
  1443                           postdec2	equ	0xFDD
  1444                           fsr2h	equ	0xFDA
  1445                           fsr2l	equ	0xFD9
  1446                           status	equ	0xFD8
  1447                           
  1448 ;; *************** function ___awdiv *****************
  1449 ;; Defined at:
  1450 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\awdiv.c"
  1451 ;; Parameters:    Size  Location     Type
  1452 ;;  dividend        2   39[BANK0 ] int 
  1453 ;;  divisor         2   41[BANK0 ] int 
  1454 ;; Auto vars:     Size  Location     Type
  1455 ;;  quotient        2   46[BANK0 ] int 
  1456 ;;  sign            1   45[BANK0 ] unsigned char 
  1457 ;;  counter         1   44[BANK0 ] unsigned char 
  1458 ;; Return value:  Size  Location     Type
  1459 ;;                  2   39[BANK0 ] int 
  1460 ;; Registers used:
  1461 ;;		wreg, status,2, status,0
  1462 ;; Tracked objects:
  1463 ;;		On entry : 0/0
  1464 ;;		On exit  : 0/0
  1465 ;;		Unchanged: 0/0
  1466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1467 ;;      Params:         0       4       0       0       0
  1468 ;;      Locals:         0       4       0       0       0
  1469 ;;      Temps:          0       1       0       0       0
  1470 ;;      Totals:         0       9       0       0       0
  1471 ;;Total ram usage:        9 bytes
  1472 ;; Hardware stack levels used:    1
  1473 ;; Hardware stack levels required when called:   10
  1474 ;; This function calls:
  1475 ;;		Nothing
  1476 ;; This function is called by:
  1477 ;;		_main
  1478 ;; This function uses a non-reentrant model
  1479 ;;
  1480                           
  1481                           	psect	text1
  1482  000CB4                     __ptext1:
  1483                           	opt stack 0
  1484  000CB4                     ___awdiv:
  1485                           	opt stack 20
  1486                           
  1487                           ; BSR set to: 2
  1488                           ;incstack = 0
  1489                           ;incstack = 0
  1490  000CB4  0100               	movlb	0	; () banked
  1491  000CB6  6FAB               	movwf	??___awdiv& (0+255),b
  1492  000CB8  0E00               	movlw	0
  1493  000CBA  0100               	movlb	0	; () banked
  1494  000CBC  0100               	movlb	0	; () banked
  1495  000CBE  6FAD               	movwf	___awdiv@sign& (0+255),b
  1496  000CC0  0100               	movlb	0	; () banked
  1497  000CC2  51AB               	movf	??___awdiv& (0+255),w,b
  1498                           
  1499                           ; BSR set to: 0
  1500  000CC4  0100               	movlb	0	; () banked
  1501  000CC6  0100               	movlb	0	; () banked
  1502  000CC8  AFAA               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  1503  000CCA  D00F               	goto	l3214
  1504                           
  1505                           ; BSR set to: 0
  1506  000CCC  0100               	movlb	0	; () banked
  1507  000CCE  0100               	movlb	0	; () banked
  1508  000CD0  6DA9               	negf	___awdiv@divisor& (0+255),b
  1509  000CD2  0100               	movlb	0	; () banked
  1510  000CD4  1FAA               	comf	(___awdiv@divisor+1)& (0+255),f,b
  1511  000CD6  B0D8               	btfsc	status,0,c
  1512  000CD8  2BAA               	incf	(___awdiv@divisor+1)& (0+255),f,b
  1513                           
  1514                           ; BSR set to: 0
  1515  000CDA  0100               	movlb	0	; () banked
  1516  000CDC  6FAB               	movwf	??___awdiv& (0+255),b
  1517  000CDE  0E01               	movlw	1
  1518  000CE0  0100               	movlb	0	; () banked
  1519  000CE2  0100               	movlb	0	; () banked
  1520  000CE4  6FAD               	movwf	___awdiv@sign& (0+255),b
  1521  000CE6  0100               	movlb	0	; () banked
  1522  000CE8  51AB               	movf	??___awdiv& (0+255),w,b
  1523  000CEA                     l3214:
  1524                           
  1525                           ; BSR set to: 0
  1526  000CEA  0100               	movlb	0	; () banked
  1527  000CEC  0100               	movlb	0	; () banked
  1528  000CEE  AFA8               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  1529  000CF0  D00B               	goto	l3220
  1530                           
  1531                           ; BSR set to: 0
  1532  000CF2  0100               	movlb	0	; () banked
  1533  000CF4  0100               	movlb	0	; () banked
  1534  000CF6  6DA7               	negf	___awdiv@dividend& (0+255),b
  1535  000CF8  0100               	movlb	0	; () banked
  1536  000CFA  1FA8               	comf	(___awdiv@dividend+1)& (0+255),f,b
  1537  000CFC  B0D8               	btfsc	status,0,c
  1538  000CFE  2BA8               	incf	(___awdiv@dividend+1)& (0+255),f,b
  1539                           
  1540                           ; BSR set to: 0
  1541  000D00  0E01               	movlw	1
  1542  000D02  0100               	movlb	0	; () banked
  1543  000D04  0100               	movlb	0	; () banked
  1544  000D06  1BAD               	xorwf	___awdiv@sign& (0+255),f,b
  1545  000D08                     l3220:
  1546                           
  1547                           ; BSR set to: 0
  1548  000D08  0E00               	movlw	0
  1549  000D0A  0100               	movlb	0	; () banked
  1550  000D0C  0100               	movlb	0	; () banked
  1551  000D0E  6FAF               	movwf	(___awdiv@quotient+1)& (0+255),b
  1552  000D10  0E00               	movlw	0
  1553  000D12  0100               	movlb	0	; () banked
  1554  000D14  6FAE               	movwf	___awdiv@quotient& (0+255),b
  1555                           
  1556                           ; BSR set to: 0
  1557  000D16  0100               	movlb	0	; () banked
  1558  000D18  0100               	movlb	0	; () banked
  1559  000D1A  51AA               	movf	(___awdiv@divisor+1)& (0+255),w,b
  1560  000D1C  11A9               	iorwf	___awdiv@divisor& (0+255),w,b
  1561  000D1E  B4D8               	btfsc	status,2,c
  1562  000D20  D043               	goto	l3242
  1563                           
  1564                           ; BSR set to: 0
  1565  000D22  0100               	movlb	0	; () banked
  1566  000D24  6FAB               	movwf	??___awdiv& (0+255),b
  1567  000D26  0E01               	movlw	1
  1568  000D28  0100               	movlb	0	; () banked
  1569  000D2A  0100               	movlb	0	; () banked
  1570  000D2C  6FAC               	movwf	___awdiv@counter& (0+255),b
  1571  000D2E  0100               	movlb	0	; () banked
  1572  000D30  51AB               	movf	??___awdiv& (0+255),w,b
  1573  000D32  D009               	goto	l3228
  1574  000D34                     l3226:
  1575                           
  1576                           ; BSR set to: 0
  1577  000D34  0100               	movlb	0	; () banked
  1578  000D36  0100               	movlb	0	; () banked
  1579  000D38  0100               	movlb	0	; () banked
  1580  000D3A  90D8               	bcf	status,0,c
  1581  000D3C  37A9               	rlcf	___awdiv@divisor& (0+255),f,b
  1582  000D3E  37AA               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  1583  000D40  0100               	movlb	0	; () banked
  1584  000D42  0100               	movlb	0	; () banked
  1585  000D44  2BAC               	incf	___awdiv@counter& (0+255),f,b
  1586  000D46                     l3228:
  1587                           
  1588                           ; BSR set to: 0
  1589  000D46  0100               	movlb	0	; () banked
  1590  000D48  0100               	movlb	0	; () banked
  1591  000D4A  AFAA               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  1592  000D4C  D7F3               	goto	l3226
  1593  000D4E                     l3230:
  1594                           
  1595                           ; BSR set to: 0
  1596  000D4E  0100               	movlb	0	; () banked
  1597  000D50  0100               	movlb	0	; () banked
  1598  000D52  0100               	movlb	0	; () banked
  1599  000D54  90D8               	bcf	status,0,c
  1600  000D56  37AE               	rlcf	___awdiv@quotient& (0+255),f,b
  1601  000D58  37AF               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  1602                           
  1603                           ; BSR set to: 0
  1604  000D5A  0100               	movlb	0	; () banked
  1605  000D5C  0100               	movlb	0	; () banked
  1606  000D5E  51A9               	movf	___awdiv@divisor& (0+255),w,b
  1607  000D60  0100               	movlb	0	; () banked
  1608  000D62  0100               	movlb	0	; () banked
  1609  000D64  5DA7               	subwf	___awdiv@dividend& (0+255),w,b
  1610  000D66  0100               	movlb	0	; () banked
  1611  000D68  0100               	movlb	0	; () banked
  1612  000D6A  51AA               	movf	(___awdiv@divisor+1)& (0+255),w,b
  1613  000D6C  0100               	movlb	0	; () banked
  1614  000D6E  0100               	movlb	0	; () banked
  1615  000D70  59A8               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  1616  000D72  A0D8               	btfss	status,0,c
  1617  000D74  D00F               	goto	l3238
  1618                           
  1619                           ; BSR set to: 0
  1620  000D76  0100               	movlb	0	; () banked
  1621  000D78  0100               	movlb	0	; () banked
  1622  000D7A  51A9               	movf	___awdiv@divisor& (0+255),w,b
  1623  000D7C  0100               	movlb	0	; () banked
  1624  000D7E  0100               	movlb	0	; () banked
  1625  000D80  5FA7               	subwf	___awdiv@dividend& (0+255),f,b
  1626  000D82  0100               	movlb	0	; () banked
  1627  000D84  0100               	movlb	0	; () banked
  1628  000D86  51AA               	movf	(___awdiv@divisor+1)& (0+255),w,b
  1629  000D88  0100               	movlb	0	; () banked
  1630  000D8A  0100               	movlb	0	; () banked
  1631  000D8C  5BA8               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  1632                           
  1633                           ; BSR set to: 0
  1634  000D8E  0100               	movlb	0	; () banked
  1635  000D90  0100               	movlb	0	; () banked
  1636  000D92  81AE               	bsf	___awdiv@quotient& (0+255),0,b
  1637  000D94                     l3238:
  1638                           
  1639                           ; BSR set to: 0
  1640  000D94  0100               	movlb	0	; () banked
  1641  000D96  0100               	movlb	0	; () banked
  1642  000D98  0100               	movlb	0	; () banked
  1643  000D9A  90D8               	bcf	status,0,c
  1644  000D9C  33AA               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  1645  000D9E  33A9               	rrcf	___awdiv@divisor& (0+255),f,b
  1646                           
  1647                           ; BSR set to: 0
  1648  000DA0  0100               	movlb	0	; () banked
  1649  000DA2  0100               	movlb	0	; () banked
  1650  000DA4  2FAC               	decfsz	___awdiv@counter& (0+255),f,b
  1651  000DA6  D7D3               	goto	l3230
  1652  000DA8                     l3242:
  1653                           
  1654                           ; BSR set to: 0
  1655  000DA8  0100               	movlb	0	; () banked
  1656  000DAA  0100               	movlb	0	; () banked
  1657  000DAC  51AD               	movf	___awdiv@sign& (0+255),w,b
  1658  000DAE  B4D8               	btfsc	status,2,c
  1659  000DB0  D007               	goto	l3246
  1660                           
  1661                           ; BSR set to: 0
  1662  000DB2  0100               	movlb	0	; () banked
  1663  000DB4  0100               	movlb	0	; () banked
  1664  000DB6  6DAE               	negf	___awdiv@quotient& (0+255),b
  1665  000DB8  0100               	movlb	0	; () banked
  1666  000DBA  1FAF               	comf	(___awdiv@quotient+1)& (0+255),f,b
  1667  000DBC  B0D8               	btfsc	status,0,c
  1668  000DBE  2BAF               	incf	(___awdiv@quotient+1)& (0+255),f,b
  1669  000DC0                     l3246:
  1670                           
  1671                           ; BSR set to: 0
  1672  000DC0  C0AE  F0A7         	movff	___awdiv@quotient,?___awdiv
  1673  000DC4  C0AF  F0A8         	movff	___awdiv@quotient+1,?___awdiv+1
  1674  000DC8  0012               	return	
  1675  000DCA                     __end_of___awdiv:
  1676                           	opt stack 0
  1677                           tblptru	equ	0xFF8
  1678                           postinc0	equ	0xFEE
  1679                           wreg	equ	0xFE8
  1680                           postdec1	equ	0xFE5
  1681                           fsr1h	equ	0xFE2
  1682                           fsr1l	equ	0xFE1
  1683                           postinc2	equ	0xFDE
  1684                           postdec2	equ	0xFDD
  1685                           fsr2h	equ	0xFDA
  1686                           fsr2l	equ	0xFD9
  1687                           status	equ	0xFD8
  1688                           
  1689 ;; *************** function _uart_lthread *****************
  1690 ;; Defined at:
  1691 ;;		line 9 in file "../src/uart_thread.c"
  1692 ;; Parameters:    Size  Location     Type
  1693 ;;  uptr            2   39[BANK0 ] PTR struct __uart_thread
  1694 ;;		 -> main@uthread_data(2), 
  1695 ;;  msgtype         2   41[BANK0 ] int 
  1696 ;;  length          2   43[BANK0 ] int 
  1697 ;;  msgbuffer       2   45[BANK0 ] PTR unsigned char 
  1698 ;;		 -> main@msgbuffer(11), 
  1699 ;; Auto vars:     Size  Location     Type
  1700 ;;		None
  1701 ;; Return value:  Size  Location     Type
  1702 ;;                  2   39[BANK0 ] int 
  1703 ;; Registers used:
  1704 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1705 ;; Tracked objects:
  1706 ;;		On entry : 0/0
  1707 ;;		On exit  : 0/0
  1708 ;;		Unchanged: 0/0
  1709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1710 ;;      Params:         0       8       0       0       0
  1711 ;;      Locals:         0       0       0       0       0
  1712 ;;      Temps:          0       0       0       0       0
  1713 ;;      Totals:         0       8       0       0       0
  1714 ;;Total ram usage:        8 bytes
  1715 ;; Hardware stack levels used:    1
  1716 ;; Hardware stack levels required when called:   10
  1717 ;; This function calls:
  1718 ;;		Nothing
  1719 ;; This function is called by:
  1720 ;;		_main
  1721 ;; This function uses a non-reentrant model
  1722 ;;
  1723                           
  1724                           	psect	text2
  1725  00177E                     __ptext2:
  1726                           	opt stack 0
  1727  00177E                     _uart_lthread:
  1728                           	opt stack 20
  1729                           
  1730                           ;uart_thread.c: 10: if (msgtype == 30) {
  1731                           
  1732                           ; BSR set to: 0
  1733                           ;incstack = 0
  1734                           ;incstack = 0
  1735  00177E  0100               	movlb	0	; () banked
  1736  001780  0100               	movlb	0	; () banked
  1737  001782  51A9               	movf	uart_lthread@msgtype& (0+255),w,b
  1738  001784  0A1E               	xorlw	30
  1739  001786  11AA               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  1740  001788  B4D8               	btfsc	status,2,c
  1741  00178A  0012               	return	
  1742                           
  1743                           ; BSR set to: 0
  1744                           
  1745                           ; BSR set to: 0
  1746                           
  1747                           ; BSR set to: 0
  1748                           ;uart_thread.c: 11: } else if (msgtype == 31) {
  1749  00178C  0100               	movlb	0	; () banked
  1750  00178E  0100               	movlb	0	; () banked
  1751  001790  51A9               	movf	uart_lthread@msgtype& (0+255),w,b
  1752  001792  0A1F               	xorlw	31
  1753  001794  11AA               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  1754  001796  A4D8               	btfss	status,2,c
  1755  001798  0012               	return	
  1756                           
  1757                           ; BSR set to: 0
  1758                           ;uart_thread.c: 14: msgbuffer[length] = '\0';
  1759  00179A  0100               	movlb	0	; () banked
  1760  00179C  0100               	movlb	0	; () banked
  1761  00179E  51AB               	movf	uart_lthread@length& (0+255),w,b
  1762  0017A0  0100               	movlb	0	; () banked
  1763  0017A2  0100               	movlb	0	; () banked
  1764  0017A4  25AD               	addwf	uart_lthread@msgbuffer& (0+255),w,b
  1765  0017A6  6ED9               	movwf	fsr2l,c
  1766  0017A8  0100               	movlb	0	; () banked
  1767  0017AA  0100               	movlb	0	; () banked
  1768  0017AC  51AC               	movf	(uart_lthread@length+1)& (0+255),w,b
  1769  0017AE  0100               	movlb	0	; () banked
  1770  0017B0  0100               	movlb	0	; () banked
  1771  0017B2  21AE               	addwfc	(uart_lthread@msgbuffer+1)& (0+255),w,b
  1772  0017B4  6EDA               	movwf	fsr2h,c
  1773  0017B6  0E00               	movlw	0
  1774  0017B8  6EDF               	movwf	indf2,c
  1775  0017BA  0012               	return	
  1776  0017BC                     __end_of_uart_lthread:
  1777                           	opt stack 0
  1778                           tblptru	equ	0xFF8
  1779                           postinc0	equ	0xFEE
  1780                           wreg	equ	0xFE8
  1781                           postdec1	equ	0xFE5
  1782                           fsr1h	equ	0xFE2
  1783                           fsr1l	equ	0xFE1
  1784                           indf2	equ	0xFDF
  1785                           postinc2	equ	0xFDE
  1786                           postdec2	equ	0xFDD
  1787                           fsr2h	equ	0xFDA
  1788                           fsr2l	equ	0xFD9
  1789                           status	equ	0xFD8
  1790                           
  1791 ;; *************** function _timer1_lthread *****************
  1792 ;; Defined at:
  1793 ;;		line 16 in file "../src/timer1_thread.c"
  1794 ;; Parameters:    Size  Location     Type
  1795 ;;  tptr            2   39[BANK0 ] PTR struct __timer1_thre
  1796 ;;		 -> main@t1thread_data(2), 
  1797 ;;  msgtype         2   41[BANK0 ] int 
  1798 ;;  length          2   43[BANK0 ] int 
  1799 ;;  msgbuffer       2   45[BANK0 ] PTR unsigned char 
  1800 ;;		 -> main@msgbuffer(11), 
  1801 ;; Auto vars:     Size  Location     Type
  1802 ;;  retval          1    0        char 
  1803 ;; Return value:  Size  Location     Type
  1804 ;;                  2   39[BANK0 ] int 
  1805 ;; Registers used:
  1806 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1807 ;; Tracked objects:
  1808 ;;		On entry : 0/0
  1809 ;;		On exit  : 0/0
  1810 ;;		Unchanged: 0/0
  1811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1812 ;;      Params:         0       8       0       0       0
  1813 ;;      Locals:         0       0       0       0       0
  1814 ;;      Temps:          0       0       0       0       0
  1815 ;;      Totals:         0       8       0       0       0
  1816 ;;Total ram usage:        8 bytes
  1817 ;; Hardware stack levels used:    1
  1818 ;; Hardware stack levels required when called:   10
  1819 ;; This function calls:
  1820 ;;		Nothing
  1821 ;; This function is called by:
  1822 ;;		_main
  1823 ;; This function uses a non-reentrant model
  1824 ;;
  1825                           
  1826                           	psect	text3
  1827  001A2A                     __ptext3:
  1828                           	opt stack 0
  1829  001A2A                     _timer1_lthread:
  1830                           	opt stack 20
  1831                           
  1832                           ;timer1_thread.c: 17: signed char retval;
  1833                           ;timer1_thread.c: 19: tptr->msgcount++;
  1834                           
  1835                           ; BSR set to: 0
  1836                           ;incstack = 0
  1837                           ;incstack = 0
  1838  001A2A  C0A7  FFD9         	movff	timer1_lthread@tptr,fsr2l
  1839  001A2E  C0A8  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  1840  001A32  2ADE               	incf	postinc2,f,c
  1841  001A34  0E00               	movlw	0
  1842  001A36  22DD               	addwfc	postdec2,f,c
  1843  001A38  0012               	return	
  1844  001A3A                     __end_of_timer1_lthread:
  1845                           	opt stack 0
  1846                           tblptru	equ	0xFF8
  1847                           postinc0	equ	0xFEE
  1848                           wreg	equ	0xFE8
  1849                           postdec1	equ	0xFE5
  1850                           fsr1h	equ	0xFE2
  1851                           fsr1l	equ	0xFE1
  1852                           indf2	equ	0xFDF
  1853                           postinc2	equ	0xFDE
  1854                           postdec2	equ	0xFDD
  1855                           fsr2h	equ	0xFDA
  1856                           fsr2l	equ	0xFD9
  1857                           status	equ	0xFD8
  1858                           
  1859 ;; *************** function _ToMainLow_recvmsg *****************
  1860 ;; Defined at:
  1861 ;;		line 112 in file "../src/messages.c"
  1862 ;; Parameters:    Size  Location     Type
  1863 ;;  maxlength       1   63[BANK0 ] unsigned char 
  1864 ;;  msgtype         2   64[BANK0 ] PTR unsigned char 
  1865 ;;		 -> main@msgtype(1), 
  1866 ;;  data            2   66[BANK0 ] PTR void 
  1867 ;;		 -> main@msgbuffer(11), 
  1868 ;; Auto vars:     Size  Location     Type
  1869 ;;		None
  1870 ;; Return value:  Size  Location     Type
  1871 ;;                  1    wreg      char 
  1872 ;; Registers used:
  1873 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1874 ;; Tracked objects:
  1875 ;;		On entry : 0/0
  1876 ;;		On exit  : 0/0
  1877 ;;		Unchanged: 0/0
  1878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1879 ;;      Params:         0       5       0       0       0
  1880 ;;      Locals:         0       0       0       0       0
  1881 ;;      Temps:          0       0       0       0       0
  1882 ;;      Totals:         0       5       0       0       0
  1883 ;;Total ram usage:        5 bytes
  1884 ;; Hardware stack levels used:    1
  1885 ;; Hardware stack levels required when called:   12
  1886 ;; This function calls:
  1887 ;;		_recv_msg
  1888 ;; This function is called by:
  1889 ;;		_main
  1890 ;; This function uses a non-reentrant model
  1891 ;;
  1892                           
  1893                           	psect	text4
  1894  00188A                     __ptext4:
  1895                           	opt stack 0
  1896  00188A                     _ToMainLow_recvmsg:
  1897                           	opt stack 18
  1898                           
  1899                           ;messages.c: 118: return (recv_msg(&ToMainLow_MQ, maxlength, msgtype, data));
  1900                           
  1901                           ;incstack = 0
  1902                           ;incstack = 0
  1903  00188A  0101               	movlb	1	; () banked
  1904  00188C  0E01               	movlw	high _ToMainLow_MQ
  1905  00188E  0100               	movlb	0	; () banked
  1906  001890  0100               	movlb	0	; () banked
  1907  001892  6FB2               	movwf	(?_recv_msg+1)& (0+255),b
  1908  001894  0101               	movlb	1	; () banked
  1909  001896  0EA2               	movlw	low _ToMainLow_MQ
  1910  001898  0100               	movlb	0	; () banked
  1911  00189A  6FB1               	movwf	?_recv_msg& (0+255),b
  1912  00189C  C0BF  F0B3         	movff	ToMainLow_recvmsg@maxlength,?_recv_msg+2
  1913  0018A0  C0C0  F0B4         	movff	ToMainLow_recvmsg@msgtype,?_recv_msg+3
  1914  0018A4  C0C1  F0B5         	movff	ToMainLow_recvmsg@msgtype+1,?_recv_msg+4
  1915  0018A8  C0C2  F0B6         	movff	ToMainLow_recvmsg@data,?_recv_msg+5
  1916  0018AC  C0C3  F0B7         	movff	ToMainLow_recvmsg@data+1,?_recv_msg+6
  1917  0018B0  EC34  F005         	call	_recv_msg	;wreg free
  1918  0018B4  0012               	return	
  1919  0018B6                     __end_of_ToMainLow_recvmsg:
  1920                           	opt stack 0
  1921                           tblptru	equ	0xFF8
  1922                           postinc0	equ	0xFEE
  1923                           wreg	equ	0xFE8
  1924                           postdec1	equ	0xFE5
  1925                           fsr1h	equ	0xFE2
  1926                           fsr1l	equ	0xFE1
  1927                           indf2	equ	0xFDF
  1928                           postinc2	equ	0xFDE
  1929                           postdec2	equ	0xFDD
  1930                           fsr2h	equ	0xFDA
  1931                           fsr2l	equ	0xFD9
  1932                           status	equ	0xFD8
  1933                           
  1934 ;; *************** function _start_i2c_slave_reply *****************
  1935 ;; Defined at:
  1936 ;;		line 56 in file "../src/my_i2c.c"
  1937 ;; Parameters:    Size  Location     Type
  1938 ;;  length          1   39[BANK0 ] unsigned char 
  1939 ;;  msg             2   40[BANK0 ] PTR unsigned char 
  1940 ;;		 -> main@msgbuffer(11), 
  1941 ;; Auto vars:     Size  Location     Type
  1942 ;;		None
  1943 ;; Return value:  Size  Location     Type
  1944 ;;		None               void
  1945 ;; Registers used:
  1946 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1947 ;; Tracked objects:
  1948 ;;		On entry : 0/0
  1949 ;;		On exit  : 0/0
  1950 ;;		Unchanged: 0/0
  1951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1952 ;;      Params:         0       3       0       0       0
  1953 ;;      Locals:         0       0       0       0       0
  1954 ;;      Temps:          0       2       0       0       0
  1955 ;;      Totals:         0       5       0       0       0
  1956 ;;Total ram usage:        5 bytes
  1957 ;; Hardware stack levels used:    1
  1958 ;; Hardware stack levels required when called:   10
  1959 ;; This function calls:
  1960 ;;		Nothing
  1961 ;; This function is called by:
  1962 ;;		_main
  1963 ;; This function uses a non-reentrant model
  1964 ;;
  1965                           
  1966                           	psect	text5
  1967  000DCA                     __ptext5:
  1968                           	opt stack 0
  1969  000DCA                     _start_i2c_slave_reply:
  1970                           	opt stack 20
  1971                           
  1972                           ;my_i2c.c: 58: for (ic_ptr->outbuflen = 0; ic_ptr->outbuflen < length; ic_ptr->outbuflen
      +                          ++) {
  1973                           
  1974                           ;incstack = 0
  1975                           ;incstack = 0
  1976  000DCA  0100               	movlb	0	; () banked
  1977  000DCC  EE20 F019          	lfsr	2,25
  1978  000DD0  0100               	movlb	0	; () banked
  1979  000DD2  51C7               	movf	_ic_ptr& (0+255),w,b
  1980  000DD4  26D9               	addwf	fsr2l,f,c
  1981  000DD6  0100               	movlb	0	; () banked
  1982  000DD8  51C8               	movf	(_ic_ptr+1)& (0+255),w,b
  1983  000DDA  22DA               	addwfc	fsr2h,f,c
  1984  000DDC  0E00               	movlw	0
  1985  000DDE  6EDF               	movwf	indf2,c
  1986  000DE0  D042               	goto	l3086
  1987  000DE2                     l3082:
  1988                           
  1989                           ; BSR set to: 0
  1990                           ;my_i2c.c: 59: ic_ptr->outbuffer[ic_ptr->outbuflen] = msg[ic_ptr->outbuflen];
  1991  000DE2  0100               	movlb	0	; () banked
  1992  000DE4  EE20 F019          	lfsr	2,25
  1993  000DE8  0100               	movlb	0	; () banked
  1994  000DEA  51C7               	movf	_ic_ptr& (0+255),w,b
  1995  000DEC  26D9               	addwf	fsr2l,f,c
  1996  000DEE  0100               	movlb	0	; () banked
  1997  000DF0  51C8               	movf	(_ic_ptr+1)& (0+255),w,b
  1998  000DF2  22DA               	addwfc	fsr2h,f,c
  1999  000DF4  50DF               	movf	indf2,w,c
  2000  000DF6  0100               	movlb	0	; () banked
  2001  000DF8  6FAA               	movwf	??_start_i2c_slave_reply& (0+255),b
  2002  000DFA  0100               	movlb	0	; () banked
  2003  000DFC  51AA               	movf	??_start_i2c_slave_reply& (0+255),w,b
  2004  000DFE  0D01               	mullw	1
  2005  000E00  50F3               	movf	prodl,w,c
  2006  000E02  0100               	movlb	0	; () banked
  2007  000E04  0100               	movlb	0	; () banked
  2008  000E06  25A8               	addwf	start_i2c_slave_reply@msg& (0+255),w,b
  2009  000E08  6ED9               	movwf	fsr2l,c
  2010  000E0A  50F4               	movf	prodh,w,c
  2011  000E0C  0100               	movlb	0	; () banked
  2012  000E0E  0100               	movlb	0	; () banked
  2013  000E10  21A9               	addwfc	(start_i2c_slave_reply@msg+1)& (0+255),w,b
  2014  000E12  6EDA               	movwf	fsr2h,c
  2015  000E14  0100               	movlb	0	; () banked
  2016  000E16  EE10 F019          	lfsr	1,25
  2017  000E1A  0100               	movlb	0	; () banked
  2018  000E1C  51C7               	movf	_ic_ptr& (0+255),w,b
  2019  000E1E  26E1               	addwf	fsr1l,f,c
  2020  000E20  0100               	movlb	0	; () banked
  2021  000E22  51C8               	movf	(_ic_ptr+1)& (0+255),w,b
  2022  000E24  22E2               	addwfc	fsr1h,f,c
  2023  000E26  50E7               	movf	indf1,w,c
  2024  000E28  0100               	movlb	0	; () banked
  2025  000E2A  6FAB               	movwf	(??_start_i2c_slave_reply+1)& (0+255),b
  2026  000E2C  0100               	movlb	0	; () banked
  2027  000E2E  51AB               	movf	(??_start_i2c_slave_reply+1)& (0+255),w,b
  2028  000E30  0D01               	mullw	1
  2029  000E32  0E0F               	movlw	15
  2030  000E34  26F3               	addwf	prodl,f,c
  2031  000E36  0E00               	movlw	0
  2032  000E38  22F4               	addwfc	prodh,f,c
  2033  000E3A  50F3               	movf	prodl,w,c
  2034  000E3C  0100               	movlb	0	; () banked
  2035  000E3E  0100               	movlb	0	; () banked
  2036  000E40  25C7               	addwf	_ic_ptr& (0+255),w,b
  2037  000E42  6EE1               	movwf	fsr1l,c
  2038  000E44  50F4               	movf	prodh,w,c
  2039  000E46  0100               	movlb	0	; () banked
  2040  000E48  0100               	movlb	0	; () banked
  2041  000E4A  21C8               	addwfc	(_ic_ptr+1)& (0+255),w,b
  2042  000E4C  6EE2               	movwf	fsr1h,c
  2043  000E4E  CFDF FFE7          	movff	indf2,indf1
  2044                           
  2045                           ; BSR set to: 0
  2046  000E52  0100               	movlb	0	; () banked
  2047  000E54  EE20 F019          	lfsr	2,25
  2048  000E58  0100               	movlb	0	; () banked
  2049  000E5A  51C7               	movf	_ic_ptr& (0+255),w,b
  2050  000E5C  26D9               	addwf	fsr2l,f,c
  2051  000E5E  0100               	movlb	0	; () banked
  2052  000E60  51C8               	movf	(_ic_ptr+1)& (0+255),w,b
  2053  000E62  22DA               	addwfc	fsr2h,f,c
  2054  000E64  2ADF               	incf	indf2,f,c
  2055  000E66                     l3086:
  2056                           
  2057                           ; BSR set to: 0
  2058  000E66  0100               	movlb	0	; () banked
  2059  000E68  EE20 F019          	lfsr	2,25
  2060  000E6C  0100               	movlb	0	; () banked
  2061  000E6E  51C7               	movf	_ic_ptr& (0+255),w,b
  2062  000E70  26D9               	addwf	fsr2l,f,c
  2063  000E72  0100               	movlb	0	; () banked
  2064  000E74  51C8               	movf	(_ic_ptr+1)& (0+255),w,b
  2065  000E76  22DA               	addwfc	fsr2h,f,c
  2066  000E78  50DF               	movf	indf2,w,c
  2067  000E7A  0100               	movlb	0	; () banked
  2068  000E7C  6FAA               	movwf	??_start_i2c_slave_reply& (0+255),b
  2069  000E7E  0100               	movlb	0	; () banked
  2070  000E80  0100               	movlb	0	; () banked
  2071  000E82  51A7               	movf	start_i2c_slave_reply@length& (0+255),w,b
  2072  000E84  0100               	movlb	0	; () banked
  2073  000E86  5DAA               	subwf	??_start_i2c_slave_reply& (0+255),w,b
  2074  000E88  A0D8               	btfss	status,0,c
  2075  000E8A  D7AB               	goto	l3082
  2076                           
  2077                           ; BSR set to: 0
  2078                           ;my_i2c.c: 60: }
  2079                           ;my_i2c.c: 61: ic_ptr->outbuflen = length;
  2080                           
  2081                           ; BSR set to: 0
  2082  000E8C  0100               	movlb	0	; () banked
  2083  000E8E  EE20 F019          	lfsr	2,25
  2084  000E92  0100               	movlb	0	; () banked
  2085  000E94  51C7               	movf	_ic_ptr& (0+255),w,b
  2086  000E96  26D9               	addwf	fsr2l,f,c
  2087  000E98  0100               	movlb	0	; () banked
  2088  000E9A  51C8               	movf	(_ic_ptr+1)& (0+255),w,b
  2089  000E9C  22DA               	addwfc	fsr2h,f,c
  2090  000E9E  0100               	movlb	0	; () banked
  2091  000EA0  C0A7  FFDF         	movff	start_i2c_slave_reply@length,indf2
  2092                           
  2093                           ;my_i2c.c: 62: ic_ptr->outbufind = 1;
  2094  000EA4  0100               	movlb	0	; () banked
  2095  000EA6  EE20 F01A          	lfsr	2,26
  2096  000EAA  0100               	movlb	0	; () banked
  2097  000EAC  51C7               	movf	_ic_ptr& (0+255),w,b
  2098  000EAE  26D9               	addwf	fsr2l,f,c
  2099  000EB0  0100               	movlb	0	; () banked
  2100  000EB2  51C8               	movf	(_ic_ptr+1)& (0+255),w,b
  2101  000EB4  22DA               	addwfc	fsr2h,f,c
  2102  000EB6  0E01               	movlw	1
  2103  000EB8  6EDF               	movwf	indf2,c
  2104                           
  2105                           ;my_i2c.c: 65: SSPBUF = ic_ptr->outbuffer[0];
  2106  000EBA  0100               	movlb	0	; () banked
  2107  000EBC  EE20 F00F          	lfsr	2,15
  2108  000EC0  0100               	movlb	0	; () banked
  2109  000EC2  51C7               	movf	_ic_ptr& (0+255),w,b
  2110  000EC4  26D9               	addwf	fsr2l,f,c
  2111  000EC6  0100               	movlb	0	; () banked
  2112  000EC8  51C8               	movf	(_ic_ptr+1)& (0+255),w,b
  2113  000ECA  22DA               	addwfc	fsr2h,f,c
  2114  000ECC  50DF               	movf	indf2,w,c
  2115  000ECE  6EC9               	movwf	4041,c	;volatile
  2116                           
  2117                           ; BSR set to: 0
  2118                           ;my_i2c.c: 68: SSPCON1bits.CKP = 1;
  2119  000ED0  88C6               	bsf	4038,4,c	;volatile
  2120                           
  2121                           ; BSR set to: 0
  2122  000ED2  0012               	return	
  2123  000ED4                     __end_of_start_i2c_slave_reply:
  2124                           	opt stack 0
  2125                           tblptru	equ	0xFF8
  2126                           prodh	equ	0xFF4
  2127                           prodl	equ	0xFF3
  2128                           postinc0	equ	0xFEE
  2129                           wreg	equ	0xFE8
  2130                           indf1	equ	0xFE7
  2131                           postdec1	equ	0xFE5
  2132                           fsr1h	equ	0xFE2
  2133                           fsr1l	equ	0xFE1
  2134                           indf2	equ	0xFDF
  2135                           postinc2	equ	0xFDE
  2136                           postdec2	equ	0xFDD
  2137                           fsr2h	equ	0xFDA
  2138                           fsr2l	equ	0xFD9
  2139                           status	equ	0xFD8
  2140                           
  2141 ;; *************** function _timer0_lthread *****************
  2142 ;; Defined at:
  2143 ;;		line 9 in file "../src/timer0_thread.c"
  2144 ;; Parameters:    Size  Location     Type
  2145 ;;  tptr            2   39[BANK0 ] PTR struct __timer0_thre
  2146 ;;		 -> main@t0thread_data(2), 
  2147 ;;  msgtype         2   41[BANK0 ] int 
  2148 ;;  length          2   43[BANK0 ] int 
  2149 ;;  msgbuffer       2   45[BANK0 ] PTR unsigned char 
  2150 ;;		 -> main@msgbuffer(11), 
  2151 ;; Auto vars:     Size  Location     Type
  2152 ;;  msgval          2   47[BANK0 ] PTR unsigned int 
  2153 ;;		 -> main@msgbuffer(11), 
  2154 ;; Return value:  Size  Location     Type
  2155 ;;                  2   39[BANK0 ] int 
  2156 ;; Registers used:
  2157 ;;		None
  2158 ;; Tracked objects:
  2159 ;;		On entry : 0/0
  2160 ;;		On exit  : 0/0
  2161 ;;		Unchanged: 0/0
  2162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2163 ;;      Params:         0       8       0       0       0
  2164 ;;      Locals:         0       2       0       0       0
  2165 ;;      Temps:          0       0       0       0       0
  2166 ;;      Totals:         0      10       0       0       0
  2167 ;;Total ram usage:       10 bytes
  2168 ;; Hardware stack levels used:    1
  2169 ;; Hardware stack levels required when called:   10
  2170 ;; This function calls:
  2171 ;;		Nothing
  2172 ;; This function is called by:
  2173 ;;		_main
  2174 ;; This function uses a non-reentrant model
  2175 ;;
  2176                           
  2177                           	psect	text6
  2178  001A46                     __ptext6:
  2179                           	opt stack 0
  2180  001A46                     _timer0_lthread:
  2181                           	opt stack 20
  2182                           
  2183                           ;timer0_thread.c: 10: unsigned int *msgval;
  2184                           ;timer0_thread.c: 12: msgval = (unsigned int *) msgbuffer;
  2185                           
  2186                           ; BSR set to: 0
  2187                           ;incstack = 0
  2188                           ;incstack = 0
  2189  001A46  C0AD  F0AF         	movff	timer0_lthread@msgbuffer,timer0_lthread@msgval
  2190  001A4A  C0AE  F0B0         	movff	timer0_lthread@msgbuffer+1,timer0_lthread@msgval+1
  2191  001A4E  0012               	return	
  2192  001A50                     __end_of_timer0_lthread:
  2193                           	opt stack 0
  2194                           tblptru	equ	0xFF8
  2195                           prodh	equ	0xFF4
  2196                           prodl	equ	0xFF3
  2197                           postinc0	equ	0xFEE
  2198                           wreg	equ	0xFE8
  2199                           indf1	equ	0xFE7
  2200                           postdec1	equ	0xFE5
  2201                           fsr1h	equ	0xFE2
  2202                           fsr1l	equ	0xFE1
  2203                           indf2	equ	0xFDF
  2204                           postinc2	equ	0xFDE
  2205                           postdec2	equ	0xFDD
  2206                           fsr2h	equ	0xFDA
  2207                           fsr2l	equ	0xFD9
  2208                           status	equ	0xFD8
  2209                           
  2210 ;; *************** function _ToMainHigh_recvmsg *****************
  2211 ;; Defined at:
  2212 ;;		line 135 in file "../src/messages.c"
  2213 ;; Parameters:    Size  Location     Type
  2214 ;;  maxlength       1   63[BANK0 ] unsigned char 
  2215 ;;  msgtype         2   64[BANK0 ] PTR unsigned char 
  2216 ;;		 -> main@msgtype(1), 
  2217 ;;  data            2   66[BANK0 ] PTR void 
  2218 ;;		 -> main@msgbuffer(11), 
  2219 ;; Auto vars:     Size  Location     Type
  2220 ;;		None
  2221 ;; Return value:  Size  Location     Type
  2222 ;;                  1    wreg      char 
  2223 ;; Registers used:
  2224 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2225 ;; Tracked objects:
  2226 ;;		On entry : 0/0
  2227 ;;		On exit  : 0/0
  2228 ;;		Unchanged: 0/0
  2229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2230 ;;      Params:         0       5       0       0       0
  2231 ;;      Locals:         0       0       0       0       0
  2232 ;;      Temps:          0       0       0       0       0
  2233 ;;      Totals:         0       5       0       0       0
  2234 ;;Total ram usage:        5 bytes
  2235 ;; Hardware stack levels used:    1
  2236 ;; Hardware stack levels required when called:   12
  2237 ;; This function calls:
  2238 ;;		_recv_msg
  2239 ;; This function is called by:
  2240 ;;		_main
  2241 ;; This function uses a non-reentrant model
  2242 ;;
  2243                           
  2244                           	psect	text7
  2245  0018B6                     __ptext7:
  2246                           	opt stack 0
  2247  0018B6                     _ToMainHigh_recvmsg:
  2248                           	opt stack 18
  2249                           
  2250                           ;messages.c: 141: return (recv_msg(&ToMainHigh_MQ, maxlength, msgtype, data));
  2251                           
  2252                           ;incstack = 0
  2253                           ;incstack = 0
  2254  0018B6  0101               	movlb	1	; () banked
  2255  0018B8  0E01               	movlw	high _ToMainHigh_MQ
  2256  0018BA  0100               	movlb	0	; () banked
  2257  0018BC  0100               	movlb	0	; () banked
  2258  0018BE  6FB2               	movwf	(?_recv_msg+1)& (0+255),b
  2259  0018C0  0101               	movlb	1	; () banked
  2260  0018C2  0E6C               	movlw	low _ToMainHigh_MQ
  2261  0018C4  0100               	movlb	0	; () banked
  2262  0018C6  6FB1               	movwf	?_recv_msg& (0+255),b
  2263  0018C8  C0BF  F0B3         	movff	ToMainHigh_recvmsg@maxlength,?_recv_msg+2
  2264  0018CC  C0C0  F0B4         	movff	ToMainHigh_recvmsg@msgtype,?_recv_msg+3
  2265  0018D0  C0C1  F0B5         	movff	ToMainHigh_recvmsg@msgtype+1,?_recv_msg+4
  2266  0018D4  C0C2  F0B6         	movff	ToMainHigh_recvmsg@data,?_recv_msg+5
  2267  0018D8  C0C3  F0B7         	movff	ToMainHigh_recvmsg@data+1,?_recv_msg+6
  2268  0018DC  EC34  F005         	call	_recv_msg	;wreg free
  2269  0018E0  0012               	return	
  2270  0018E2                     __end_of_ToMainHigh_recvmsg:
  2271                           	opt stack 0
  2272                           tblptru	equ	0xFF8
  2273                           prodh	equ	0xFF4
  2274                           prodl	equ	0xFF3
  2275                           postinc0	equ	0xFEE
  2276                           wreg	equ	0xFE8
  2277                           indf1	equ	0xFE7
  2278                           postdec1	equ	0xFE5
  2279                           fsr1h	equ	0xFE2
  2280                           fsr1l	equ	0xFE1
  2281                           indf2	equ	0xFDF
  2282                           postinc2	equ	0xFDE
  2283                           postdec2	equ	0xFDD
  2284                           fsr2h	equ	0xFDA
  2285                           fsr2l	equ	0xFD9
  2286                           status	equ	0xFD8
  2287                           
  2288 ;; *************** function _recv_msg *****************
  2289 ;; Defined at:
  2290 ;;		line 63 in file "../src/messages.c"
  2291 ;; Parameters:    Size  Location     Type
  2292 ;;  qptr            2   49[BANK0 ] PTR struct __msg_queue
  2293 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  2294 ;;  maxlength       1   51[BANK0 ] unsigned char 
  2295 ;;  msgtype         2   52[BANK0 ] PTR unsigned char 
  2296 ;;		 -> timer0_int_handler@msgtype(2), main@msgtype(1), 
  2297 ;;  data            2   54[BANK0 ] PTR void 
  2298 ;;		 -> timer0_int_handler@val(2), main@msgbuffer(11), 
  2299 ;; Auto vars:     Size  Location     Type
  2300 ;;  qmsg            2   61[BANK0 ] PTR struct __msg
  2301 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  2302 ;;  tlength         2   59[BANK0 ] unsigned int 
  2303 ;;  slot            1   58[BANK0 ] unsigned char 
  2304 ;; Return value:  Size  Location     Type
  2305 ;;                  1    wreg      char 
  2306 ;; Registers used:
  2307 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2308 ;; Tracked objects:
  2309 ;;		On entry : 0/0
  2310 ;;		On exit  : 0/0
  2311 ;;		Unchanged: 0/0
  2312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2313 ;;      Params:         0       7       0       0       0
  2314 ;;      Locals:         0       5       0       0       0
  2315 ;;      Temps:          0       2       0       0       0
  2316 ;;      Totals:         0      14       0       0       0
  2317 ;;Total ram usage:       14 bytes
  2318 ;; Hardware stack levels used:    1
  2319 ;; Hardware stack levels required when called:   11
  2320 ;; This function calls:
  2321 ;;		_memcpy
  2322 ;; This function is called by:
  2323 ;;		_ToMainLow_recvmsg
  2324 ;;		_ToMainHigh_recvmsg
  2325 ;;		_FromMainLow_recvmsg
  2326 ;; This function uses a non-reentrant model
  2327 ;;
  2328                           
  2329                           	psect	text8
  2330  000A68                     __ptext8:
  2331                           	opt stack 0
  2332  000A68                     _recv_msg:
  2333                           	opt stack 18
  2334                           
  2335                           ;messages.c: 64: unsigned char slot;
  2336                           ;messages.c: 68: msg *qmsg;
  2337                           ;messages.c: 69: size_t tlength;
  2338                           ;messages.c: 72: slot = qptr->cur_read_ind;
  2339                           
  2340                           ;incstack = 0
  2341                           ;incstack = 0
  2342  000A68  0100               	movlb	0	; () banked
  2343  000A6A  EE20 F035          	lfsr	2,53
  2344  000A6E  0100               	movlb	0	; () banked
  2345  000A70  51B1               	movf	recv_msg@qptr& (0+255),w,b
  2346  000A72  26D9               	addwf	fsr2l,f,c
  2347  000A74  0100               	movlb	0	; () banked
  2348  000A76  51B2               	movf	(recv_msg@qptr+1)& (0+255),w,b
  2349  000A78  22DA               	addwfc	fsr2h,f,c
  2350  000A7A  50DF               	movf	indf2,w,c
  2351  000A7C  0100               	movlb	0	; () banked
  2352  000A7E  0100               	movlb	0	; () banked
  2353  000A80  6FBA               	movwf	recv_msg@slot& (0+255),b
  2354                           
  2355                           ; BSR set to: 0
  2356                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  2357  000A82  0100               	movlb	0	; () banked
  2358  000A84  0100               	movlb	0	; () banked
  2359  000A86  51BA               	movf	recv_msg@slot& (0+255),w,b
  2360  000A88  0D0D               	mullw	13
  2361  000A8A  50F3               	movf	prodl,w,c
  2362  000A8C  0100               	movlb	0	; () banked
  2363  000A8E  0100               	movlb	0	; () banked
  2364  000A90  25B1               	addwf	recv_msg@qptr& (0+255),w,b
  2365  000A92  0100               	movlb	0	; () banked
  2366  000A94  0100               	movlb	0	; () banked
  2367  000A96  6FBD               	movwf	recv_msg@qmsg& (0+255),b
  2368  000A98  50F4               	movf	prodh,w,c
  2369  000A9A  0100               	movlb	0	; () banked
  2370  000A9C  0100               	movlb	0	; () banked
  2371  000A9E  21B2               	addwfc	(recv_msg@qptr+1)& (0+255),w,b
  2372  000AA0  0100               	movlb	0	; () banked
  2373  000AA2  6FBE               	movwf	(recv_msg@qmsg+1)& (0+255),b
  2374                           
  2375                           ; BSR set to: 0
  2376                           ;messages.c: 74: if (qmsg->full == 1) {
  2377  000AA4  0E01               	movlw	1
  2378  000AA6  C0BD  FFD9         	movff	recv_msg@qmsg,fsr2l
  2379  000AAA  C0BE  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  2380  000AAE  62DF               	cpfseq	indf2,c
  2381  000AB0  D06F               	goto	l3158
  2382                           
  2383                           ; BSR set to: 0
  2384                           ;messages.c: 76: if (qmsg->length > maxlength) {
  2385  000AB2  0100               	movlb	0	; () banked
  2386  000AB4  EE20 F001          	lfsr	2,1
  2387  000AB8  0100               	movlb	0	; () banked
  2388  000ABA  51BD               	movf	recv_msg@qmsg& (0+255),w,b
  2389  000ABC  26D9               	addwf	fsr2l,f,c
  2390  000ABE  0100               	movlb	0	; () banked
  2391  000AC0  51BE               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  2392  000AC2  22DA               	addwfc	fsr2h,f,c
  2393  000AC4  50DF               	movf	indf2,w,c
  2394  000AC6  0100               	movlb	0	; () banked
  2395  000AC8  0100               	movlb	0	; () banked
  2396  000ACA  61B3               	cpfslt	recv_msg@maxlength& (0+255),b
  2397  000ACC  D002               	goto	l3142
  2398                           
  2399                           ; BSR set to: 0
  2400                           ;messages.c: 77: return (-3);
  2401  000ACE  0EFD               	movlw	253
  2402  000AD0  0012               	return	
  2403  000AD2                     l3142:
  2404                           
  2405                           ; BSR set to: 0
  2406                           ;messages.c: 78: }
  2407                           ;messages.c: 80: tlength = qmsg->length;
  2408  000AD2  0100               	movlb	0	; () banked
  2409  000AD4  EE20 F001          	lfsr	2,1
  2410  000AD8  0100               	movlb	0	; () banked
  2411  000ADA  51BD               	movf	recv_msg@qmsg& (0+255),w,b
  2412  000ADC  26D9               	addwf	fsr2l,f,c
  2413  000ADE  0100               	movlb	0	; () banked
  2414  000AE0  51BE               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  2415  000AE2  22DA               	addwfc	fsr2h,f,c
  2416  000AE4  50DF               	movf	indf2,w,c
  2417  000AE6  0100               	movlb	0	; () banked
  2418  000AE8  6FB8               	movwf	??_recv_msg& (0+255),b
  2419  000AEA  0100               	movlb	0	; () banked
  2420  000AEC  51B8               	movf	??_recv_msg& (0+255),w,b
  2421  000AEE  0100               	movlb	0	; () banked
  2422  000AF0  0100               	movlb	0	; () banked
  2423  000AF2  6FBB               	movwf	recv_msg@tlength& (0+255),b
  2424  000AF4  0100               	movlb	0	; () banked
  2425  000AF6  6BBC               	clrf	(recv_msg@tlength+1)& (0+255),b
  2426                           
  2427                           ; BSR set to: 0
  2428                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  2429  000AF8  C0B6  F0A7         	movff	recv_msg@data,?_memcpy
  2430  000AFC  C0B7  F0A8         	movff	recv_msg@data+1,?_memcpy+1
  2431  000B00  0E03               	movlw	3
  2432  000B02  0100               	movlb	0	; () banked
  2433  000B04  0100               	movlb	0	; () banked
  2434  000B06  25BD               	addwf	recv_msg@qmsg& (0+255),w,b
  2435  000B08  0100               	movlb	0	; () banked
  2436  000B0A  6FB8               	movwf	??_recv_msg& (0+255),b
  2437  000B0C  0E00               	movlw	0
  2438  000B0E  0100               	movlb	0	; () banked
  2439  000B10  0100               	movlb	0	; () banked
  2440  000B12  21BE               	addwfc	(recv_msg@qmsg+1)& (0+255),w,b
  2441  000B14  0100               	movlb	0	; () banked
  2442  000B16  6FB9               	movwf	(??_recv_msg+1)& (0+255),b
  2443  000B18  C0B8  F0A9         	movff	??_recv_msg,?_memcpy+2
  2444  000B1C  C0B9  F0AA         	movff	??_recv_msg+1,?_memcpy+3
  2445  000B20  C0BB  F0AB         	movff	recv_msg@tlength,?_memcpy+4
  2446  000B24  C0BC  F0AC         	movff	recv_msg@tlength+1,?_memcpy+5
  2447  000B28  ECC5  F00A         	call	_memcpy	;wreg free
  2448                           
  2449                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  2450  000B2C  0100               	movlb	0	; () banked
  2451  000B2E  EE20 F035          	lfsr	2,53
  2452  000B32  0100               	movlb	0	; () banked
  2453  000B34  51B1               	movf	recv_msg@qptr& (0+255),w,b
  2454  000B36  26D9               	addwf	fsr2l,f,c
  2455  000B38  0100               	movlb	0	; () banked
  2456  000B3A  51B2               	movf	(recv_msg@qptr+1)& (0+255),w,b
  2457  000B3C  22DA               	addwfc	fsr2h,f,c
  2458  000B3E  0100               	movlb	0	; () banked
  2459  000B40  EE10 F035          	lfsr	1,53
  2460  000B44  0100               	movlb	0	; () banked
  2461  000B46  51B1               	movf	recv_msg@qptr& (0+255),w,b
  2462  000B48  26E1               	addwf	fsr1l,f,c
  2463  000B4A  0100               	movlb	0	; () banked
  2464  000B4C  51B2               	movf	(recv_msg@qptr+1)& (0+255),w,b
  2465  000B4E  22E2               	addwfc	fsr1h,f,c
  2466  000B50  50E7               	movf	indf1,w,c
  2467  000B52  0100               	movlb	0	; () banked
  2468  000B54  6FB8               	movwf	??_recv_msg& (0+255),b
  2469  000B56  0100               	movlb	0	; () banked
  2470  000B58  29B8               	incf	??_recv_msg& (0+255),w,b
  2471  000B5A  0B03               	andlw	3
  2472  000B5C  6EDF               	movwf	indf2,c
  2473                           
  2474                           ; BSR set to: 0
  2475                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  2476  000B5E  0100               	movlb	0	; () banked
  2477  000B60  EE20 F002          	lfsr	2,2
  2478  000B64  0100               	movlb	0	; () banked
  2479  000B66  51BD               	movf	recv_msg@qmsg& (0+255),w,b
  2480  000B68  26D9               	addwf	fsr2l,f,c
  2481  000B6A  0100               	movlb	0	; () banked
  2482  000B6C  51BE               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  2483  000B6E  22DA               	addwfc	fsr2h,f,c
  2484  000B70  C0B4  FFE1         	movff	recv_msg@msgtype,fsr1l
  2485  000B74  C0B5  FFE2         	movff	recv_msg@msgtype+1,fsr1h
  2486  000B78  CFDF FFE7          	movff	indf2,indf1
  2487                           
  2488                           ; BSR set to: 0
  2489                           ;messages.c: 91: qmsg->full = 0;
  2490  000B7C  C0BD  FFD9         	movff	recv_msg@qmsg,fsr2l
  2491  000B80  C0BE  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  2492  000B84  0E00               	movlw	0
  2493  000B86  6EDF               	movwf	indf2,c
  2494                           
  2495                           ; BSR set to: 0
  2496                           ;messages.c: 92: return (tlength);
  2497  000B88  0100               	movlb	0	; () banked
  2498  000B8A  0100               	movlb	0	; () banked
  2499  000B8C  51BB               	movf	recv_msg@tlength& (0+255),w,b
  2500  000B8E  0012               	return	
  2501  000B90                     l3158:
  2502                           
  2503                           ; BSR set to: 0
  2504                           ;messages.c: 94: return (-4);
  2505  000B90  0EFC               	movlw	252
  2506  000B92  0012               	return	
  2507  000B94                     __end_of_recv_msg:
  2508                           	opt stack 0
  2509                           tblptru	equ	0xFF8
  2510                           prodh	equ	0xFF4
  2511                           prodl	equ	0xFF3
  2512                           postinc0	equ	0xFEE
  2513                           wreg	equ	0xFE8
  2514                           indf1	equ	0xFE7
  2515                           postdec1	equ	0xFE5
  2516                           fsr1h	equ	0xFE2
  2517                           fsr1l	equ	0xFE1
  2518                           indf2	equ	0xFDF
  2519                           postinc2	equ	0xFDE
  2520                           postdec2	equ	0xFDD
  2521                           fsr2h	equ	0xFDA
  2522                           fsr2l	equ	0xFD9
  2523                           status	equ	0xFD8
  2524                           
  2525 ;; *************** function _memcpy *****************
  2526 ;; Defined at:
  2527 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\memcpy.c"
  2528 ;; Parameters:    Size  Location     Type
  2529 ;;  d1              2   39[BANK0 ] PTR void 
  2530 ;;		 -> timer0_int_handler@val(2), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  2531 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), 
  2532 ;;  s1              2   41[BANK0 ] PTR const void 
  2533 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), 
  2534 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), main@ic(28), 
  2535 ;;  n               2   43[BANK0 ] unsigned int 
  2536 ;; Auto vars:     Size  Location     Type
  2537 ;;  s               2   47[BANK0 ] PTR const unsigned char 
  2538 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), 
  2539 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), main@ic(28), 
  2540 ;;  d               2   45[BANK0 ] PTR unsigned char 
  2541 ;;		 -> timer0_int_handler@val(2), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  2542 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), 
  2543 ;; Return value:  Size  Location     Type
  2544 ;;                  2   39[BANK0 ] PTR void 
  2545 ;; Registers used:
  2546 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2547 ;; Tracked objects:
  2548 ;;		On entry : 0/0
  2549 ;;		On exit  : 0/0
  2550 ;;		Unchanged: 0/0
  2551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2552 ;;      Params:         0       6       0       0       0
  2553 ;;      Locals:         0       4       0       0       0
  2554 ;;      Temps:          0       0       0       0       0
  2555 ;;      Totals:         0      10       0       0       0
  2556 ;;Total ram usage:       10 bytes
  2557 ;; Hardware stack levels used:    1
  2558 ;; Hardware stack levels required when called:   10
  2559 ;; This function calls:
  2560 ;;		Nothing
  2561 ;; This function is called by:
  2562 ;;		_recv_msg
  2563 ;; This function uses a non-reentrant model
  2564 ;;
  2565                           
  2566                           	psect	text9
  2567  00158A                     __ptext9:
  2568                           	opt stack 0
  2569  00158A                     _memcpy:
  2570                           	opt stack 18
  2571                           
  2572                           ; BSR set to: 0
  2573                           ;incstack = 0
  2574                           ;incstack = 0
  2575  00158A  C0A9  F0AF         	movff	memcpy@s1,memcpy@s
  2576  00158E  C0AA  F0B0         	movff	memcpy@s1+1,memcpy@s+1
  2577  001592  C0A7  F0AD         	movff	memcpy@d1,memcpy@d
  2578  001596  C0A8  F0AE         	movff	memcpy@d1+1,memcpy@d+1
  2579  00159A  D012               	goto	l3128
  2580  00159C                     l3122:
  2581  00159C  C0AF  FFD9         	movff	memcpy@s,fsr2l
  2582  0015A0  C0B0  FFDA         	movff	memcpy@s+1,fsr2h
  2583  0015A4  C0AD  FFE1         	movff	memcpy@d,fsr1l
  2584  0015A8  C0AE  FFE2         	movff	memcpy@d+1,fsr1h
  2585  0015AC  CFDF FFE7          	movff	indf2,indf1
  2586  0015B0  0100               	movlb	0	; () banked
  2587  0015B2  0100               	movlb	0	; () banked
  2588  0015B4  4BAF               	infsnz	memcpy@s& (0+255),f,b
  2589  0015B6  2BB0               	incf	(memcpy@s+1)& (0+255),f,b
  2590                           
  2591                           ; BSR set to: 0
  2592  0015B8  0100               	movlb	0	; () banked
  2593  0015BA  0100               	movlb	0	; () banked
  2594  0015BC  4BAD               	infsnz	memcpy@d& (0+255),f,b
  2595  0015BE  2BAE               	incf	(memcpy@d+1)& (0+255),f,b
  2596  0015C0                     l3128:
  2597  0015C0  0100               	movlb	0	; () banked
  2598  0015C2  0100               	movlb	0	; () banked
  2599  0015C4  07AB               	decf	memcpy@n& (0+255),f,b
  2600  0015C6  A0D8               	btfss	status,0,c
  2601  0015C8  07AC               	decf	(memcpy@n+1)& (0+255),f,b
  2602  0015CA  0100               	movlb	0	; () banked
  2603  0015CC  29AB               	incf	memcpy@n& (0+255),w,b
  2604  0015CE  B4D8               	btfsc	status,2,c
  2605  0015D0  29AC               	incf	(memcpy@n+1)& (0+255),w,b
  2606  0015D2  B4D8               	btfsc	status,2,c
  2607                           
  2608                           ; BSR set to: 0
  2609                           
  2610                           ; BSR set to: 0
  2611                           ;	Return value of _memcpy is never used
  2612  0015D4  0012               	return	
  2613  0015D6  D7E2               	goto	l3122
  2614  0015D8                     __end_of_memcpy:
  2615                           	opt stack 0
  2616                           tblptru	equ	0xFF8
  2617                           prodh	equ	0xFF4
  2618                           prodl	equ	0xFF3
  2619                           postinc0	equ	0xFEE
  2620                           wreg	equ	0xFE8
  2621                           indf1	equ	0xFE7
  2622                           postdec1	equ	0xFE5
  2623                           fsr1h	equ	0xFE2
  2624                           fsr1l	equ	0xFE1
  2625                           indf2	equ	0xFDF
  2626                           postinc2	equ	0xFDE
  2627                           postdec2	equ	0xFDD
  2628                           fsr2h	equ	0xFDA
  2629                           fsr2l	equ	0xFD9
  2630                           status	equ	0xFD8
  2631                           
  2632 ;; *************** function _block_on_To_msgqueues *****************
  2633 ;; Defined at:
  2634 ;;		line 258 in file "../src/messages.c"
  2635 ;; Parameters:    Size  Location     Type
  2636 ;;		None
  2637 ;; Auto vars:     Size  Location     Type
  2638 ;;		None
  2639 ;; Return value:  Size  Location     Type
  2640 ;;		None               void
  2641 ;; Registers used:
  2642 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2643 ;; Tracked objects:
  2644 ;;		On entry : 0/0
  2645 ;;		On exit  : 0/0
  2646 ;;		Unchanged: 0/0
  2647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2648 ;;      Params:         0       0       0       0       0
  2649 ;;      Locals:         0       0       0       0       0
  2650 ;;      Temps:          0       1       0       0       0
  2651 ;;      Totals:         0       1       0       0       0
  2652 ;;Total ram usage:        1 bytes
  2653 ;; Hardware stack levels used:    1
  2654 ;; Hardware stack levels required when called:   13
  2655 ;; This function calls:
  2656 ;;		_in_main
  2657 ;;		_check_msg
  2658 ;;		_Delay1KTCYx
  2659 ;; This function is called by:
  2660 ;;		_main
  2661 ;; This function uses a non-reentrant model
  2662 ;;
  2663                           
  2664                           	psect	text10
  2665  00108A                     __ptext10:
  2666                           	opt stack 0
  2667  00108A                     _block_on_To_msgqueues:
  2668                           	opt stack 17
  2669                           
  2670                           ;messages.c: 259: if (!in_main()) {
  2671                           
  2672                           ; BSR set to: 0
  2673                           ;incstack = 0
  2674                           ;incstack = 0
  2675  00108A  EC5D  F00B         	call	_in_main	;wreg free
  2676  00108E  0100               	movlb	0	; () banked
  2677  001090  0100               	movlb	0	; () banked
  2678  001092  51AC               	movf	(?_in_main+1)& (0+255),w,b
  2679  001094  0100               	movlb	0	; () banked
  2680  001096  11AB               	iorwf	?_in_main& (0+255),w,b
  2681  001098  B4D8               	btfsc	status,2,c
  2682  00109A  0012               	return	
  2683                           
  2684                           ; BSR set to: 0
  2685                           ;messages.c: 261: }
  2686                           ;messages.c: 262: LATBbits.LATB3 = 1;
  2687                           
  2688                           ; BSR set to: 0
  2689                           ;messages.c: 260: return;
  2690  00109C  868A               	bsf	3978,3,c	;volatile
  2691                           
  2692                           ; BSR set to: 0
  2693                           ;messages.c: 263: MQ_Main_Willing_to_block = 1;
  2694  00109E  0100               	movlb	0	; () banked
  2695  0010A0  6FAD               	movwf	??_block_on_To_msgqueues& (0+255),b
  2696  0010A2  0E01               	movlw	1
  2697  0010A4  6E50               	movwf	_MQ_Main_Willing_to_block,c
  2698  0010A6  0100               	movlb	0	; () banked
  2699  0010A8  51AD               	movf	??_block_on_To_msgqueues& (0+255),w,b
  2700  0010AA                     l3054:
  2701                           
  2702                           ; BSR set to: 0
  2703                           ;messages.c: 265: if (check_msg(&ToMainHigh_MQ)) {
  2704  0010AA  0101               	movlb	1	; () banked
  2705  0010AC  0E01               	movlw	high _ToMainHigh_MQ
  2706  0010AE  0100               	movlb	0	; () banked
  2707  0010B0  0100               	movlb	0	; () banked
  2708  0010B2  6FA8               	movwf	(?_check_msg+1)& (0+255),b
  2709  0010B4  0101               	movlb	1	; () banked
  2710  0010B6  0E6C               	movlw	low _ToMainHigh_MQ
  2711  0010B8  0100               	movlb	0	; () banked
  2712  0010BA  6FA7               	movwf	?_check_msg& (0+255),b
  2713  0010BC  ECF9  F00B         	call	_check_msg	;wreg free
  2714  0010C0  0900               	iorlw	0
  2715  0010C2  B4D8               	btfsc	status,2,c
  2716  0010C4  D008               	goto	l3062
  2717                           
  2718                           ;messages.c: 266: MQ_Main_Willing_to_block = 0;
  2719  0010C6  0100               	movlb	0	; () banked
  2720  0010C8  6FAD               	movwf	??_block_on_To_msgqueues& (0+255),b
  2721  0010CA  0E00               	movlw	0
  2722  0010CC  6E50               	movwf	_MQ_Main_Willing_to_block,c
  2723  0010CE  0100               	movlb	0	; () banked
  2724  0010D0  51AD               	movf	??_block_on_To_msgqueues& (0+255),w,b
  2725                           
  2726                           ; BSR set to: 0
  2727                           ;messages.c: 267: LATBbits.LATB3 = 0;
  2728  0010D2  968A               	bcf	3978,3,c	;volatile
  2729  0010D4  0012               	return	
  2730  0010D6                     l3062:
  2731                           
  2732                           ;messages.c: 269: }
  2733                           ;messages.c: 270: if (check_msg(&ToMainLow_MQ)) {
  2734  0010D6  0101               	movlb	1	; () banked
  2735  0010D8  0E01               	movlw	high _ToMainLow_MQ
  2736  0010DA  0100               	movlb	0	; () banked
  2737  0010DC  0100               	movlb	0	; () banked
  2738  0010DE  6FA8               	movwf	(?_check_msg+1)& (0+255),b
  2739  0010E0  0101               	movlb	1	; () banked
  2740  0010E2  0EA2               	movlw	low _ToMainLow_MQ
  2741  0010E4  0100               	movlb	0	; () banked
  2742  0010E6  6FA7               	movwf	?_check_msg& (0+255),b
  2743  0010E8  ECF9  F00B         	call	_check_msg	;wreg free
  2744  0010EC  0900               	iorlw	0
  2745  0010EE  B4D8               	btfsc	status,2,c
  2746  0010F0  D008               	goto	l3070
  2747                           
  2748                           ;messages.c: 271: MQ_Main_Willing_to_block = 0;
  2749  0010F2  0100               	movlb	0	; () banked
  2750  0010F4  6FAD               	movwf	??_block_on_To_msgqueues& (0+255),b
  2751  0010F6  0E00               	movlw	0
  2752  0010F8  6E50               	movwf	_MQ_Main_Willing_to_block,c
  2753  0010FA  0100               	movlb	0	; () banked
  2754  0010FC  51AD               	movf	??_block_on_To_msgqueues& (0+255),w,b
  2755                           
  2756                           ; BSR set to: 0
  2757                           ;messages.c: 272: LATBbits.LATB3 = 0;
  2758  0010FE  968A               	bcf	3978,3,c	;volatile
  2759  001100  0012               	return	
  2760  001102                     l3070:
  2761                           
  2762                           ;messages.c: 274: }
  2763                           ;messages.c: 275: Delay1KTCYx(10);
  2764  001102  0100               	movlb	0	; () banked
  2765  001104  6FAD               	movwf	??_block_on_To_msgqueues& (0+255),b
  2766  001106  0E0A               	movlw	10
  2767  001108  0100               	movlb	0	; () banked
  2768  00110A  0100               	movlb	0	; () banked
  2769  00110C  6FA7               	movwf	?_Delay1KTCYx& (0+255),b
  2770  00110E  0100               	movlb	0	; () banked
  2771  001110  51AD               	movf	??_block_on_To_msgqueues& (0+255),w,b
  2772  001112  ECDF  F00C         	call	_Delay1KTCYx	;wreg free
  2773                           
  2774                           ;messages.c: 276: LATBbits.LATB3 = !LATBbits.LATB3;
  2775  001116  B68A               	btfsc	3978,3,c	;volatile
  2776  001118  D002               	goto	u2170
  2777  00111A  0E01               	movlw	1
  2778  00111C  D001               	goto	u2176
  2779  00111E                     u2170:
  2780  00111E  0E00               	movlw	0
  2781  001120                     u2176:
  2782  001120  0100               	movlb	0	; () banked
  2783  001122  6FAD               	movwf	??_block_on_To_msgqueues& (0+255),b
  2784  001124  0100               	movlb	0	; () banked
  2785  001126  47AD               	rlncf	??_block_on_To_msgqueues& (0+255),f,b
  2786  001128  47AD               	rlncf	??_block_on_To_msgqueues& (0+255),f,b
  2787  00112A  47AD               	rlncf	??_block_on_To_msgqueues& (0+255),f,b
  2788  00112C  508A               	movf	3978,w,c	;volatile
  2789  00112E  0100               	movlb	0	; () banked
  2790  001130  19AD               	xorwf	??_block_on_To_msgqueues& (0+255),w,b
  2791  001132  0BF7               	andlw	-9
  2792  001134  19AD               	xorwf	??_block_on_To_msgqueues& (0+255),w,b
  2793  001136  6E8A               	movwf	3978,c	;volatile
  2794  001138  D7B8               	goto	l3054
  2795  00113A                     __end_of_block_on_To_msgqueues:
  2796                           	opt stack 0
  2797                           tblptru	equ	0xFF8
  2798                           prodh	equ	0xFF4
  2799                           prodl	equ	0xFF3
  2800                           postinc0	equ	0xFEE
  2801                           wreg	equ	0xFE8
  2802                           indf1	equ	0xFE7
  2803                           postdec1	equ	0xFE5
  2804                           fsr1h	equ	0xFE2
  2805                           fsr1l	equ	0xFE1
  2806                           indf2	equ	0xFDF
  2807                           postinc2	equ	0xFDE
  2808                           postdec2	equ	0xFDD
  2809                           fsr2h	equ	0xFDA
  2810                           fsr2l	equ	0xFD9
  2811                           status	equ	0xFD8
  2812                           
  2813 ;; *************** function _Delay1KTCYx *****************
  2814 ;; Defined at:
  2815 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic18\d1ktcyx.c"
  2816 ;; Parameters:    Size  Location     Type
  2817 ;;  unit            1   39[BANK0 ] unsigned char 
  2818 ;; Auto vars:     Size  Location     Type
  2819 ;;		None
  2820 ;; Return value:  Size  Location     Type
  2821 ;;		None               void
  2822 ;; Registers used:
  2823 ;;		wreg
  2824 ;; Tracked objects:
  2825 ;;		On entry : 0/0
  2826 ;;		On exit  : 0/0
  2827 ;;		Unchanged: 0/0
  2828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2829 ;;      Params:         0       1       0       0       0
  2830 ;;      Locals:         0       0       0       0       0
  2831 ;;      Temps:          0       0       0       0       0
  2832 ;;      Totals:         0       1       0       0       0
  2833 ;;Total ram usage:        1 bytes
  2834 ;; Hardware stack levels used:    1
  2835 ;; Hardware stack levels required when called:   10
  2836 ;; This function calls:
  2837 ;;		Nothing
  2838 ;; This function is called by:
  2839 ;;		_block_on_To_msgqueues
  2840 ;; This function uses a non-reentrant model
  2841 ;;
  2842                           
  2843                           	psect	text11
  2844  0019BE                     __ptext11:
  2845                           	opt stack 0
  2846  0019BE                     _Delay1KTCYx:
  2847                           	opt stack 19
  2848  0019BE                     l682:
  2849  0019BE  0EFA               	movlw	250
  2850  0019C0                     u2467:
  2851  0019C0  F000               	nop	
  2852  0019C2  2EE8               	decfsz	wreg,f,c
  2853  0019C4  D7FD               	goto	u2467
  2854  0019C6  0100               	movlb	0	; () banked
  2855  0019C8  0100               	movlb	0	; () banked
  2856  0019CA  2FA7               	decfsz	Delay1KTCYx@unit& (0+255),f,b
  2857  0019CC  D7F8               	goto	l682
  2858  0019CE  0012               	return	
  2859  0019D0                     __end_of_Delay1KTCYx:
  2860                           	opt stack 0
  2861                           tblptru	equ	0xFF8
  2862                           prodh	equ	0xFF4
  2863                           prodl	equ	0xFF3
  2864                           postinc0	equ	0xFEE
  2865                           wreg	equ	0xFE8
  2866                           indf1	equ	0xFE7
  2867                           postdec1	equ	0xFE5
  2868                           fsr1h	equ	0xFE2
  2869                           fsr1l	equ	0xFE1
  2870                           indf2	equ	0xFDF
  2871                           postinc2	equ	0xFDE
  2872                           postdec2	equ	0xFDD
  2873                           fsr2h	equ	0xFDA
  2874                           fsr2l	equ	0xFD9
  2875                           status	equ	0xFD8
  2876                           
  2877 ;; *************** function _check_msg *****************
  2878 ;; Defined at:
  2879 ;;		line 222 in file "../src/messages.c"
  2880 ;; Parameters:    Size  Location     Type
  2881 ;;  qptr            2   39[BANK0 ] PTR struct __msg_queue
  2882 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  2883 ;; Auto vars:     Size  Location     Type
  2884 ;;		None
  2885 ;; Return value:  Size  Location     Type
  2886 ;;                  1    wreg      unsigned char 
  2887 ;; Registers used:
  2888 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2889 ;; Tracked objects:
  2890 ;;		On entry : 0/0
  2891 ;;		On exit  : 0/0
  2892 ;;		Unchanged: 0/0
  2893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2894 ;;      Params:         0       2       0       0       0
  2895 ;;      Locals:         0       0       0       0       0
  2896 ;;      Temps:          0       1       0       0       0
  2897 ;;      Totals:         0       3       0       0       0
  2898 ;;Total ram usage:        3 bytes
  2899 ;; Hardware stack levels used:    1
  2900 ;; Hardware stack levels required when called:   10
  2901 ;; This function calls:
  2902 ;;		Nothing
  2903 ;; This function is called by:
  2904 ;;		_block_on_To_msgqueues
  2905 ;; This function uses a non-reentrant model
  2906 ;;
  2907                           
  2908                           	psect	text12
  2909  0017F2                     __ptext12:
  2910                           	opt stack 0
  2911  0017F2                     _check_msg:
  2912                           	opt stack 19
  2913                           
  2914                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
  2915                           
  2916                           ; BSR set to: 0
  2917                           ;incstack = 0
  2918                           ;incstack = 0
  2919  0017F2  0100               	movlb	0	; () banked
  2920  0017F4  EE20 F035          	lfsr	2,53
  2921  0017F8  0100               	movlb	0	; () banked
  2922  0017FA  51A7               	movf	check_msg@qptr& (0+255),w,b
  2923  0017FC  26D9               	addwf	fsr2l,f,c
  2924  0017FE  0100               	movlb	0	; () banked
  2925  001800  51A8               	movf	(check_msg@qptr+1)& (0+255),w,b
  2926  001802  22DA               	addwfc	fsr2h,f,c
  2927  001804  50DF               	movf	indf2,w,c
  2928  001806  0100               	movlb	0	; () banked
  2929  001808  6FA9               	movwf	??_check_msg& (0+255),b
  2930  00180A  0100               	movlb	0	; () banked
  2931  00180C  51A9               	movf	??_check_msg& (0+255),w,b
  2932  00180E  0D0D               	mullw	13
  2933  001810  50F3               	movf	prodl,w,c
  2934  001812  0100               	movlb	0	; () banked
  2935  001814  0100               	movlb	0	; () banked
  2936  001816  25A7               	addwf	check_msg@qptr& (0+255),w,b
  2937  001818  6ED9               	movwf	fsr2l,c
  2938  00181A  50F4               	movf	prodh,w,c
  2939  00181C  0100               	movlb	0	; () banked
  2940  00181E  0100               	movlb	0	; () banked
  2941  001820  21A8               	addwfc	(check_msg@qptr+1)& (0+255),w,b
  2942  001822  6EDA               	movwf	fsr2h,c
  2943  001824  50DF               	movf	indf2,w,c
  2944  001826  0012               	return	
  2945  001828                     __end_of_check_msg:
  2946                           	opt stack 0
  2947                           tblptru	equ	0xFF8
  2948                           prodh	equ	0xFF4
  2949                           prodl	equ	0xFF3
  2950                           postinc0	equ	0xFEE
  2951                           wreg	equ	0xFE8
  2952                           indf1	equ	0xFE7
  2953                           postdec1	equ	0xFE5
  2954                           fsr1h	equ	0xFE2
  2955                           fsr1l	equ	0xFE1
  2956                           indf2	equ	0xFDF
  2957                           postinc2	equ	0xFDE
  2958                           postdec2	equ	0xFDD
  2959                           fsr2h	equ	0xFDA
  2960                           fsr2l	equ	0xFD9
  2961                           status	equ	0xFD8
  2962                           
  2963 ;; *************** function _in_main *****************
  2964 ;; Defined at:
  2965 ;;		line 40 in file "../src/interrupts.c"
  2966 ;; Parameters:    Size  Location     Type
  2967 ;;		None
  2968 ;; Auto vars:     Size  Location     Type
  2969 ;;		None
  2970 ;; Return value:  Size  Location     Type
  2971 ;;                  2   43[BANK0 ] int 
  2972 ;; Registers used:
  2973 ;;		wreg, status,2, status,0, cstack
  2974 ;; Tracked objects:
  2975 ;;		On entry : 0/0
  2976 ;;		On exit  : 0/0
  2977 ;;		Unchanged: 0/0
  2978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2979 ;;      Params:         0       2       0       0       0
  2980 ;;      Locals:         0       0       0       0       0
  2981 ;;      Temps:          0       0       0       0       0
  2982 ;;      Totals:         0       2       0       0       0
  2983 ;;Total ram usage:        2 bytes
  2984 ;; Hardware stack levels used:    1
  2985 ;; Hardware stack levels required when called:   12
  2986 ;; This function calls:
  2987 ;;		_in_high_int
  2988 ;;		_in_low_int
  2989 ;; This function is called by:
  2990 ;;		_block_on_To_msgqueues
  2991 ;; This function uses a non-reentrant model
  2992 ;;
  2993                           
  2994                           	psect	text13
  2995  0016BA                     __ptext13:
  2996                           	opt stack 0
  2997  0016BA                     _in_main:
  2998                           	opt stack 17
  2999                           
  3000                           ;interrupts.c: 41: if ((!in_low_int()) && (!in_high_int())) {
  3001                           
  3002                           ; BSR set to: 0
  3003                           ;incstack = 0
  3004                           ;incstack = 0
  3005  0016BA  EC3A  F00B         	call	_in_low_int	;wreg free
  3006  0016BE  0100               	movlb	0	; () banked
  3007  0016C0  0100               	movlb	0	; () banked
  3008  0016C2  51AA               	movf	(?_in_low_int+1)& (0+255),w,b
  3009  0016C4  0100               	movlb	0	; () banked
  3010  0016C6  11A9               	iorwf	?_in_low_int& (0+255),w,b
  3011  0016C8  A4D8               	btfss	status,2,c
  3012  0016CA  D011               	goto	l2742
  3013                           
  3014                           ; BSR set to: 0
  3015  0016CC  ECE8  F00C         	call	_in_high_int	;wreg free
  3016  0016D0  0100               	movlb	0	; () banked
  3017  0016D2  0100               	movlb	0	; () banked
  3018  0016D4  51A8               	movf	(?_in_high_int+1)& (0+255),w,b
  3019  0016D6  0100               	movlb	0	; () banked
  3020  0016D8  11A7               	iorwf	?_in_high_int& (0+255),w,b
  3021  0016DA  A4D8               	btfss	status,2,c
  3022  0016DC  D008               	goto	l2742
  3023                           
  3024                           ; BSR set to: 0
  3025                           ;interrupts.c: 42: return (1);
  3026  0016DE  0E00               	movlw	0
  3027  0016E0  0100               	movlb	0	; () banked
  3028  0016E2  0100               	movlb	0	; () banked
  3029  0016E4  6FAC               	movwf	(?_in_main+1)& (0+255),b
  3030  0016E6  0E01               	movlw	1
  3031  0016E8  0100               	movlb	0	; () banked
  3032  0016EA  6FAB               	movwf	?_in_main& (0+255),b
  3033  0016EC  0012               	return	
  3034  0016EE                     l2742:
  3035                           
  3036                           ; BSR set to: 0
  3037                           ;interrupts.c: 44: return (0);
  3038  0016EE  0E00               	movlw	0
  3039  0016F0  0100               	movlb	0	; () banked
  3040  0016F2  0100               	movlb	0	; () banked
  3041  0016F4  6FAC               	movwf	(?_in_main+1)& (0+255),b
  3042  0016F6  0E00               	movlw	0
  3043  0016F8  0100               	movlb	0	; () banked
  3044  0016FA  6FAB               	movwf	?_in_main& (0+255),b
  3045  0016FC  0012               	return	
  3046  0016FE                     __end_of_in_main:
  3047                           	opt stack 0
  3048                           tblptru	equ	0xFF8
  3049                           prodh	equ	0xFF4
  3050                           prodl	equ	0xFF3
  3051                           postinc0	equ	0xFEE
  3052                           wreg	equ	0xFE8
  3053                           indf1	equ	0xFE7
  3054                           postdec1	equ	0xFE5
  3055                           fsr1h	equ	0xFE2
  3056                           fsr1l	equ	0xFE1
  3057                           indf2	equ	0xFDF
  3058                           postinc2	equ	0xFDE
  3059                           postdec2	equ	0xFDD
  3060                           fsr2h	equ	0xFDA
  3061                           fsr2l	equ	0xFD9
  3062                           status	equ	0xFD8
  3063                           
  3064 ;; *************** function _in_low_int *****************
  3065 ;; Defined at:
  3066 ;;		line 30 in file "../src/interrupts.c"
  3067 ;; Parameters:    Size  Location     Type
  3068 ;;		None
  3069 ;; Auto vars:     Size  Location     Type
  3070 ;;		None
  3071 ;; Return value:  Size  Location     Type
  3072 ;;                  2   41[BANK0 ] int 
  3073 ;; Registers used:
  3074 ;;		wreg, status,2, status,0, cstack
  3075 ;; Tracked objects:
  3076 ;;		On entry : 0/0
  3077 ;;		On exit  : 0/0
  3078 ;;		Unchanged: 0/0
  3079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3080 ;;      Params:         0       2       0       0       0
  3081 ;;      Locals:         0       0       0       0       0
  3082 ;;      Temps:          0       0       0       0       0
  3083 ;;      Totals:         0       2       0       0       0
  3084 ;;Total ram usage:        2 bytes
  3085 ;; Hardware stack levels used:    1
  3086 ;; Hardware stack levels required when called:   11
  3087 ;; This function calls:
  3088 ;;		_in_high_int
  3089 ;; This function is called by:
  3090 ;;		_in_main
  3091 ;; This function uses a non-reentrant model
  3092 ;;
  3093                           
  3094                           	psect	text14
  3095  001674                     __ptext14:
  3096                           	opt stack 0
  3097  001674                     _in_low_int:
  3098                           	opt stack 17
  3099                           
  3100                           ;interrupts.c: 31: if (INTCONbits.GIEL == 1) {
  3101                           
  3102                           ; BSR set to: 0
  3103                           ;incstack = 0
  3104                           ;incstack = 0
  3105  001674  ACF2               	btfss	intcon,6,c	;volatile
  3106  001676  D008               	goto	l2720
  3107                           
  3108                           ;interrupts.c: 32: return (0);
  3109  001678  0E00               	movlw	0
  3110  00167A  0100               	movlb	0	; () banked
  3111  00167C  0100               	movlb	0	; () banked
  3112  00167E  6FAA               	movwf	(?_in_low_int+1)& (0+255),b
  3113  001680  0E00               	movlw	0
  3114  001682  0100               	movlb	0	; () banked
  3115  001684  6FA9               	movwf	?_in_low_int& (0+255),b
  3116  001686  0012               	return	
  3117  001688                     l2720:
  3118  001688  ECE8  F00C         	call	_in_high_int	;wreg free
  3119  00168C  0100               	movlb	0	; () banked
  3120  00168E  0100               	movlb	0	; () banked
  3121  001690  51A8               	movf	(?_in_high_int+1)& (0+255),w,b
  3122  001692  0100               	movlb	0	; () banked
  3123  001694  11A7               	iorwf	?_in_high_int& (0+255),w,b
  3124  001696  B4D8               	btfsc	status,2,c
  3125  001698  D008               	goto	l2728
  3126                           
  3127                           ; BSR set to: 0
  3128                           ;interrupts.c: 34: return (0);
  3129  00169A  0E00               	movlw	0
  3130  00169C  0100               	movlb	0	; () banked
  3131  00169E  0100               	movlb	0	; () banked
  3132  0016A0  6FAA               	movwf	(?_in_low_int+1)& (0+255),b
  3133  0016A2  0E00               	movlw	0
  3134  0016A4  0100               	movlb	0	; () banked
  3135  0016A6  6FA9               	movwf	?_in_low_int& (0+255),b
  3136  0016A8  0012               	return	
  3137  0016AA                     l2728:
  3138                           
  3139                           ; BSR set to: 0
  3140                           ;interrupts.c: 36: return (1);
  3141  0016AA  0E00               	movlw	0
  3142  0016AC  0100               	movlb	0	; () banked
  3143  0016AE  0100               	movlb	0	; () banked
  3144  0016B0  6FAA               	movwf	(?_in_low_int+1)& (0+255),b
  3145  0016B2  0E01               	movlw	1
  3146  0016B4  0100               	movlb	0	; () banked
  3147  0016B6  6FA9               	movwf	?_in_low_int& (0+255),b
  3148  0016B8  0012               	return	
  3149  0016BA                     __end_of_in_low_int:
  3150                           	opt stack 0
  3151                           tblptru	equ	0xFF8
  3152                           prodh	equ	0xFF4
  3153                           prodl	equ	0xFF3
  3154                           intcon	equ	0xFF2
  3155                           postinc0	equ	0xFEE
  3156                           wreg	equ	0xFE8
  3157                           indf1	equ	0xFE7
  3158                           postdec1	equ	0xFE5
  3159                           fsr1h	equ	0xFE2
  3160                           fsr1l	equ	0xFE1
  3161                           indf2	equ	0xFDF
  3162                           postinc2	equ	0xFDE
  3163                           postdec2	equ	0xFDD
  3164                           fsr2h	equ	0xFDA
  3165                           fsr2l	equ	0xFD9
  3166                           status	equ	0xFD8
  3167                           
  3168 ;; *************** function _in_high_int *****************
  3169 ;; Defined at:
  3170 ;;		line 22 in file "../src/interrupts.c"
  3171 ;; Parameters:    Size  Location     Type
  3172 ;;		None
  3173 ;; Auto vars:     Size  Location     Type
  3174 ;;		None
  3175 ;; Return value:  Size  Location     Type
  3176 ;;                  2   39[BANK0 ] int 
  3177 ;; Registers used:
  3178 ;;		wreg, status,2
  3179 ;; Tracked objects:
  3180 ;;		On entry : 0/0
  3181 ;;		On exit  : 0/0
  3182 ;;		Unchanged: 0/0
  3183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3184 ;;      Params:         0       2       0       0       0
  3185 ;;      Locals:         0       0       0       0       0
  3186 ;;      Temps:          0       0       0       0       0
  3187 ;;      Totals:         0       2       0       0       0
  3188 ;;Total ram usage:        2 bytes
  3189 ;; Hardware stack levels used:    1
  3190 ;; Hardware stack levels required when called:   10
  3191 ;; This function calls:
  3192 ;;		Nothing
  3193 ;; This function is called by:
  3194 ;;		_in_low_int
  3195 ;;		_in_main
  3196 ;; This function uses a non-reentrant model
  3197 ;;
  3198                           
  3199                           	psect	text15
  3200  0019D0                     __ptext15:
  3201                           	opt stack 0
  3202  0019D0                     _in_high_int:
  3203                           	opt stack 17
  3204                           
  3205                           ;interrupts.c: 23: return (!INTCONbits.GIEH);
  3206                           
  3207                           ; BSR set to: 0
  3208                           ;incstack = 0
  3209                           ;incstack = 0
  3210  0019D0  0E00               	movlw	0
  3211  0019D2  AEF2               	btfss	intcon,7,c	;volatile
  3212  0019D4  0E01               	movlw	1
  3213  0019D6  0100               	movlb	0	; () banked
  3214  0019D8  0100               	movlb	0	; () banked
  3215  0019DA  6FA7               	movwf	?_in_high_int& (0+255),b
  3216  0019DC  0100               	movlb	0	; () banked
  3217  0019DE  6BA8               	clrf	(?_in_high_int+1)& (0+255),b
  3218  0019E0  0012               	return	
  3219  0019E2                     __end_of_in_high_int:
  3220                           	opt stack 0
  3221                           tblptru	equ	0xFF8
  3222                           prodh	equ	0xFF4
  3223                           prodl	equ	0xFF3
  3224                           intcon	equ	0xFF2
  3225                           postinc0	equ	0xFEE
  3226                           wreg	equ	0xFE8
  3227                           indf1	equ	0xFE7
  3228                           postdec1	equ	0xFE5
  3229                           fsr1h	equ	0xFE2
  3230                           fsr1l	equ	0xFE1
  3231                           indf2	equ	0xFDF
  3232                           postinc2	equ	0xFDE
  3233                           postdec2	equ	0xFDD
  3234                           fsr2h	equ	0xFDA
  3235                           fsr2l	equ	0xFD9
  3236                           status	equ	0xFD8
  3237                           
  3238 ;; *************** function _i2c_configure_slave *****************
  3239 ;; Defined at:
  3240 ;;		line 309 in file "../src/my_i2c.c"
  3241 ;; Parameters:    Size  Location     Type
  3242 ;;  addr            1   39[BANK0 ] unsigned char 
  3243 ;; Auto vars:     Size  Location     Type
  3244 ;;		None
  3245 ;; Return value:  Size  Location     Type
  3246 ;;		None               void
  3247 ;; Registers used:
  3248 ;;		wreg, status,2, status,0
  3249 ;; Tracked objects:
  3250 ;;		On entry : 0/0
  3251 ;;		On exit  : 0/0
  3252 ;;		Unchanged: 0/0
  3253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3254 ;;      Params:         0       1       0       0       0
  3255 ;;      Locals:         0       0       0       0       0
  3256 ;;      Temps:          0       0       0       0       0
  3257 ;;      Totals:         0       1       0       0       0
  3258 ;;Total ram usage:        1 bytes
  3259 ;; Hardware stack levels used:    1
  3260 ;; Hardware stack levels required when called:   10
  3261 ;; This function calls:
  3262 ;;		Nothing
  3263 ;; This function is called by:
  3264 ;;		_main
  3265 ;; This function uses a non-reentrant model
  3266 ;;
  3267                           
  3268                           	psect	text16
  3269  001936                     __ptext16:
  3270                           	opt stack 0
  3271  001936                     _i2c_configure_slave:
  3272                           	opt stack 20
  3273                           
  3274                           ;my_i2c.c: 312: TRISCbits.TRISC3 = 1;
  3275                           
  3276                           ; BSR set to: 0
  3277                           ;incstack = 0
  3278                           ;incstack = 0
  3279  001936  8694               	bsf	3988,3,c	;volatile
  3280                           
  3281                           ;my_i2c.c: 313: TRISCbits.TRISC4 = 1;
  3282  001938  8894               	bsf	3988,4,c	;volatile
  3283                           
  3284                           ;my_i2c.c: 315: SSPADD = addr;
  3285  00193A  C0A7  FFC8         	movff	i2c_configure_slave@addr,4040	;volatile
  3286                           
  3287                           ;my_i2c.c: 317: SSPSTAT = 0x0;
  3288  00193E  0E00               	movlw	0
  3289  001940  6EC7               	movwf	4039,c	;volatile
  3290                           
  3291                           ;my_i2c.c: 318: SSPCON1 = 0x0;
  3292  001942  0E00               	movlw	0
  3293  001944  6EC6               	movwf	4038,c	;volatile
  3294                           
  3295                           ;my_i2c.c: 319: SSPCON2 = 0x0;
  3296  001946  0E00               	movlw	0
  3297  001948  6EC5               	movwf	4037,c	;volatile
  3298                           
  3299                           ;my_i2c.c: 320: SSPCON1 |= 0x0E;
  3300  00194A  0E0E               	movlw	14
  3301  00194C  12C6               	iorwf	4038,f,c	;volatile
  3302                           
  3303                           ;my_i2c.c: 321: SSPSTAT |= 0b10000000;
  3304  00194E  8EC7               	bsf	4039,7,c	;volatile
  3305                           
  3306                           ;my_i2c.c: 323: TRISCbits.TRISC3 = 1;
  3307  001950  8694               	bsf	3988,3,c	;volatile
  3308                           
  3309                           ;my_i2c.c: 324: TRISCbits.TRISC4 = 1;
  3310  001952  8894               	bsf	3988,4,c	;volatile
  3311                           
  3312                           ;my_i2c.c: 334: SSPCON2bits.SEN = 1;
  3313  001954  80C5               	bsf	4037,0,c	;volatile
  3314                           
  3315                           ;my_i2c.c: 335: SSPCON1 |= 0b00100000;
  3316  001956  8AC6               	bsf	4038,5,c	;volatile
  3317  001958  0012               	return	
  3318  00195A                     __end_of_i2c_configure_slave:
  3319                           	opt stack 0
  3320                           tblptru	equ	0xFF8
  3321                           prodh	equ	0xFF4
  3322                           prodl	equ	0xFF3
  3323                           intcon	equ	0xFF2
  3324                           postinc0	equ	0xFEE
  3325                           wreg	equ	0xFE8
  3326                           indf1	equ	0xFE7
  3327                           postdec1	equ	0xFE5
  3328                           fsr1h	equ	0xFE2
  3329                           fsr1l	equ	0xFE1
  3330                           indf2	equ	0xFDF
  3331                           postinc2	equ	0xFDE
  3332                           postdec2	equ	0xFDD
  3333                           fsr2h	equ	0xFDA
  3334                           fsr2l	equ	0xFD9
  3335                           status	equ	0xFD8
  3336                           
  3337 ;; *************** function _OpenADC *****************
  3338 ;; Defined at:
  3339 ;;		line 71 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic18\plib\ADC\adcopen.c"
  3340 ;; Parameters:    Size  Location     Type
  3341 ;;  config          1   39[BANK0 ] unsigned char 
  3342 ;;  config2         1   40[BANK0 ] unsigned char 
  3343 ;;  portconfig      1   41[BANK0 ] unsigned char 
  3344 ;; Auto vars:     Size  Location     Type
  3345 ;;		None
  3346 ;; Return value:  Size  Location     Type
  3347 ;;		None               void
  3348 ;; Registers used:
  3349 ;;		wreg, status,2, status,0
  3350 ;; Tracked objects:
  3351 ;;		On entry : 0/0
  3352 ;;		On exit  : 0/0
  3353 ;;		Unchanged: 0/0
  3354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3355 ;;      Params:         0       3       0       0       0
  3356 ;;      Locals:         0       0       0       0       0
  3357 ;;      Temps:          0       2       0       0       0
  3358 ;;      Totals:         0       5       0       0       0
  3359 ;;Total ram usage:        5 bytes
  3360 ;; Hardware stack levels used:    1
  3361 ;; Hardware stack levels required when called:   10
  3362 ;; This function calls:
  3363 ;;		Nothing
  3364 ;; This function is called by:
  3365 ;;		_main
  3366 ;; This function uses a non-reentrant model
  3367 ;;
  3368                           
  3369                           	psect	text17
  3370  0013C8                     __ptext17:
  3371                           	opt stack 0
  3372  0013C8                     _OpenADC:
  3373                           	opt stack 20
  3374                           
  3375                           ;incstack = 0
  3376                           ;incstack = 0
  3377  0013C8  0E00               	movlw	0
  3378  0013CA  6EC2               	movwf	4034,c	;volatile
  3379  0013CC  0E00               	movlw	0
  3380  0013CE  6EC0               	movwf	4032,c	;volatile
  3381  0013D0  0100               	movlb	0	; () banked
  3382  0013D2  0100               	movlb	0	; () banked
  3383  0013D4  90D8               	bcf	status,0,c
  3384  0013D6  31A8               	rrcf	OpenADC@config2& (0+255),w,b
  3385  0013D8  0B3C               	andlw	60
  3386  0013DA  6EC2               	movwf	4034,c	;volatile
  3387                           
  3388                           ; BSR set to: 0
  3389  0013DC  C0A8  F0AA         	movff	OpenADC@config2,??_OpenADC
  3390  0013E0  0100               	movlb	0	; () banked
  3391  0013E2  3BAA               	swapf	??_OpenADC& (0+255),f,b
  3392  0013E4  0EF0               	movlw	240
  3393  0013E6  17AA               	andwf	??_OpenADC& (0+255),f,b
  3394  0013E8  0E30               	movlw	48
  3395  0013EA  0100               	movlb	0	; () banked
  3396  0013EC  17AA               	andwf	??_OpenADC& (0+255),f,b
  3397  0013EE  0100               	movlb	0	; () banked
  3398  0013F0  0100               	movlb	0	; () banked
  3399  0013F2  51A9               	movf	OpenADC@portconfig& (0+255),w,b
  3400  0013F4  0B0F               	andlw	15
  3401  0013F6  0100               	movlb	0	; () banked
  3402  0013F8  11AA               	iorwf	??_OpenADC& (0+255),w,b
  3403  0013FA  6EC1               	movwf	4033,c	;volatile
  3404                           
  3405                           ; BSR set to: 0
  3406  0013FC  C0A7  F0AA         	movff	OpenADC@config,??_OpenADC
  3407  001400  0100               	movlb	0	; () banked
  3408  001402  90D8               	bcf	status,0,c
  3409  001404  37AA               	rlcf	??_OpenADC& (0+255),f,b
  3410  001406  0100               	movlb	0	; () banked
  3411  001408  90D8               	bcf	status,0,c
  3412  00140A  37AA               	rlcf	??_OpenADC& (0+255),f,b
  3413  00140C  0E38               	movlw	56
  3414  00140E  0100               	movlb	0	; () banked
  3415  001410  17AA               	andwf	??_OpenADC& (0+255),f,b
  3416  001412  C0A7  F0AB         	movff	OpenADC@config,??_OpenADC+1
  3417  001416  0100               	movlb	0	; () banked
  3418  001418  3BAB               	swapf	(??_OpenADC+1)& (0+255),f,b
  3419  00141A  0E0F               	movlw	15
  3420  00141C  17AB               	andwf	(??_OpenADC+1)& (0+255),f,b
  3421  00141E  0E07               	movlw	7
  3422  001420  0100               	movlb	0	; () banked
  3423  001422  17AB               	andwf	(??_OpenADC+1)& (0+255),f,b
  3424  001424  0100               	movlb	0	; () banked
  3425  001426  0100               	movlb	0	; () banked
  3426  001428  51A7               	movf	OpenADC@config& (0+255),w,b
  3427  00142A  0B80               	andlw	128
  3428  00142C  0100               	movlb	0	; () banked
  3429  00142E  11AB               	iorwf	(??_OpenADC+1)& (0+255),w,b
  3430  001430  0100               	movlb	0	; () banked
  3431  001432  11AA               	iorwf	??_OpenADC& (0+255),w,b
  3432  001434  6EC0               	movwf	4032,c	;volatile
  3433                           
  3434                           ; BSR set to: 0
  3435  001436  0100               	movlb	0	; () banked
  3436  001438  0100               	movlb	0	; () banked
  3437  00143A  AFA8               	btfss	OpenADC@config2& (0+255),7,b
  3438  00143C  D003               	goto	l408
  3439                           
  3440                           ; BSR set to: 0
  3441  00143E  9C9E               	bcf	3998,6,c	;volatile
  3442  001440  8C9D               	bsf	3997,6,c	;volatile
  3443  001442  8CF2               	bsf	intcon,6,c	;volatile
  3444  001444                     l408:
  3445                           
  3446                           ; BSR set to: 0
  3447  001444  80C2               	bsf	4034,0,c	;volatile
  3448                           
  3449                           ; BSR set to: 0
  3450  001446  0012               	return	
  3451  001448                     __end_of_OpenADC:
  3452                           	opt stack 0
  3453                           tblptru	equ	0xFF8
  3454                           prodh	equ	0xFF4
  3455                           prodl	equ	0xFF3
  3456                           intcon	equ	0xFF2
  3457                           postinc0	equ	0xFEE
  3458                           wreg	equ	0xFE8
  3459                           indf1	equ	0xFE7
  3460                           postdec1	equ	0xFE5
  3461                           fsr1h	equ	0xFE2
  3462                           fsr1l	equ	0xFE1
  3463                           indf2	equ	0xFDF
  3464                           postinc2	equ	0xFDE
  3465                           postdec2	equ	0xFDD
  3466                           fsr2h	equ	0xFDA
  3467                           fsr2l	equ	0xFD9
  3468                           status	equ	0xFD8
  3469                           
  3470 ;; *************** function _OpenTimer1 *****************
  3471 ;; Defined at:
  3472 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic18\plib\Timers\t1open.c"
  3473 ;; Parameters:    Size  Location     Type
  3474 ;;  config          1   39[BANK0 ] unsigned char 
  3475 ;; Auto vars:     Size  Location     Type
  3476 ;;		None
  3477 ;; Return value:  Size  Location     Type
  3478 ;;		None               void
  3479 ;; Registers used:
  3480 ;;		wreg, status,2, status,0
  3481 ;; Tracked objects:
  3482 ;;		On entry : 0/0
  3483 ;;		On exit  : 0/0
  3484 ;;		Unchanged: 0/0
  3485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3486 ;;      Params:         0       1       0       0       0
  3487 ;;      Locals:         0       0       0       0       0
  3488 ;;      Temps:          0       0       0       0       0
  3489 ;;      Totals:         0       1       0       0       0
  3490 ;;Total ram usage:        1 bytes
  3491 ;; Hardware stack levels used:    1
  3492 ;; Hardware stack levels required when called:   10
  3493 ;; This function calls:
  3494 ;;		Nothing
  3495 ;; This function is called by:
  3496 ;;		_main
  3497 ;; This function uses a non-reentrant model
  3498 ;;
  3499                           
  3500                           	psect	text18
  3501  001828                     __ptext18:
  3502                           	opt stack 0
  3503  001828                     _OpenTimer1:
  3504                           	opt stack 20
  3505                           
  3506                           ; BSR set to: 0
  3507                           ;incstack = 0
  3508                           ;incstack = 0
  3509  001828  0100               	movlb	0	; () banked
  3510  00182A  0100               	movlb	0	; () banked
  3511  00182C  51A7               	movf	OpenTimer1@config& (0+255),w,b
  3512  00182E  0B7E               	andlw	126
  3513  001830  6ECD               	movwf	4045,c	;volatile
  3514                           
  3515                           ; BSR set to: 0
  3516  001832  0100               	movlb	0	; () banked
  3517  001834  0100               	movlb	0	; () banked
  3518  001836  ADA7               	btfss	OpenTimer1@config& (0+255),6,b
  3519  001838  D002               	goto	l445
  3520                           
  3521                           ; BSR set to: 0
  3522  00183A  8ECD               	bsf	4045,7,c	;volatile
  3523  00183C  D001               	goto	l3012
  3524  00183E                     l445:
  3525                           
  3526                           ; BSR set to: 0
  3527  00183E  9ECD               	bcf	4045,7,c	;volatile
  3528  001840                     l3012:
  3529                           
  3530                           ; BSR set to: 0
  3531  001840  0E00               	movlw	0
  3532  001842  6ECF               	movwf	4047,c	;volatile
  3533  001844  0E00               	movlw	0
  3534  001846  6ECE               	movwf	4046,c	;volatile
  3535                           
  3536                           ; BSR set to: 0
  3537  001848  909E               	bcf	3998,0,c	;volatile
  3538                           
  3539                           ; BSR set to: 0
  3540  00184A  0100               	movlb	0	; () banked
  3541  00184C  0100               	movlb	0	; () banked
  3542  00184E  AFA7               	btfss	OpenTimer1@config& (0+255),7,b
  3543  001850  D002               	goto	l447
  3544                           
  3545                           ; BSR set to: 0
  3546  001852  809D               	bsf	3997,0,c	;volatile
  3547  001854  D001               	goto	l448
  3548  001856                     l447:
  3549                           
  3550                           ; BSR set to: 0
  3551  001856  909D               	bcf	3997,0,c	;volatile
  3552  001858                     l448:
  3553                           
  3554                           ; BSR set to: 0
  3555  001858  80CD               	bsf	4045,0,c	;volatile
  3556                           
  3557                           ; BSR set to: 0
  3558  00185A  0012               	return	
  3559  00185C                     __end_of_OpenTimer1:
  3560                           	opt stack 0
  3561                           tblptru	equ	0xFF8
  3562                           prodh	equ	0xFF4
  3563                           prodl	equ	0xFF3
  3564                           intcon	equ	0xFF2
  3565                           postinc0	equ	0xFEE
  3566                           wreg	equ	0xFE8
  3567                           indf1	equ	0xFE7
  3568                           postdec1	equ	0xFE5
  3569                           fsr1h	equ	0xFE2
  3570                           fsr1l	equ	0xFE1
  3571                           indf2	equ	0xFDF
  3572                           postinc2	equ	0xFDE
  3573                           postdec2	equ	0xFDD
  3574                           fsr2h	equ	0xFDA
  3575                           fsr2l	equ	0xFD9
  3576                           status	equ	0xFD8
  3577                           
  3578 ;; *************** function _init_queues *****************
  3579 ;; Defined at:
  3580 ;;		line 194 in file "../src/messages.c"
  3581 ;; Parameters:    Size  Location     Type
  3582 ;;		None
  3583 ;; Auto vars:     Size  Location     Type
  3584 ;;		None
  3585 ;; Return value:  Size  Location     Type
  3586 ;;		None               void
  3587 ;; Registers used:
  3588 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3589 ;; Tracked objects:
  3590 ;;		On entry : 0/0
  3591 ;;		On exit  : 0/0
  3592 ;;		Unchanged: 0/0
  3593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3594 ;;      Params:         0       0       0       0       0
  3595 ;;      Locals:         0       0       0       0       0
  3596 ;;      Temps:          0       1       0       0       0
  3597 ;;      Totals:         0       1       0       0       0
  3598 ;;Total ram usage:        1 bytes
  3599 ;; Hardware stack levels used:    1
  3600 ;; Hardware stack levels required when called:   11
  3601 ;; This function calls:
  3602 ;;		_init_queue
  3603 ;; This function is called by:
  3604 ;;		_main
  3605 ;; This function uses a non-reentrant model
  3606 ;;
  3607                           
  3608                           	psect	text19
  3609  0014C2                     __ptext19:
  3610                           	opt stack 0
  3611  0014C2                     _init_queues:
  3612                           	opt stack 19
  3613                           
  3614                           ;messages.c: 195: MQ_Main_Willing_to_block = 0;
  3615                           
  3616                           ; BSR set to: 0
  3617                           ;incstack = 0
  3618                           ;incstack = 0
  3619  0014C2  0100               	movlb	0	; () banked
  3620  0014C4  6FAB               	movwf	??_init_queues& (0+255),b
  3621  0014C6  0E00               	movlw	0
  3622  0014C8  6E50               	movwf	_MQ_Main_Willing_to_block,c
  3623  0014CA  0100               	movlb	0	; () banked
  3624  0014CC  51AB               	movf	??_init_queues& (0+255),w,b
  3625                           
  3626                           ; BSR set to: 0
  3627                           ;messages.c: 196: init_queue(&ToMainLow_MQ);
  3628  0014CE  0101               	movlb	1	; () banked
  3629  0014D0  0E01               	movlw	high _ToMainLow_MQ
  3630  0014D2  0100               	movlb	0	; () banked
  3631  0014D4  0100               	movlb	0	; () banked
  3632  0014D6  6FA8               	movwf	(?_init_queue+1)& (0+255),b
  3633  0014D8  0101               	movlb	1	; () banked
  3634  0014DA  0EA2               	movlw	low _ToMainLow_MQ
  3635  0014DC  0100               	movlb	0	; () banked
  3636  0014DE  6FA7               	movwf	?_init_queue& (0+255),b
  3637  0014E0  EC24  F00A         	call	_init_queue	;wreg free
  3638                           
  3639                           ;messages.c: 197: init_queue(&ToMainHigh_MQ);
  3640  0014E4  0101               	movlb	1	; () banked
  3641  0014E6  0E01               	movlw	high _ToMainHigh_MQ
  3642  0014E8  0100               	movlb	0	; () banked
  3643  0014EA  0100               	movlb	0	; () banked
  3644  0014EC  6FA8               	movwf	(?_init_queue+1)& (0+255),b
  3645  0014EE  0101               	movlb	1	; () banked
  3646  0014F0  0E6C               	movlw	low _ToMainHigh_MQ
  3647  0014F2  0100               	movlb	0	; () banked
  3648  0014F4  6FA7               	movwf	?_init_queue& (0+255),b
  3649  0014F6  EC24  F00A         	call	_init_queue	;wreg free
  3650                           
  3651                           ;messages.c: 198: init_queue(&FromMainLow_MQ);
  3652  0014FA  0101               	movlb	1	; () banked
  3653  0014FC  0E01               	movlw	high _FromMainLow_MQ
  3654  0014FE  0100               	movlb	0	; () banked
  3655  001500  0100               	movlb	0	; () banked
  3656  001502  6FA8               	movwf	(?_init_queue+1)& (0+255),b
  3657  001504  0101               	movlb	1	; () banked
  3658  001506  0E36               	movlw	low _FromMainLow_MQ
  3659  001508  0100               	movlb	0	; () banked
  3660  00150A  6FA7               	movwf	?_init_queue& (0+255),b
  3661  00150C  EC24  F00A         	call	_init_queue	;wreg free
  3662                           
  3663                           ;messages.c: 199: init_queue(&FromMainHigh_MQ);
  3664  001510  0101               	movlb	1	; () banked
  3665  001512  0E01               	movlw	high _FromMainHigh_MQ
  3666  001514  0100               	movlb	0	; () banked
  3667  001516  0100               	movlb	0	; () banked
  3668  001518  6FA8               	movwf	(?_init_queue+1)& (0+255),b
  3669  00151A  0101               	movlb	1	; () banked
  3670  00151C  0E00               	movlw	low _FromMainHigh_MQ
  3671  00151E  0100               	movlb	0	; () banked
  3672  001520  6FA7               	movwf	?_init_queue& (0+255),b
  3673  001522  EC24  F00A         	call	_init_queue	;wreg free
  3674  001526  0012               	return	
  3675  001528                     __end_of_init_queues:
  3676                           	opt stack 0
  3677                           tblptru	equ	0xFF8
  3678                           prodh	equ	0xFF4
  3679                           prodl	equ	0xFF3
  3680                           intcon	equ	0xFF2
  3681                           postinc0	equ	0xFEE
  3682                           wreg	equ	0xFE8
  3683                           indf1	equ	0xFE7
  3684                           postdec1	equ	0xFE5
  3685                           fsr1h	equ	0xFE2
  3686                           fsr1l	equ	0xFE1
  3687                           indf2	equ	0xFDF
  3688                           postinc2	equ	0xFDE
  3689                           postdec2	equ	0xFDD
  3690                           fsr2h	equ	0xFDA
  3691                           fsr2l	equ	0xFD9
  3692                           status	equ	0xFD8
  3693                           
  3694 ;; *************** function _init_queue *****************
  3695 ;; Defined at:
  3696 ;;		line 14 in file "../src/messages.c"
  3697 ;; Parameters:    Size  Location     Type
  3698 ;;  qptr            2   39[BANK0 ] PTR struct __msg_queue
  3699 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3700 ;; Auto vars:     Size  Location     Type
  3701 ;;  i               1   42[BANK0 ] unsigned char 
  3702 ;; Return value:  Size  Location     Type
  3703 ;;		None               void
  3704 ;; Registers used:
  3705 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3706 ;; Tracked objects:
  3707 ;;		On entry : 0/0
  3708 ;;		On exit  : 0/0
  3709 ;;		Unchanged: 0/0
  3710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3711 ;;      Params:         0       2       0       0       0
  3712 ;;      Locals:         0       1       0       0       0
  3713 ;;      Temps:          0       1       0       0       0
  3714 ;;      Totals:         0       4       0       0       0
  3715 ;;Total ram usage:        4 bytes
  3716 ;; Hardware stack levels used:    1
  3717 ;; Hardware stack levels required when called:   10
  3718 ;; This function calls:
  3719 ;;		Nothing
  3720 ;; This function is called by:
  3721 ;;		_init_queues
  3722 ;; This function uses a non-reentrant model
  3723 ;;
  3724                           
  3725                           	psect	text20
  3726  001448                     __ptext20:
  3727                           	opt stack 0
  3728  001448                     _init_queue:
  3729                           	opt stack 19
  3730                           
  3731                           ;messages.c: 15: unsigned char i;
  3732                           ;messages.c: 17: qptr->cur_write_ind = 0;
  3733                           
  3734                           ;incstack = 0
  3735                           ;incstack = 0
  3736  001448  0100               	movlb	0	; () banked
  3737  00144A  EE20 F034          	lfsr	2,52
  3738  00144E  0100               	movlb	0	; () banked
  3739  001450  51A7               	movf	init_queue@qptr& (0+255),w,b
  3740  001452  26D9               	addwf	fsr2l,f,c
  3741  001454  0100               	movlb	0	; () banked
  3742  001456  51A8               	movf	(init_queue@qptr+1)& (0+255),w,b
  3743  001458  22DA               	addwfc	fsr2h,f,c
  3744  00145A  0E00               	movlw	0
  3745  00145C  6EDF               	movwf	indf2,c
  3746                           
  3747                           ;messages.c: 18: qptr->cur_read_ind = 0;
  3748  00145E  0100               	movlb	0	; () banked
  3749  001460  EE20 F035          	lfsr	2,53
  3750  001464  0100               	movlb	0	; () banked
  3751  001466  51A7               	movf	init_queue@qptr& (0+255),w,b
  3752  001468  26D9               	addwf	fsr2l,f,c
  3753  00146A  0100               	movlb	0	; () banked
  3754  00146C  51A8               	movf	(init_queue@qptr+1)& (0+255),w,b
  3755  00146E  22DA               	addwfc	fsr2h,f,c
  3756  001470  0E00               	movlw	0
  3757  001472  6EDF               	movwf	indf2,c
  3758                           
  3759                           ; BSR set to: 0
  3760                           ;messages.c: 19: for (i = 0; i < 4; i++) {
  3761  001474  0100               	movlb	0	; () banked
  3762  001476  6FA9               	movwf	??_init_queue& (0+255),b
  3763  001478  0E00               	movlw	0
  3764  00147A  0100               	movlb	0	; () banked
  3765  00147C  0100               	movlb	0	; () banked
  3766  00147E  6FAA               	movwf	init_queue@i& (0+255),b
  3767  001480  0100               	movlb	0	; () banked
  3768  001482  51A9               	movf	??_init_queue& (0+255),w,b
  3769                           
  3770                           ; BSR set to: 0
  3771  001484  0E03               	movlw	3
  3772  001486  0100               	movlb	0	; () banked
  3773  001488  0100               	movlb	0	; () banked
  3774  00148A  65AA               	cpfsgt	init_queue@i& (0+255),b
  3775  00148C  D001               	goto	l3114
  3776  00148E  0012               	return	
  3777  001490                     l3114:
  3778                           
  3779                           ; BSR set to: 0
  3780                           ;messages.c: 20: qptr->queue[i].full = 0;
  3781  001490  0100               	movlb	0	; () banked
  3782  001492  0100               	movlb	0	; () banked
  3783  001494  51AA               	movf	init_queue@i& (0+255),w,b
  3784  001496  0D0D               	mullw	13
  3785  001498  50F3               	movf	prodl,w,c
  3786  00149A  0100               	movlb	0	; () banked
  3787  00149C  0100               	movlb	0	; () banked
  3788  00149E  25A7               	addwf	init_queue@qptr& (0+255),w,b
  3789  0014A0  6ED9               	movwf	fsr2l,c
  3790  0014A2  50F4               	movf	prodh,w,c
  3791  0014A4  0100               	movlb	0	; () banked
  3792  0014A6  0100               	movlb	0	; () banked
  3793  0014A8  21A8               	addwfc	(init_queue@qptr+1)& (0+255),w,b
  3794  0014AA  6EDA               	movwf	fsr2h,c
  3795  0014AC  0E00               	movlw	0
  3796  0014AE  6EDF               	movwf	indf2,c
  3797                           
  3798                           ; BSR set to: 0
  3799  0014B0  0100               	movlb	0	; () banked
  3800  0014B2  0100               	movlb	0	; () banked
  3801  0014B4  2BAA               	incf	init_queue@i& (0+255),f,b
  3802                           
  3803                           ; BSR set to: 0
  3804  0014B6  0E03               	movlw	3
  3805  0014B8  0100               	movlb	0	; () banked
  3806  0014BA  0100               	movlb	0	; () banked
  3807  0014BC  65AA               	cpfsgt	init_queue@i& (0+255),b
  3808  0014BE  D7E8               	goto	l3114
  3809  0014C0  0012               	return	
  3810  0014C2                     __end_of_init_queue:
  3811                           	opt stack 0
  3812                           tblptru	equ	0xFF8
  3813                           prodh	equ	0xFF4
  3814                           prodl	equ	0xFF3
  3815                           intcon	equ	0xFF2
  3816                           postinc0	equ	0xFEE
  3817                           wreg	equ	0xFE8
  3818                           indf1	equ	0xFE7
  3819                           postdec1	equ	0xFE5
  3820                           fsr1h	equ	0xFE2
  3821                           fsr1l	equ	0xFE1
  3822                           indf2	equ	0xFDF
  3823                           postinc2	equ	0xFDE
  3824                           postdec2	equ	0xFDD
  3825                           fsr2h	equ	0xFDA
  3826                           fsr2l	equ	0xFD9
  3827                           status	equ	0xFD8
  3828                           
  3829 ;; *************** function _init_timer1_lthread *****************
  3830 ;; Defined at:
  3831 ;;		line 6 in file "../src/timer1_thread.c"
  3832 ;; Parameters:    Size  Location     Type
  3833 ;;  tptr            2   39[BANK0 ] PTR struct __timer1_thre
  3834 ;;		 -> main@t1thread_data(2), 
  3835 ;; Auto vars:     Size  Location     Type
  3836 ;;		None
  3837 ;; Return value:  Size  Location     Type
  3838 ;;		None               void
  3839 ;; Registers used:
  3840 ;;		wreg, fsr2l, fsr2h
  3841 ;; Tracked objects:
  3842 ;;		On entry : 0/0
  3843 ;;		On exit  : 0/0
  3844 ;;		Unchanged: 0/0
  3845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3846 ;;      Params:         0       2       0       0       0
  3847 ;;      Locals:         0       0       0       0       0
  3848 ;;      Temps:          0       0       0       0       0
  3849 ;;      Totals:         0       2       0       0       0
  3850 ;;Total ram usage:        2 bytes
  3851 ;; Hardware stack levels used:    1
  3852 ;; Hardware stack levels required when called:   10
  3853 ;; This function calls:
  3854 ;;		Nothing
  3855 ;; This function is called by:
  3856 ;;		_main
  3857 ;; This function uses a non-reentrant model
  3858 ;;
  3859                           
  3860                           	psect	text21
  3861  0019E2                     __ptext21:
  3862                           	opt stack 0
  3863  0019E2                     _init_timer1_lthread:
  3864                           	opt stack 20
  3865                           
  3866                           ;timer1_thread.c: 7: tptr->msgcount = 0;
  3867                           
  3868                           ; BSR set to: 0
  3869                           ;incstack = 0
  3870                           ;incstack = 0
  3871  0019E2  C0A7  FFD9         	movff	init_timer1_lthread@tptr,fsr2l
  3872  0019E6  C0A8  FFDA         	movff	init_timer1_lthread@tptr+1,fsr2h
  3873  0019EA  0E00               	movlw	0
  3874  0019EC  6EDE               	movwf	postinc2,c
  3875  0019EE  0E00               	movlw	0
  3876  0019F0  6EDD               	movwf	postdec2,c
  3877  0019F2  0012               	return	
  3878  0019F4                     __end_of_init_timer1_lthread:
  3879                           	opt stack 0
  3880                           tblptru	equ	0xFF8
  3881                           prodh	equ	0xFF4
  3882                           prodl	equ	0xFF3
  3883                           intcon	equ	0xFF2
  3884                           postinc0	equ	0xFEE
  3885                           wreg	equ	0xFE8
  3886                           indf1	equ	0xFE7
  3887                           postdec1	equ	0xFE5
  3888                           fsr1h	equ	0xFE2
  3889                           fsr1l	equ	0xFE1
  3890                           indf2	equ	0xFDF
  3891                           postinc2	equ	0xFDE
  3892                           postdec2	equ	0xFDD
  3893                           fsr2h	equ	0xFDA
  3894                           fsr2l	equ	0xFD9
  3895                           status	equ	0xFD8
  3896                           
  3897 ;; *************** function _init_i2c *****************
  3898 ;; Defined at:
  3899 ;;		line 298 in file "../src/my_i2c.c"
  3900 ;; Parameters:    Size  Location     Type
  3901 ;;  ic              2   39[BANK0 ] PTR struct __i2c_comm
  3902 ;;		 -> main@ic(28), 
  3903 ;; Auto vars:     Size  Location     Type
  3904 ;;		None
  3905 ;; Return value:  Size  Location     Type
  3906 ;;		None               void
  3907 ;; Registers used:
  3908 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3909 ;; Tracked objects:
  3910 ;;		On entry : 0/0
  3911 ;;		On exit  : 0/0
  3912 ;;		Unchanged: 0/0
  3913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3914 ;;      Params:         0       2       0       0       0
  3915 ;;      Locals:         0       0       0       0       0
  3916 ;;      Temps:          0       0       0       0       0
  3917 ;;      Totals:         0       2       0       0       0
  3918 ;;Total ram usage:        2 bytes
  3919 ;; Hardware stack levels used:    1
  3920 ;; Hardware stack levels required when called:   10
  3921 ;; This function calls:
  3922 ;;		Nothing
  3923 ;; This function is called by:
  3924 ;;		_main
  3925 ;; This function uses a non-reentrant model
  3926 ;;
  3927                           
  3928                           	psect	text22
  3929  001528                     __ptext22:
  3930                           	opt stack 0
  3931  001528                     _init_i2c:
  3932                           	opt stack 20
  3933                           
  3934                           ;my_i2c.c: 299: ic_ptr = ic;
  3935                           
  3936                           ;incstack = 0
  3937                           ;incstack = 0
  3938  001528  C0A7  F0C7         	movff	init_i2c@ic,_ic_ptr
  3939  00152C  C0A8  F0C8         	movff	init_i2c@ic+1,_ic_ptr+1
  3940                           
  3941                           ;my_i2c.c: 300: ic_ptr->buflen = 0;
  3942  001530  0100               	movlb	0	; () banked
  3943  001532  EE20 F00A          	lfsr	2,10
  3944  001536  0100               	movlb	0	; () banked
  3945  001538  51C7               	movf	_ic_ptr& (0+255),w,b
  3946  00153A  26D9               	addwf	fsr2l,f,c
  3947  00153C  0100               	movlb	0	; () banked
  3948  00153E  51C8               	movf	(_ic_ptr+1)& (0+255),w,b
  3949  001540  22DA               	addwfc	fsr2h,f,c
  3950  001542  0E00               	movlw	0
  3951  001544  6EDF               	movwf	indf2,c
  3952                           
  3953                           ;my_i2c.c: 301: ic_ptr->event_count = 0;
  3954  001546  0100               	movlb	0	; () banked
  3955  001548  EE20 F00B          	lfsr	2,11
  3956  00154C  0100               	movlb	0	; () banked
  3957  00154E  51C7               	movf	_ic_ptr& (0+255),w,b
  3958  001550  26D9               	addwf	fsr2l,f,c
  3959  001552  0100               	movlb	0	; () banked
  3960  001554  51C8               	movf	(_ic_ptr+1)& (0+255),w,b
  3961  001556  22DA               	addwfc	fsr2h,f,c
  3962  001558  0E00               	movlw	0
  3963  00155A  6EDF               	movwf	indf2,c
  3964                           
  3965                           ;my_i2c.c: 302: ic_ptr->status = 0x5;
  3966  00155C  0100               	movlb	0	; () banked
  3967  00155E  EE20 F00C          	lfsr	2,12
  3968  001562  0100               	movlb	0	; () banked
  3969  001564  51C7               	movf	_ic_ptr& (0+255),w,b
  3970  001566  26D9               	addwf	fsr2l,f,c
  3971  001568  0100               	movlb	0	; () banked
  3972  00156A  51C8               	movf	(_ic_ptr+1)& (0+255),w,b
  3973  00156C  22DA               	addwfc	fsr2h,f,c
  3974  00156E  0E05               	movlw	5
  3975  001570  6EDF               	movwf	indf2,c
  3976                           
  3977                           ;my_i2c.c: 303: ic_ptr->error_count = 0;
  3978  001572  0100               	movlb	0	; () banked
  3979  001574  EE20 F00E          	lfsr	2,14
  3980  001578  0100               	movlb	0	; () banked
  3981  00157A  51C7               	movf	_ic_ptr& (0+255),w,b
  3982  00157C  26D9               	addwf	fsr2l,f,c
  3983  00157E  0100               	movlb	0	; () banked
  3984  001580  51C8               	movf	(_ic_ptr+1)& (0+255),w,b
  3985  001582  22DA               	addwfc	fsr2h,f,c
  3986  001584  0E00               	movlw	0
  3987  001586  6EDF               	movwf	indf2,c
  3988                           
  3989                           ; BSR set to: 0
  3990  001588  0012               	return	
  3991  00158A                     __end_of_init_i2c:
  3992                           	opt stack 0
  3993                           tblptru	equ	0xFF8
  3994                           prodh	equ	0xFF4
  3995                           prodl	equ	0xFF3
  3996                           intcon	equ	0xFF2
  3997                           postinc0	equ	0xFEE
  3998                           wreg	equ	0xFE8
  3999                           indf1	equ	0xFE7
  4000                           postdec1	equ	0xFE5
  4001                           fsr1h	equ	0xFE2
  4002                           fsr1l	equ	0xFE1
  4003                           indf2	equ	0xFDF
  4004                           postinc2	equ	0xFDE
  4005                           postdec2	equ	0xFDD
  4006                           fsr2h	equ	0xFDA
  4007                           fsr2l	equ	0xFD9
  4008                           status	equ	0xFD8
  4009                           
  4010 ;; *************** function _enable_interrupts *****************
  4011 ;; Defined at:
  4012 ;;		line 14 in file "../src/interrupts.c"
  4013 ;; Parameters:    Size  Location     Type
  4014 ;;		None
  4015 ;; Auto vars:     Size  Location     Type
  4016 ;;		None
  4017 ;; Return value:  Size  Location     Type
  4018 ;;		None               void
  4019 ;; Registers used:
  4020 ;;		None
  4021 ;; Tracked objects:
  4022 ;;		On entry : 0/0
  4023 ;;		On exit  : 0/0
  4024 ;;		Unchanged: 0/0
  4025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4026 ;;      Params:         0       0       0       0       0
  4027 ;;      Locals:         0       0       0       0       0
  4028 ;;      Temps:          0       0       0       0       0
  4029 ;;      Totals:         0       0       0       0       0
  4030 ;;Total ram usage:        0 bytes
  4031 ;; Hardware stack levels used:    1
  4032 ;; Hardware stack levels required when called:   10
  4033 ;; This function calls:
  4034 ;;		Nothing
  4035 ;; This function is called by:
  4036 ;;		_main
  4037 ;; This function uses a non-reentrant model
  4038 ;;
  4039                           
  4040                           	psect	text23
  4041  001A5A                     __ptext23:
  4042                           	opt stack 0
  4043  001A5A                     _enable_interrupts:
  4044                           	opt stack 20
  4045                           
  4046                           ;interrupts.c: 17: RCONbits.IPEN = 1;
  4047                           
  4048                           ; BSR set to: 0
  4049                           ;incstack = 0
  4050                           ;incstack = 0
  4051  001A5A  8ED0               	bsf	4048,7,c	;volatile
  4052                           
  4053                           ;interrupts.c: 18: INTCONbits.GIEH = 1;
  4054  001A5C  8EF2               	bsf	intcon,7,c	;volatile
  4055                           
  4056                           ;interrupts.c: 19: INTCONbits.GIEL = 1;
  4057  001A5E  8CF2               	bsf	intcon,6,c	;volatile
  4058  001A60  0012               	return	
  4059  001A62                     __end_of_enable_interrupts:
  4060                           	opt stack 0
  4061                           tblptru	equ	0xFF8
  4062                           prodh	equ	0xFF4
  4063                           prodl	equ	0xFF3
  4064                           intcon	equ	0xFF2
  4065                           postinc0	equ	0xFEE
  4066                           wreg	equ	0xFE8
  4067                           indf1	equ	0xFE7
  4068                           postdec1	equ	0xFE5
  4069                           fsr1h	equ	0xFE2
  4070                           fsr1l	equ	0xFE1
  4071                           indf2	equ	0xFDF
  4072                           postinc2	equ	0xFDE
  4073                           postdec2	equ	0xFDD
  4074                           fsr2h	equ	0xFDA
  4075                           fsr2l	equ	0xFD9
  4076                           status	equ	0xFD8
  4077                           
  4078 ;; *************** function _InterruptHandlerLow *****************
  4079 ;; Defined at:
  4080 ;;		line 128 in file "../src/interrupts.c"
  4081 ;; Parameters:    Size  Location     Type
  4082 ;;		None
  4083 ;; Auto vars:     Size  Location     Type
  4084 ;;		None
  4085 ;; Return value:  Size  Location     Type
  4086 ;;		None               void
  4087 ;; Registers used:
  4088 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4089 ;; Tracked objects:
  4090 ;;		On entry : 0/0
  4091 ;;		On exit  : 0/0
  4092 ;;		Unchanged: 0/0
  4093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4094 ;;      Params:         0       0       0       0       0
  4095 ;;      Locals:         0       0       0       0       0
  4096 ;;      Temps:         17       0       0       0       0
  4097 ;;      Totals:        17       0       0       0       0
  4098 ;;Total ram usage:       17 bytes
  4099 ;; Hardware stack levels used:    1
  4100 ;; Hardware stack levels required when called:    9
  4101 ;; This function calls:
  4102 ;;		_timer1_int_handler
  4103 ;;		_uart_recv_int_handler
  4104 ;; This function is called by:
  4105 ;;		Interrupt level 1
  4106 ;; This function uses a non-reentrant model
  4107 ;;
  4108                           
  4109                           	psect	intcodelo
  4110  000018                     __pintcodelo:
  4111                           	opt stack 0
  4112  000018                     _InterruptHandlerLow:
  4113                           	opt stack 17
  4114                           
  4115                           ;incstack = 0
  4116  000018  CFD8 F01D          	movff	status,??_InterruptHandlerLow
  4117  00001C  CFE8 F01E          	movff	wreg,??_InterruptHandlerLow+1
  4118  000020  CFE0 F01F          	movff	bsr,??_InterruptHandlerLow+2
  4119  000024  CFFA F020          	movff	pclath,??_InterruptHandlerLow+3
  4120  000028  CFFB F021          	movff	pclatu,??_InterruptHandlerLow+4
  4121  00002C  CFE9 F022          	movff	fsr0l,??_InterruptHandlerLow+5
  4122  000030  CFEA F023          	movff	fsr0h,??_InterruptHandlerLow+6
  4123  000034  CFE1 F024          	movff	fsr1l,??_InterruptHandlerLow+7
  4124  000038  CFE2 F025          	movff	fsr1h,??_InterruptHandlerLow+8
  4125  00003C  CFD9 F026          	movff	fsr2l,??_InterruptHandlerLow+9
  4126  000040  CFDA F027          	movff	fsr2h,??_InterruptHandlerLow+10
  4127  000044  CFF3 F028          	movff	prodl,??_InterruptHandlerLow+11
  4128  000048  CFF4 F029          	movff	prodh,??_InterruptHandlerLow+12
  4129  00004C  CFF6 F02A          	movff	tblptrl,??_InterruptHandlerLow+13
  4130  000050  CFF7 F02B          	movff	tblptrh,??_InterruptHandlerLow+14
  4131  000054  CFF8 F02C          	movff	tblptru,??_InterruptHandlerLow+15
  4132  000058  CFF5 F02D          	movff	tablat,??_InterruptHandlerLow+16
  4133  00005C                     
  4134                           ;interrupts.c: 130: if (PIR1bits.TMR1IF) {
  4135  00005C  A09E               	btfss	3998,0,c	;volatile
  4136  00005E  D001               	goto	i1u244_21
  4137  000060  D001               	goto	i1u244_20
  4138  000062                     i1u244_21:
  4139  000062  D004               	goto	i1l3378
  4140  000064                     i1u244_20:
  4141  000064                     
  4142                           ;interrupts.c: 131: PIR1bits.TMR1IF = 0;
  4143  000064  909E               	bcf	3998,0,c	;volatile
  4144  000066                     
  4145                           ;interrupts.c: 132: timer1_int_handler();
  4146  000066  ECFA  F00C         	call	_timer1_int_handler	;wreg free
  4147  00006A  D000               	goto	i1l3378
  4148  00006C                     i1l3378:
  4149                           
  4150                           ;interrupts.c: 133: }
  4151                           ;interrupts.c: 136: if (PIR1bits.RCIF) {
  4152  00006C  AA9E               	btfss	3998,5,c	;volatile
  4153  00006E  D001               	goto	i1u245_21
  4154  000070  D001               	goto	i1u245_20
  4155  000072                     i1u245_21:
  4156  000072  D004               	goto	i1l50
  4157  000074                     i1u245_20:
  4158  000074                     
  4159                           ;interrupts.c: 137: PIR1bits.RCIF = 0;
  4160  000074  9A9E               	bcf	3998,5,c	;volatile
  4161  000076                     
  4162                           ;interrupts.c: 138: uart_recv_int_handler();
  4163  000076  EC45  F009         	call	_uart_recv_int_handler	;wreg free
  4164  00007A  D000               	goto	i1l50
  4165  00007C                     i1l50:
  4166  00007C  C02D  FFF5         	movff	??_InterruptHandlerLow+16,tablat
  4167  000080  C02C  FFF8         	movff	??_InterruptHandlerLow+15,tblptru
  4168  000084  C02B  FFF7         	movff	??_InterruptHandlerLow+14,tblptrh
  4169  000088  C02A  FFF6         	movff	??_InterruptHandlerLow+13,tblptrl
  4170  00008C  C029  FFF4         	movff	??_InterruptHandlerLow+12,prodh
  4171  000090  C028  FFF3         	movff	??_InterruptHandlerLow+11,prodl
  4172  000094  C027  FFDA         	movff	??_InterruptHandlerLow+10,fsr2h
  4173  000098  C026  FFD9         	movff	??_InterruptHandlerLow+9,fsr2l
  4174  00009C  C025  FFE2         	movff	??_InterruptHandlerLow+8,fsr1h
  4175  0000A0  C024  FFE1         	movff	??_InterruptHandlerLow+7,fsr1l
  4176  0000A4  C023  FFEA         	movff	??_InterruptHandlerLow+6,fsr0h
  4177  0000A8  C022  FFE9         	movff	??_InterruptHandlerLow+5,fsr0l
  4178  0000AC  C021  FFFB         	movff	??_InterruptHandlerLow+4,pclatu
  4179  0000B0  C020  FFFA         	movff	??_InterruptHandlerLow+3,pclath
  4180  0000B4  C01F  FFE0         	movff	??_InterruptHandlerLow+2,bsr
  4181  0000B8  C01E  FFE8         	movff	??_InterruptHandlerLow+1,wreg
  4182  0000BC  C01D  FFD8         	movff	??_InterruptHandlerLow,status
  4183  0000C0  0010               	retfie	
  4184  0000C2                     __end_of_InterruptHandlerLow:
  4185                           	opt stack 0
  4186                           pclatu	equ	0xFFB
  4187                           pclath	equ	0xFFA
  4188                           tblptru	equ	0xFF8
  4189                           tblptrh	equ	0xFF7
  4190                           tblptrl	equ	0xFF6
  4191                           tablat	equ	0xFF5
  4192                           prodh	equ	0xFF4
  4193                           prodl	equ	0xFF3
  4194                           intcon	equ	0xFF2
  4195                           postinc0	equ	0xFEE
  4196                           fsr0h	equ	0xFEA
  4197                           fsr0l	equ	0xFE9
  4198                           wreg	equ	0xFE8
  4199                           indf1	equ	0xFE7
  4200                           postdec1	equ	0xFE5
  4201                           fsr1h	equ	0xFE2
  4202                           fsr1l	equ	0xFE1
  4203                           bsr	equ	0xFE0
  4204                           indf2	equ	0xFDF
  4205                           postinc2	equ	0xFDE
  4206                           postdec2	equ	0xFDD
  4207                           fsr2h	equ	0xFDA
  4208                           fsr2l	equ	0xFD9
  4209                           status	equ	0xFD8
  4210                           
  4211 ;; *************** function _uart_recv_int_handler *****************
  4212 ;; Defined at:
  4213 ;;		line 11 in file "../src/my_uart.c"
  4214 ;; Parameters:    Size  Location     Type
  4215 ;;		None
  4216 ;; Auto vars:     Size  Location     Type
  4217 ;;		None
  4218 ;; Return value:  Size  Location     Type
  4219 ;;		None               void
  4220 ;; Registers used:
  4221 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4222 ;; Tracked objects:
  4223 ;;		On entry : 0/0
  4224 ;;		On exit  : 0/0
  4225 ;;		Unchanged: 0/0
  4226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4227 ;;      Params:         0       0       0       0       0
  4228 ;;      Locals:         0       0       0       0       0
  4229 ;;      Temps:          2       0       0       0       0
  4230 ;;      Totals:         2       0       0       0       0
  4231 ;;Total ram usage:        2 bytes
  4232 ;; Hardware stack levels used:    1
  4233 ;; Hardware stack levels required when called:    8
  4234 ;; This function calls:
  4235 ;;		_ToMainLow_sendmsg
  4236 ;;		_ReadUSART
  4237 ;; This function is called by:
  4238 ;;		_InterruptHandlerLow
  4239 ;; This function uses a non-reentrant model
  4240 ;;
  4241                           
  4242                           	psect	text25
  4243  00128A                     __ptext25:
  4244                           	opt stack 0
  4245  00128A                     _uart_recv_int_handler:
  4246                           	opt stack 17
  4247                           
  4248                           ;my_uart.c: 12: if ((PIR1bits.RCIF)) {
  4249                           
  4250                           ;incstack = 0
  4251                           ;incstack = 0
  4252  00128A  AA9E               	btfss	3998,5,c	;volatile
  4253  00128C  D03D               	goto	i1l3366
  4254                           
  4255                           ;my_uart.c: 13: uc_ptr->buffer[uc_ptr->buflen] = ReadUSART();
  4256  00128E  EE20 F004          	lfsr	2,4
  4257  001292  504E               	movf	_uc_ptr,w,c
  4258  001294  26D9               	addwf	fsr2l,f,c
  4259  001296  504F               	movf	_uc_ptr+1,w,c
  4260  001298  22DA               	addwfc	fsr2h,f,c
  4261  00129A  50DF               	movf	indf2,w,c
  4262  00129C  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  4263  00129E  501B               	movf	??_uart_recv_int_handler,w,c
  4264  0012A0  0D01               	mullw	1
  4265  0012A2  50F3               	movf	prodl,w,c
  4266  0012A4  244E               	addwf	_uc_ptr,w,c
  4267  0012A6  6ED9               	movwf	fsr2l,c
  4268  0012A8  50F4               	movf	prodh,w,c
  4269  0012AA  204F               	addwfc	_uc_ptr+1,w,c
  4270  0012AC  6EDA               	movwf	fsr2h,c
  4271  0012AE  ECD0  F00C         	call	_ReadUSART	;wreg free
  4272  0012B2  6EDF               	movwf	indf2,c
  4273                           
  4274                           ;my_uart.c: 14: uc_ptr->buflen++;
  4275  0012B4  EE20 F004          	lfsr	2,4
  4276  0012B8  504E               	movf	_uc_ptr,w,c
  4277  0012BA  26D9               	addwf	fsr2l,f,c
  4278  0012BC  504F               	movf	_uc_ptr+1,w,c
  4279  0012BE  22DA               	addwfc	fsr2h,f,c
  4280  0012C0  2ADF               	incf	indf2,f,c
  4281                           
  4282                           ;my_uart.c: 16: if (uc_ptr->buflen == 4) {
  4283  0012C2  EE20 F004          	lfsr	2,4
  4284  0012C6  504E               	movf	_uc_ptr,w,c
  4285  0012C8  26D9               	addwf	fsr2l,f,c
  4286  0012CA  504F               	movf	_uc_ptr+1,w,c
  4287  0012CC  22DA               	addwfc	fsr2h,f,c
  4288  0012CE  0E04               	movlw	4
  4289  0012D0  62DF               	cpfseq	indf2,c
  4290  0012D2  D01A               	goto	i1l3366
  4291                           
  4292                           ;my_uart.c: 17: ToMainLow_sendmsg(uc_ptr->buflen, 31, (void *) uc_ptr->buffer);
  4293  0012D4  EE20 F004          	lfsr	2,4
  4294  0012D8  504E               	movf	_uc_ptr,w,c
  4295  0012DA  26D9               	addwf	fsr2l,f,c
  4296  0012DC  504F               	movf	_uc_ptr+1,w,c
  4297  0012DE  22DA               	addwfc	fsr2h,f,c
  4298  0012E0  50DF               	movf	indf2,w,c
  4299  0012E2  6E17               	movwf	?_ToMainLow_sendmsg,c
  4300  0012E4  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  4301  0012E6  0E1F               	movlw	31
  4302  0012E8  6E18               	movwf	?_ToMainLow_sendmsg+1,c
  4303  0012EA  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  4304  0012EC  C04E  F019         	movff	_uc_ptr,?_ToMainLow_sendmsg+2
  4305  0012F0  C04F  F01A         	movff	_uc_ptr+1,?_ToMainLow_sendmsg+3
  4306  0012F4  ECBF  F00C         	call	_ToMainLow_sendmsg	;wreg free
  4307                           
  4308                           ;my_uart.c: 18: uc_ptr->buflen = 0;
  4309  0012F8  EE20 F004          	lfsr	2,4
  4310  0012FC  504E               	movf	_uc_ptr,w,c
  4311  0012FE  26D9               	addwf	fsr2l,f,c
  4312  001300  504F               	movf	_uc_ptr+1,w,c
  4313  001302  22DA               	addwfc	fsr2h,f,c
  4314  001304  0E00               	movlw	0
  4315  001306  6EDF               	movwf	indf2,c
  4316  001308                     i1l3366:
  4317                           
  4318                           ;my_uart.c: 19: }
  4319                           ;my_uart.c: 20: }
  4320                           ;my_uart.c: 21: if (USART_Status.OVERRUN_ERROR == 1) {
  4321  001308  A651               	btfss	_USART_Status,3,c
  4322  00130A  0012               	return	
  4323                           
  4324                           ;my_uart.c: 24: RCSTAbits.CREN = 0;
  4325  00130C  98AB               	bcf	4011,4,c	;volatile
  4326                           
  4327                           ;my_uart.c: 25: RCSTAbits.CREN = 1;
  4328  00130E  88AB               	bsf	4011,4,c	;volatile
  4329                           
  4330                           ;my_uart.c: 26: ToMainLow_sendmsg(0, 30, (void *) 0);
  4331  001310  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  4332  001312  0E00               	movlw	0
  4333  001314  6E17               	movwf	?_ToMainLow_sendmsg,c
  4334  001316  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  4335  001318  6E1C               	movwf	(??_uart_recv_int_handler+1)& (0+255),c
  4336  00131A  0E1E               	movlw	30
  4337  00131C  6E18               	movwf	?_ToMainLow_sendmsg+1,c
  4338  00131E  501C               	movf	(??_uart_recv_int_handler+1)& (0+255),w,c
  4339  001320  0E00               	movlw	0
  4340  001322  6E1A               	movwf	?_ToMainLow_sendmsg+3,c
  4341  001324  0E00               	movlw	0
  4342  001326  6E19               	movwf	?_ToMainLow_sendmsg+2,c
  4343  001328  ECBF  F00C         	call	_ToMainLow_sendmsg	;wreg free
  4344  00132C  0012               	return	
  4345  00132E                     __end_of_uart_recv_int_handler:
  4346                           	opt stack 0
  4347                           pclatu	equ	0xFFB
  4348                           pclath	equ	0xFFA
  4349                           tblptru	equ	0xFF8
  4350                           tblptrh	equ	0xFF7
  4351                           tblptrl	equ	0xFF6
  4352                           tablat	equ	0xFF5
  4353                           prodh	equ	0xFF4
  4354                           prodl	equ	0xFF3
  4355                           intcon	equ	0xFF2
  4356                           postinc0	equ	0xFEE
  4357                           fsr0h	equ	0xFEA
  4358                           fsr0l	equ	0xFE9
  4359                           wreg	equ	0xFE8
  4360                           indf1	equ	0xFE7
  4361                           postdec1	equ	0xFE5
  4362                           fsr1h	equ	0xFE2
  4363                           fsr1l	equ	0xFE1
  4364                           bsr	equ	0xFE0
  4365                           indf2	equ	0xFDF
  4366                           postinc2	equ	0xFDE
  4367                           postdec2	equ	0xFDD
  4368                           fsr2h	equ	0xFDA
  4369                           fsr2l	equ	0xFD9
  4370                           status	equ	0xFD8
  4371                           
  4372 ;; *************** function _ReadUSART *****************
  4373 ;; Defined at:
  4374 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic18\plib\USART\uread.c"
  4375 ;; Parameters:    Size  Location     Type
  4376 ;;		None
  4377 ;; Auto vars:     Size  Location     Type
  4378 ;;  data            1    0[COMRAM] unsigned char 
  4379 ;; Return value:  Size  Location     Type
  4380 ;;                  1    wreg      unsigned char 
  4381 ;; Registers used:
  4382 ;;		wreg, status,2, status,0
  4383 ;; Tracked objects:
  4384 ;;		On entry : 0/0
  4385 ;;		On exit  : 0/0
  4386 ;;		Unchanged: 0/0
  4387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4388 ;;      Params:         0       0       0       0       0
  4389 ;;      Locals:         1       0       0       0       0
  4390 ;;      Temps:          0       0       0       0       0
  4391 ;;      Totals:         1       0       0       0       0
  4392 ;;Total ram usage:        1 bytes
  4393 ;; Hardware stack levels used:    1
  4394 ;; Hardware stack levels required when called:    5
  4395 ;; This function calls:
  4396 ;;		Nothing
  4397 ;; This function is called by:
  4398 ;;		_uart_recv_int_handler
  4399 ;; This function uses a non-reentrant model
  4400 ;;
  4401                           
  4402                           	psect	text26
  4403  0019A0                     __ptext26:
  4404                           	opt stack 0
  4405  0019A0                     _ReadUSART:
  4406                           	opt stack 19
  4407                           
  4408                           ;incstack = 0
  4409                           ;incstack = 0
  4410  0019A0  0EF2               	movlw	242
  4411  0019A2  1651               	andwf	_USART_Status,f,c
  4412  0019A4  ACAB               	btfss	4011,6,c	;volatile
  4413  0019A6  D003               	goto	i1l467
  4414  0019A8  9051               	bcf	_USART_Status,0,c
  4415  0019AA  B0AB               	btfsc	4011,0,c	;volatile
  4416  0019AC  8051               	bsf	_USART_Status,0,c
  4417  0019AE                     i1l467:
  4418  0019AE  B4AB               	btfsc	4011,2,c	;volatile
  4419  0019B0  8451               	bsf	_USART_Status,2,c
  4420  0019B2  B2AB               	btfsc	4011,1,c	;volatile
  4421  0019B4  8651               	bsf	_USART_Status,3,c
  4422  0019B6  CFAE F001          	movff	4014,ReadUSART@data	;volatile
  4423  0019BA  5001               	movf	ReadUSART@data,w,c
  4424  0019BC  0012               	return	
  4425  0019BE                     __end_of_ReadUSART:
  4426                           	opt stack 0
  4427                           pclatu	equ	0xFFB
  4428                           pclath	equ	0xFFA
  4429                           tblptru	equ	0xFF8
  4430                           tblptrh	equ	0xFF7
  4431                           tblptrl	equ	0xFF6
  4432                           tablat	equ	0xFF5
  4433                           prodh	equ	0xFF4
  4434                           prodl	equ	0xFF3
  4435                           intcon	equ	0xFF2
  4436                           postinc0	equ	0xFEE
  4437                           fsr0h	equ	0xFEA
  4438                           fsr0l	equ	0xFE9
  4439                           wreg	equ	0xFE8
  4440                           indf1	equ	0xFE7
  4441                           postdec1	equ	0xFE5
  4442                           fsr1h	equ	0xFE2
  4443                           fsr1l	equ	0xFE1
  4444                           bsr	equ	0xFE0
  4445                           indf2	equ	0xFDF
  4446                           postinc2	equ	0xFDE
  4447                           postdec2	equ	0xFDD
  4448                           fsr2h	equ	0xFDA
  4449                           fsr2l	equ	0xFD9
  4450                           status	equ	0xFD8
  4451                           
  4452 ;; *************** function _ToMainLow_sendmsg *****************
  4453 ;; Defined at:
  4454 ;;		line 103 in file "../src/messages.c"
  4455 ;; Parameters:    Size  Location     Type
  4456 ;;  length          1   22[COMRAM] unsigned char 
  4457 ;;  msgtype         1   23[COMRAM] unsigned char 
  4458 ;;  data            2   24[COMRAM] PTR void 
  4459 ;;		 -> NULL(0), 
  4460 ;; Auto vars:     Size  Location     Type
  4461 ;;		None
  4462 ;; Return value:  Size  Location     Type
  4463 ;;                  1    wreg      char 
  4464 ;; Registers used:
  4465 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4466 ;; Tracked objects:
  4467 ;;		On entry : 0/0
  4468 ;;		On exit  : 0/0
  4469 ;;		Unchanged: 0/0
  4470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4471 ;;      Params:         4       0       0       0       0
  4472 ;;      Locals:         0       0       0       0       0
  4473 ;;      Temps:          0       0       0       0       0
  4474 ;;      Totals:         4       0       0       0       0
  4475 ;;Total ram usage:        4 bytes
  4476 ;; Hardware stack levels used:    1
  4477 ;; Hardware stack levels required when called:    7
  4478 ;; This function calls:
  4479 ;;		_send_msg
  4480 ;; This function is called by:
  4481 ;;		_uart_recv_int_handler
  4482 ;; This function uses a non-reentrant model
  4483 ;;
  4484                           
  4485                           	psect	text27
  4486  00197E                     __ptext27:
  4487                           	opt stack 0
  4488  00197E                     _ToMainLow_sendmsg:
  4489                           	opt stack 17
  4490                           
  4491                           ;messages.c: 109: return (send_msg(&ToMainLow_MQ, length, msgtype, data));
  4492                           ;	Return value of _ToMainLow_sendmsg is never used
  4493                           
  4494                           ;incstack = 0
  4495                           ;incstack = 0
  4496  00197E  0101               	movlb	1	; () banked
  4497  001980  0E01               	movlw	high _ToMainLow_MQ
  4498  001982  6E0C               	movwf	?_send_msg+1,c
  4499  001984  0101               	movlb	1	; () banked
  4500  001986  0EA2               	movlw	low _ToMainLow_MQ
  4501  001988  6E0B               	movwf	?_send_msg,c
  4502  00198A  C017  F00D         	movff	ToMainLow_sendmsg@length,?_send_msg+2
  4503  00198E  C018  F00E         	movff	ToMainLow_sendmsg@msgtype,?_send_msg+3
  4504  001992  C019  F00F         	movff	ToMainLow_sendmsg@data,?_send_msg+4
  4505  001996  C01A  F010         	movff	ToMainLow_sendmsg@data+1,?_send_msg+5
  4506  00199A  EC9D  F008         	call	_send_msg	;wreg free
  4507  00199E  0012               	return	
  4508  0019A0                     __end_of_ToMainLow_sendmsg:
  4509                           	opt stack 0
  4510                           pclatu	equ	0xFFB
  4511                           pclath	equ	0xFFA
  4512                           tblptru	equ	0xFF8
  4513                           tblptrh	equ	0xFF7
  4514                           tblptrl	equ	0xFF6
  4515                           tablat	equ	0xFF5
  4516                           prodh	equ	0xFF4
  4517                           prodl	equ	0xFF3
  4518                           intcon	equ	0xFF2
  4519                           postinc0	equ	0xFEE
  4520                           fsr0h	equ	0xFEA
  4521                           fsr0l	equ	0xFE9
  4522                           wreg	equ	0xFE8
  4523                           indf1	equ	0xFE7
  4524                           postdec1	equ	0xFE5
  4525                           fsr1h	equ	0xFE2
  4526                           fsr1l	equ	0xFE1
  4527                           bsr	equ	0xFE0
  4528                           indf2	equ	0xFDF
  4529                           postinc2	equ	0xFDE
  4530                           postdec2	equ	0xFDD
  4531                           fsr2h	equ	0xFDA
  4532                           fsr2l	equ	0xFD9
  4533                           status	equ	0xFD8
  4534                           
  4535 ;; *************** function _send_msg *****************
  4536 ;; Defined at:
  4537 ;;		line 24 in file "../src/messages.c"
  4538 ;; Parameters:    Size  Location     Type
  4539 ;;  qptr            2   10[COMRAM] PTR struct __msg_queue
  4540 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4541 ;;  length          1   12[COMRAM] unsigned char 
  4542 ;;  msgtype         1   13[COMRAM] unsigned char 
  4543 ;;  data            2   14[COMRAM] PTR void 
  4544 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), main@ic(28), 
  4545 ;; Auto vars:     Size  Location     Type
  4546 ;;  qmsg            2   20[COMRAM] PTR struct __msg
  4547 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4548 ;;  tlength         2   17[COMRAM] unsigned int 
  4549 ;;  slot            1   19[COMRAM] unsigned char 
  4550 ;; Return value:  Size  Location     Type
  4551 ;;                  1    wreg      char 
  4552 ;; Registers used:
  4553 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4554 ;; Tracked objects:
  4555 ;;		On entry : 0/0
  4556 ;;		On exit  : 0/0
  4557 ;;		Unchanged: 0/0
  4558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4559 ;;      Params:         6       0       0       0       0
  4560 ;;      Locals:         5       0       0       0       0
  4561 ;;      Temps:          1       0       0       0       0
  4562 ;;      Totals:        12       0       0       0       0
  4563 ;;Total ram usage:       12 bytes
  4564 ;; Hardware stack levels used:    1
  4565 ;; Hardware stack levels required when called:    6
  4566 ;; This function calls:
  4567 ;;		i1_memcpy
  4568 ;; This function is called by:
  4569 ;;		_ToMainLow_sendmsg
  4570 ;;		_FromMainLow_sendmsg
  4571 ;;		_FromMainHigh_sendmsg
  4572 ;; This function uses a non-reentrant model
  4573 ;;
  4574                           
  4575                           	psect	text28
  4576  00113A                     __ptext28:
  4577                           	opt stack 0
  4578  00113A                     _send_msg:
  4579                           	opt stack 17
  4580                           
  4581                           ;messages.c: 25: unsigned char slot;
  4582                           ;messages.c: 27: msg *qmsg;
  4583                           ;messages.c: 28: size_t tlength = length;
  4584                           
  4585                           ;incstack = 0
  4586                           ;incstack = 0
  4587  00113A  C00D  F012         	movff	send_msg@length,send_msg@tlength
  4588  00113E  6A13               	clrf	send_msg@tlength+1,c
  4589                           
  4590                           ;messages.c: 38: slot = qptr->cur_write_ind;
  4591  001140  EE20 F034          	lfsr	2,52
  4592  001144  500B               	movf	send_msg@qptr,w,c
  4593  001146  26D9               	addwf	fsr2l,f,c
  4594  001148  500C               	movf	send_msg@qptr+1,w,c
  4595  00114A  22DA               	addwfc	fsr2h,f,c
  4596  00114C  50DF               	movf	indf2,w,c
  4597  00114E  6E14               	movwf	send_msg@slot,c
  4598                           
  4599                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  4600  001150  5014               	movf	send_msg@slot,w,c
  4601  001152  0D0D               	mullw	13
  4602  001154  50F3               	movf	prodl,w,c
  4603  001156  240B               	addwf	send_msg@qptr,w,c
  4604  001158  6E15               	movwf	send_msg@qmsg,c
  4605  00115A  50F4               	movf	prodh,w,c
  4606  00115C  200C               	addwfc	send_msg@qptr+1,w,c
  4607  00115E  6E16               	movwf	send_msg@qmsg+1,c
  4608                           
  4609                           ;messages.c: 41: if (qmsg->full != 0) {
  4610  001160  C015  FFD9         	movff	send_msg@qmsg,fsr2l
  4611  001164  C016  FFDA         	movff	send_msg@qmsg+1,fsr2h
  4612  001168  50DF               	movf	indf2,w,c
  4613  00116A  B4D8               	btfsc	status,2,c
  4614  00116C  D002               	goto	i1l3338
  4615                           
  4616                           ;messages.c: 42: return (-1);
  4617  00116E  0EFF               	movlw	255
  4618  001170  0012               	return	
  4619  001172                     i1l3338:
  4620                           
  4621                           ;messages.c: 43: }
  4622                           ;messages.c: 46: qmsg->length = length;
  4623  001172  EE20 F001          	lfsr	2,1
  4624  001176  5015               	movf	send_msg@qmsg,w,c
  4625  001178  26D9               	addwf	fsr2l,f,c
  4626  00117A  5016               	movf	send_msg@qmsg+1,w,c
  4627  00117C  22DA               	addwfc	fsr2h,f,c
  4628  00117E  C00D  FFDF         	movff	send_msg@length,indf2
  4629                           
  4630                           ;messages.c: 47: qmsg->msgtype = msgtype;
  4631  001182  EE20 F002          	lfsr	2,2
  4632  001186  5015               	movf	send_msg@qmsg,w,c
  4633  001188  26D9               	addwf	fsr2l,f,c
  4634  00118A  5016               	movf	send_msg@qmsg+1,w,c
  4635  00118C  22DA               	addwfc	fsr2h,f,c
  4636  00118E  C00E  FFDF         	movff	send_msg@msgtype,indf2
  4637                           
  4638                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  4639  001192  0E03               	movlw	3
  4640  001194  2415               	addwf	send_msg@qmsg,w,c
  4641  001196  6E01               	movwf	?i1_memcpy,c
  4642  001198  0E00               	movlw	0
  4643  00119A  2016               	addwfc	send_msg@qmsg+1,w,c
  4644  00119C  6E02               	movwf	?i1_memcpy+1,c
  4645  00119E  C00F  F003         	movff	send_msg@data,?i1_memcpy+2
  4646  0011A2  C010  F004         	movff	send_msg@data+1,?i1_memcpy+3
  4647  0011A6  C012  F005         	movff	send_msg@tlength,?i1_memcpy+4
  4648  0011AA  C013  F006         	movff	send_msg@tlength+1,?i1_memcpy+5
  4649  0011AE  EC7F  F00B         	call	i1_memcpy	;wreg free
  4650                           
  4651                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  4652  0011B2  EE20 F034          	lfsr	2,52
  4653  0011B6  500B               	movf	send_msg@qptr,w,c
  4654  0011B8  26D9               	addwf	fsr2l,f,c
  4655  0011BA  500C               	movf	send_msg@qptr+1,w,c
  4656  0011BC  22DA               	addwfc	fsr2h,f,c
  4657  0011BE  EE10 F034          	lfsr	1,52
  4658  0011C2  500B               	movf	send_msg@qptr,w,c
  4659  0011C4  26E1               	addwf	fsr1l,f,c
  4660  0011C6  500C               	movf	send_msg@qptr+1,w,c
  4661  0011C8  22E2               	addwfc	fsr1h,f,c
  4662  0011CA  50E7               	movf	indf1,w,c
  4663  0011CC  6E11               	movwf	??_send_msg& (0+255),c
  4664  0011CE  2811               	incf	??_send_msg,w,c
  4665  0011D0  0B03               	andlw	3
  4666  0011D2  6EDF               	movwf	indf2,c
  4667                           
  4668                           ;messages.c: 59: qmsg->full = 1;
  4669  0011D4  C015  FFD9         	movff	send_msg@qmsg,fsr2l
  4670  0011D8  C016  FFDA         	movff	send_msg@qmsg+1,fsr2h
  4671  0011DC  0E01               	movlw	1
  4672  0011DE  6EDF               	movwf	indf2,c
  4673                           
  4674                           ;messages.c: 60: return (1);
  4675  0011E0  0E01               	movlw	1
  4676  0011E2  0012               	return	
  4677  0011E4                     __end_of_send_msg:
  4678                           	opt stack 0
  4679                           pclatu	equ	0xFFB
  4680                           pclath	equ	0xFFA
  4681                           tblptru	equ	0xFF8
  4682                           tblptrh	equ	0xFF7
  4683                           tblptrl	equ	0xFF6
  4684                           tablat	equ	0xFF5
  4685                           prodh	equ	0xFF4
  4686                           prodl	equ	0xFF3
  4687                           intcon	equ	0xFF2
  4688                           postinc0	equ	0xFEE
  4689                           fsr0h	equ	0xFEA
  4690                           fsr0l	equ	0xFE9
  4691                           wreg	equ	0xFE8
  4692                           indf1	equ	0xFE7
  4693                           postdec1	equ	0xFE5
  4694                           fsr1h	equ	0xFE2
  4695                           fsr1l	equ	0xFE1
  4696                           bsr	equ	0xFE0
  4697                           indf2	equ	0xFDF
  4698                           postinc2	equ	0xFDE
  4699                           postdec2	equ	0xFDD
  4700                           fsr2h	equ	0xFDA
  4701                           fsr2l	equ	0xFD9
  4702                           status	equ	0xFD8
  4703                           
  4704 ;; *************** function i1_memcpy *****************
  4705 ;; Defined at:
  4706 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\memcpy.c"
  4707 ;; Parameters:    Size  Location     Type
  4708 ;;  memcpy          2    0[COMRAM] PTR void 
  4709 ;;		 -> timer0_int_handler@val(2), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  4710 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), 
  4711 ;;  memcpy          2    2[COMRAM] PTR const void 
  4712 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), 
  4713 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), main@ic(28), 
  4714 ;;  memcpy          2    4[COMRAM] unsigned int 
  4715 ;; Auto vars:     Size  Location     Type
  4716 ;;  memcpy          2    8[COMRAM] PTR const unsigned char 
  4717 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), 
  4718 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), main@ic(28), 
  4719 ;;  memcpy          2    6[COMRAM] PTR unsigned char 
  4720 ;;		 -> timer0_int_handler@val(2), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  4721 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), 
  4722 ;; Return value:  Size  Location     Type
  4723 ;;                  2    0[COMRAM] PTR void 
  4724 ;; Registers used:
  4725 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4726 ;; Tracked objects:
  4727 ;;		On entry : 0/0
  4728 ;;		On exit  : 0/0
  4729 ;;		Unchanged: 0/0
  4730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4731 ;;      Params:         6       0       0       0       0
  4732 ;;      Locals:         4       0       0       0       0
  4733 ;;      Temps:          0       0       0       0       0
  4734 ;;      Totals:        10       0       0       0       0
  4735 ;;Total ram usage:       10 bytes
  4736 ;; Hardware stack levels used:    1
  4737 ;; Hardware stack levels required when called:    5
  4738 ;; This function calls:
  4739 ;;		Nothing
  4740 ;; This function is called by:
  4741 ;;		_send_msg
  4742 ;; This function uses a non-reentrant model
  4743 ;;
  4744                           
  4745                           	psect	text29
  4746  0016FE                     __ptext29:
  4747                           	opt stack 0
  4748  0016FE                     i1_memcpy:
  4749                           	opt stack 17
  4750                           
  4751                           ;incstack = 0
  4752                           ;incstack = 0
  4753  0016FE  C003  F009         	movff	i1memcpy@s1,i1memcpy@s
  4754  001702  C004  F00A         	movff	i1memcpy@s1+1,i1memcpy@s+1
  4755  001706  C001  F007         	movff	i1memcpy@d1,i1memcpy@d
  4756  00170A  C002  F008         	movff	i1memcpy@d1+1,i1memcpy@d+1
  4757  00170E  D00E               	goto	i1l3314
  4758  001710                     i1l3308:
  4759  001710  C009  FFD9         	movff	i1memcpy@s,fsr2l
  4760  001714  C00A  FFDA         	movff	i1memcpy@s+1,fsr2h
  4761  001718  C007  FFE1         	movff	i1memcpy@d,fsr1l
  4762  00171C  C008  FFE2         	movff	i1memcpy@d+1,fsr1h
  4763  001720  CFDF FFE7          	movff	indf2,indf1
  4764  001724  4A09               	infsnz	i1memcpy@s,f,c
  4765  001726  2A0A               	incf	i1memcpy@s+1,f,c
  4766  001728  4A07               	infsnz	i1memcpy@d,f,c
  4767  00172A  2A08               	incf	i1memcpy@d+1,f,c
  4768  00172C                     i1l3314:
  4769  00172C  0605               	decf	i1memcpy@n,f,c
  4770  00172E  A0D8               	btfss	status,0,c
  4771  001730  0606               	decf	i1memcpy@n+1,f,c
  4772  001732  2805               	incf	i1memcpy@n& (0+255),w,c
  4773  001734  B4D8               	btfsc	status,2,c
  4774  001736  2806               	incf	(i1memcpy@n+1)& (0+255),w,c
  4775  001738  B4D8               	btfsc	status,2,c
  4776                           
  4777                           ;	Return value of i1_memcpy is never used
  4778  00173A  0012               	return	
  4779  00173C  D7E9               	goto	i1l3308
  4780  00173E                     __end_ofi1_memcpy:
  4781                           	opt stack 0
  4782                           pclatu	equ	0xFFB
  4783                           pclath	equ	0xFFA
  4784                           tblptru	equ	0xFF8
  4785                           tblptrh	equ	0xFF7
  4786                           tblptrl	equ	0xFF6
  4787                           tablat	equ	0xFF5
  4788                           prodh	equ	0xFF4
  4789                           prodl	equ	0xFF3
  4790                           intcon	equ	0xFF2
  4791                           postinc0	equ	0xFEE
  4792                           fsr0h	equ	0xFEA
  4793                           fsr0l	equ	0xFE9
  4794                           wreg	equ	0xFE8
  4795                           indf1	equ	0xFE7
  4796                           postdec1	equ	0xFE5
  4797                           fsr1h	equ	0xFE2
  4798                           fsr1l	equ	0xFE1
  4799                           bsr	equ	0xFE0
  4800                           indf2	equ	0xFDF
  4801                           postinc2	equ	0xFDE
  4802                           postdec2	equ	0xFDD
  4803                           fsr2h	equ	0xFDA
  4804                           fsr2l	equ	0xFD9
  4805                           status	equ	0xFD8
  4806                           
  4807 ;; *************** function _timer1_int_handler *****************
  4808 ;; Defined at:
  4809 ;;		line 34 in file "../src/user_interrupts.c"
  4810 ;; Parameters:    Size  Location     Type
  4811 ;;		None
  4812 ;; Auto vars:     Size  Location     Type
  4813 ;;		None
  4814 ;; Return value:  Size  Location     Type
  4815 ;;		None               void
  4816 ;; Registers used:
  4817 ;;		wreg, status,2, cstack
  4818 ;; Tracked objects:
  4819 ;;		On entry : 0/0
  4820 ;;		On exit  : 0/0
  4821 ;;		Unchanged: 0/0
  4822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4823 ;;      Params:         0       0       0       0       0
  4824 ;;      Locals:         0       0       0       0       0
  4825 ;;      Temps:          0       0       0       0       0
  4826 ;;      Totals:         0       0       0       0       0
  4827 ;;Total ram usage:        0 bytes
  4828 ;; Hardware stack levels used:    1
  4829 ;; Hardware stack levels required when called:    6
  4830 ;; This function calls:
  4831 ;;		_ConvertADC
  4832 ;;		_WriteTimer1
  4833 ;; This function is called by:
  4834 ;;		_InterruptHandlerLow
  4835 ;; This function uses a non-reentrant model
  4836 ;;
  4837                           
  4838                           	psect	text30
  4839  0019F4                     __ptext30:
  4840                           	opt stack 0
  4841  0019F4                     _timer1_int_handler:
  4842                           	opt stack 19
  4843                           
  4844                           ;user_interrupts.c: 42: ConvertADC();
  4845                           
  4846                           ;incstack = 0
  4847                           ;incstack = 0
  4848  0019F4  EC37  F00D         	call	_ConvertADC	;wreg free
  4849                           
  4850                           ;user_interrupts.c: 44: WriteTimer1(65086);
  4851  0019F8  0EFE               	movlw	254
  4852  0019FA  6E02               	movwf	?_WriteTimer1+1,c
  4853  0019FC  0E3E               	movlw	62
  4854  0019FE  6E01               	movwf	?_WriteTimer1,c
  4855  001A00  EC03  F00D         	call	_WriteTimer1	;wreg free
  4856  001A04  0012               	return	
  4857  001A06                     __end_of_timer1_int_handler:
  4858                           	opt stack 0
  4859                           pclatu	equ	0xFFB
  4860                           pclath	equ	0xFFA
  4861                           tblptru	equ	0xFF8
  4862                           tblptrh	equ	0xFF7
  4863                           tblptrl	equ	0xFF6
  4864                           tablat	equ	0xFF5
  4865                           prodh	equ	0xFF4
  4866                           prodl	equ	0xFF3
  4867                           intcon	equ	0xFF2
  4868                           postinc0	equ	0xFEE
  4869                           fsr0h	equ	0xFEA
  4870                           fsr0l	equ	0xFE9
  4871                           wreg	equ	0xFE8
  4872                           indf1	equ	0xFE7
  4873                           postdec1	equ	0xFE5
  4874                           fsr1h	equ	0xFE2
  4875                           fsr1l	equ	0xFE1
  4876                           bsr	equ	0xFE0
  4877                           indf2	equ	0xFDF
  4878                           postinc2	equ	0xFDE
  4879                           postdec2	equ	0xFDD
  4880                           fsr2h	equ	0xFDA
  4881                           fsr2l	equ	0xFD9
  4882                           status	equ	0xFD8
  4883                           
  4884 ;; *************** function _WriteTimer1 *****************
  4885 ;; Defined at:
  4886 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic18\plib\Timers\t1write.c"
  4887 ;; Parameters:    Size  Location     Type
  4888 ;;  timer1          2    0[COMRAM] unsigned int 
  4889 ;; Auto vars:     Size  Location     Type
  4890 ;;  timer           2    2[COMRAM] struct Timers
  4891 ;; Return value:  Size  Location     Type
  4892 ;;		None               void
  4893 ;; Registers used:
  4894 ;;		None
  4895 ;; Tracked objects:
  4896 ;;		On entry : 0/0
  4897 ;;		On exit  : 0/0
  4898 ;;		Unchanged: 0/0
  4899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4900 ;;      Params:         2       0       0       0       0
  4901 ;;      Locals:         2       0       0       0       0
  4902 ;;      Temps:          0       0       0       0       0
  4903 ;;      Totals:         4       0       0       0       0
  4904 ;;Total ram usage:        4 bytes
  4905 ;; Hardware stack levels used:    1
  4906 ;; Hardware stack levels required when called:    5
  4907 ;; This function calls:
  4908 ;;		Nothing
  4909 ;; This function is called by:
  4910 ;;		_timer1_int_handler
  4911 ;; This function uses a non-reentrant model
  4912 ;;
  4913                           
  4914                           	psect	text31
  4915  001A06                     __ptext31:
  4916                           	opt stack 0
  4917  001A06                     _WriteTimer1:
  4918                           	opt stack 19
  4919                           
  4920                           ;incstack = 0
  4921                           ;incstack = 0
  4922  001A06  C001  F003         	movff	WriteTimer1@timer1,WriteTimer1@timer
  4923  001A0A  C002  F004         	movff	WriteTimer1@timer1+1,WriteTimer1@timer+1
  4924  001A0E  C004  FFCF         	movff	WriteTimer1@timer+1,4047	;volatile
  4925  001A12  C003  FFCE         	movff	WriteTimer1@timer,4046	;volatile
  4926  001A16  0012               	return	
  4927  001A18                     __end_of_WriteTimer1:
  4928                           	opt stack 0
  4929                           pclatu	equ	0xFFB
  4930                           pclath	equ	0xFFA
  4931                           tblptru	equ	0xFF8
  4932                           tblptrh	equ	0xFF7
  4933                           tblptrl	equ	0xFF6
  4934                           tablat	equ	0xFF5
  4935                           prodh	equ	0xFF4
  4936                           prodl	equ	0xFF3
  4937                           intcon	equ	0xFF2
  4938                           postinc0	equ	0xFEE
  4939                           fsr0h	equ	0xFEA
  4940                           fsr0l	equ	0xFE9
  4941                           wreg	equ	0xFE8
  4942                           indf1	equ	0xFE7
  4943                           postdec1	equ	0xFE5
  4944                           fsr1h	equ	0xFE2
  4945                           fsr1l	equ	0xFE1
  4946                           bsr	equ	0xFE0
  4947                           indf2	equ	0xFDF
  4948                           postinc2	equ	0xFDE
  4949                           postdec2	equ	0xFDD
  4950                           fsr2h	equ	0xFDA
  4951                           fsr2l	equ	0xFD9
  4952                           status	equ	0xFD8
  4953                           
  4954 ;; *************** function _ConvertADC *****************
  4955 ;; Defined at:
  4956 ;;		line 23 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic18\plib\ADC\adcconv.c"
  4957 ;; Parameters:    Size  Location     Type
  4958 ;;		None
  4959 ;; Auto vars:     Size  Location     Type
  4960 ;;		None
  4961 ;; Return value:  Size  Location     Type
  4962 ;;		None               void
  4963 ;; Registers used:
  4964 ;;		None
  4965 ;; Tracked objects:
  4966 ;;		On entry : 0/0
  4967 ;;		On exit  : 0/0
  4968 ;;		Unchanged: 0/0
  4969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4970 ;;      Params:         0       0       0       0       0
  4971 ;;      Locals:         0       0       0       0       0
  4972 ;;      Temps:          0       0       0       0       0
  4973 ;;      Totals:         0       0       0       0       0
  4974 ;;Total ram usage:        0 bytes
  4975 ;; Hardware stack levels used:    1
  4976 ;; Hardware stack levels required when called:    5
  4977 ;; This function calls:
  4978 ;;		Nothing
  4979 ;; This function is called by:
  4980 ;;		_timer1_int_handler
  4981 ;; This function uses a non-reentrant model
  4982 ;;
  4983                           
  4984                           	psect	text32
  4985  001A6E                     __ptext32:
  4986                           	opt stack 0
  4987  001A6E                     _ConvertADC:
  4988                           	opt stack 19
  4989                           
  4990                           ;incstack = 0
  4991                           ;incstack = 0
  4992  001A6E  82C2               	bsf	4034,1,c	;volatile
  4993  001A70  0012               	return	
  4994  001A72                     __end_of_ConvertADC:
  4995                           	opt stack 0
  4996                           pclatu	equ	0xFFB
  4997                           pclath	equ	0xFFA
  4998                           tblptru	equ	0xFF8
  4999                           tblptrh	equ	0xFF7
  5000                           tblptrl	equ	0xFF6
  5001                           tablat	equ	0xFF5
  5002                           prodh	equ	0xFF4
  5003                           prodl	equ	0xFF3
  5004                           intcon	equ	0xFF2
  5005                           postinc0	equ	0xFEE
  5006                           fsr0h	equ	0xFEA
  5007                           fsr0l	equ	0xFE9
  5008                           wreg	equ	0xFE8
  5009                           indf1	equ	0xFE7
  5010                           postdec1	equ	0xFE5
  5011                           fsr1h	equ	0xFE2
  5012                           fsr1l	equ	0xFE1
  5013                           bsr	equ	0xFE0
  5014                           indf2	equ	0xFDF
  5015                           postinc2	equ	0xFDE
  5016                           postdec2	equ	0xFDD
  5017                           fsr2h	equ	0xFDA
  5018                           fsr2l	equ	0xFD9
  5019                           status	equ	0xFD8
  5020                           
  5021 ;; *************** function _InterruptHandlerHigh *****************
  5022 ;; Defined at:
  5023 ;;		line 83 in file "../src/interrupts.c"
  5024 ;; Parameters:    Size  Location     Type
  5025 ;;		None
  5026 ;; Auto vars:     Size  Location     Type
  5027 ;;		None
  5028 ;; Return value:  Size  Location     Type
  5029 ;;		None               void
  5030 ;; Registers used:
  5031 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  5032 ;; Tracked objects:
  5033 ;;		On entry : 0/0
  5034 ;;		On exit  : 0/0
  5035 ;;		Unchanged: 0/0
  5036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5037 ;;      Params:         0       0       0       0       0
  5038 ;;      Locals:         0       0       0       0       0
  5039 ;;      Temps:          0      14       0       0       0
  5040 ;;      Totals:         0      14       0       0       0
  5041 ;;Total ram usage:       14 bytes
  5042 ;; Hardware stack levels used:    1
  5043 ;; Hardware stack levels required when called:    4
  5044 ;; This function calls:
  5045 ;;		_i2c_int_handler
  5046 ;;		_timer0_int_handler
  5047 ;;		_adc_int_handler
  5048 ;;		_SleepIfOkay
  5049 ;; This function is called by:
  5050 ;;		Interrupt level 2
  5051 ;; This function uses a non-reentrant model
  5052 ;;
  5053                           
  5054                           	psect	intcode
  5055  000008                     __pintcode:
  5056                           	opt stack 0
  5057  000008                     _InterruptHandlerHigh:
  5058                           	opt stack 17
  5059                           
  5060                           ;incstack = 0
  5061  000008  CFFA F099          	movff	pclath,??_InterruptHandlerHigh
  5062  00000C  CFFB F09A          	movff	pclatu,??_InterruptHandlerHigh+1
  5063  000010  CFE9 F09B          	movff	fsr0l,??_InterruptHandlerHigh+2
  5064  000014  EF97  F009         	goto	int_func
  5065                           pclatu	equ	0xFFB
  5066                           pclath	equ	0xFFA
  5067                           tblptru	equ	0xFF8
  5068                           tblptrh	equ	0xFF7
  5069                           tblptrl	equ	0xFF6
  5070                           tablat	equ	0xFF5
  5071                           prodh	equ	0xFF4
  5072                           prodl	equ	0xFF3
  5073                           intcon	equ	0xFF2
  5074                           postinc0	equ	0xFEE
  5075                           fsr0h	equ	0xFEA
  5076                           fsr0l	equ	0xFE9
  5077                           wreg	equ	0xFE8
  5078                           indf1	equ	0xFE7
  5079                           postdec1	equ	0xFE5
  5080                           fsr1h	equ	0xFE2
  5081                           fsr1l	equ	0xFE1
  5082                           bsr	equ	0xFE0
  5083                           indf2	equ	0xFDF
  5084                           postinc2	equ	0xFDE
  5085                           postdec2	equ	0xFDD
  5086                           fsr2h	equ	0xFDA
  5087                           fsr2l	equ	0xFD9
  5088                           status	equ	0xFD8
  5089                           
  5090                           	psect	intcode_body
  5091  00132E                     __pintcode_body:
  5092                           	opt stack 17
  5093  00132E                     int_func:
  5094                           	opt stack 17
  5095  00132E  CFEA F09C          	movff	fsr0h,??_InterruptHandlerHigh+3
  5096  001332  CFE1 F09D          	movff	fsr1l,??_InterruptHandlerHigh+4
  5097  001336  CFE2 F09E          	movff	fsr1h,??_InterruptHandlerHigh+5
  5098  00133A  CFD9 F09F          	movff	fsr2l,??_InterruptHandlerHigh+6
  5099  00133E  CFDA F0A0          	movff	fsr2h,??_InterruptHandlerHigh+7
  5100  001342  CFF3 F0A1          	movff	prodl,??_InterruptHandlerHigh+8
  5101  001346  CFF4 F0A2          	movff	prodh,??_InterruptHandlerHigh+9
  5102  00134A  CFF6 F0A3          	movff	tblptrl,??_InterruptHandlerHigh+10
  5103  00134E  CFF7 F0A4          	movff	tblptrh,??_InterruptHandlerHigh+11
  5104  001352  CFF8 F0A5          	movff	tblptru,??_InterruptHandlerHigh+12
  5105  001356  CFF5 F0A6          	movff	tablat,??_InterruptHandlerHigh+13
  5106  00135A                     
  5107                           ;interrupts.c: 88: if (PIR1bits.SSPIF) {
  5108  00135A  A69E               	btfss	3998,3,c	;volatile
  5109  00135C  D001               	goto	i2u177_41
  5110  00135E  D001               	goto	i2u177_40
  5111  001360                     i2u177_41:
  5112  001360  D004               	goto	i2l2752
  5113  001362                     i2u177_40:
  5114  001362                     
  5115                           ;interrupts.c: 90: PIR1bits.SSPIF = 0;
  5116  001362  969E               	bcf	3998,3,c	;volatile
  5117  001364                     
  5118                           ;interrupts.c: 92: i2c_int_handler();
  5119  001364  EC63  F000         	call	_i2c_int_handler	;wreg free
  5120  001368  D000               	goto	i2l2752
  5121  00136A                     i2l2752:
  5122                           
  5123                           ;interrupts.c: 93: }
  5124                           ;interrupts.c: 96: if (INTCONbits.TMR0IF) {
  5125  00136A  A4F2               	btfss	intcon,2,c	;volatile
  5126  00136C  D001               	goto	i2u178_41
  5127  00136E  D001               	goto	i2u178_40
  5128  001370                     i2u178_41:
  5129  001370  D004               	goto	i2l2758
  5130  001372                     i2u178_40:
  5131  001372                     
  5132                           ;interrupts.c: 97: INTCONbits.TMR0IF = 0;
  5133  001372  94F2               	bcf	intcon,2,c	;volatile
  5134  001374                     
  5135                           ;interrupts.c: 99: timer0_int_handler();
  5136  001374  ECF2  F008         	call	_timer0_int_handler	;wreg free
  5137  001378  D000               	goto	i2l2758
  5138  00137A                     i2l2758:
  5139                           
  5140                           ;interrupts.c: 100: }
  5141                           ;interrupts.c: 102: if(PIR1bits.ADIF == 1)
  5142  00137A  AC9E               	btfss	3998,6,c	;volatile
  5143  00137C  D001               	goto	i2u179_41
  5144  00137E  D001               	goto	i2u179_40
  5145  001380                     i2u179_41:
  5146  001380  D004               	goto	i2l2764
  5147  001382                     i2u179_40:
  5148  001382                     
  5149                           ;interrupts.c: 103: {
  5150                           ;interrupts.c: 104: PIR1bits.ADIF = 0;
  5151  001382  9C9E               	bcf	3998,6,c	;volatile
  5152  001384                     
  5153                           ;interrupts.c: 105: adc_int_handler();
  5154  001384  EC13  F00B         	call	_adc_int_handler	;wreg free
  5155  001388  D000               	goto	i2l2764
  5156  00138A                     i2l2764:
  5157                           
  5158                           ;interrupts.c: 107: }
  5159                           ;interrupts.c: 115: SleepIfOkay();
  5160  00138A  ECEC  F00A         	call	_SleepIfOkay	;wreg free
  5161  00138E  C0A6  FFF5         	movff	??_InterruptHandlerHigh+13,tablat
  5162  001392  C0A5  FFF8         	movff	??_InterruptHandlerHigh+12,tblptru
  5163  001396  C0A4  FFF7         	movff	??_InterruptHandlerHigh+11,tblptrh
  5164  00139A  C0A3  FFF6         	movff	??_InterruptHandlerHigh+10,tblptrl
  5165  00139E  C0A2  FFF4         	movff	??_InterruptHandlerHigh+9,prodh
  5166  0013A2  C0A1  FFF3         	movff	??_InterruptHandlerHigh+8,prodl
  5167  0013A6  C0A0  FFDA         	movff	??_InterruptHandlerHigh+7,fsr2h
  5168  0013AA  C09F  FFD9         	movff	??_InterruptHandlerHigh+6,fsr2l
  5169  0013AE  C09E  FFE2         	movff	??_InterruptHandlerHigh+5,fsr1h
  5170  0013B2  C09D  FFE1         	movff	??_InterruptHandlerHigh+4,fsr1l
  5171  0013B6  C09C  FFEA         	movff	??_InterruptHandlerHigh+3,fsr0h
  5172  0013BA  C09B  FFE9         	movff	??_InterruptHandlerHigh+2,fsr0l
  5173  0013BE  C09A  FFFB         	movff	??_InterruptHandlerHigh+1,pclatu
  5174  0013C2  C099  FFFA         	movff	??_InterruptHandlerHigh,pclath
  5175  0013C6  0011               	retfie		f
  5176  0013C8                     __end_of_InterruptHandlerHigh:
  5177                           	opt stack 0
  5178                           pclatu	equ	0xFFB
  5179                           pclath	equ	0xFFA
  5180                           tblptru	equ	0xFF8
  5181                           tblptrh	equ	0xFF7
  5182                           tblptrl	equ	0xFF6
  5183                           tablat	equ	0xFF5
  5184                           prodh	equ	0xFF4
  5185                           prodl	equ	0xFF3
  5186                           intcon	equ	0xFF2
  5187                           postinc0	equ	0xFEE
  5188                           fsr0h	equ	0xFEA
  5189                           fsr0l	equ	0xFE9
  5190                           wreg	equ	0xFE8
  5191                           indf1	equ	0xFE7
  5192                           postdec1	equ	0xFE5
  5193                           fsr1h	equ	0xFE2
  5194                           fsr1l	equ	0xFE1
  5195                           bsr	equ	0xFE0
  5196                           indf2	equ	0xFDF
  5197                           postinc2	equ	0xFDE
  5198                           postdec2	equ	0xFDD
  5199                           fsr2h	equ	0xFDA
  5200                           fsr2l	equ	0xFD9
  5201                           status	equ	0xFD8
  5202                           
  5203 ;; *************** function _SleepIfOkay *****************
  5204 ;; Defined at:
  5205 ;;		line 228 in file "../src/messages.c"
  5206 ;; Parameters:    Size  Location     Type
  5207 ;;		None
  5208 ;; Auto vars:     Size  Location     Type
  5209 ;;		None
  5210 ;; Return value:  Size  Location     Type
  5211 ;;		None               void
  5212 ;; Registers used:
  5213 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5214 ;; Tracked objects:
  5215 ;;		On entry : 0/0
  5216 ;;		On exit  : 0/0
  5217 ;;		Unchanged: 0/0
  5218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5219 ;;      Params:         0       0       0       0       0
  5220 ;;      Locals:         0       0       0       0       0
  5221 ;;      Temps:          0       0       0       0       0
  5222 ;;      Totals:         0       0       0       0       0
  5223 ;;Total ram usage:        0 bytes
  5224 ;; Hardware stack levels used:    1
  5225 ;; Hardware stack levels required when called:    2
  5226 ;; This function calls:
  5227 ;;		_enter_sleep_mode
  5228 ;;		i2_in_high_int
  5229 ;;		i2_in_low_int
  5230 ;;		i2_check_msg
  5231 ;; This function is called by:
  5232 ;;		_InterruptHandlerHigh
  5233 ;; This function uses a non-reentrant model
  5234 ;;
  5235                           
  5236                           	psect	text34
  5237  0015D8                     __ptext34:
  5238                           	opt stack 0
  5239  0015D8                     _SleepIfOkay:
  5240                           	opt stack 18
  5241                           
  5242                           ;messages.c: 230: if (MQ_Main_Willing_to_block == 0) {
  5243                           
  5244                           ;incstack = 0
  5245                           ;incstack = 0
  5246  0015D8  6650               	tstfsz	_MQ_Main_Willing_to_block,c
  5247  0015DA  D001               	goto	i2l2192
  5248  0015DC  0012               	return	
  5249  0015DE                     i2l2192:
  5250                           
  5251                           ;messages.c: 232: }
  5252                           ;messages.c: 235: if (in_low_int()) {
  5253  0015DE  EC2E  F00C         	call	i2_in_low_int	;wreg free
  5254  0015E2  5031               	movf	?i2_in_low_int+1,w,c
  5255  0015E4  1030               	iorwf	?i2_in_low_int,w,c
  5256  0015E6  A4D8               	btfss	status,2,c
  5257  0015E8  0012               	return	
  5258                           
  5259                           ;messages.c: 237: }
  5260                           ;messages.c: 240: if (!in_high_int()) {
  5261                           
  5262                           ;messages.c: 236: return;
  5263  0015EA  EC1D  F00D         	call	i2_in_high_int	;wreg free
  5264  0015EE  502F               	movf	?i2_in_high_int+1,w,c
  5265  0015F0  102E               	iorwf	?i2_in_high_int,w,c
  5266  0015F2  B4D8               	btfsc	status,2,c
  5267  0015F4  0012               	return	
  5268                           
  5269                           ;messages.c: 242: }
  5270                           ;messages.c: 247: if (check_msg(&ToMainHigh_MQ)) {
  5271                           
  5272                           ;messages.c: 241: return;
  5273  0015F6  0101               	movlb	1	; () banked
  5274  0015F8  0E01               	movlw	high _ToMainHigh_MQ
  5275  0015FA  6E2F               	movwf	?i2_check_msg+1,c
  5276  0015FC  0101               	movlb	1	; () banked
  5277  0015FE  0E6C               	movlw	low _ToMainHigh_MQ
  5278  001600  6E2E               	movwf	?i2_check_msg,c
  5279  001602  ECAD  F00C         	call	i2_check_msg	;wreg free
  5280  001606  0900               	iorlw	0
  5281  001608  A4D8               	btfss	status,2,c
  5282  00160A  0012               	return	
  5283                           
  5284                           ;messages.c: 249: }
  5285                           ;messages.c: 250: if (check_msg(&ToMainLow_MQ)) {
  5286                           
  5287                           ;messages.c: 248: return;
  5288  00160C  0101               	movlb	1	; () banked
  5289  00160E  0E01               	movlw	high _ToMainLow_MQ
  5290  001610  6E2F               	movwf	?i2_check_msg+1,c
  5291  001612  0101               	movlb	1	; () banked
  5292  001614  0EA2               	movlw	low _ToMainLow_MQ
  5293  001616  6E2E               	movwf	?i2_check_msg,c
  5294  001618  ECAD  F00C         	call	i2_check_msg	;wreg free
  5295  00161C  0900               	iorlw	0
  5296  00161E  B4D8               	btfsc	status,2,c
  5297                           
  5298                           ;messages.c: 252: }
  5299                           ;messages.c: 253: enter_sleep_mode();
  5300                           
  5301                           ;messages.c: 251: return;
  5302  001620  EC31  F00D         	call	_enter_sleep_mode	;wreg free
  5303  001624  0012               	return	
  5304  001626                     __end_of_SleepIfOkay:
  5305                           	opt stack 0
  5306                           pclatu	equ	0xFFB
  5307                           pclath	equ	0xFFA
  5308                           tblptru	equ	0xFF8
  5309                           tblptrh	equ	0xFF7
  5310                           tblptrl	equ	0xFF6
  5311                           tablat	equ	0xFF5
  5312                           prodh	equ	0xFF4
  5313                           prodl	equ	0xFF3
  5314                           intcon	equ	0xFF2
  5315                           postinc0	equ	0xFEE
  5316                           fsr0h	equ	0xFEA
  5317                           fsr0l	equ	0xFE9
  5318                           wreg	equ	0xFE8
  5319                           indf1	equ	0xFE7
  5320                           postdec1	equ	0xFE5
  5321                           fsr1h	equ	0xFE2
  5322                           fsr1l	equ	0xFE1
  5323                           bsr	equ	0xFE0
  5324                           indf2	equ	0xFDF
  5325                           postinc2	equ	0xFDE
  5326                           postdec2	equ	0xFDD
  5327                           fsr2h	equ	0xFDA
  5328                           fsr2l	equ	0xFD9
  5329                           status	equ	0xFD8
  5330                           
  5331 ;; *************** function i2_check_msg *****************
  5332 ;; Defined at:
  5333 ;;		line 222 in file "../src/messages.c"
  5334 ;; Parameters:    Size  Location     Type
  5335 ;;  check_msg       2   45[COMRAM] PTR struct __msg_queue
  5336 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5337 ;; Auto vars:     Size  Location     Type
  5338 ;;		None
  5339 ;; Return value:  Size  Location     Type
  5340 ;;                  1    wreg      unsigned char 
  5341 ;; Registers used:
  5342 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5343 ;; Tracked objects:
  5344 ;;		On entry : 0/0
  5345 ;;		On exit  : 0/0
  5346 ;;		Unchanged: 0/0
  5347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5348 ;;      Params:         2       0       0       0       0
  5349 ;;      Locals:         0       0       0       0       0
  5350 ;;      Temps:          1       0       0       0       0
  5351 ;;      Totals:         3       0       0       0       0
  5352 ;;Total ram usage:        3 bytes
  5353 ;; Hardware stack levels used:    1
  5354 ;; This function calls:
  5355 ;;		Nothing
  5356 ;; This function is called by:
  5357 ;;		_SleepIfOkay
  5358 ;; This function uses a non-reentrant model
  5359 ;;
  5360                           
  5361                           	psect	text35
  5362  00195A                     __ptext35:
  5363                           	opt stack 0
  5364  00195A                     i2_check_msg:
  5365                           	opt stack 19
  5366                           
  5367                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
  5368                           
  5369                           ;incstack = 0
  5370                           ;incstack = 0
  5371  00195A  EE20 F035          	lfsr	2,53
  5372  00195E  502E               	movf	i2check_msg@qptr,w,c
  5373  001960  26D9               	addwf	fsr2l,f,c
  5374  001962  502F               	movf	i2check_msg@qptr+1,w,c
  5375  001964  22DA               	addwfc	fsr2h,f,c
  5376  001966  50DF               	movf	indf2,w,c
  5377  001968  6E30               	movwf	??i2_check_msg& (0+255),c
  5378  00196A  5030               	movf	??i2_check_msg,w,c
  5379  00196C  0D0D               	mullw	13
  5380  00196E  50F3               	movf	prodl,w,c
  5381  001970  242E               	addwf	i2check_msg@qptr,w,c
  5382  001972  6ED9               	movwf	fsr2l,c
  5383  001974  50F4               	movf	prodh,w,c
  5384  001976  202F               	addwfc	i2check_msg@qptr+1,w,c
  5385  001978  6EDA               	movwf	fsr2h,c
  5386  00197A  50DF               	movf	indf2,w,c
  5387  00197C  0012               	return	
  5388  00197E                     __end_ofi2_check_msg:
  5389                           	opt stack 0
  5390                           pclatu	equ	0xFFB
  5391                           pclath	equ	0xFFA
  5392                           tblptru	equ	0xFF8
  5393                           tblptrh	equ	0xFF7
  5394                           tblptrl	equ	0xFF6
  5395                           tablat	equ	0xFF5
  5396                           prodh	equ	0xFF4
  5397                           prodl	equ	0xFF3
  5398                           intcon	equ	0xFF2
  5399                           postinc0	equ	0xFEE
  5400                           fsr0h	equ	0xFEA
  5401                           fsr0l	equ	0xFE9
  5402                           wreg	equ	0xFE8
  5403                           indf1	equ	0xFE7
  5404                           postdec1	equ	0xFE5
  5405                           fsr1h	equ	0xFE2
  5406                           fsr1l	equ	0xFE1
  5407                           bsr	equ	0xFE0
  5408                           indf2	equ	0xFDF
  5409                           postinc2	equ	0xFDE
  5410                           postdec2	equ	0xFDD
  5411                           fsr2h	equ	0xFDA
  5412                           fsr2l	equ	0xFD9
  5413                           status	equ	0xFD8
  5414                           
  5415 ;; *************** function i2_in_low_int *****************
  5416 ;; Defined at:
  5417 ;;		line 30 in file "../src/interrupts.c"
  5418 ;; Parameters:    Size  Location     Type
  5419 ;;		None
  5420 ;; Auto vars:     Size  Location     Type
  5421 ;;		None
  5422 ;; Return value:  Size  Location     Type
  5423 ;;                  2   47[COMRAM] int 
  5424 ;; Registers used:
  5425 ;;		wreg, status,2, status,0, cstack
  5426 ;; Tracked objects:
  5427 ;;		On entry : 0/0
  5428 ;;		On exit  : 0/0
  5429 ;;		Unchanged: 0/0
  5430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5431 ;;      Params:         2       0       0       0       0
  5432 ;;      Locals:         0       0       0       0       0
  5433 ;;      Temps:          0       0       0       0       0
  5434 ;;      Totals:         2       0       0       0       0
  5435 ;;Total ram usage:        2 bytes
  5436 ;; Hardware stack levels used:    1
  5437 ;; Hardware stack levels required when called:    1
  5438 ;; This function calls:
  5439 ;;		i2_in_high_int
  5440 ;; This function is called by:
  5441 ;;		_SleepIfOkay
  5442 ;; This function uses a non-reentrant model
  5443 ;;
  5444                           
  5445                           	psect	text36
  5446  00185C                     __ptext36:
  5447                           	opt stack 0
  5448  00185C                     i2_in_low_int:
  5449                           	opt stack 18
  5450                           
  5451                           ;interrupts.c: 31: if (INTCONbits.GIEL == 1) {
  5452                           
  5453                           ;incstack = 0
  5454                           ;incstack = 0
  5455  00185C  ACF2               	btfss	intcon,6,c	;volatile
  5456  00185E  D005               	goto	i2l2554
  5457                           
  5458                           ;interrupts.c: 32: return (0);
  5459  001860  0E00               	movlw	0
  5460  001862  6E31               	movwf	?i2_in_low_int+1,c
  5461  001864  0E00               	movlw	0
  5462  001866  6E30               	movwf	?i2_in_low_int,c
  5463  001868  0012               	return	
  5464  00186A                     i2l2554:
  5465  00186A  EC1D  F00D         	call	i2_in_high_int	;wreg free
  5466  00186E  502F               	movf	?i2_in_high_int+1,w,c
  5467  001870  102E               	iorwf	?i2_in_high_int,w,c
  5468  001872  B4D8               	btfsc	status,2,c
  5469  001874  D005               	goto	i2l2562
  5470                           
  5471                           ;interrupts.c: 34: return (0);
  5472  001876  0E00               	movlw	0
  5473  001878  6E31               	movwf	?i2_in_low_int+1,c
  5474  00187A  0E00               	movlw	0
  5475  00187C  6E30               	movwf	?i2_in_low_int,c
  5476  00187E  0012               	return	
  5477  001880                     i2l2562:
  5478                           
  5479                           ;interrupts.c: 36: return (1);
  5480  001880  0E00               	movlw	0
  5481  001882  6E31               	movwf	?i2_in_low_int+1,c
  5482  001884  0E01               	movlw	1
  5483  001886  6E30               	movwf	?i2_in_low_int,c
  5484  001888  0012               	return	
  5485  00188A                     __end_ofi2_in_low_int:
  5486                           	opt stack 0
  5487                           pclatu	equ	0xFFB
  5488                           pclath	equ	0xFFA
  5489                           tblptru	equ	0xFF8
  5490                           tblptrh	equ	0xFF7
  5491                           tblptrl	equ	0xFF6
  5492                           tablat	equ	0xFF5
  5493                           prodh	equ	0xFF4
  5494                           prodl	equ	0xFF3
  5495                           intcon	equ	0xFF2
  5496                           postinc0	equ	0xFEE
  5497                           fsr0h	equ	0xFEA
  5498                           fsr0l	equ	0xFE9
  5499                           wreg	equ	0xFE8
  5500                           indf1	equ	0xFE7
  5501                           postdec1	equ	0xFE5
  5502                           fsr1h	equ	0xFE2
  5503                           fsr1l	equ	0xFE1
  5504                           bsr	equ	0xFE0
  5505                           indf2	equ	0xFDF
  5506                           postinc2	equ	0xFDE
  5507                           postdec2	equ	0xFDD
  5508                           fsr2h	equ	0xFDA
  5509                           fsr2l	equ	0xFD9
  5510                           status	equ	0xFD8
  5511                           
  5512 ;; *************** function i2_in_high_int *****************
  5513 ;; Defined at:
  5514 ;;		line 22 in file "../src/interrupts.c"
  5515 ;; Parameters:    Size  Location     Type
  5516 ;;		None
  5517 ;; Auto vars:     Size  Location     Type
  5518 ;;		None
  5519 ;; Return value:  Size  Location     Type
  5520 ;;                  2   45[COMRAM] int 
  5521 ;; Registers used:
  5522 ;;		wreg, status,2
  5523 ;; Tracked objects:
  5524 ;;		On entry : 0/0
  5525 ;;		On exit  : 0/0
  5526 ;;		Unchanged: 0/0
  5527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5528 ;;      Params:         2       0       0       0       0
  5529 ;;      Locals:         0       0       0       0       0
  5530 ;;      Temps:          0       0       0       0       0
  5531 ;;      Totals:         2       0       0       0       0
  5532 ;;Total ram usage:        2 bytes
  5533 ;; Hardware stack levels used:    1
  5534 ;; This function calls:
  5535 ;;		Nothing
  5536 ;; This function is called by:
  5537 ;;		_SleepIfOkay
  5538 ;;		i2_in_low_int
  5539 ;; This function uses a non-reentrant model
  5540 ;;
  5541                           
  5542                           	psect	text37
  5543  001A3A                     __ptext37:
  5544                           	opt stack 0
  5545  001A3A                     i2_in_high_int:
  5546                           	opt stack 18
  5547                           
  5548                           ;interrupts.c: 23: return (!INTCONbits.GIEH);
  5549                           
  5550                           ;incstack = 0
  5551                           ;incstack = 0
  5552  001A3A  0E00               	movlw	0
  5553  001A3C  AEF2               	btfss	intcon,7,c	;volatile
  5554  001A3E  0E01               	movlw	1
  5555  001A40  6E2E               	movwf	?i2_in_high_int,c
  5556  001A42  6A2F               	clrf	?i2_in_high_int+1,c
  5557  001A44  0012               	return	
  5558  001A46                     __end_ofi2_in_high_int:
  5559                           	opt stack 0
  5560                           pclatu	equ	0xFFB
  5561                           pclath	equ	0xFFA
  5562                           tblptru	equ	0xFF8
  5563                           tblptrh	equ	0xFF7
  5564                           tblptrl	equ	0xFF6
  5565                           tablat	equ	0xFF5
  5566                           prodh	equ	0xFF4
  5567                           prodl	equ	0xFF3
  5568                           intcon	equ	0xFF2
  5569                           postinc0	equ	0xFEE
  5570                           fsr0h	equ	0xFEA
  5571                           fsr0l	equ	0xFE9
  5572                           wreg	equ	0xFE8
  5573                           indf1	equ	0xFE7
  5574                           postdec1	equ	0xFE5
  5575                           fsr1h	equ	0xFE2
  5576                           fsr1l	equ	0xFE1
  5577                           bsr	equ	0xFE0
  5578                           indf2	equ	0xFDF
  5579                           postinc2	equ	0xFDE
  5580                           postdec2	equ	0xFDD
  5581                           fsr2h	equ	0xFDA
  5582                           fsr2l	equ	0xFD9
  5583                           status	equ	0xFD8
  5584                           
  5585 ;; *************** function _enter_sleep_mode *****************
  5586 ;; Defined at:
  5587 ;;		line 202 in file "../src/messages.c"
  5588 ;; Parameters:    Size  Location     Type
  5589 ;;		None
  5590 ;; Auto vars:     Size  Location     Type
  5591 ;;		None
  5592 ;; Return value:  Size  Location     Type
  5593 ;;		None               void
  5594 ;; Registers used:
  5595 ;;		None
  5596 ;; Tracked objects:
  5597 ;;		On entry : 0/0
  5598 ;;		On exit  : 0/0
  5599 ;;		Unchanged: 0/0
  5600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5601 ;;      Params:         0       0       0       0       0
  5602 ;;      Locals:         0       0       0       0       0
  5603 ;;      Temps:          0       0       0       0       0
  5604 ;;      Totals:         0       0       0       0       0
  5605 ;;Total ram usage:        0 bytes
  5606 ;; Hardware stack levels used:    1
  5607 ;; This function calls:
  5608 ;;		Nothing
  5609 ;; This function is called by:
  5610 ;;		_SleepIfOkay
  5611 ;; This function uses a non-reentrant model
  5612 ;;
  5613                           
  5614                           	psect	text38
  5615  001A62                     __ptext38:
  5616                           	opt stack 0
  5617  001A62                     _enter_sleep_mode:
  5618                           	opt stack 19
  5619                           
  5620                           ;messages.c: 204: OSCCONbits.IDLEN = 1;
  5621                           
  5622                           ;incstack = 0
  5623                           ;incstack = 0
  5624  001A62  8ED3               	bsf	4051,7,c	;volatile
  5625  001A64  0003               	sleep		;# 
  5626  001A66  0012               	return	
  5627  001A68                     __end_of_enter_sleep_mode:
  5628                           	opt stack 0
  5629                           pclatu	equ	0xFFB
  5630                           pclath	equ	0xFFA
  5631                           tblptru	equ	0xFF8
  5632                           tblptrh	equ	0xFF7
  5633                           tblptrl	equ	0xFF6
  5634                           tablat	equ	0xFF5
  5635                           prodh	equ	0xFF4
  5636                           prodl	equ	0xFF3
  5637                           intcon	equ	0xFF2
  5638                           postinc0	equ	0xFEE
  5639                           fsr0h	equ	0xFEA
  5640                           fsr0l	equ	0xFE9
  5641                           wreg	equ	0xFE8
  5642                           indf1	equ	0xFE7
  5643                           postdec1	equ	0xFE5
  5644                           fsr1h	equ	0xFE2
  5645                           fsr1l	equ	0xFE1
  5646                           bsr	equ	0xFE0
  5647                           indf2	equ	0xFDF
  5648                           postinc2	equ	0xFDE
  5649                           postdec2	equ	0xFDD
  5650                           fsr2h	equ	0xFDA
  5651                           fsr2l	equ	0xFD9
  5652                           status	equ	0xFD8
  5653                           
  5654 ;; *************** function _adc_int_handler *****************
  5655 ;; Defined at:
  5656 ;;		line 53 in file "../src/user_interrupts.c"
  5657 ;; Parameters:    Size  Location     Type
  5658 ;;		None
  5659 ;; Auto vars:     Size  Location     Type
  5660 ;;		None
  5661 ;; Return value:  Size  Location     Type
  5662 ;;		None               void
  5663 ;; Registers used:
  5664 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  5665 ;; Tracked objects:
  5666 ;;		On entry : 0/0
  5667 ;;		On exit  : 0/0
  5668 ;;		Unchanged: 0/0
  5669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5670 ;;      Params:         0       0       0       0       0
  5671 ;;      Locals:         0       0       0       0       0
  5672 ;;      Temps:          2       0       0       0       0
  5673 ;;      Totals:         2       0       0       0       0
  5674 ;;Total ram usage:        2 bytes
  5675 ;; Hardware stack levels used:    1
  5676 ;; Hardware stack levels required when called:    1
  5677 ;; This function calls:
  5678 ;;		_ReadADC
  5679 ;;		_CloseTimer1
  5680 ;; This function is called by:
  5681 ;;		_InterruptHandlerHigh
  5682 ;; This function uses a non-reentrant model
  5683 ;;
  5684                           
  5685                           	psect	text39
  5686  001626                     __ptext39:
  5687                           	opt stack 0
  5688  001626                     _adc_int_handler:
  5689                           	opt stack 19
  5690                           
  5691                           ;user_interrupts.c: 55: ADCValue = ReadADC();
  5692                           
  5693                           ;incstack = 0
  5694                           ;incstack = 0
  5695  001626  EC28  F00D         	call	_ReadADC	;wreg free
  5696  00162A  C02E  F048         	movff	?_ReadADC,_ADCValue
  5697  00162E  C02F  F049         	movff	?_ReadADC+1,_ADCValue+1
  5698                           
  5699                           ;user_interrupts.c: 60: x[counter2] = ADCValue;
  5700  001632  90D8               	bcf	status,0,c
  5701  001634  344A               	rlcf	_counter2,w,c
  5702  001636  6E30               	movwf	??_adc_int_handler& (0+255),c
  5703  001638  344B               	rlcf	_counter2+1,w,c
  5704  00163A  6E31               	movwf	(??_adc_int_handler+1)& (0+255),c
  5705  00163C  0E32               	movlw	low _x
  5706  00163E  2430               	addwf	??_adc_int_handler,w,c
  5707  001640  6ED9               	movwf	fsr2l,c
  5708  001642  0E02               	movlw	high _x
  5709  001644  2031               	addwfc	??_adc_int_handler+1,w,c
  5710  001646  6EDA               	movwf	fsr2h,c
  5711  001648  C048  FFDE         	movff	_ADCValue,postinc2
  5712  00164C  C049  FFDD         	movff	_ADCValue+1,postdec2
  5713                           
  5714                           ;user_interrupts.c: 62: if(counter2 < 159)
  5715  001650  504B               	movf	_counter2+1,w,c
  5716  001652  0A80               	xorlw	128
  5717  001654  0F80               	addlw	-128
  5718  001656  0E9F               	movlw	159
  5719  001658  B4D8               	btfsc	status,2,c
  5720  00165A  5C4A               	subwf	_counter2,w,c
  5721  00165C  B0D8               	btfsc	status,0,c
  5722  00165E  D003               	goto	i2l1312
  5723                           
  5724                           ;user_interrupts.c: 63: counter2++;
  5725  001660  4A4A               	infsnz	_counter2,f,c
  5726  001662  2A4B               	incf	_counter2+1,f,c
  5727  001664  0012               	return	
  5728  001666                     i2l1312:
  5729                           
  5730                           ;user_interrupts.c: 64: else
  5731                           ;user_interrupts.c: 65: {
  5732                           ;user_interrupts.c: 66: counter2 = 0;
  5733  001666  0E00               	movlw	0
  5734  001668  6E4B               	movwf	_counter2+1,c
  5735  00166A  0E00               	movlw	0
  5736  00166C  6E4A               	movwf	_counter2,c
  5737                           
  5738                           ;user_interrupts.c: 67: CloseTimer1();
  5739  00166E  EC34  F00D         	call	_CloseTimer1	;wreg free
  5740  001672  0012               	return	
  5741  001674                     __end_of_adc_int_handler:
  5742                           	opt stack 0
  5743                           pclatu	equ	0xFFB
  5744                           pclath	equ	0xFFA
  5745                           tblptru	equ	0xFF8
  5746                           tblptrh	equ	0xFF7
  5747                           tblptrl	equ	0xFF6
  5748                           tablat	equ	0xFF5
  5749                           prodh	equ	0xFF4
  5750                           prodl	equ	0xFF3
  5751                           intcon	equ	0xFF2
  5752                           postinc0	equ	0xFEE
  5753                           fsr0h	equ	0xFEA
  5754                           fsr0l	equ	0xFE9
  5755                           wreg	equ	0xFE8
  5756                           indf1	equ	0xFE7
  5757                           postdec1	equ	0xFE5
  5758                           fsr1h	equ	0xFE2
  5759                           fsr1l	equ	0xFE1
  5760                           bsr	equ	0xFE0
  5761                           indf2	equ	0xFDF
  5762                           postinc2	equ	0xFDE
  5763                           postdec2	equ	0xFDD
  5764                           fsr2h	equ	0xFDA
  5765                           fsr2l	equ	0xFD9
  5766                           status	equ	0xFD8
  5767                           
  5768 ;; *************** function _CloseTimer1 *****************
  5769 ;; Defined at:
  5770 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic18\plib\Timers\t1close.c"
  5771 ;; Parameters:    Size  Location     Type
  5772 ;;		None
  5773 ;; Auto vars:     Size  Location     Type
  5774 ;;		None
  5775 ;; Return value:  Size  Location     Type
  5776 ;;		None               void
  5777 ;; Registers used:
  5778 ;;		None
  5779 ;; Tracked objects:
  5780 ;;		On entry : 0/0
  5781 ;;		On exit  : 0/0
  5782 ;;		Unchanged: 0/0
  5783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5784 ;;      Params:         0       0       0       0       0
  5785 ;;      Locals:         0       0       0       0       0
  5786 ;;      Temps:          0       0       0       0       0
  5787 ;;      Totals:         0       0       0       0       0
  5788 ;;Total ram usage:        0 bytes
  5789 ;; Hardware stack levels used:    1
  5790 ;; This function calls:
  5791 ;;		Nothing
  5792 ;; This function is called by:
  5793 ;;		_adc_int_handler
  5794 ;; This function uses a non-reentrant model
  5795 ;;
  5796                           
  5797                           	psect	text40
  5798  001A68                     __ptext40:
  5799                           	opt stack 0
  5800  001A68                     _CloseTimer1:
  5801                           	opt stack 19
  5802                           
  5803                           ;incstack = 0
  5804                           ;incstack = 0
  5805  001A68  90CD               	bcf	4045,0,c	;volatile
  5806  001A6A  909D               	bcf	3997,0,c	;volatile
  5807  001A6C  0012               	return	
  5808  001A6E                     __end_of_CloseTimer1:
  5809                           	opt stack 0
  5810                           pclatu	equ	0xFFB
  5811                           pclath	equ	0xFFA
  5812                           tblptru	equ	0xFF8
  5813                           tblptrh	equ	0xFF7
  5814                           tblptrl	equ	0xFF6
  5815                           tablat	equ	0xFF5
  5816                           prodh	equ	0xFF4
  5817                           prodl	equ	0xFF3
  5818                           intcon	equ	0xFF2
  5819                           postinc0	equ	0xFEE
  5820                           fsr0h	equ	0xFEA
  5821                           fsr0l	equ	0xFE9
  5822                           wreg	equ	0xFE8
  5823                           indf1	equ	0xFE7
  5824                           postdec1	equ	0xFE5
  5825                           fsr1h	equ	0xFE2
  5826                           fsr1l	equ	0xFE1
  5827                           bsr	equ	0xFE0
  5828                           indf2	equ	0xFDF
  5829                           postinc2	equ	0xFDE
  5830                           postdec2	equ	0xFDD
  5831                           fsr2h	equ	0xFDA
  5832                           fsr2l	equ	0xFD9
  5833                           status	equ	0xFD8
  5834                           
  5835 ;; *************** function _ReadADC *****************
  5836 ;; Defined at:
  5837 ;;		line 25 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic18\plib\ADC\adcread.c"
  5838 ;; Parameters:    Size  Location     Type
  5839 ;;		None
  5840 ;; Auto vars:     Size  Location     Type
  5841 ;;		None
  5842 ;; Return value:  Size  Location     Type
  5843 ;;                  2   45[COMRAM] int 
  5844 ;; Registers used:
  5845 ;;		wreg, status,2
  5846 ;; Tracked objects:
  5847 ;;		On entry : 0/0
  5848 ;;		On exit  : 0/0
  5849 ;;		Unchanged: 0/0
  5850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5851 ;;      Params:         2       0       0       0       0
  5852 ;;      Locals:         0       0       0       0       0
  5853 ;;      Temps:          0       0       0       0       0
  5854 ;;      Totals:         2       0       0       0       0
  5855 ;;Total ram usage:        2 bytes
  5856 ;; Hardware stack levels used:    1
  5857 ;; This function calls:
  5858 ;;		Nothing
  5859 ;; This function is called by:
  5860 ;;		_adc_int_handler
  5861 ;; This function uses a non-reentrant model
  5862 ;;
  5863                           
  5864                           	psect	text41
  5865  001A50                     __ptext41:
  5866                           	opt stack 0
  5867  001A50                     _ReadADC:
  5868                           	opt stack 19
  5869                           
  5870                           ;incstack = 0
  5871                           ;incstack = 0
  5872  001A50  50C4               	movf	4036,w,c	;volatile
  5873  001A52  6E2F               	movwf	?_ReadADC+1,c
  5874  001A54  50C3               	movf	4035,w,c	;volatile
  5875  001A56  6E2E               	movwf	?_ReadADC,c
  5876  001A58  0012               	return	
  5877  001A5A                     __end_of_ReadADC:
  5878                           	opt stack 0
  5879                           pclatu	equ	0xFFB
  5880                           pclath	equ	0xFFA
  5881                           tblptru	equ	0xFF8
  5882                           tblptrh	equ	0xFF7
  5883                           tblptrl	equ	0xFF6
  5884                           tablat	equ	0xFF5
  5885                           prodh	equ	0xFF4
  5886                           prodl	equ	0xFF3
  5887                           intcon	equ	0xFF2
  5888                           postinc0	equ	0xFEE
  5889                           fsr0h	equ	0xFEA
  5890                           fsr0l	equ	0xFE9
  5891                           wreg	equ	0xFE8
  5892                           indf1	equ	0xFE7
  5893                           postdec1	equ	0xFE5
  5894                           fsr1h	equ	0xFE2
  5895                           fsr1l	equ	0xFE1
  5896                           bsr	equ	0xFE0
  5897                           indf2	equ	0xFDF
  5898                           postinc2	equ	0xFDE
  5899                           postdec2	equ	0xFDD
  5900                           fsr2h	equ	0xFDA
  5901                           fsr2l	equ	0xFD9
  5902                           status	equ	0xFD8
  5903                           
  5904 ;; *************** function _timer0_int_handler *****************
  5905 ;; Defined at:
  5906 ;;		line 16 in file "../src/user_interrupts.c"
  5907 ;; Parameters:    Size  Location     Type
  5908 ;;		None
  5909 ;; Auto vars:     Size  Location     Type
  5910 ;;  val             2   23[BANK0 ] unsigned int 
  5911 ;;  msgtype         2   21[BANK0 ] int 
  5912 ;;  length          2   19[BANK0 ] int 
  5913 ;; Return value:  Size  Location     Type
  5914 ;;		None               void
  5915 ;; Registers used:
  5916 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5917 ;; Tracked objects:
  5918 ;;		On entry : 0/0
  5919 ;;		On exit  : 0/0
  5920 ;;		Unchanged: 0/0
  5921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5922 ;;      Params:         0       0       0       0       0
  5923 ;;      Locals:         0       6       0       0       0
  5924 ;;      Temps:          0       2       0       0       0
  5925 ;;      Totals:         0       8       0       0       0
  5926 ;;Total ram usage:        8 bytes
  5927 ;; Hardware stack levels used:    1
  5928 ;; Hardware stack levels required when called:    3
  5929 ;; This function calls:
  5930 ;;		_ToMainHigh_sendmsg
  5931 ;;		_FromMainHigh_recvmsg
  5932 ;;		_WriteTimer0
  5933 ;; This function is called by:
  5934 ;;		_InterruptHandlerHigh
  5935 ;; This function uses a non-reentrant model
  5936 ;;
  5937                           
  5938                           	psect	text42
  5939  0011E4                     __ptext42:
  5940                           	opt stack 0
  5941  0011E4                     _timer0_int_handler:
  5942                           	opt stack 17
  5943                           
  5944                           ;user_interrupts.c: 17: unsigned int val;
  5945                           ;user_interrupts.c: 18: int length, msgtype;
  5946                           ;user_interrupts.c: 21: LATBbits.LATB0 = !LATBbits.LATB0;
  5947                           
  5948                           ;incstack = 0
  5949                           ;incstack = 0
  5950  0011E4  B08A               	btfsc	3978,0,c	;volatile
  5951  0011E6  D002               	goto	i2u206_40
  5952  0011E8  0E01               	movlw	1
  5953  0011EA  D001               	goto	i2u206_46
  5954  0011EC                     i2u206_40:
  5955  0011EC  0E00               	movlw	0
  5956  0011EE                     i2u206_46:
  5957  0011EE  0100               	movlb	0	; () banked
  5958  0011F0  6F91               	movwf	??_timer0_int_handler& (0+255),b
  5959  0011F2  508A               	movf	3978,w,c	;volatile
  5960  0011F4  0100               	movlb	0	; () banked
  5961  0011F6  1991               	xorwf	??_timer0_int_handler& (0+255),w,b
  5962  0011F8  0BFE               	andlw	-2
  5963  0011FA  1991               	xorwf	??_timer0_int_handler& (0+255),w,b
  5964  0011FC  6E8A               	movwf	3978,c	;volatile
  5965                           
  5966                           ; BSR set to: 0
  5967                           ;user_interrupts.c: 23: WriteTimer0(0);
  5968  0011FE  0E00               	movlw	0
  5969  001200  6E2F               	movwf	?_WriteTimer0+1,c
  5970  001202  0E00               	movlw	0
  5971  001204  6E2E               	movwf	?_WriteTimer0,c
  5972  001206  EC0C  F00D         	call	_WriteTimer0	;wreg free
  5973                           
  5974                           ;user_interrupts.c: 25: length = FromMainHigh_recvmsg(sizeof(val), (unsigned char *)&msg
      +                          type, (void *) &val);
  5975  00120A  0100               	movlb	0	; () banked
  5976  00120C  6F91               	movwf	??_timer0_int_handler& (0+255),b
  5977  00120E  0E02               	movlw	2
  5978  001210  0100               	movlb	0	; () banked
  5979  001212  0100               	movlb	0	; () banked
  5980  001214  6F8C               	movwf	?_FromMainHigh_recvmsg& (0+255),b
  5981  001216  0100               	movlb	0	; () banked
  5982  001218  5191               	movf	??_timer0_int_handler& (0+255),w,b
  5983  00121A  0100               	movlb	0	; () banked
  5984  00121C  0E00               	movlw	high timer0_int_handler@msgtype
  5985  00121E  0100               	movlb	0	; () banked
  5986  001220  0100               	movlb	0	; () banked
  5987  001222  6F8E               	movwf	(?_FromMainHigh_recvmsg+2)& (0+255),b
  5988  001224  0100               	movlb	0	; () banked
  5989  001226  0E95               	movlw	low timer0_int_handler@msgtype
  5990  001228  0100               	movlb	0	; () banked
  5991  00122A  6F8D               	movwf	(?_FromMainHigh_recvmsg+1)& (0+255),b
  5992  00122C  0100               	movlb	0	; () banked
  5993  00122E  0E00               	movlw	high timer0_int_handler@val
  5994  001230  0100               	movlb	0	; () banked
  5995  001232  0100               	movlb	0	; () banked
  5996  001234  6F90               	movwf	(?_FromMainHigh_recvmsg+4)& (0+255),b
  5997  001236  0100               	movlb	0	; () banked
  5998  001238  0E97               	movlw	low timer0_int_handler@val
  5999  00123A  0100               	movlb	0	; () banked
  6000  00123C  6F8F               	movwf	(?_FromMainHigh_recvmsg+3)& (0+255),b
  6001  00123E  EC71  F00C         	call	_FromMainHigh_recvmsg	;wreg free
  6002  001242  0100               	movlb	0	; () banked
  6003  001244  0100               	movlb	0	; () banked
  6004  001246  6F93               	movwf	timer0_int_handler@length& (0+255),b
  6005  001248  0100               	movlb	0	; () banked
  6006  00124A  6B94               	clrf	(timer0_int_handler@length+1)& (0+255),b
  6007  00124C  0100               	movlb	0	; () banked
  6008  00124E  BF93               	btfsc	timer0_int_handler@length& (0+255),7,b
  6009  001250  0794               	decf	(timer0_int_handler@length+1)& (0+255),f,b
  6010                           
  6011                           ; BSR set to: 0
  6012                           ;user_interrupts.c: 26: if (length == sizeof (val)) {
  6013  001252  0100               	movlb	0	; () banked
  6014  001254  0100               	movlb	0	; () banked
  6015  001256  5193               	movf	timer0_int_handler@length& (0+255),w,b
  6016  001258  0A02               	xorlw	2
  6017  00125A  1194               	iorwf	(timer0_int_handler@length+1)& (0+255),w,b
  6018  00125C  A4D8               	btfss	status,2,c
  6019  00125E  0012               	return	
  6020                           
  6021                           ; BSR set to: 0
  6022                           ;user_interrupts.c: 27: ToMainHigh_sendmsg(sizeof (val), 10, (void *) &val);
  6023  001260  0100               	movlb	0	; () banked
  6024  001262  6F91               	movwf	??_timer0_int_handler& (0+255),b
  6025  001264  0E02               	movlw	2
  6026  001266  6E39               	movwf	?_ToMainHigh_sendmsg,c
  6027  001268  0100               	movlb	0	; () banked
  6028  00126A  5191               	movf	??_timer0_int_handler& (0+255),w,b
  6029  00126C  0100               	movlb	0	; () banked
  6030  00126E  6F92               	movwf	(??_timer0_int_handler+1)& (0+255),b
  6031  001270  0E0A               	movlw	10
  6032  001272  6E3A               	movwf	?_ToMainHigh_sendmsg+1,c
  6033  001274  0100               	movlb	0	; () banked
  6034  001276  5192               	movf	(??_timer0_int_handler+1)& (0+255),w,b
  6035  001278  0100               	movlb	0	; () banked
  6036  00127A  0E00               	movlw	high timer0_int_handler@val
  6037  00127C  6E3C               	movwf	?_ToMainHigh_sendmsg+3,c
  6038  00127E  0100               	movlb	0	; () banked
  6039  001280  0E97               	movlw	low timer0_int_handler@val
  6040  001282  6E3B               	movwf	?_ToMainHigh_sendmsg+2,c
  6041  001284  EC87  F00C         	call	_ToMainHigh_sendmsg	;wreg free
  6042  001288  0012               	return	
  6043  00128A                     __end_of_timer0_int_handler:
  6044                           	opt stack 0
  6045                           pclatu	equ	0xFFB
  6046                           pclath	equ	0xFFA
  6047                           tblptru	equ	0xFF8
  6048                           tblptrh	equ	0xFF7
  6049                           tblptrl	equ	0xFF6
  6050                           tablat	equ	0xFF5
  6051                           prodh	equ	0xFF4
  6052                           prodl	equ	0xFF3
  6053                           intcon	equ	0xFF2
  6054                           postinc0	equ	0xFEE
  6055                           fsr0h	equ	0xFEA
  6056                           fsr0l	equ	0xFE9
  6057                           wreg	equ	0xFE8
  6058                           indf1	equ	0xFE7
  6059                           postdec1	equ	0xFE5
  6060                           fsr1h	equ	0xFE2
  6061                           fsr1l	equ	0xFE1
  6062                           bsr	equ	0xFE0
  6063                           indf2	equ	0xFDF
  6064                           postinc2	equ	0xFDE
  6065                           postdec2	equ	0xFDD
  6066                           fsr2h	equ	0xFDA
  6067                           fsr2l	equ	0xFD9
  6068                           status	equ	0xFD8
  6069                           
  6070 ;; *************** function _WriteTimer0 *****************
  6071 ;; Defined at:
  6072 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic18\plib\Timers\t0write.c"
  6073 ;; Parameters:    Size  Location     Type
  6074 ;;  timer0          2   45[COMRAM] unsigned int 
  6075 ;; Auto vars:     Size  Location     Type
  6076 ;;  timer           2   47[COMRAM] struct Timers
  6077 ;; Return value:  Size  Location     Type
  6078 ;;		None               void
  6079 ;; Registers used:
  6080 ;;		None
  6081 ;; Tracked objects:
  6082 ;;		On entry : 0/0
  6083 ;;		On exit  : 0/0
  6084 ;;		Unchanged: 0/0
  6085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6086 ;;      Params:         2       0       0       0       0
  6087 ;;      Locals:         2       0       0       0       0
  6088 ;;      Temps:          0       0       0       0       0
  6089 ;;      Totals:         4       0       0       0       0
  6090 ;;Total ram usage:        4 bytes
  6091 ;; Hardware stack levels used:    1
  6092 ;; This function calls:
  6093 ;;		Nothing
  6094 ;; This function is called by:
  6095 ;;		_timer0_int_handler
  6096 ;; This function uses a non-reentrant model
  6097 ;;
  6098                           
  6099                           	psect	text43
  6100  001A18                     __ptext43:
  6101                           	opt stack 0
  6102  001A18                     _WriteTimer0:
  6103                           	opt stack 19
  6104                           
  6105                           ;incstack = 0
  6106                           ;incstack = 0
  6107  001A18  C02E  F030         	movff	WriteTimer0@timer0,WriteTimer0@timer
  6108  001A1C  C02F  F031         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  6109  001A20  C031  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  6110  001A24  C030  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  6111  001A28  0012               	return	
  6112  001A2A                     __end_of_WriteTimer0:
  6113                           	opt stack 0
  6114                           pclatu	equ	0xFFB
  6115                           pclath	equ	0xFFA
  6116                           tblptru	equ	0xFF8
  6117                           tblptrh	equ	0xFF7
  6118                           tblptrl	equ	0xFF6
  6119                           tablat	equ	0xFF5
  6120                           prodh	equ	0xFF4
  6121                           prodl	equ	0xFF3
  6122                           intcon	equ	0xFF2
  6123                           postinc0	equ	0xFEE
  6124                           fsr0h	equ	0xFEA
  6125                           fsr0l	equ	0xFE9
  6126                           wreg	equ	0xFE8
  6127                           indf1	equ	0xFE7
  6128                           postdec1	equ	0xFE5
  6129                           fsr1h	equ	0xFE2
  6130                           fsr1l	equ	0xFE1
  6131                           bsr	equ	0xFE0
  6132                           indf2	equ	0xFDF
  6133                           postinc2	equ	0xFDE
  6134                           postdec2	equ	0xFDD
  6135                           fsr2h	equ	0xFDA
  6136                           fsr2l	equ	0xFD9
  6137                           status	equ	0xFD8
  6138                           
  6139 ;; *************** function _FromMainHigh_recvmsg *****************
  6140 ;; Defined at:
  6141 ;;		line 183 in file "../src/messages.c"
  6142 ;; Parameters:    Size  Location     Type
  6143 ;;  maxlength       1   12[BANK0 ] unsigned char 
  6144 ;;  msgtype         2   13[BANK0 ] PTR unsigned char 
  6145 ;;		 -> timer0_int_handler@msgtype(2), 
  6146 ;;  data            2   15[BANK0 ] PTR void 
  6147 ;;		 -> timer0_int_handler@val(2), 
  6148 ;; Auto vars:     Size  Location     Type
  6149 ;;		None
  6150 ;; Return value:  Size  Location     Type
  6151 ;;                  1    wreg      char 
  6152 ;; Registers used:
  6153 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6154 ;; Tracked objects:
  6155 ;;		On entry : 0/0
  6156 ;;		On exit  : 0/0
  6157 ;;		Unchanged: 0/0
  6158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6159 ;;      Params:         0       5       0       0       0
  6160 ;;      Locals:         0       0       0       0       0
  6161 ;;      Temps:          0       0       0       0       0
  6162 ;;      Totals:         0       5       0       0       0
  6163 ;;Total ram usage:        5 bytes
  6164 ;; Hardware stack levels used:    1
  6165 ;; Hardware stack levels required when called:    2
  6166 ;; This function calls:
  6167 ;;		i2_recv_msg
  6168 ;; This function is called by:
  6169 ;;		_timer0_int_handler
  6170 ;; This function uses a non-reentrant model
  6171 ;;
  6172                           
  6173                           	psect	text44
  6174  0018E2                     __ptext44:
  6175                           	opt stack 0
  6176  0018E2                     _FromMainHigh_recvmsg:
  6177                           	opt stack 17
  6178                           
  6179                           ;messages.c: 189: return (recv_msg(&FromMainHigh_MQ, maxlength, msgtype, data));
  6180                           
  6181                           ;incstack = 0
  6182                           ;incstack = 0
  6183  0018E2  0101               	movlb	1	; () banked
  6184  0018E4  0E01               	movlw	high _FromMainHigh_MQ
  6185  0018E6  0100               	movlb	0	; () banked
  6186  0018E8  0100               	movlb	0	; () banked
  6187  0018EA  6F81               	movwf	(?i2_recv_msg+1)& (0+255),b
  6188  0018EC  0101               	movlb	1	; () banked
  6189  0018EE  0E00               	movlw	low _FromMainHigh_MQ
  6190  0018F0  0100               	movlb	0	; () banked
  6191  0018F2  6F80               	movwf	?i2_recv_msg& (0+255),b
  6192  0018F4  C08C  F082         	movff	FromMainHigh_recvmsg@maxlength,?i2_recv_msg+2
  6193  0018F8  C08D  F083         	movff	FromMainHigh_recvmsg@msgtype,?i2_recv_msg+3
  6194  0018FC  C08E  F084         	movff	FromMainHigh_recvmsg@msgtype+1,?i2_recv_msg+4
  6195  001900  C08F  F085         	movff	FromMainHigh_recvmsg@data,?i2_recv_msg+5
  6196  001904  C090  F086         	movff	FromMainHigh_recvmsg@data+1,?i2_recv_msg+6
  6197  001908  ECCA  F005         	call	i2_recv_msg	;wreg free
  6198  00190C  0012               	return	
  6199  00190E                     __end_of_FromMainHigh_recvmsg:
  6200                           	opt stack 0
  6201                           pclatu	equ	0xFFB
  6202                           pclath	equ	0xFFA
  6203                           tblptru	equ	0xFF8
  6204                           tblptrh	equ	0xFF7
  6205                           tblptrl	equ	0xFF6
  6206                           tablat	equ	0xFF5
  6207                           prodh	equ	0xFF4
  6208                           prodl	equ	0xFF3
  6209                           intcon	equ	0xFF2
  6210                           postinc0	equ	0xFEE
  6211                           fsr0h	equ	0xFEA
  6212                           fsr0l	equ	0xFE9
  6213                           wreg	equ	0xFE8
  6214                           indf1	equ	0xFE7
  6215                           postdec1	equ	0xFE5
  6216                           fsr1h	equ	0xFE2
  6217                           fsr1l	equ	0xFE1
  6218                           bsr	equ	0xFE0
  6219                           indf2	equ	0xFDF
  6220                           postinc2	equ	0xFDE
  6221                           postdec2	equ	0xFDD
  6222                           fsr2h	equ	0xFDA
  6223                           fsr2l	equ	0xFD9
  6224                           status	equ	0xFD8
  6225                           
  6226 ;; *************** function i2_recv_msg *****************
  6227 ;; Defined at:
  6228 ;;		line 63 in file "../src/messages.c"
  6229 ;; Parameters:    Size  Location     Type
  6230 ;;  recv_msg        2    0[BANK0 ] PTR struct __msg_queue
  6231 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  6232 ;;  recv_msg        1    2[BANK0 ] unsigned char 
  6233 ;;  recv_msg        2    3[BANK0 ] PTR unsigned char 
  6234 ;;		 -> timer0_int_handler@msgtype(2), main@msgtype(1), 
  6235 ;;  recv_msg        2    5[BANK0 ] PTR void 
  6236 ;;		 -> timer0_int_handler@val(2), main@msgbuffer(11), 
  6237 ;; Auto vars:     Size  Location     Type
  6238 ;;  recv_msg        2   10[BANK0 ] PTR struct __msg
  6239 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  6240 ;;  recv_msg        2    8[BANK0 ] unsigned int 
  6241 ;;  recv_msg        1    7[BANK0 ] unsigned char 
  6242 ;; Return value:  Size  Location     Type
  6243 ;;                  1    wreg      char 
  6244 ;; Registers used:
  6245 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6246 ;; Tracked objects:
  6247 ;;		On entry : 0/0
  6248 ;;		On exit  : 0/0
  6249 ;;		Unchanged: 0/0
  6250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6251 ;;      Params:         0       7       0       0       0
  6252 ;;      Locals:         0       5       0       0       0
  6253 ;;      Temps:          2       0       0       0       0
  6254 ;;      Totals:         2      12       0       0       0
  6255 ;;Total ram usage:       14 bytes
  6256 ;; Hardware stack levels used:    1
  6257 ;; Hardware stack levels required when called:    1
  6258 ;; This function calls:
  6259 ;;		i2_memcpy
  6260 ;; This function is called by:
  6261 ;;		_FromMainHigh_recvmsg
  6262 ;; This function uses a non-reentrant model
  6263 ;;
  6264                           
  6265                           	psect	text45
  6266  000B94                     __ptext45:
  6267                           	opt stack 0
  6268  000B94                     i2_recv_msg:
  6269                           	opt stack 17
  6270                           
  6271                           ;messages.c: 64: unsigned char slot;
  6272                           ;messages.c: 68: msg *qmsg;
  6273                           ;messages.c: 69: size_t tlength;
  6274                           ;messages.c: 72: slot = qptr->cur_read_ind;
  6275                           
  6276                           ;incstack = 0
  6277                           ;incstack = 0
  6278  000B94  0100               	movlb	0	; () banked
  6279  000B96  EE20 F035          	lfsr	2,53
  6280  000B9A  0100               	movlb	0	; () banked
  6281  000B9C  5180               	movf	i2recv_msg@qptr& (0+255),w,b
  6282  000B9E  26D9               	addwf	fsr2l,f,c
  6283  000BA0  0100               	movlb	0	; () banked
  6284  000BA2  5181               	movf	(i2recv_msg@qptr+1)& (0+255),w,b
  6285  000BA4  22DA               	addwfc	fsr2h,f,c
  6286  000BA6  50DF               	movf	indf2,w,c
  6287  000BA8  0100               	movlb	0	; () banked
  6288  000BAA  0100               	movlb	0	; () banked
  6289  000BAC  6F87               	movwf	i2recv_msg@slot& (0+255),b
  6290                           
  6291                           ; BSR set to: 0
  6292                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  6293  000BAE  0100               	movlb	0	; () banked
  6294  000BB0  0100               	movlb	0	; () banked
  6295  000BB2  5187               	movf	i2recv_msg@slot& (0+255),w,b
  6296  000BB4  0D0D               	mullw	13
  6297  000BB6  50F3               	movf	prodl,w,c
  6298  000BB8  0100               	movlb	0	; () banked
  6299  000BBA  0100               	movlb	0	; () banked
  6300  000BBC  2580               	addwf	i2recv_msg@qptr& (0+255),w,b
  6301  000BBE  0100               	movlb	0	; () banked
  6302  000BC0  0100               	movlb	0	; () banked
  6303  000BC2  6F8A               	movwf	i2recv_msg@qmsg& (0+255),b
  6304  000BC4  50F4               	movf	prodh,w,c
  6305  000BC6  0100               	movlb	0	; () banked
  6306  000BC8  0100               	movlb	0	; () banked
  6307  000BCA  2181               	addwfc	(i2recv_msg@qptr+1)& (0+255),w,b
  6308  000BCC  0100               	movlb	0	; () banked
  6309  000BCE  6F8B               	movwf	(i2recv_msg@qmsg+1)& (0+255),b
  6310                           
  6311                           ; BSR set to: 0
  6312                           ;messages.c: 74: if (qmsg->full == 1) {
  6313  000BD0  0E01               	movlw	1
  6314  000BD2  C08A  FFD9         	movff	i2recv_msg@qmsg,fsr2l
  6315  000BD6  C08B  FFDA         	movff	i2recv_msg@qmsg+1,fsr2h
  6316  000BDA  62DF               	cpfseq	indf2,c
  6317  000BDC  D069               	goto	i2l3302
  6318                           
  6319                           ; BSR set to: 0
  6320                           ;messages.c: 76: if (qmsg->length > maxlength) {
  6321  000BDE  0100               	movlb	0	; () banked
  6322  000BE0  EE20 F001          	lfsr	2,1
  6323  000BE4  0100               	movlb	0	; () banked
  6324  000BE6  518A               	movf	i2recv_msg@qmsg& (0+255),w,b
  6325  000BE8  26D9               	addwf	fsr2l,f,c
  6326  000BEA  0100               	movlb	0	; () banked
  6327  000BEC  518B               	movf	(i2recv_msg@qmsg+1)& (0+255),w,b
  6328  000BEE  22DA               	addwfc	fsr2h,f,c
  6329  000BF0  50DF               	movf	indf2,w,c
  6330  000BF2  0100               	movlb	0	; () banked
  6331  000BF4  0100               	movlb	0	; () banked
  6332  000BF6  6182               	cpfslt	i2recv_msg@maxlength& (0+255),b
  6333  000BF8  D002               	goto	i2l3286
  6334                           
  6335                           ; BSR set to: 0
  6336                           ;messages.c: 77: return (-3);
  6337  000BFA  0EFD               	movlw	253
  6338  000BFC  0012               	return	
  6339  000BFE                     i2l3286:
  6340                           
  6341                           ; BSR set to: 0
  6342                           ;messages.c: 78: }
  6343                           ;messages.c: 80: tlength = qmsg->length;
  6344  000BFE  0100               	movlb	0	; () banked
  6345  000C00  EE20 F001          	lfsr	2,1
  6346  000C04  0100               	movlb	0	; () banked
  6347  000C06  518A               	movf	i2recv_msg@qmsg& (0+255),w,b
  6348  000C08  26D9               	addwf	fsr2l,f,c
  6349  000C0A  0100               	movlb	0	; () banked
  6350  000C0C  518B               	movf	(i2recv_msg@qmsg+1)& (0+255),w,b
  6351  000C0E  22DA               	addwfc	fsr2h,f,c
  6352  000C10  50DF               	movf	indf2,w,c
  6353  000C12  6E38               	movwf	??i2_recv_msg& (0+255),c
  6354  000C14  5038               	movf	??i2_recv_msg,w,c
  6355  000C16  0100               	movlb	0	; () banked
  6356  000C18  0100               	movlb	0	; () banked
  6357  000C1A  6F88               	movwf	i2recv_msg@tlength& (0+255),b
  6358  000C1C  0100               	movlb	0	; () banked
  6359  000C1E  6B89               	clrf	(i2recv_msg@tlength+1)& (0+255),b
  6360                           
  6361                           ; BSR set to: 0
  6362                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  6363  000C20  C085  F02E         	movff	i2recv_msg@data,?i2_memcpy
  6364  000C24  C086  F02F         	movff	i2recv_msg@data+1,?i2_memcpy+1
  6365  000C28  0E03               	movlw	3
  6366  000C2A  0100               	movlb	0	; () banked
  6367  000C2C  0100               	movlb	0	; () banked
  6368  000C2E  258A               	addwf	i2recv_msg@qmsg& (0+255),w,b
  6369  000C30  6E38               	movwf	??i2_recv_msg& (0+255),c
  6370  000C32  0E00               	movlw	0
  6371  000C34  0100               	movlb	0	; () banked
  6372  000C36  0100               	movlb	0	; () banked
  6373  000C38  218B               	addwfc	(i2recv_msg@qmsg+1)& (0+255),w,b
  6374  000C3A  6E39               	movwf	(??i2_recv_msg+1)& (0+255),c
  6375  000C3C  C038  F030         	movff	??i2_recv_msg,?i2_memcpy+2
  6376  000C40  C039  F031         	movff	??i2_recv_msg+1,?i2_memcpy+3
  6377  000C44  C088  F032         	movff	i2recv_msg@tlength,?i2_memcpy+4
  6378  000C48  C089  F033         	movff	i2recv_msg@tlength+1,?i2_memcpy+5
  6379  000C4C  EC9F  F00B         	call	i2_memcpy	;wreg free
  6380                           
  6381                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  6382  000C50  0100               	movlb	0	; () banked
  6383  000C52  EE20 F035          	lfsr	2,53
  6384  000C56  0100               	movlb	0	; () banked
  6385  000C58  5180               	movf	i2recv_msg@qptr& (0+255),w,b
  6386  000C5A  26D9               	addwf	fsr2l,f,c
  6387  000C5C  0100               	movlb	0	; () banked
  6388  000C5E  5181               	movf	(i2recv_msg@qptr+1)& (0+255),w,b
  6389  000C60  22DA               	addwfc	fsr2h,f,c
  6390  000C62  0100               	movlb	0	; () banked
  6391  000C64  EE10 F035          	lfsr	1,53
  6392  000C68  0100               	movlb	0	; () banked
  6393  000C6A  5180               	movf	i2recv_msg@qptr& (0+255),w,b
  6394  000C6C  26E1               	addwf	fsr1l,f,c
  6395  000C6E  0100               	movlb	0	; () banked
  6396  000C70  5181               	movf	(i2recv_msg@qptr+1)& (0+255),w,b
  6397  000C72  22E2               	addwfc	fsr1h,f,c
  6398  000C74  50E7               	movf	indf1,w,c
  6399  000C76  6E38               	movwf	??i2_recv_msg& (0+255),c
  6400  000C78  2838               	incf	??i2_recv_msg,w,c
  6401  000C7A  0B03               	andlw	3
  6402  000C7C  6EDF               	movwf	indf2,c
  6403                           
  6404                           ; BSR set to: 0
  6405                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  6406  000C7E  0100               	movlb	0	; () banked
  6407  000C80  EE20 F002          	lfsr	2,2
  6408  000C84  0100               	movlb	0	; () banked
  6409  000C86  518A               	movf	i2recv_msg@qmsg& (0+255),w,b
  6410  000C88  26D9               	addwf	fsr2l,f,c
  6411  000C8A  0100               	movlb	0	; () banked
  6412  000C8C  518B               	movf	(i2recv_msg@qmsg+1)& (0+255),w,b
  6413  000C8E  22DA               	addwfc	fsr2h,f,c
  6414  000C90  C083  FFE1         	movff	i2recv_msg@msgtype,fsr1l
  6415  000C94  C084  FFE2         	movff	i2recv_msg@msgtype+1,fsr1h
  6416  000C98  CFDF FFE7          	movff	indf2,indf1
  6417                           
  6418                           ; BSR set to: 0
  6419                           ;messages.c: 91: qmsg->full = 0;
  6420  000C9C  C08A  FFD9         	movff	i2recv_msg@qmsg,fsr2l
  6421  000CA0  C08B  FFDA         	movff	i2recv_msg@qmsg+1,fsr2h
  6422  000CA4  0E00               	movlw	0
  6423  000CA6  6EDF               	movwf	indf2,c
  6424                           
  6425                           ; BSR set to: 0
  6426                           ;messages.c: 92: return (tlength);
  6427  000CA8  0100               	movlb	0	; () banked
  6428  000CAA  0100               	movlb	0	; () banked
  6429  000CAC  5188               	movf	i2recv_msg@tlength& (0+255),w,b
  6430  000CAE  0012               	return	
  6431  000CB0                     i2l3302:
  6432                           
  6433                           ; BSR set to: 0
  6434                           ;messages.c: 94: return (-4);
  6435  000CB0  0EFC               	movlw	252
  6436  000CB2  0012               	return	
  6437  000CB4                     __end_ofi2_recv_msg:
  6438                           	opt stack 0
  6439                           pclatu	equ	0xFFB
  6440                           pclath	equ	0xFFA
  6441                           tblptru	equ	0xFF8
  6442                           tblptrh	equ	0xFF7
  6443                           tblptrl	equ	0xFF6
  6444                           tablat	equ	0xFF5
  6445                           prodh	equ	0xFF4
  6446                           prodl	equ	0xFF3
  6447                           intcon	equ	0xFF2
  6448                           postinc0	equ	0xFEE
  6449                           fsr0h	equ	0xFEA
  6450                           fsr0l	equ	0xFE9
  6451                           wreg	equ	0xFE8
  6452                           indf1	equ	0xFE7
  6453                           postdec1	equ	0xFE5
  6454                           fsr1h	equ	0xFE2
  6455                           fsr1l	equ	0xFE1
  6456                           bsr	equ	0xFE0
  6457                           indf2	equ	0xFDF
  6458                           postinc2	equ	0xFDE
  6459                           postdec2	equ	0xFDD
  6460                           fsr2h	equ	0xFDA
  6461                           fsr2l	equ	0xFD9
  6462                           status	equ	0xFD8
  6463                           
  6464 ;; *************** function _i2c_int_handler *****************
  6465 ;; Defined at:
  6466 ;;		line 103 in file "../src/my_i2c.c"
  6467 ;; Parameters:    Size  Location     Type
  6468 ;;		None
  6469 ;; Auto vars:     Size  Location     Type
  6470 ;;  error_buf       3   13[BANK0 ] unsigned char [3]
  6471 ;;  data_read       1   21[BANK0 ] unsigned char 
  6472 ;;  msg_ready       1   20[BANK0 ] unsigned char 
  6473 ;;  i2c_data        1   19[BANK0 ] unsigned char 
  6474 ;;  msg_to_send     1   18[BANK0 ] unsigned char 
  6475 ;;  overrun_erro    1   17[BANK0 ] unsigned char 
  6476 ;;  data_written    1   16[BANK0 ] unsigned char 
  6477 ;; Return value:  Size  Location     Type
  6478 ;;		None               void
  6479 ;; Registers used:
  6480 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6481 ;; Tracked objects:
  6482 ;;		On entry : 0/0
  6483 ;;		On exit  : 0/0
  6484 ;;		Unchanged: 0/0
  6485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6486 ;;      Params:         0       0       0       0       0
  6487 ;;      Locals:         0       9       0       0       0
  6488 ;;      Temps:          0       2       0       0       0
  6489 ;;      Totals:         0      11       0       0       0
  6490 ;;Total ram usage:       11 bytes
  6491 ;; Hardware stack levels used:    1
  6492 ;; Hardware stack levels required when called:    3
  6493 ;; This function calls:
  6494 ;;		_ToMainHigh_sendmsg
  6495 ;;		_handle_start
  6496 ;; This function is called by:
  6497 ;;		_InterruptHandlerHigh
  6498 ;; This function uses a non-reentrant model
  6499 ;;
  6500                           
  6501                           	psect	text46
  6502  0000C6                     __ptext46:
  6503                           	opt stack 0
  6504  0000C6                     _i2c_int_handler:
  6505                           	opt stack 17
  6506                           
  6507                           ;my_i2c.c: 104: unsigned char i2c_data;
  6508                           ;my_i2c.c: 105: unsigned char data_read = 0;
  6509                           
  6510                           ; BSR set to: 0
  6511                           ;incstack = 0
  6512                           ;incstack = 0
  6513  0000C6  0100               	movlb	0	; () banked
  6514  0000C8  6F8B               	movwf	??_i2c_int_handler& (0+255),b
  6515  0000CA  0E00               	movlw	0
  6516  0000CC  0100               	movlb	0	; () banked
  6517  0000CE  0100               	movlb	0	; () banked
  6518  0000D0  6F95               	movwf	i2c_int_handler@data_read& (0+255),b
  6519  0000D2  0100               	movlb	0	; () banked
  6520  0000D4  518B               	movf	??_i2c_int_handler& (0+255),w,b
  6521                           
  6522                           ;my_i2c.c: 106: unsigned char data_written = 0;
  6523  0000D6  0100               	movlb	0	; () banked
  6524  0000D8  6F8B               	movwf	??_i2c_int_handler& (0+255),b
  6525  0000DA  0E00               	movlw	0
  6526  0000DC  0100               	movlb	0	; () banked
  6527  0000DE  0100               	movlb	0	; () banked
  6528  0000E0  6F90               	movwf	i2c_int_handler@data_written& (0+255),b
  6529  0000E2  0100               	movlb	0	; () banked
  6530  0000E4  518B               	movf	??_i2c_int_handler& (0+255),w,b
  6531                           
  6532                           ;my_i2c.c: 107: unsigned char msg_ready = 0;
  6533  0000E6  0100               	movlb	0	; () banked
  6534  0000E8  6F8B               	movwf	??_i2c_int_handler& (0+255),b
  6535  0000EA  0E00               	movlw	0
  6536  0000EC  0100               	movlb	0	; () banked
  6537  0000EE  0100               	movlb	0	; () banked
  6538  0000F0  6F94               	movwf	i2c_int_handler@msg_ready& (0+255),b
  6539  0000F2  0100               	movlb	0	; () banked
  6540  0000F4  518B               	movf	??_i2c_int_handler& (0+255),w,b
  6541                           
  6542                           ;my_i2c.c: 108: unsigned char msg_to_send = 0;
  6543  0000F6  0100               	movlb	0	; () banked
  6544  0000F8  6F8B               	movwf	??_i2c_int_handler& (0+255),b
  6545  0000FA  0E00               	movlw	0
  6546  0000FC  0100               	movlb	0	; () banked
  6547  0000FE  0100               	movlb	0	; () banked
  6548  000100  6F92               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  6549  000102  0100               	movlb	0	; () banked
  6550  000104  518B               	movf	??_i2c_int_handler& (0+255),w,b
  6551                           
  6552                           ;my_i2c.c: 109: unsigned char overrun_error = 0;
  6553  000106  0100               	movlb	0	; () banked
  6554  000108  6F8B               	movwf	??_i2c_int_handler& (0+255),b
  6555  00010A  0E00               	movlw	0
  6556  00010C  0100               	movlb	0	; () banked
  6557  00010E  0100               	movlb	0	; () banked
  6558  000110  6F91               	movwf	i2c_int_handler@overrun_error& (0+255),b
  6559  000112  0100               	movlb	0	; () banked
  6560  000114  518B               	movf	??_i2c_int_handler& (0+255),w,b
  6561                           
  6562                           ; BSR set to: 0
  6563                           ;my_i2c.c: 110: unsigned char error_buf[3];
  6564                           ;my_i2c.c: 113: if (SSPCON1bits.SSPOV == 1) {
  6565  000116  ACC6               	btfss	4038,6,c	;volatile
  6566  000118  D029               	goto	i2l2780
  6567                           
  6568                           ; BSR set to: 0
  6569                           ;my_i2c.c: 114: SSPCON1bits.SSPOV = 0;
  6570  00011A  9CC6               	bcf	4038,6,c	;volatile
  6571                           
  6572                           ; BSR set to: 0
  6573                           ;my_i2c.c: 118: ic_ptr->status = 0x5;
  6574  00011C  0100               	movlb	0	; () banked
  6575  00011E  EE20 F00C          	lfsr	2,12
  6576  000122  0100               	movlb	0	; () banked
  6577  000124  51C7               	movf	_ic_ptr& (0+255),w,b
  6578  000126  26D9               	addwf	fsr2l,f,c
  6579  000128  0100               	movlb	0	; () banked
  6580  00012A  51C8               	movf	(_ic_ptr+1)& (0+255),w,b
  6581  00012C  22DA               	addwfc	fsr2h,f,c
  6582  00012E  0E05               	movlw	5
  6583  000130  6EDF               	movwf	indf2,c
  6584                           
  6585                           ; BSR set to: 0
  6586                           ;my_i2c.c: 119: overrun_error = 1;
  6587  000132  0100               	movlb	0	; () banked
  6588  000134  6F8B               	movwf	??_i2c_int_handler& (0+255),b
  6589  000136  0E01               	movlw	1
  6590  000138  0100               	movlb	0	; () banked
  6591  00013A  0100               	movlb	0	; () banked
  6592  00013C  6F91               	movwf	i2c_int_handler@overrun_error& (0+255),b
  6593  00013E  0100               	movlb	0	; () banked
  6594  000140  518B               	movf	??_i2c_int_handler& (0+255),w,b
  6595                           
  6596                           ; BSR set to: 0
  6597                           ;my_i2c.c: 120: ic_ptr->error_count++;
  6598  000142  0100               	movlb	0	; () banked
  6599  000144  EE20 F00E          	lfsr	2,14
  6600  000148  0100               	movlb	0	; () banked
  6601  00014A  51C7               	movf	_ic_ptr& (0+255),w,b
  6602  00014C  26D9               	addwf	fsr2l,f,c
  6603  00014E  0100               	movlb	0	; () banked
  6604  000150  51C8               	movf	(_ic_ptr+1)& (0+255),w,b
  6605  000152  22DA               	addwfc	fsr2h,f,c
  6606  000154  2ADF               	incf	indf2,f,c
  6607                           
  6608                           ; BSR set to: 0
  6609                           ;my_i2c.c: 121: ic_ptr->error_code = 0x4;
  6610  000156  0100               	movlb	0	; () banked
  6611  000158  EE20 F00D          	lfsr	2,13
  6612  00015C  0100               	movlb	0	; () banked
  6613  00015E  51C7               	movf	_ic_ptr& (0+255),w,b
  6614  000160  26D9               	addwf	fsr2l,f,c
  6615  000162  0100               	movlb	0	; () banked
  6616  000164  51C8               	movf	(_ic_ptr+1)& (0+255),w,b
  6617  000166  22DA               	addwfc	fsr2h,f,c
  6618  000168  0E04               	movlw	4
  6619  00016A  6EDF               	movwf	indf2,c
  6620  00016C                     i2l2780:
  6621                           
  6622                           ; BSR set to: 0
  6623                           ;my_i2c.c: 122: }
  6624                           ;my_i2c.c: 124: if (SSPSTATbits.BF == 1) {
  6625  00016C  A0C7               	btfss	4039,0,c	;volatile
  6626  00016E  D00A               	goto	i2l2786
  6627                           
  6628                           ; BSR set to: 0
  6629                           ;my_i2c.c: 125: i2c_data = SSPBUF;
  6630  000170  CFC9 F093          	movff	4041,i2c_int_handler@i2c_data	;volatile
  6631                           
  6632                           ; BSR set to: 0
  6633                           ;my_i2c.c: 126: data_read = 1;
  6634  000174  0100               	movlb	0	; () banked
  6635  000176  6F8B               	movwf	??_i2c_int_handler& (0+255),b
  6636  000178  0E01               	movlw	1
  6637  00017A  0100               	movlb	0	; () banked
  6638  00017C  0100               	movlb	0	; () banked
  6639  00017E  6F95               	movwf	i2c_int_handler@data_read& (0+255),b
  6640  000180  0100               	movlb	0	; () banked
  6641  000182  518B               	movf	??_i2c_int_handler& (0+255),w,b
  6642  000184                     i2l2786:
  6643                           
  6644                           ; BSR set to: 0
  6645                           ;my_i2c.c: 127: }
  6646                           ;my_i2c.c: 132: if (!overrun_error) {
  6647  000184  0100               	movlb	0	; () banked
  6648  000186  0100               	movlb	0	; () banked
  6649  000188  6791               	tstfsz	i2c_int_handler@overrun_error& (0+255),b
  6650  00018A  D1CD               	goto	i2l269
  6651  00018C  D1B6               	goto	i2l2874
  6652  00018E                     i2l271:
  6653                           
  6654                           ; BSR set to: 0
  6655                           ;my_i2c.c: 135: {
  6656                           ;my_i2c.c: 137: if (SSPSTATbits.S == 1) {
  6657  00018E  A6C7               	btfss	4039,3,c	;volatile
  6658  000190  D1CA               	goto	i2l269
  6659                           
  6660                           ; BSR set to: 0
  6661                           ;my_i2c.c: 138: handle_start(data_read);
  6662  000192  C095  F02E         	movff	i2c_int_handler@data_read,?_handle_start
  6663  000196  ECE3  F007         	call	_handle_start	;wreg free
  6664                           
  6665                           ;my_i2c.c: 140: if (ic_ptr->status == 0x8) {
  6666  00019A  0100               	movlb	0	; () banked
  6667  00019C  EE20 F00C          	lfsr	2,12
  6668  0001A0  0100               	movlb	0	; () banked
  6669  0001A2  51C7               	movf	_ic_ptr& (0+255),w,b
  6670  0001A4  26D9               	addwf	fsr2l,f,c
  6671  0001A6  0100               	movlb	0	; () banked
  6672  0001A8  51C8               	movf	(_ic_ptr+1)& (0+255),w,b
  6673  0001AA  22DA               	addwfc	fsr2h,f,c
  6674  0001AC  0E08               	movlw	8
  6675  0001AE  62DF               	cpfseq	indf2,c
  6676  0001B0  D1BA               	goto	i2l269
  6677                           
  6678                           ; BSR set to: 0
  6679                           ;my_i2c.c: 141: data_read = 0;
  6680  0001B2  0100               	movlb	0	; () banked
  6681  0001B4  6F8B               	movwf	??_i2c_int_handler& (0+255),b
  6682  0001B6  0E00               	movlw	0
  6683  0001B8  0100               	movlb	0	; () banked
  6684  0001BA  0100               	movlb	0	; () banked
  6685  0001BC  6F95               	movwf	i2c_int_handler@data_read& (0+255),b
  6686  0001BE  0100               	movlb	0	; () banked
  6687  0001C0  518B               	movf	??_i2c_int_handler& (0+255),w,b
  6688                           
  6689                           ;my_i2c.c: 142: msg_to_send = 1;
  6690  0001C2  0100               	movlb	0	; () banked
  6691  0001C4  6F8B               	movwf	??_i2c_int_handler& (0+255),b
  6692  0001C6  0E01               	movlw	1
  6693  0001C8  0100               	movlb	0	; () banked
  6694  0001CA  0100               	movlb	0	; () banked
  6695  0001CC  6F92               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  6696  0001CE  D187               	goto	L7
  6697  0001D0                     i2l275:
  6698                           
  6699                           ; BSR set to: 0
  6700                           ;my_i2c.c: 148: {
  6701                           ;my_i2c.c: 150: if (SSPSTATbits.P == 1) {
  6702  0001D0  A8C7               	btfss	4039,4,c	;volatile
  6703  0001D2  D030               	goto	i2l2806
  6704                           
  6705                           ; BSR set to: 0
  6706                           ;my_i2c.c: 153: ic_ptr->event_count++;
  6707  0001D4  0100               	movlb	0	; () banked
  6708  0001D6  EE20 F00B          	lfsr	2,11
  6709  0001DA  0100               	movlb	0	; () banked
  6710  0001DC  51C7               	movf	_ic_ptr& (0+255),w,b
  6711  0001DE  26D9               	addwf	fsr2l,f,c
  6712  0001E0  0100               	movlb	0	; () banked
  6713  0001E2  51C8               	movf	(_ic_ptr+1)& (0+255),w,b
  6714  0001E4  22DA               	addwfc	fsr2h,f,c
  6715  0001E6  2ADF               	incf	indf2,f,c
  6716                           
  6717                           ; BSR set to: 0
  6718                           ;my_i2c.c: 154: if (data_read) {
  6719  0001E8  0100               	movlb	0	; () banked
  6720  0001EA  0100               	movlb	0	; () banked
  6721  0001EC  5195               	movf	i2c_int_handler@data_read& (0+255),w,b
  6722  0001EE  B4D8               	btfsc	status,2,c
  6723  0001F0  D179               	goto	L9
  6724                           
  6725                           ; BSR set to: 0
  6726                           ;my_i2c.c: 155: if (SSPSTATbits.D_A == 0) {
  6727  0001F2  BAC7               	btfsc	4039,5,c	;volatile
  6728  0001F4  D009               	goto	i2l2804
  6729                           
  6730                           ; BSR set to: 0
  6731                           ;my_i2c.c: 156: msg_ready = 1;
  6732  0001F6  0100               	movlb	0	; () banked
  6733  0001F8  6F8B               	movwf	??_i2c_int_handler& (0+255),b
  6734  0001FA  0E01               	movlw	1
  6735  0001FC  0100               	movlb	0	; () banked
  6736  0001FE  0100               	movlb	0	; () banked
  6737  000200  6F94               	movwf	i2c_int_handler@msg_ready& (0+255),b
  6738  000202  0100               	movlb	0	; () banked
  6739  000204  518B               	movf	??_i2c_int_handler& (0+255),w,b
  6740                           
  6741                           ;my_i2c.c: 157: } else {
  6742  000206  D16E               	goto	L9
  6743  000208                     i2l2804:
  6744                           
  6745                           ; BSR set to: 0
  6746                           ;my_i2c.c: 158: ic_ptr->error_count++;
  6747  000208  0100               	movlb	0	; () banked
  6748  00020A  EE20 F00E          	lfsr	2,14
  6749  00020E  0100               	movlb	0	; () banked
  6750  000210  51C7               	movf	_ic_ptr& (0+255),w,b
  6751  000212  26D9               	addwf	fsr2l,f,c
  6752  000214  0100               	movlb	0	; () banked
  6753  000216  51C8               	movf	(_ic_ptr+1)& (0+255),w,b
  6754  000218  22DA               	addwfc	fsr2h,f,c
  6755  00021A  2ADF               	incf	indf2,f,c
  6756                           
  6757                           ;my_i2c.c: 159: ic_ptr->error_code = 0x6;
  6758  00021C  0100               	movlb	0	; () banked
  6759  00021E  EE20 F00D          	lfsr	2,13
  6760  000222  0100               	movlb	0	; () banked
  6761  000224  51C7               	movf	_ic_ptr& (0+255),w,b
  6762  000226  26D9               	addwf	fsr2l,f,c
  6763  000228  0100               	movlb	0	; () banked
  6764  00022A  51C8               	movf	(_ic_ptr+1)& (0+255),w,b
  6765  00022C  22DA               	addwfc	fsr2h,f,c
  6766  00022E  0E06               	movlw	6
  6767  000230  6EDF               	movwf	indf2,c
  6768                           
  6769                           ; BSR set to: 0
  6770  000232  D158               	goto	L9
  6771  000234                     i2l2806:
  6772                           
  6773                           ; BSR set to: 0
  6774  000234  0100               	movlb	0	; () banked
  6775  000236  0100               	movlb	0	; () banked
  6776  000238  5195               	movf	i2c_int_handler@data_read& (0+255),w,b
  6777  00023A  B4D8               	btfsc	status,2,c
  6778  00023C  D174               	goto	i2l269
  6779                           
  6780                           ; BSR set to: 0
  6781                           ;my_i2c.c: 164: ic_ptr->event_count++;
  6782  00023E  0100               	movlb	0	; () banked
  6783  000240  EE20 F00B          	lfsr	2,11
  6784  000244  0100               	movlb	0	; () banked
  6785  000246  51C7               	movf	_ic_ptr& (0+255),w,b
  6786  000248  26D9               	addwf	fsr2l,f,c
  6787  00024A  0100               	movlb	0	; () banked
  6788  00024C  51C8               	movf	(_ic_ptr+1)& (0+255),w,b
  6789  00024E  22DA               	addwfc	fsr2h,f,c
  6790  000250  2ADF               	incf	indf2,f,c
  6791                           
  6792                           ; BSR set to: 0
  6793                           ;my_i2c.c: 165: if (SSPSTATbits.D_A == 0) {
  6794  000252  BAC7               	btfsc	4039,5,c	;volatile
  6795  000254  D019               	goto	i2l2822
  6796                           
  6797                           ; BSR set to: 0
  6798                           ;my_i2c.c: 166: if (SSPSTATbits.R_W == 0) {
  6799  000256  B4C7               	btfsc	4039,2,c	;volatile
  6800  000258  D00B               	goto	i2l2816
  6801                           
  6802                           ; BSR set to: 0
  6803                           ;my_i2c.c: 167: ic_ptr->status = 0x7;
  6804  00025A  0100               	movlb	0	; () banked
  6805  00025C  EE20 F00C          	lfsr	2,12
  6806  000260  0100               	movlb	0	; () banked
  6807  000262  51C7               	movf	_ic_ptr& (0+255),w,b
  6808  000264  26D9               	addwf	fsr2l,f,c
  6809  000266  0100               	movlb	0	; () banked
  6810  000268  51C8               	movf	(_ic_ptr+1)& (0+255),w,b
  6811  00026A  22DA               	addwfc	fsr2h,f,c
  6812  00026C  0E07               	movlw	7
  6813  00026E  D076               	goto	L6
  6814  000270                     i2l2816:
  6815                           
  6816                           ; BSR set to: 0
  6817                           ;my_i2c.c: 169: ic_ptr->status = 0x8;
  6818  000270  0100               	movlb	0	; () banked
  6819  000272  EE20 F00C          	lfsr	2,12
  6820  000276  0100               	movlb	0	; () banked
  6821  000278  51C7               	movf	_ic_ptr& (0+255),w,b
  6822  00027A  26D9               	addwf	fsr2l,f,c
  6823  00027C  0100               	movlb	0	; () banked
  6824  00027E  51C8               	movf	(_ic_ptr+1)& (0+255),w,b
  6825  000280  22DA               	addwfc	fsr2h,f,c
  6826  000282  0E08               	movlw	8
  6827  000284  6EDF               	movwf	indf2,c
  6828  000286  D11D               	goto	L10
  6829  000288                     i2l2822:
  6830                           
  6831                           ; BSR set to: 0
  6832                           ;my_i2c.c: 175: ic_ptr->error_count++;
  6833  000288  0100               	movlb	0	; () banked
  6834  00028A  EE20 F00E          	lfsr	2,14
  6835  00028E  0100               	movlb	0	; () banked
  6836  000290  51C7               	movf	_ic_ptr& (0+255),w,b
  6837  000292  26D9               	addwf	fsr2l,f,c
  6838  000294  0100               	movlb	0	; () banked
  6839  000296  51C8               	movf	(_ic_ptr+1)& (0+255),w,b
  6840  000298  22DA               	addwfc	fsr2h,f,c
  6841  00029A  2ADF               	incf	indf2,f,c
  6842                           
  6843                           ;my_i2c.c: 176: ic_ptr->status = 0x5;
  6844  00029C  0100               	movlb	0	; () banked
  6845  00029E  EE20 F00C          	lfsr	2,12
  6846  0002A2  0100               	movlb	0	; () banked
  6847  0002A4  51C7               	movf	_ic_ptr& (0+255),w,b
  6848  0002A6  26D9               	addwf	fsr2l,f,c
  6849  0002A8  0100               	movlb	0	; () banked
  6850  0002AA  51C8               	movf	(_ic_ptr+1)& (0+255),w,b
  6851  0002AC  22DA               	addwfc	fsr2h,f,c
  6852  0002AE  0E05               	movlw	5
  6853  0002B0  6EDF               	movwf	indf2,c
  6854                           
  6855                           ;my_i2c.c: 177: ic_ptr->error_code = 0x6;
  6856  0002B2  0100               	movlb	0	; () banked
  6857  0002B4  EE20 F00D          	lfsr	2,13
  6858  0002B8  0100               	movlb	0	; () banked
  6859  0002BA  51C7               	movf	_ic_ptr& (0+255),w,b
  6860  0002BC  26D9               	addwf	fsr2l,f,c
  6861  0002BE  0100               	movlb	0	; () banked
  6862  0002C0  51C8               	movf	(_ic_ptr+1)& (0+255),w,b
  6863  0002C2  22DA               	addwfc	fsr2h,f,c
  6864  0002C4  0E06               	movlw	6
  6865  0002C6  D04A               	goto	L6
  6866  0002C8                     i2l2824:
  6867                           
  6868                           ; BSR set to: 0
  6869                           ;my_i2c.c: 183: {
  6870                           ;my_i2c.c: 184: if (ic_ptr->outbufind < ic_ptr->outbuflen) {
  6871  0002C8  0100               	movlb	0	; () banked
  6872  0002CA  EE20 F01A          	lfsr	2,26
  6873  0002CE  0100               	movlb	0	; () banked
  6874  0002D0  51C7               	movf	_ic_ptr& (0+255),w,b
  6875  0002D2  26D9               	addwf	fsr2l,f,c
  6876  0002D4  0100               	movlb	0	; () banked
  6877  0002D6  51C8               	movf	(_ic_ptr+1)& (0+255),w,b
  6878  0002D8  22DA               	addwfc	fsr2h,f,c
  6879  0002DA  50DF               	movf	indf2,w,c
  6880  0002DC  0100               	movlb	0	; () banked
  6881  0002DE  6F8B               	movwf	??_i2c_int_handler& (0+255),b
  6882  0002E0  0100               	movlb	0	; () banked
  6883  0002E2  EE20 F019          	lfsr	2,25
  6884  0002E6  0100               	movlb	0	; () banked
  6885  0002E8  51C7               	movf	_ic_ptr& (0+255),w,b
  6886  0002EA  26D9               	addwf	fsr2l,f,c
  6887  0002EC  0100               	movlb	0	; () banked
  6888  0002EE  51C8               	movf	(_ic_ptr+1)& (0+255),w,b
  6889  0002F0  22DA               	addwfc	fsr2h,f,c
  6890  0002F2  50DF               	movf	indf2,w,c
  6891  0002F4  0100               	movlb	0	; () banked
  6892  0002F6  5D8B               	subwf	??_i2c_int_handler& (0+255),w,b
  6893  0002F8  B0D8               	btfsc	status,0,c
  6894  0002FA  D0F4               	goto	L9
  6895                           
  6896                           ; BSR set to: 0
  6897                           ;my_i2c.c: 185: SSPBUF = ic_ptr->outbuffer[ic_ptr->outbufind];
  6898  0002FC  0100               	movlb	0	; () banked
  6899  0002FE  EE20 F01A          	lfsr	2,26
  6900  000302  0100               	movlb	0	; () banked
  6901  000304  51C7               	movf	_ic_ptr& (0+255),w,b
  6902  000306  26D9               	addwf	fsr2l,f,c
  6903  000308  0100               	movlb	0	; () banked
  6904  00030A  51C8               	movf	(_ic_ptr+1)& (0+255),w,b
  6905  00030C  22DA               	addwfc	fsr2h,f,c
  6906  00030E  50DF               	movf	indf2,w,c
  6907  000310  0100               	movlb	0	; () banked
  6908  000312  6F8B               	movwf	??_i2c_int_handler& (0+255),b
  6909  000314  0100               	movlb	0	; () banked
  6910  000316  518B               	movf	??_i2c_int_handler& (0+255),w,b
  6911  000318  0D01               	mullw	1
  6912  00031A  0E0F               	movlw	15
  6913  00031C  26F3               	addwf	prodl,f,c
  6914  00031E  0E00               	movlw	0
  6915  000320  22F4               	addwfc	prodh,f,c
  6916  000322  50F3               	movf	prodl,w,c
  6917  000324  0100               	movlb	0	; () banked
  6918  000326  0100               	movlb	0	; () banked
  6919  000328  25C7               	addwf	_ic_ptr& (0+255),w,b
  6920  00032A  6ED9               	movwf	fsr2l,c
  6921  00032C  50F4               	movf	prodh,w,c
  6922  00032E  0100               	movlb	0	; () banked
  6923  000330  0100               	movlb	0	; () banked
  6924  000332  21C8               	addwfc	(_ic_ptr+1)& (0+255),w,b
  6925  000334  6EDA               	movwf	fsr2h,c
  6926  000336  50DF               	movf	indf2,w,c
  6927  000338  6EC9               	movwf	4041,c	;volatile
  6928                           
  6929                           ; BSR set to: 0
  6930                           ;my_i2c.c: 186: ic_ptr->outbufind++;
  6931  00033A  0100               	movlb	0	; () banked
  6932  00033C  EE20 F01A          	lfsr	2,26
  6933  000340  0100               	movlb	0	; () banked
  6934  000342  51C7               	movf	_ic_ptr& (0+255),w,b
  6935  000344  26D9               	addwf	fsr2l,f,c
  6936  000346  0100               	movlb	0	; () banked
  6937  000348  51C8               	movf	(_ic_ptr+1)& (0+255),w,b
  6938  00034A  22DA               	addwfc	fsr2h,f,c
  6939  00034C  2ADF               	incf	indf2,f,c
  6940                           
  6941                           ; BSR set to: 0
  6942                           ;my_i2c.c: 187: data_written = 1;
  6943  00034E  0100               	movlb	0	; () banked
  6944  000350  6F8B               	movwf	??_i2c_int_handler& (0+255),b
  6945  000352  0E01               	movlw	1
  6946  000354  0100               	movlb	0	; () banked
  6947  000356  0100               	movlb	0	; () banked
  6948  000358  6F90               	movwf	i2c_int_handler@data_written& (0+255),b
  6949  00035A  D0C1               	goto	L7
  6950  00035C                     L6:
  6951  00035C  6EDF               	movwf	indf2,c
  6952  00035E  D0E3               	goto	i2l269
  6953  000360                     i2l289:
  6954                           
  6955                           ; BSR set to: 0
  6956                           ;my_i2c.c: 195: {
  6957                           ;my_i2c.c: 197: if (SSPSTATbits.P == 1) {
  6958  000360  A8C7               	btfss	4039,4,c	;volatile
  6959  000362  D062               	goto	i2l2852
  6960                           
  6961                           ; BSR set to: 0
  6962                           ;my_i2c.c: 199: ic_ptr->event_count++;
  6963  000364  0100               	movlb	0	; () banked
  6964  000366  EE20 F00B          	lfsr	2,11
  6965  00036A  0100               	movlb	0	; () banked
  6966  00036C  51C7               	movf	_ic_ptr& (0+255),w,b
  6967  00036E  26D9               	addwf	fsr2l,f,c
  6968  000370  0100               	movlb	0	; () banked
  6969  000372  51C8               	movf	(_ic_ptr+1)& (0+255),w,b
  6970  000374  22DA               	addwfc	fsr2h,f,c
  6971  000376  2ADF               	incf	indf2,f,c
  6972                           
  6973                           ; BSR set to: 0
  6974                           ;my_i2c.c: 200: if (data_read) {
  6975  000378  0100               	movlb	0	; () banked
  6976  00037A  0100               	movlb	0	; () banked
  6977  00037C  5195               	movf	i2c_int_handler@data_read& (0+255),w,b
  6978  00037E  B4D8               	btfsc	status,2,c
  6979  000380  D04A               	goto	i2l2848
  6980                           
  6981                           ; BSR set to: 0
  6982                           ;my_i2c.c: 201: if (SSPSTATbits.D_A == 1) {
  6983  000382  AAC7               	btfss	4039,5,c	;volatile
  6984  000384  D027               	goto	i2l2846
  6985                           
  6986                           ; BSR set to: 0
  6987                           ;my_i2c.c: 202: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  6988  000386  0100               	movlb	0	; () banked
  6989  000388  EE20 F00A          	lfsr	2,10
  6990  00038C  0100               	movlb	0	; () banked
  6991  00038E  51C7               	movf	_ic_ptr& (0+255),w,b
  6992  000390  26D9               	addwf	fsr2l,f,c
  6993  000392  0100               	movlb	0	; () banked
  6994  000394  51C8               	movf	(_ic_ptr+1)& (0+255),w,b
  6995  000396  22DA               	addwfc	fsr2h,f,c
  6996  000398  50DF               	movf	indf2,w,c
  6997  00039A  0100               	movlb	0	; () banked
  6998  00039C  6F8B               	movwf	??_i2c_int_handler& (0+255),b
  6999  00039E  0100               	movlb	0	; () banked
  7000  0003A0  518B               	movf	??_i2c_int_handler& (0+255),w,b
  7001  0003A2  0D01               	mullw	1
  7002  0003A4  50F3               	movf	prodl,w,c
  7003  0003A6  0100               	movlb	0	; () banked
  7004  0003A8  0100               	movlb	0	; () banked
  7005  0003AA  25C7               	addwf	_ic_ptr& (0+255),w,b
  7006  0003AC  6ED9               	movwf	fsr2l,c
  7007  0003AE  50F4               	movf	prodh,w,c
  7008  0003B0  0100               	movlb	0	; () banked
  7009  0003B2  0100               	movlb	0	; () banked
  7010  0003B4  21C8               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7011  0003B6  6EDA               	movwf	fsr2h,c
  7012  0003B8  0100               	movlb	0	; () banked
  7013  0003BA  C093  FFDF         	movff	i2c_int_handler@i2c_data,indf2
  7014                           
  7015                           ; BSR set to: 0
  7016                           ;my_i2c.c: 203: ic_ptr->buflen++;
  7017  0003BE  0100               	movlb	0	; () banked
  7018  0003C0  EE20 F00A          	lfsr	2,10
  7019  0003C4  0100               	movlb	0	; () banked
  7020  0003C6  51C7               	movf	_ic_ptr& (0+255),w,b
  7021  0003C8  26D9               	addwf	fsr2l,f,c
  7022  0003CA  0100               	movlb	0	; () banked
  7023  0003CC  51C8               	movf	(_ic_ptr+1)& (0+255),w,b
  7024  0003CE  22DA               	addwfc	fsr2h,f,c
  7025  0003D0  2ADF               	incf	indf2,f,c
  7026  0003D2  D021               	goto	i2l2848
  7027  0003D4                     i2l2846:
  7028                           
  7029                           ; BSR set to: 0
  7030                           ;my_i2c.c: 206: ic_ptr->error_count++;
  7031  0003D4  0100               	movlb	0	; () banked
  7032  0003D6  EE20 F00E          	lfsr	2,14
  7033  0003DA  0100               	movlb	0	; () banked
  7034  0003DC  51C7               	movf	_ic_ptr& (0+255),w,b
  7035  0003DE  26D9               	addwf	fsr2l,f,c
  7036  0003E0  0100               	movlb	0	; () banked
  7037  0003E2  51C8               	movf	(_ic_ptr+1)& (0+255),w,b
  7038  0003E4  22DA               	addwfc	fsr2h,f,c
  7039  0003E6  2ADF               	incf	indf2,f,c
  7040                           
  7041                           ;my_i2c.c: 207: ic_ptr->error_code = 0x6;
  7042  0003E8  0100               	movlb	0	; () banked
  7043  0003EA  EE20 F00D          	lfsr	2,13
  7044  0003EE  0100               	movlb	0	; () banked
  7045  0003F0  51C7               	movf	_ic_ptr& (0+255),w,b
  7046  0003F2  26D9               	addwf	fsr2l,f,c
  7047  0003F4  0100               	movlb	0	; () banked
  7048  0003F6  51C8               	movf	(_ic_ptr+1)& (0+255),w,b
  7049  0003F8  22DA               	addwfc	fsr2h,f,c
  7050  0003FA  0E06               	movlw	6
  7051  0003FC  6EDF               	movwf	indf2,c
  7052                           
  7053                           ;my_i2c.c: 208: ic_ptr->status = 0x5;
  7054  0003FE  0100               	movlb	0	; () banked
  7055  000400  EE20 F00C          	lfsr	2,12
  7056  000404  0100               	movlb	0	; () banked
  7057  000406  51C7               	movf	_ic_ptr& (0+255),w,b
  7058  000408  26D9               	addwf	fsr2l,f,c
  7059  00040A  0100               	movlb	0	; () banked
  7060  00040C  51C8               	movf	(_ic_ptr+1)& (0+255),w,b
  7061  00040E  22DA               	addwfc	fsr2h,f,c
  7062  000410  0E05               	movlw	5
  7063  000412  6EDF               	movwf	indf2,c
  7064  000414  D067               	goto	L9
  7065  000416                     i2l2848:
  7066                           
  7067                           ; BSR set to: 0
  7068                           ;my_i2c.c: 211: msg_ready = 1;
  7069  000416  0100               	movlb	0	; () banked
  7070  000418  6F8B               	movwf	??_i2c_int_handler& (0+255),b
  7071  00041A  0E01               	movlw	1
  7072  00041C  0100               	movlb	0	; () banked
  7073  00041E  0100               	movlb	0	; () banked
  7074  000420  6F94               	movwf	i2c_int_handler@msg_ready& (0+255),b
  7075  000422  0100               	movlb	0	; () banked
  7076  000424  518B               	movf	??_i2c_int_handler& (0+255),w,b
  7077                           
  7078                           ; BSR set to: 0
  7079  000426  D05E               	goto	L9
  7080  000428                     i2l2852:
  7081                           
  7082                           ; BSR set to: 0
  7083  000428  0100               	movlb	0	; () banked
  7084  00042A  0100               	movlb	0	; () banked
  7085  00042C  5195               	movf	i2c_int_handler@data_read& (0+255),w,b
  7086  00042E  B4D8               	btfsc	status,2,c
  7087  000430  D07A               	goto	i2l269
  7088                           
  7089                           ; BSR set to: 0
  7090                           ;my_i2c.c: 215: ic_ptr->event_count++;
  7091  000432  0100               	movlb	0	; () banked
  7092  000434  EE20 F00B          	lfsr	2,11
  7093  000438  0100               	movlb	0	; () banked
  7094  00043A  51C7               	movf	_ic_ptr& (0+255),w,b
  7095  00043C  26D9               	addwf	fsr2l,f,c
  7096  00043E  0100               	movlb	0	; () banked
  7097  000440  51C8               	movf	(_ic_ptr+1)& (0+255),w,b
  7098  000442  22DA               	addwfc	fsr2h,f,c
  7099  000444  2ADF               	incf	indf2,f,c
  7100                           
  7101                           ; BSR set to: 0
  7102                           ;my_i2c.c: 216: if (SSPSTATbits.D_A == 1) {
  7103  000446  AAC7               	btfss	4039,5,c	;volatile
  7104  000448  D027               	goto	i2l297
  7105                           
  7106                           ; BSR set to: 0
  7107                           ;my_i2c.c: 217: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  7108  00044A  0100               	movlb	0	; () banked
  7109  00044C  EE20 F00A          	lfsr	2,10
  7110  000450  0100               	movlb	0	; () banked
  7111  000452  51C7               	movf	_ic_ptr& (0+255),w,b
  7112  000454  26D9               	addwf	fsr2l,f,c
  7113  000456  0100               	movlb	0	; () banked
  7114  000458  51C8               	movf	(_ic_ptr+1)& (0+255),w,b
  7115  00045A  22DA               	addwfc	fsr2h,f,c
  7116  00045C  50DF               	movf	indf2,w,c
  7117  00045E  0100               	movlb	0	; () banked
  7118  000460  6F8B               	movwf	??_i2c_int_handler& (0+255),b
  7119  000462  0100               	movlb	0	; () banked
  7120  000464  518B               	movf	??_i2c_int_handler& (0+255),w,b
  7121  000466  0D01               	mullw	1
  7122  000468  50F3               	movf	prodl,w,c
  7123  00046A  0100               	movlb	0	; () banked
  7124  00046C  0100               	movlb	0	; () banked
  7125  00046E  25C7               	addwf	_ic_ptr& (0+255),w,b
  7126  000470  6ED9               	movwf	fsr2l,c
  7127  000472  50F4               	movf	prodh,w,c
  7128  000474  0100               	movlb	0	; () banked
  7129  000476  0100               	movlb	0	; () banked
  7130  000478  21C8               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7131  00047A  6EDA               	movwf	fsr2h,c
  7132  00047C  0100               	movlb	0	; () banked
  7133  00047E  C093  FFDF         	movff	i2c_int_handler@i2c_data,indf2
  7134                           
  7135                           ; BSR set to: 0
  7136                           ;my_i2c.c: 218: ic_ptr->buflen++;
  7137  000482  0100               	movlb	0	; () banked
  7138  000484  EE20 F00A          	lfsr	2,10
  7139  000488  0100               	movlb	0	; () banked
  7140  00048A  51C7               	movf	_ic_ptr& (0+255),w,b
  7141  00048C  26D9               	addwf	fsr2l,f,c
  7142  00048E  0100               	movlb	0	; () banked
  7143  000490  51C8               	movf	(_ic_ptr+1)& (0+255),w,b
  7144  000492  22DA               	addwfc	fsr2h,f,c
  7145  000494  2ADF               	incf	indf2,f,c
  7146                           
  7147                           ;my_i2c.c: 219: } else {
  7148  000496  D047               	goto	i2l269
  7149  000498                     i2l297:
  7150                           
  7151                           ; BSR set to: 0
  7152                           ;my_i2c.c: 220: if (SSPSTATbits.R_W == 1) {
  7153  000498  A4C7               	btfss	4039,2,c	;volatile
  7154  00049A  D6B6               	goto	i2l2804
  7155                           
  7156                           ; BSR set to: 0
  7157                           ;my_i2c.c: 221: ic_ptr->status = 0x8;
  7158  00049C  0100               	movlb	0	; () banked
  7159  00049E  EE20 F00C          	lfsr	2,12
  7160  0004A2  0100               	movlb	0	; () banked
  7161  0004A4  51C7               	movf	_ic_ptr& (0+255),w,b
  7162  0004A6  26D9               	addwf	fsr2l,f,c
  7163  0004A8  0100               	movlb	0	; () banked
  7164  0004AA  51C8               	movf	(_ic_ptr+1)& (0+255),w,b
  7165  0004AC  22DA               	addwfc	fsr2h,f,c
  7166  0004AE  0E08               	movlw	8
  7167  0004B0  6EDF               	movwf	indf2,c
  7168                           
  7169                           ; BSR set to: 0
  7170                           ;my_i2c.c: 222: msg_ready = 1;
  7171  0004B2  0100               	movlb	0	; () banked
  7172  0004B4  6F8B               	movwf	??_i2c_int_handler& (0+255),b
  7173  0004B6  0E01               	movlw	1
  7174  0004B8  0100               	movlb	0	; () banked
  7175  0004BA  0100               	movlb	0	; () banked
  7176  0004BC  6F94               	movwf	i2c_int_handler@msg_ready& (0+255),b
  7177  0004BE  0100               	movlb	0	; () banked
  7178  0004C0  518B               	movf	??_i2c_int_handler& (0+255),w,b
  7179  0004C2                     L10:
  7180                           
  7181                           ; BSR set to: 0
  7182                           ;my_i2c.c: 223: msg_to_send = 1;
  7183  0004C2  0100               	movlb	0	; () banked
  7184  0004C4  6F8B               	movwf	??_i2c_int_handler& (0+255),b
  7185  0004C6  0E01               	movlw	1
  7186  0004C8  0100               	movlb	0	; () banked
  7187  0004CA  0100               	movlb	0	; () banked
  7188  0004CC  6F92               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  7189  0004CE  0100               	movlb	0	; () banked
  7190  0004D0  518B               	movf	??_i2c_int_handler& (0+255),w,b
  7191                           
  7192                           ; BSR set to: 0
  7193                           ;my_i2c.c: 225: data_read = 0;
  7194  0004D2  0100               	movlb	0	; () banked
  7195  0004D4  6F8B               	movwf	??_i2c_int_handler& (0+255),b
  7196  0004D6  0E00               	movlw	0
  7197  0004D8  0100               	movlb	0	; () banked
  7198  0004DA  0100               	movlb	0	; () banked
  7199  0004DC  6F95               	movwf	i2c_int_handler@data_read& (0+255),b
  7200  0004DE                     L7:
  7201  0004DE  0100               	movlb	0	; () banked
  7202  0004E0  518B               	movf	??_i2c_int_handler& (0+255),w,b
  7203                           
  7204                           ;my_i2c.c: 226: } else {
  7205  0004E2  D021               	goto	i2l269
  7206  0004E4                     L9:
  7207                           
  7208                           ;my_i2c.c: 229: ic_ptr->status = 0x5;
  7209  0004E4  0100               	movlb	0	; () banked
  7210  0004E6  EE20 F00C          	lfsr	2,12
  7211  0004EA  0100               	movlb	0	; () banked
  7212  0004EC  51C7               	movf	_ic_ptr& (0+255),w,b
  7213  0004EE  26D9               	addwf	fsr2l,f,c
  7214  0004F0  0100               	movlb	0	; () banked
  7215  0004F2  51C8               	movf	(_ic_ptr+1)& (0+255),w,b
  7216  0004F4  22DA               	addwfc	fsr2h,f,c
  7217  0004F6  0E05               	movlw	5
  7218  0004F8  D731               	goto	L6
  7219  0004FA                     i2l2874:
  7220                           
  7221                           ; BSR set to: 0
  7222  0004FA  0100               	movlb	0	; () banked
  7223  0004FC  EE20 F00C          	lfsr	2,12
  7224  000500  0100               	movlb	0	; () banked
  7225  000502  51C7               	movf	_ic_ptr& (0+255),w,b
  7226  000504  26D9               	addwf	fsr2l,f,c
  7227  000506  0100               	movlb	0	; () banked
  7228  000508  51C8               	movf	(_ic_ptr+1)& (0+255),w,b
  7229  00050A  22DA               	addwfc	fsr2h,f,c
  7230  00050C  50DF               	movf	indf2,w,c
  7231                           
  7232                           ; Switch size 1, requested type "space"
  7233                           ; Number of cases is 4, Range of values is 5 to 8
  7234                           ; switch strategies available:
  7235                           ; Name         Instructions Cycles
  7236                           ; simple_byte           13     7 (average)
  7237                           ;	Chosen strategy is simple_byte
  7238  00050E  0A05               	xorlw	5	; case 5
  7239  000510  B4D8               	btfsc	status,2,c
  7240  000512  D63D               	goto	i2l271
  7241  000514  0A03               	xorlw	3	; case 6
  7242  000516  B4D8               	btfsc	status,2,c
  7243  000518  D65B               	goto	i2l275
  7244  00051A  0A01               	xorlw	1	; case 7
  7245  00051C  B4D8               	btfsc	status,2,c
  7246  00051E  D720               	goto	i2l289
  7247  000520  0A0F               	xorlw	15	; case 8
  7248  000522  B4D8               	btfsc	status,2,c
  7249  000524  D6D1               	goto	i2l2824
  7250  000526                     i2l269:
  7251                           
  7252                           ; BSR set to: 0
  7253                           ;my_i2c.c: 236: }
  7254                           ;my_i2c.c: 239: if (data_read || data_written) {
  7255  000526  0100               	movlb	0	; () banked
  7256  000528  0100               	movlb	0	; () banked
  7257  00052A  6795               	tstfsz	i2c_int_handler@data_read& (0+255),b
  7258  00052C  D005               	goto	i2l303
  7259                           
  7260                           ; BSR set to: 0
  7261  00052E  0100               	movlb	0	; () banked
  7262  000530  0100               	movlb	0	; () banked
  7263  000532  5190               	movf	i2c_int_handler@data_written& (0+255),w,b
  7264  000534  B4D8               	btfsc	status,2,c
  7265  000536  D002               	goto	i2l2880
  7266  000538                     i2l303:
  7267                           
  7268                           ; BSR set to: 0
  7269                           ;my_i2c.c: 241: if (SSPCON1bits.CKP == 0) {
  7270  000538  A8C6               	btfss	4038,4,c	;volatile
  7271                           
  7272                           ; BSR set to: 0
  7273                           ;my_i2c.c: 242: SSPCON1bits.CKP = 1;
  7274  00053A  88C6               	bsf	4038,4,c	;volatile
  7275  00053C                     i2l2880:
  7276                           
  7277                           ; BSR set to: 0
  7278                           ;my_i2c.c: 243: }
  7279                           ;my_i2c.c: 244: }
  7280                           ;my_i2c.c: 247: if ((ic_ptr->buflen > 10 - 2) && (!msg_ready)) {
  7281  00053C  0100               	movlb	0	; () banked
  7282  00053E  EE20 F00A          	lfsr	2,10
  7283  000542  0100               	movlb	0	; () banked
  7284  000544  51C7               	movf	_ic_ptr& (0+255),w,b
  7285  000546  26D9               	addwf	fsr2l,f,c
  7286  000548  0100               	movlb	0	; () banked
  7287  00054A  51C8               	movf	(_ic_ptr+1)& (0+255),w,b
  7288  00054C  22DA               	addwfc	fsr2h,f,c
  7289  00054E  0E08               	movlw	8
  7290  000550  64DF               	cpfsgt	indf2,c
  7291  000552  D024               	goto	i2l2886
  7292                           
  7293                           ; BSR set to: 0
  7294  000554  0100               	movlb	0	; () banked
  7295  000556  0100               	movlb	0	; () banked
  7296  000558  6794               	tstfsz	i2c_int_handler@msg_ready& (0+255),b
  7297  00055A  D020               	goto	i2l2886
  7298                           
  7299                           ; BSR set to: 0
  7300                           ;my_i2c.c: 248: ic_ptr->status = 0x5;
  7301  00055C  0100               	movlb	0	; () banked
  7302  00055E  EE20 F00C          	lfsr	2,12
  7303  000562  0100               	movlb	0	; () banked
  7304  000564  51C7               	movf	_ic_ptr& (0+255),w,b
  7305  000566  26D9               	addwf	fsr2l,f,c
  7306  000568  0100               	movlb	0	; () banked
  7307  00056A  51C8               	movf	(_ic_ptr+1)& (0+255),w,b
  7308  00056C  22DA               	addwfc	fsr2h,f,c
  7309  00056E  0E05               	movlw	5
  7310  000570  6EDF               	movwf	indf2,c
  7311                           
  7312                           ;my_i2c.c: 249: ic_ptr->error_count++;
  7313  000572  0100               	movlb	0	; () banked
  7314  000574  EE20 F00E          	lfsr	2,14
  7315  000578  0100               	movlb	0	; () banked
  7316  00057A  51C7               	movf	_ic_ptr& (0+255),w,b
  7317  00057C  26D9               	addwf	fsr2l,f,c
  7318  00057E  0100               	movlb	0	; () banked
  7319  000580  51C8               	movf	(_ic_ptr+1)& (0+255),w,b
  7320  000582  22DA               	addwfc	fsr2h,f,c
  7321  000584  2ADF               	incf	indf2,f,c
  7322                           
  7323                           ;my_i2c.c: 250: ic_ptr->error_code = 0x7;
  7324  000586  0100               	movlb	0	; () banked
  7325  000588  EE20 F00D          	lfsr	2,13
  7326  00058C  0100               	movlb	0	; () banked
  7327  00058E  51C7               	movf	_ic_ptr& (0+255),w,b
  7328  000590  26D9               	addwf	fsr2l,f,c
  7329  000592  0100               	movlb	0	; () banked
  7330  000594  51C8               	movf	(_ic_ptr+1)& (0+255),w,b
  7331  000596  22DA               	addwfc	fsr2h,f,c
  7332  000598  0E07               	movlw	7
  7333  00059A  6EDF               	movwf	indf2,c
  7334  00059C                     i2l2886:
  7335                           
  7336                           ; BSR set to: 0
  7337                           ;my_i2c.c: 251: }
  7338                           ;my_i2c.c: 253: if (msg_ready) {
  7339  00059C  0100               	movlb	0	; () banked
  7340  00059E  0100               	movlb	0	; () banked
  7341  0005A0  5194               	movf	i2c_int_handler@msg_ready& (0+255),w,b
  7342  0005A2  B4D8               	btfsc	status,2,c
  7343  0005A4  D043               	goto	i2l2894
  7344                           
  7345                           ; BSR set to: 0
  7346                           ;my_i2c.c: 254: ic_ptr->buffer[ic_ptr->buflen] = ic_ptr->event_count;
  7347  0005A6  0100               	movlb	0	; () banked
  7348  0005A8  EE20 F00B          	lfsr	2,11
  7349  0005AC  0100               	movlb	0	; () banked
  7350  0005AE  51C7               	movf	_ic_ptr& (0+255),w,b
  7351  0005B0  26D9               	addwf	fsr2l,f,c
  7352  0005B2  0100               	movlb	0	; () banked
  7353  0005B4  51C8               	movf	(_ic_ptr+1)& (0+255),w,b
  7354  0005B6  22DA               	addwfc	fsr2h,f,c
  7355  0005B8  0100               	movlb	0	; () banked
  7356  0005BA  EE10 F00A          	lfsr	1,10
  7357  0005BE  0100               	movlb	0	; () banked
  7358  0005C0  51C7               	movf	_ic_ptr& (0+255),w,b
  7359  0005C2  26E1               	addwf	fsr1l,f,c
  7360  0005C4  0100               	movlb	0	; () banked
  7361  0005C6  51C8               	movf	(_ic_ptr+1)& (0+255),w,b
  7362  0005C8  22E2               	addwfc	fsr1h,f,c
  7363  0005CA  50E7               	movf	indf1,w,c
  7364  0005CC  0100               	movlb	0	; () banked
  7365  0005CE  6F8B               	movwf	??_i2c_int_handler& (0+255),b
  7366  0005D0  0100               	movlb	0	; () banked
  7367  0005D2  518B               	movf	??_i2c_int_handler& (0+255),w,b
  7368  0005D4  0D01               	mullw	1
  7369  0005D6  50F3               	movf	prodl,w,c
  7370  0005D8  0100               	movlb	0	; () banked
  7371  0005DA  0100               	movlb	0	; () banked
  7372  0005DC  25C7               	addwf	_ic_ptr& (0+255),w,b
  7373  0005DE  6EE1               	movwf	fsr1l,c
  7374  0005E0  50F4               	movf	prodh,w,c
  7375  0005E2  0100               	movlb	0	; () banked
  7376  0005E4  0100               	movlb	0	; () banked
  7377  0005E6  21C8               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7378  0005E8  6EE2               	movwf	fsr1h,c
  7379  0005EA  CFDF FFE7          	movff	indf2,indf1
  7380                           
  7381                           ; BSR set to: 0
  7382                           ;my_i2c.c: 255: ToMainHigh_sendmsg(ic_ptr->buflen + 1, 40, (void *) ic_ptr->buffer);
  7383  0005EE  0100               	movlb	0	; () banked
  7384  0005F0  EE20 F00A          	lfsr	2,10
  7385  0005F4  0100               	movlb	0	; () banked
  7386  0005F6  51C7               	movf	_ic_ptr& (0+255),w,b
  7387  0005F8  26D9               	addwf	fsr2l,f,c
  7388  0005FA  0100               	movlb	0	; () banked
  7389  0005FC  51C8               	movf	(_ic_ptr+1)& (0+255),w,b
  7390  0005FE  22DA               	addwfc	fsr2h,f,c
  7391  000600  50DF               	movf	indf2,w,c
  7392  000602  0100               	movlb	0	; () banked
  7393  000604  6F8B               	movwf	??_i2c_int_handler& (0+255),b
  7394  000606  0100               	movlb	0	; () banked
  7395  000608  298B               	incf	??_i2c_int_handler& (0+255),w,b
  7396  00060A  6E39               	movwf	?_ToMainHigh_sendmsg,c
  7397  00060C  0100               	movlb	0	; () banked
  7398  00060E  6F8C               	movwf	(??_i2c_int_handler+1)& (0+255),b
  7399  000610  0E28               	movlw	40
  7400  000612  6E3A               	movwf	?_ToMainHigh_sendmsg+1,c
  7401  000614  0100               	movlb	0	; () banked
  7402  000616  518C               	movf	(??_i2c_int_handler+1)& (0+255),w,b
  7403  000618  C0C7  F03B         	movff	_ic_ptr,?_ToMainHigh_sendmsg+2
  7404  00061C  C0C8  F03C         	movff	_ic_ptr+1,?_ToMainHigh_sendmsg+3
  7405  000620  EC87  F00C         	call	_ToMainHigh_sendmsg	;wreg free
  7406                           
  7407                           ;my_i2c.c: 257: ic_ptr->buflen = 0;
  7408  000624  0100               	movlb	0	; () banked
  7409  000626  EE20 F00A          	lfsr	2,10
  7410  00062A  D04A               	goto	L8
  7411  00062C                     i2l2894:
  7412                           
  7413                           ; BSR set to: 0
  7414  00062C  0100               	movlb	0	; () banked
  7415  00062E  EE20 F00E          	lfsr	2,14
  7416  000632  0100               	movlb	0	; () banked
  7417  000634  51C7               	movf	_ic_ptr& (0+255),w,b
  7418  000636  26D9               	addwf	fsr2l,f,c
  7419  000638  0100               	movlb	0	; () banked
  7420  00063A  51C8               	movf	(_ic_ptr+1)& (0+255),w,b
  7421  00063C  22DA               	addwfc	fsr2h,f,c
  7422  00063E  50DF               	movf	indf2,w,c
  7423  000640  B4D8               	btfsc	status,2,c
  7424  000642  D046               	goto	i2l2902
  7425                           
  7426                           ; BSR set to: 0
  7427                           ;my_i2c.c: 259: error_buf[0] = ic_ptr->error_count;
  7428  000644  0100               	movlb	0	; () banked
  7429  000646  EE20 F00E          	lfsr	2,14
  7430  00064A  0100               	movlb	0	; () banked
  7431  00064C  51C7               	movf	_ic_ptr& (0+255),w,b
  7432  00064E  26D9               	addwf	fsr2l,f,c
  7433  000650  0100               	movlb	0	; () banked
  7434  000652  51C8               	movf	(_ic_ptr+1)& (0+255),w,b
  7435  000654  22DA               	addwfc	fsr2h,f,c
  7436  000656  50DF               	movf	indf2,w,c
  7437  000658  0100               	movlb	0	; () banked
  7438  00065A  0100               	movlb	0	; () banked
  7439  00065C  6F8D               	movwf	i2c_int_handler@error_buf& (0+255),b
  7440                           
  7441                           ;my_i2c.c: 260: error_buf[1] = ic_ptr->error_code;
  7442  00065E  0100               	movlb	0	; () banked
  7443  000660  EE20 F00D          	lfsr	2,13
  7444  000664  0100               	movlb	0	; () banked
  7445  000666  51C7               	movf	_ic_ptr& (0+255),w,b
  7446  000668  26D9               	addwf	fsr2l,f,c
  7447  00066A  0100               	movlb	0	; () banked
  7448  00066C  51C8               	movf	(_ic_ptr+1)& (0+255),w,b
  7449  00066E  22DA               	addwfc	fsr2h,f,c
  7450  000670  50DF               	movf	indf2,w,c
  7451  000672  0100               	movlb	0	; () banked
  7452  000674  0100               	movlb	0	; () banked
  7453  000676  6F8E               	movwf	(i2c_int_handler@error_buf+1)& (0+255),b
  7454                           
  7455                           ;my_i2c.c: 261: error_buf[2] = ic_ptr->event_count;
  7456  000678  0100               	movlb	0	; () banked
  7457  00067A  EE20 F00B          	lfsr	2,11
  7458  00067E  0100               	movlb	0	; () banked
  7459  000680  51C7               	movf	_ic_ptr& (0+255),w,b
  7460  000682  26D9               	addwf	fsr2l,f,c
  7461  000684  0100               	movlb	0	; () banked
  7462  000686  51C8               	movf	(_ic_ptr+1)& (0+255),w,b
  7463  000688  22DA               	addwfc	fsr2h,f,c
  7464  00068A  50DF               	movf	indf2,w,c
  7465  00068C  0100               	movlb	0	; () banked
  7466  00068E  0100               	movlb	0	; () banked
  7467  000690  6F8F               	movwf	(i2c_int_handler@error_buf+2)& (0+255),b
  7468                           
  7469                           ; BSR set to: 0
  7470                           ;my_i2c.c: 262: ToMainHigh_sendmsg(sizeof (unsigned char) *3, 41, (void *) error_buf);
  7471  000692  0100               	movlb	0	; () banked
  7472  000694  6F8B               	movwf	??_i2c_int_handler& (0+255),b
  7473  000696  0E03               	movlw	3
  7474  000698  6E39               	movwf	?_ToMainHigh_sendmsg,c
  7475  00069A  0100               	movlb	0	; () banked
  7476  00069C  518B               	movf	??_i2c_int_handler& (0+255),w,b
  7477  00069E  0100               	movlb	0	; () banked
  7478  0006A0  6F8C               	movwf	(??_i2c_int_handler+1)& (0+255),b
  7479  0006A2  0E29               	movlw	41
  7480  0006A4  6E3A               	movwf	?_ToMainHigh_sendmsg+1,c
  7481  0006A6  0100               	movlb	0	; () banked
  7482  0006A8  518C               	movf	(??_i2c_int_handler+1)& (0+255),w,b
  7483  0006AA  0100               	movlb	0	; () banked
  7484  0006AC  0E00               	movlw	high i2c_int_handler@error_buf
  7485  0006AE  6E3C               	movwf	?_ToMainHigh_sendmsg+3,c
  7486  0006B0  0100               	movlb	0	; () banked
  7487  0006B2  0E8D               	movlw	low i2c_int_handler@error_buf
  7488  0006B4  6E3B               	movwf	?_ToMainHigh_sendmsg+2,c
  7489  0006B6  EC87  F00C         	call	_ToMainHigh_sendmsg	;wreg free
  7490                           
  7491                           ;my_i2c.c: 264: ic_ptr->error_count = 0;
  7492  0006BA  0100               	movlb	0	; () banked
  7493  0006BC  EE20 F00E          	lfsr	2,14
  7494  0006C0                     L8:
  7495  0006C0  0100               	movlb	0	; () banked
  7496  0006C2  51C7               	movf	_ic_ptr& (0+255),w,b
  7497  0006C4  26D9               	addwf	fsr2l,f,c
  7498  0006C6  0100               	movlb	0	; () banked
  7499  0006C8  51C8               	movf	(_ic_ptr+1)& (0+255),w,b
  7500  0006CA  22DA               	addwfc	fsr2h,f,c
  7501  0006CC  0E00               	movlw	0
  7502  0006CE  6EDF               	movwf	indf2,c
  7503  0006D0                     i2l2902:
  7504                           
  7505                           ; BSR set to: 0
  7506                           ;my_i2c.c: 265: }
  7507                           ;my_i2c.c: 266: if (msg_to_send) {
  7508  0006D0  0100               	movlb	0	; () banked
  7509  0006D2  0100               	movlb	0	; () banked
  7510  0006D4  5192               	movf	i2c_int_handler@msg_to_send& (0+255),w,b
  7511  0006D6  B4D8               	btfsc	status,2,c
  7512  0006D8  0012               	return	
  7513                           
  7514                           ; BSR set to: 0
  7515                           ;my_i2c.c: 268: ToMainHigh_sendmsg(0, 42, (void *) ic_ptr->buffer);
  7516  0006DA  0100               	movlb	0	; () banked
  7517  0006DC  6F8B               	movwf	??_i2c_int_handler& (0+255),b
  7518  0006DE  0E00               	movlw	0
  7519  0006E0  6E39               	movwf	?_ToMainHigh_sendmsg,c
  7520  0006E2  0100               	movlb	0	; () banked
  7521  0006E4  518B               	movf	??_i2c_int_handler& (0+255),w,b
  7522  0006E6  0100               	movlb	0	; () banked
  7523  0006E8  6F8C               	movwf	(??_i2c_int_handler+1)& (0+255),b
  7524  0006EA  0E2A               	movlw	42
  7525  0006EC  6E3A               	movwf	?_ToMainHigh_sendmsg+1,c
  7526  0006EE  0100               	movlb	0	; () banked
  7527  0006F0  518C               	movf	(??_i2c_int_handler+1)& (0+255),w,b
  7528  0006F2  C0C7  F03B         	movff	_ic_ptr,?_ToMainHigh_sendmsg+2
  7529  0006F6  C0C8  F03C         	movff	_ic_ptr+1,?_ToMainHigh_sendmsg+3
  7530  0006FA  EC87  F00C         	call	_ToMainHigh_sendmsg	;wreg free
  7531  0006FE  0012               	return	
  7532  000700                     __end_of_i2c_int_handler:
  7533                           	opt stack 0
  7534                           pclatu	equ	0xFFB
  7535                           pclath	equ	0xFFA
  7536                           tblptru	equ	0xFF8
  7537                           tblptrh	equ	0xFF7
  7538                           tblptrl	equ	0xFF6
  7539                           tablat	equ	0xFF5
  7540                           prodh	equ	0xFF4
  7541                           prodl	equ	0xFF3
  7542                           intcon	equ	0xFF2
  7543                           postinc0	equ	0xFEE
  7544                           fsr0h	equ	0xFEA
  7545                           fsr0l	equ	0xFE9
  7546                           wreg	equ	0xFE8
  7547                           indf1	equ	0xFE7
  7548                           postdec1	equ	0xFE5
  7549                           fsr1h	equ	0xFE2
  7550                           fsr1l	equ	0xFE1
  7551                           bsr	equ	0xFE0
  7552                           indf2	equ	0xFDF
  7553                           postinc2	equ	0xFDE
  7554                           postdec2	equ	0xFDD
  7555                           fsr2h	equ	0xFDA
  7556                           fsr2l	equ	0xFD9
  7557                           status	equ	0xFD8
  7558                           
  7559 ;; *************** function _handle_start *****************
  7560 ;; Defined at:
  7561 ;;		line 74 in file "../src/my_i2c.c"
  7562 ;; Parameters:    Size  Location     Type
  7563 ;;  data_read       1   45[COMRAM] unsigned char 
  7564 ;; Auto vars:     Size  Location     Type
  7565 ;;		None
  7566 ;; Return value:  Size  Location     Type
  7567 ;;		None               void
  7568 ;; Registers used:
  7569 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7570 ;; Tracked objects:
  7571 ;;		On entry : 0/0
  7572 ;;		On exit  : 0/0
  7573 ;;		Unchanged: 0/0
  7574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7575 ;;      Params:         1       0       0       0       0
  7576 ;;      Locals:         0       0       0       0       0
  7577 ;;      Temps:          0       0       0       0       0
  7578 ;;      Totals:         1       0       0       0       0
  7579 ;;Total ram usage:        1 bytes
  7580 ;; Hardware stack levels used:    1
  7581 ;; This function calls:
  7582 ;;		Nothing
  7583 ;; This function is called by:
  7584 ;;		_i2c_int_handler
  7585 ;; This function uses a non-reentrant model
  7586 ;;
  7587                           
  7588                           	psect	text47
  7589  000FC6                     __ptext47:
  7590                           	opt stack 0
  7591  000FC6                     _handle_start:
  7592                           	opt stack 19
  7593                           
  7594                           ;my_i2c.c: 75: ic_ptr->event_count = 1;
  7595                           
  7596                           ;incstack = 0
  7597                           ;incstack = 0
  7598  000FC6  0100               	movlb	0	; () banked
  7599  000FC8  EE20 F00B          	lfsr	2,11
  7600  000FCC  0100               	movlb	0	; () banked
  7601  000FCE  51C7               	movf	_ic_ptr& (0+255),w,b
  7602  000FD0  26D9               	addwf	fsr2l,f,c
  7603  000FD2  0100               	movlb	0	; () banked
  7604  000FD4  51C8               	movf	(_ic_ptr+1)& (0+255),w,b
  7605  000FD6  22DA               	addwfc	fsr2h,f,c
  7606  000FD8  0E01               	movlw	1
  7607  000FDA  6EDF               	movwf	indf2,c
  7608                           
  7609                           ;my_i2c.c: 76: ic_ptr->buflen = 0;
  7610  000FDC  0100               	movlb	0	; () banked
  7611  000FDE  EE20 F00A          	lfsr	2,10
  7612  000FE2  0100               	movlb	0	; () banked
  7613  000FE4  51C7               	movf	_ic_ptr& (0+255),w,b
  7614  000FE6  26D9               	addwf	fsr2l,f,c
  7615  000FE8  0100               	movlb	0	; () banked
  7616  000FEA  51C8               	movf	(_ic_ptr+1)& (0+255),w,b
  7617  000FEC  22DA               	addwfc	fsr2h,f,c
  7618  000FEE  0E00               	movlw	0
  7619  000FF0  6EDF               	movwf	indf2,c
  7620                           
  7621                           ; BSR set to: 0
  7622                           ;my_i2c.c: 78: if (data_read) {
  7623  000FF2  502E               	movf	handle_start@data_read,w,c
  7624  000FF4  B4D8               	btfsc	status,2,c
  7625  000FF6  D03D               	goto	i2l3202
  7626                           
  7627                           ; BSR set to: 0
  7628                           ;my_i2c.c: 79: if (SSPSTATbits.D_A == 1) {
  7629  000FF8  AAC7               	btfss	4039,5,c	;volatile
  7630  000FFA  D021               	goto	i2l259
  7631                           
  7632                           ; BSR set to: 0
  7633                           ;my_i2c.c: 82: ic_ptr->status = 0x5;
  7634  000FFC  0100               	movlb	0	; () banked
  7635  000FFE  EE20 F00C          	lfsr	2,12
  7636  001002  0100               	movlb	0	; () banked
  7637  001004  51C7               	movf	_ic_ptr& (0+255),w,b
  7638  001006  26D9               	addwf	fsr2l,f,c
  7639  001008  0100               	movlb	0	; () banked
  7640  00100A  51C8               	movf	(_ic_ptr+1)& (0+255),w,b
  7641  00100C  22DA               	addwfc	fsr2h,f,c
  7642  00100E  0E05               	movlw	5
  7643  001010  6EDF               	movwf	indf2,c
  7644                           
  7645                           ;my_i2c.c: 83: ic_ptr->error_count++;
  7646  001012  0100               	movlb	0	; () banked
  7647  001014  EE20 F00E          	lfsr	2,14
  7648  001018  0100               	movlb	0	; () banked
  7649  00101A  51C7               	movf	_ic_ptr& (0+255),w,b
  7650  00101C  26D9               	addwf	fsr2l,f,c
  7651  00101E  0100               	movlb	0	; () banked
  7652  001020  51C8               	movf	(_ic_ptr+1)& (0+255),w,b
  7653  001022  22DA               	addwfc	fsr2h,f,c
  7654  001024  2ADF               	incf	indf2,f,c
  7655                           
  7656                           ;my_i2c.c: 84: ic_ptr->error_code = 0x5;
  7657  001026  0100               	movlb	0	; () banked
  7658  001028  EE20 F00D          	lfsr	2,13
  7659  00102C  0100               	movlb	0	; () banked
  7660  00102E  51C7               	movf	_ic_ptr& (0+255),w,b
  7661  001030  26D9               	addwf	fsr2l,f,c
  7662  001032  0100               	movlb	0	; () banked
  7663  001034  51C8               	movf	(_ic_ptr+1)& (0+255),w,b
  7664  001036  22DA               	addwfc	fsr2h,f,c
  7665  001038  0E05               	movlw	5
  7666  00103A  6EDF               	movwf	indf2,c
  7667                           
  7668                           ;my_i2c.c: 85: } else {
  7669  00103C  0012               	return	
  7670  00103E                     i2l259:
  7671                           
  7672                           ; BSR set to: 0
  7673                           ;my_i2c.c: 86: if (SSPSTATbits.R_W == 1) {
  7674  00103E  A4C7               	btfss	4039,2,c	;volatile
  7675  001040  D00C               	goto	i2l3200
  7676                           
  7677                           ; BSR set to: 0
  7678                           ;my_i2c.c: 87: ic_ptr->status = 0x8;
  7679  001042  0100               	movlb	0	; () banked
  7680  001044  EE20 F00C          	lfsr	2,12
  7681  001048  0100               	movlb	0	; () banked
  7682  00104A  51C7               	movf	_ic_ptr& (0+255),w,b
  7683  00104C  26D9               	addwf	fsr2l,f,c
  7684  00104E  0100               	movlb	0	; () banked
  7685  001050  51C8               	movf	(_ic_ptr+1)& (0+255),w,b
  7686  001052  22DA               	addwfc	fsr2h,f,c
  7687  001054  0E08               	movlw	8
  7688  001056  6EDF               	movwf	indf2,c
  7689                           
  7690                           ;my_i2c.c: 88: } else {
  7691  001058  0012               	return	
  7692  00105A                     i2l3200:
  7693                           
  7694                           ; BSR set to: 0
  7695                           ;my_i2c.c: 89: ic_ptr->status = 0x7;
  7696  00105A  0100               	movlb	0	; () banked
  7697  00105C  EE20 F00C          	lfsr	2,12
  7698  001060  0100               	movlb	0	; () banked
  7699  001062  51C7               	movf	_ic_ptr& (0+255),w,b
  7700  001064  26D9               	addwf	fsr2l,f,c
  7701  001066  0100               	movlb	0	; () banked
  7702  001068  51C8               	movf	(_ic_ptr+1)& (0+255),w,b
  7703  00106A  22DA               	addwfc	fsr2h,f,c
  7704  00106C  0E07               	movlw	7
  7705  00106E  6EDF               	movwf	indf2,c
  7706  001070  0012               	return	
  7707  001072                     i2l3202:
  7708                           
  7709                           ; BSR set to: 0
  7710                           ;my_i2c.c: 93: ic_ptr->status = 0x6;
  7711  001072  0100               	movlb	0	; () banked
  7712  001074  EE20 F00C          	lfsr	2,12
  7713  001078  0100               	movlb	0	; () banked
  7714  00107A  51C7               	movf	_ic_ptr& (0+255),w,b
  7715  00107C  26D9               	addwf	fsr2l,f,c
  7716  00107E  0100               	movlb	0	; () banked
  7717  001080  51C8               	movf	(_ic_ptr+1)& (0+255),w,b
  7718  001082  22DA               	addwfc	fsr2h,f,c
  7719  001084  0E06               	movlw	6
  7720  001086  6EDF               	movwf	indf2,c
  7721  001088  0012               	return	
  7722  00108A                     __end_of_handle_start:
  7723                           	opt stack 0
  7724                           pclatu	equ	0xFFB
  7725                           pclath	equ	0xFFA
  7726                           tblptru	equ	0xFF8
  7727                           tblptrh	equ	0xFF7
  7728                           tblptrl	equ	0xFF6
  7729                           tablat	equ	0xFF5
  7730                           prodh	equ	0xFF4
  7731                           prodl	equ	0xFF3
  7732                           intcon	equ	0xFF2
  7733                           postinc0	equ	0xFEE
  7734                           fsr0h	equ	0xFEA
  7735                           fsr0l	equ	0xFE9
  7736                           wreg	equ	0xFE8
  7737                           indf1	equ	0xFE7
  7738                           postdec1	equ	0xFE5
  7739                           fsr1h	equ	0xFE2
  7740                           fsr1l	equ	0xFE1
  7741                           bsr	equ	0xFE0
  7742                           indf2	equ	0xFDF
  7743                           postinc2	equ	0xFDE
  7744                           postdec2	equ	0xFDD
  7745                           fsr2h	equ	0xFDA
  7746                           fsr2l	equ	0xFD9
  7747                           status	equ	0xFD8
  7748                           
  7749 ;; *************** function _ToMainHigh_sendmsg *****************
  7750 ;; Defined at:
  7751 ;;		line 126 in file "../src/messages.c"
  7752 ;; Parameters:    Size  Location     Type
  7753 ;;  length          1   56[COMRAM] unsigned char 
  7754 ;;  msgtype         1   57[COMRAM] unsigned char 
  7755 ;;  data            2   58[COMRAM] PTR void 
  7756 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), main@ic(28), 
  7757 ;; Auto vars:     Size  Location     Type
  7758 ;;		None
  7759 ;; Return value:  Size  Location     Type
  7760 ;;                  1    wreg      char 
  7761 ;; Registers used:
  7762 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7763 ;; Tracked objects:
  7764 ;;		On entry : 0/0
  7765 ;;		On exit  : 0/0
  7766 ;;		Unchanged: 0/0
  7767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7768 ;;      Params:         4       0       0       0       0
  7769 ;;      Locals:         0       0       0       0       0
  7770 ;;      Temps:          0       0       0       0       0
  7771 ;;      Totals:         4       0       0       0       0
  7772 ;;Total ram usage:        4 bytes
  7773 ;; Hardware stack levels used:    1
  7774 ;; Hardware stack levels required when called:    2
  7775 ;; This function calls:
  7776 ;;		i2_send_msg
  7777 ;; This function is called by:
  7778 ;;		_i2c_int_handler
  7779 ;;		_timer0_int_handler
  7780 ;; This function uses a non-reentrant model
  7781 ;;
  7782                           
  7783                           	psect	text48
  7784  00190E                     __ptext48:
  7785                           	opt stack 0
  7786  00190E                     _ToMainHigh_sendmsg:
  7787                           	opt stack 17
  7788                           
  7789                           ;messages.c: 132: return (send_msg(&ToMainHigh_MQ, length, msgtype, data));
  7790                           ;	Return value of _ToMainHigh_sendmsg is never used
  7791                           
  7792                           ; BSR set to: 0
  7793                           ;incstack = 0
  7794                           ;incstack = 0
  7795  00190E  0101               	movlb	1	; () banked
  7796  001910  0E01               	movlw	high _ToMainHigh_MQ
  7797  001912  0100               	movlb	0	; () banked
  7798  001914  0100               	movlb	0	; () banked
  7799  001916  6F81               	movwf	(?i2_send_msg+1)& (0+255),b
  7800  001918  0101               	movlb	1	; () banked
  7801  00191A  0E6C               	movlw	low _ToMainHigh_MQ
  7802  00191C  0100               	movlb	0	; () banked
  7803  00191E  6F80               	movwf	?i2_send_msg& (0+255),b
  7804  001920  C039  F082         	movff	ToMainHigh_sendmsg@length,?i2_send_msg+2
  7805  001924  C03A  F083         	movff	ToMainHigh_sendmsg@msgtype,?i2_send_msg+3
  7806  001928  C03B  F084         	movff	ToMainHigh_sendmsg@data,?i2_send_msg+4
  7807  00192C  C03C  F085         	movff	ToMainHigh_sendmsg@data+1,?i2_send_msg+5
  7808  001930  EC6A  F007         	call	i2_send_msg	;wreg free
  7809  001934  0012               	return	
  7810  001936                     __end_of_ToMainHigh_sendmsg:
  7811                           	opt stack 0
  7812                           pclatu	equ	0xFFB
  7813                           pclath	equ	0xFFA
  7814                           tblptru	equ	0xFF8
  7815                           tblptrh	equ	0xFF7
  7816                           tblptrl	equ	0xFF6
  7817                           tablat	equ	0xFF5
  7818                           prodh	equ	0xFF4
  7819                           prodl	equ	0xFF3
  7820                           intcon	equ	0xFF2
  7821                           postinc0	equ	0xFEE
  7822                           fsr0h	equ	0xFEA
  7823                           fsr0l	equ	0xFE9
  7824                           wreg	equ	0xFE8
  7825                           indf1	equ	0xFE7
  7826                           postdec1	equ	0xFE5
  7827                           fsr1h	equ	0xFE2
  7828                           fsr1l	equ	0xFE1
  7829                           bsr	equ	0xFE0
  7830                           indf2	equ	0xFDF
  7831                           postinc2	equ	0xFDE
  7832                           postdec2	equ	0xFDD
  7833                           fsr2h	equ	0xFDA
  7834                           fsr2l	equ	0xFD9
  7835                           status	equ	0xFD8
  7836                           
  7837 ;; *************** function i2_send_msg *****************
  7838 ;; Defined at:
  7839 ;;		line 24 in file "../src/messages.c"
  7840 ;; Parameters:    Size  Location     Type
  7841 ;;  send_msg        2    0[BANK0 ] PTR struct __msg_queue
  7842 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  7843 ;;  send_msg        1    2[BANK0 ] unsigned char 
  7844 ;;  send_msg        1    3[BANK0 ] unsigned char 
  7845 ;;  send_msg        2    4[BANK0 ] PTR void 
  7846 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), main@ic(28), 
  7847 ;; Auto vars:     Size  Location     Type
  7848 ;;  send_msg        2    9[BANK0 ] PTR struct __msg
  7849 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  7850 ;;  send_msg        2    6[BANK0 ] unsigned int 
  7851 ;;  send_msg        1    8[BANK0 ] unsigned char 
  7852 ;; Return value:  Size  Location     Type
  7853 ;;                  1    wreg      char 
  7854 ;; Registers used:
  7855 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7856 ;; Tracked objects:
  7857 ;;		On entry : 0/0
  7858 ;;		On exit  : 0/0
  7859 ;;		Unchanged: 0/0
  7860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7861 ;;      Params:         0       6       0       0       0
  7862 ;;      Locals:         0       5       0       0       0
  7863 ;;      Temps:          1       0       0       0       0
  7864 ;;      Totals:         1      11       0       0       0
  7865 ;;Total ram usage:       12 bytes
  7866 ;; Hardware stack levels used:    1
  7867 ;; Hardware stack levels required when called:    1
  7868 ;; This function calls:
  7869 ;;		i2_memcpy
  7870 ;; This function is called by:
  7871 ;;		_ToMainHigh_sendmsg
  7872 ;; This function uses a non-reentrant model
  7873 ;;
  7874                           
  7875                           	psect	text49
  7876  000ED4                     __ptext49:
  7877                           	opt stack 0
  7878  000ED4                     i2_send_msg:
  7879                           	opt stack 17
  7880                           
  7881                           ;messages.c: 25: unsigned char slot;
  7882                           ;messages.c: 27: msg *qmsg;
  7883                           ;messages.c: 28: size_t tlength = length;
  7884                           
  7885                           ;incstack = 0
  7886                           ;incstack = 0
  7887  000ED4  0100               	movlb	0	; () banked
  7888  000ED6  0100               	movlb	0	; () banked
  7889  000ED8  C082  F086         	movff	i2send_msg@length,i2send_msg@tlength
  7890  000EDC  0100               	movlb	0	; () banked
  7891  000EDE  0100               	movlb	0	; () banked
  7892  000EE0  6B87               	clrf	(i2send_msg@tlength+1)& (0+255),b
  7893                           
  7894                           ; BSR set to: 0
  7895                           ;messages.c: 38: slot = qptr->cur_write_ind;
  7896  000EE2  0100               	movlb	0	; () banked
  7897  000EE4  EE20 F034          	lfsr	2,52
  7898  000EE8  0100               	movlb	0	; () banked
  7899  000EEA  5180               	movf	i2send_msg@qptr& (0+255),w,b
  7900  000EEC  26D9               	addwf	fsr2l,f,c
  7901  000EEE  0100               	movlb	0	; () banked
  7902  000EF0  5181               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  7903  000EF2  22DA               	addwfc	fsr2h,f,c
  7904  000EF4  50DF               	movf	indf2,w,c
  7905  000EF6  0100               	movlb	0	; () banked
  7906  000EF8  0100               	movlb	0	; () banked
  7907  000EFA  6F88               	movwf	i2send_msg@slot& (0+255),b
  7908                           
  7909                           ; BSR set to: 0
  7910                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  7911  000EFC  0100               	movlb	0	; () banked
  7912  000EFE  0100               	movlb	0	; () banked
  7913  000F00  5188               	movf	i2send_msg@slot& (0+255),w,b
  7914  000F02  0D0D               	mullw	13
  7915  000F04  50F3               	movf	prodl,w,c
  7916  000F06  0100               	movlb	0	; () banked
  7917  000F08  0100               	movlb	0	; () banked
  7918  000F0A  2580               	addwf	i2send_msg@qptr& (0+255),w,b
  7919  000F0C  0100               	movlb	0	; () banked
  7920  000F0E  0100               	movlb	0	; () banked
  7921  000F10  6F89               	movwf	i2send_msg@qmsg& (0+255),b
  7922  000F12  50F4               	movf	prodh,w,c
  7923  000F14  0100               	movlb	0	; () banked
  7924  000F16  0100               	movlb	0	; () banked
  7925  000F18  2181               	addwfc	(i2send_msg@qptr+1)& (0+255),w,b
  7926  000F1A  0100               	movlb	0	; () banked
  7927  000F1C  6F8A               	movwf	(i2send_msg@qmsg+1)& (0+255),b
  7928                           
  7929                           ; BSR set to: 0
  7930                           ;messages.c: 41: if (qmsg->full != 0) {
  7931  000F1E  C089  FFD9         	movff	i2send_msg@qmsg,fsr2l
  7932  000F22  C08A  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  7933  000F26  50DF               	movf	indf2,w,c
  7934  000F28  B4D8               	btfsc	status,2,c
  7935  000F2A  D002               	goto	i2l3262
  7936                           
  7937                           ; BSR set to: 0
  7938                           ;messages.c: 42: return (-1);
  7939  000F2C  0EFF               	movlw	255
  7940  000F2E  0012               	return	
  7941  000F30                     i2l3262:
  7942                           
  7943                           ; BSR set to: 0
  7944                           ;messages.c: 43: }
  7945                           ;messages.c: 46: qmsg->length = length;
  7946  000F30  0100               	movlb	0	; () banked
  7947  000F32  EE20 F001          	lfsr	2,1
  7948  000F36  0100               	movlb	0	; () banked
  7949  000F38  5189               	movf	i2send_msg@qmsg& (0+255),w,b
  7950  000F3A  26D9               	addwf	fsr2l,f,c
  7951  000F3C  0100               	movlb	0	; () banked
  7952  000F3E  518A               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  7953  000F40  22DA               	addwfc	fsr2h,f,c
  7954  000F42  0100               	movlb	0	; () banked
  7955  000F44  C082  FFDF         	movff	i2send_msg@length,indf2
  7956                           
  7957                           ;messages.c: 47: qmsg->msgtype = msgtype;
  7958  000F48  0100               	movlb	0	; () banked
  7959  000F4A  EE20 F002          	lfsr	2,2
  7960  000F4E  0100               	movlb	0	; () banked
  7961  000F50  5189               	movf	i2send_msg@qmsg& (0+255),w,b
  7962  000F52  26D9               	addwf	fsr2l,f,c
  7963  000F54  0100               	movlb	0	; () banked
  7964  000F56  518A               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  7965  000F58  22DA               	addwfc	fsr2h,f,c
  7966  000F5A  0100               	movlb	0	; () banked
  7967  000F5C  C083  FFDF         	movff	i2send_msg@msgtype,indf2
  7968                           
  7969                           ; BSR set to: 0
  7970                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  7971  000F60  0E03               	movlw	3
  7972  000F62  0100               	movlb	0	; () banked
  7973  000F64  0100               	movlb	0	; () banked
  7974  000F66  2589               	addwf	i2send_msg@qmsg& (0+255),w,b
  7975  000F68  6E2E               	movwf	?i2_memcpy,c
  7976  000F6A  0E00               	movlw	0
  7977  000F6C  0100               	movlb	0	; () banked
  7978  000F6E  0100               	movlb	0	; () banked
  7979  000F70  218A               	addwfc	(i2send_msg@qmsg+1)& (0+255),w,b
  7980  000F72  6E2F               	movwf	?i2_memcpy+1,c
  7981  000F74  C084  F030         	movff	i2send_msg@data,?i2_memcpy+2
  7982  000F78  C085  F031         	movff	i2send_msg@data+1,?i2_memcpy+3
  7983  000F7C  C086  F032         	movff	i2send_msg@tlength,?i2_memcpy+4
  7984  000F80  C087  F033         	movff	i2send_msg@tlength+1,?i2_memcpy+5
  7985  000F84  EC9F  F00B         	call	i2_memcpy	;wreg free
  7986                           
  7987                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  7988  000F88  0100               	movlb	0	; () banked
  7989  000F8A  EE20 F034          	lfsr	2,52
  7990  000F8E  0100               	movlb	0	; () banked
  7991  000F90  5180               	movf	i2send_msg@qptr& (0+255),w,b
  7992  000F92  26D9               	addwf	fsr2l,f,c
  7993  000F94  0100               	movlb	0	; () banked
  7994  000F96  5181               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  7995  000F98  22DA               	addwfc	fsr2h,f,c
  7996  000F9A  0100               	movlb	0	; () banked
  7997  000F9C  EE10 F034          	lfsr	1,52
  7998  000FA0  0100               	movlb	0	; () banked
  7999  000FA2  5180               	movf	i2send_msg@qptr& (0+255),w,b
  8000  000FA4  26E1               	addwf	fsr1l,f,c
  8001  000FA6  0100               	movlb	0	; () banked
  8002  000FA8  5181               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  8003  000FAA  22E2               	addwfc	fsr1h,f,c
  8004  000FAC  50E7               	movf	indf1,w,c
  8005  000FAE  6E38               	movwf	??i2_send_msg& (0+255),c
  8006  000FB0  2838               	incf	??i2_send_msg,w,c
  8007  000FB2  0B03               	andlw	3
  8008  000FB4  6EDF               	movwf	indf2,c
  8009                           
  8010                           ; BSR set to: 0
  8011                           ;messages.c: 59: qmsg->full = 1;
  8012  000FB6  C089  FFD9         	movff	i2send_msg@qmsg,fsr2l
  8013  000FBA  C08A  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  8014  000FBE  0E01               	movlw	1
  8015  000FC0  6EDF               	movwf	indf2,c
  8016                           
  8017                           ; BSR set to: 0
  8018                           ;messages.c: 60: return (1);
  8019  000FC2  0E01               	movlw	1
  8020  000FC4  0012               	return	
  8021  000FC6                     __end_ofi2_send_msg:
  8022                           	opt stack 0
  8023                           pclatu	equ	0xFFB
  8024                           pclath	equ	0xFFA
  8025                           tblptru	equ	0xFF8
  8026                           tblptrh	equ	0xFF7
  8027                           tblptrl	equ	0xFF6
  8028                           tablat	equ	0xFF5
  8029                           prodh	equ	0xFF4
  8030                           prodl	equ	0xFF3
  8031                           intcon	equ	0xFF2
  8032                           postinc0	equ	0xFEE
  8033                           fsr0h	equ	0xFEA
  8034                           fsr0l	equ	0xFE9
  8035                           wreg	equ	0xFE8
  8036                           indf1	equ	0xFE7
  8037                           postdec1	equ	0xFE5
  8038                           fsr1h	equ	0xFE2
  8039                           fsr1l	equ	0xFE1
  8040                           bsr	equ	0xFE0
  8041                           indf2	equ	0xFDF
  8042                           postinc2	equ	0xFDE
  8043                           postdec2	equ	0xFDD
  8044                           fsr2h	equ	0xFDA
  8045                           fsr2l	equ	0xFD9
  8046                           status	equ	0xFD8
  8047                           
  8048 ;; *************** function i2_memcpy *****************
  8049 ;; Defined at:
  8050 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\memcpy.c"
  8051 ;; Parameters:    Size  Location     Type
  8052 ;;  memcpy          2   45[COMRAM] PTR void 
  8053 ;;		 -> timer0_int_handler@val(2), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  8054 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), 
  8055 ;;  memcpy          2   47[COMRAM] PTR const void 
  8056 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), 
  8057 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), main@ic(28), 
  8058 ;;  memcpy          2   49[COMRAM] unsigned int 
  8059 ;; Auto vars:     Size  Location     Type
  8060 ;;  memcpy          2   53[COMRAM] PTR const unsigned char 
  8061 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), 
  8062 ;;		 -> FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), main@ic(28), 
  8063 ;;  memcpy          2   51[COMRAM] PTR unsigned char 
  8064 ;;		 -> timer0_int_handler@val(2), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  8065 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), 
  8066 ;; Return value:  Size  Location     Type
  8067 ;;                  2   45[COMRAM] PTR void 
  8068 ;; Registers used:
  8069 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  8070 ;; Tracked objects:
  8071 ;;		On entry : 0/0
  8072 ;;		On exit  : 0/0
  8073 ;;		Unchanged: 0/0
  8074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8075 ;;      Params:         6       0       0       0       0
  8076 ;;      Locals:         4       0       0       0       0
  8077 ;;      Temps:          0       0       0       0       0
  8078 ;;      Totals:        10       0       0       0       0
  8079 ;;Total ram usage:       10 bytes
  8080 ;; Hardware stack levels used:    1
  8081 ;; This function calls:
  8082 ;;		Nothing
  8083 ;; This function is called by:
  8084 ;;		i2_send_msg
  8085 ;;		i2_recv_msg
  8086 ;; This function uses a non-reentrant model
  8087 ;;
  8088                           
  8089                           	psect	text50
  8090  00173E                     __ptext50:
  8091                           	opt stack 0
  8092  00173E                     i2_memcpy:
  8093                           	opt stack 17
  8094                           
  8095                           ; BSR set to: 0
  8096                           ;incstack = 0
  8097                           ;incstack = 0
  8098  00173E  C030  F036         	movff	i2memcpy@s1,i2memcpy@s
  8099  001742  C031  F037         	movff	i2memcpy@s1+1,i2memcpy@s+1
  8100  001746  C02E  F034         	movff	i2memcpy@d1,i2memcpy@d
  8101  00174A  C02F  F035         	movff	i2memcpy@d1+1,i2memcpy@d+1
  8102  00174E  D00E               	goto	i2l3324
  8103  001750                     i2l3318:
  8104  001750  C036  FFD9         	movff	i2memcpy@s,fsr2l
  8105  001754  C037  FFDA         	movff	i2memcpy@s+1,fsr2h
  8106  001758  C034  FFE1         	movff	i2memcpy@d,fsr1l
  8107  00175C  C035  FFE2         	movff	i2memcpy@d+1,fsr1h
  8108  001760  CFDF FFE7          	movff	indf2,indf1
  8109  001764  4A36               	infsnz	i2memcpy@s,f,c
  8110  001766  2A37               	incf	i2memcpy@s+1,f,c
  8111  001768  4A34               	infsnz	i2memcpy@d,f,c
  8112  00176A  2A35               	incf	i2memcpy@d+1,f,c
  8113  00176C                     i2l3324:
  8114  00176C  0632               	decf	i2memcpy@n,f,c
  8115  00176E  A0D8               	btfss	status,0,c
  8116  001770  0633               	decf	i2memcpy@n+1,f,c
  8117  001772  2832               	incf	i2memcpy@n& (0+255),w,c
  8118  001774  B4D8               	btfsc	status,2,c
  8119  001776  2833               	incf	(i2memcpy@n+1)& (0+255),w,c
  8120  001778  B4D8               	btfsc	status,2,c
  8121                           
  8122                           ;	Return value of i2_memcpy is never used
  8123  00177A  0012               	return	
  8124  00177C  D7E9               	goto	i2l3318
  8125  00177E                     __end_ofi2_memcpy:
  8126                           	opt stack 0
  8127  0000                     pclatu	equ	0xFFB
  8128                           pclath	equ	0xFFA
  8129                           tblptru	equ	0xFF8
  8130                           tblptrh	equ	0xFF7
  8131                           tblptrl	equ	0xFF6
  8132                           tablat	equ	0xFF5
  8133                           prodh	equ	0xFF4
  8134                           prodl	equ	0xFF3
  8135                           intcon	equ	0xFF2
  8136                           postinc0	equ	0xFEE
  8137                           fsr0h	equ	0xFEA
  8138                           fsr0l	equ	0xFE9
  8139                           wreg	equ	0xFE8
  8140                           indf1	equ	0xFE7
  8141                           postdec1	equ	0xFE5
  8142                           fsr1h	equ	0xFE2
  8143                           fsr1l	equ	0xFE1
  8144                           bsr	equ	0xFE0
  8145                           indf2	equ	0xFDF
  8146                           postinc2	equ	0xFDE
  8147                           postdec2	equ	0xFDD
  8148                           fsr2h	equ	0xFDA
  8149                           fsr2l	equ	0xFD9
  8150                           status	equ	0xFD8
  8151                           pclatu	equ	0xFFB
  8152                           pclath	equ	0xFFA
  8153                           tblptru	equ	0xFF8
  8154                           tblptrh	equ	0xFF7
  8155                           tblptrl	equ	0xFF6
  8156                           tablat	equ	0xFF5
  8157                           prodh	equ	0xFF4
  8158                           prodl	equ	0xFF3
  8159                           intcon	equ	0xFF2
  8160                           postinc0	equ	0xFEE
  8161                           fsr0h	equ	0xFEA
  8162                           fsr0l	equ	0xFE9
  8163                           wreg	equ	0xFE8
  8164                           indf1	equ	0xFE7
  8165                           postdec1	equ	0xFE5
  8166                           fsr1h	equ	0xFE2
  8167                           fsr1l	equ	0xFE1
  8168                           bsr	equ	0xFE0
  8169                           indf2	equ	0xFDF
  8170                           postinc2	equ	0xFDE
  8171                           postdec2	equ	0xFDD
  8172                           fsr2h	equ	0xFDA
  8173                           fsr2l	equ	0xFD9
  8174                           status	equ	0xFD8
  8175                           
  8176                           	psect	rparam
  8177  0000                     pclatu	equ	0xFFB
  8178                           pclath	equ	0xFFA
  8179                           tblptru	equ	0xFF8
  8180                           tblptrh	equ	0xFF7
  8181                           tblptrl	equ	0xFF6
  8182                           tablat	equ	0xFF5
  8183                           prodh	equ	0xFF4
  8184                           prodl	equ	0xFF3
  8185                           intcon	equ	0xFF2
  8186                           postinc0	equ	0xFEE
  8187                           fsr0h	equ	0xFEA
  8188                           fsr0l	equ	0xFE9
  8189                           wreg	equ	0xFE8
  8190                           indf1	equ	0xFE7
  8191                           postdec1	equ	0xFE5
  8192                           fsr1h	equ	0xFE2
  8193                           fsr1l	equ	0xFE1
  8194                           bsr	equ	0xFE0
  8195                           indf2	equ	0xFDF
  8196                           postinc2	equ	0xFDE
  8197                           postdec2	equ	0xFDD
  8198                           fsr2h	equ	0xFDA
  8199                           fsr2l	equ	0xFD9
  8200                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         558
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     60      82
    BANK0           128     71      73
    BANK1           256      0     216
    BANK2           256     50      50
    BANK3           256      0       0

Pointer List with Targets:

    ?_ReadADC	int  size(2) Largest target is 0

    ?_memcpy	PTR void  size(2) Largest target is 54
		 -> timer0_int_handler@val(BANK0[2]), FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), 
		 -> ToMainLow_MQ(BANK1[54]), main@msgbuffer(BANK2[11]), 

    uart_lthread@uptr	PTR struct __uart_thread_struct size(2) Largest target is 2
		 -> main@uthread_data(BANK2[2]), 

    timer1_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    ?___awdiv	int  size(2) Largest target is 0

    timer0_lthread@tptr	PTR struct __timer0_thread_struct size(2) Largest target is 2
		 -> main@t0thread_data(BANK2[2]), 

    ?_in_high_int	int  size(2) Largest target is 0

    memcpy@d1	PTR void  size(2) Largest target is 54
		 -> timer0_int_handler@val(BANK0[2]), FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), 
		 -> ToMainLow_MQ(BANK1[54]), main@msgbuffer(BANK2[11]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 54
		 -> timer0_int_handler@val(BANK0[2]), FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), 
		 -> ToMainLow_MQ(BANK1[54]), main@msgbuffer(BANK2[11]), 

    memcpy@s1	PTR const void  size(2) Largest target is 54
		 -> timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), i2c_int_handler@error_buf(BANK0[3]), FromMainHigh_MQ(BANK1[54]), 
		 -> FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), main@ic(BANK2[28]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 54
		 -> timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), i2c_int_handler@error_buf(BANK0[3]), FromMainHigh_MQ(BANK1[54]), 
		 -> FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), main@ic(BANK2[28]), 

    uart_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK2[2]), 

    init_timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK2[2]), 

    timer0_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    timer0_lthread@msgval	PTR unsigned int  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    uc_ptr	PTR struct __uart_comm size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    init_i2c@ic	PTR struct __i2c_comm size(2) Largest target is 28
		 -> main@ic(BANK2[28]), 

    start_i2c_slave_reply@msg	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    ic_ptr	PTR struct __i2c_comm size(2) Largest target is 28
		 -> NULL(NULL[0]), main@ic(BANK2[28]), 

    check_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    FromMainHigh_recvmsg@data	PTR void  size(2) Largest target is 2
		 -> timer0_int_handler@val(BANK0[2]), 

    FromMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 2
		 -> timer0_int_handler@msgtype(BANK0[2]), 

    ToMainHigh_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    ToMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK2[1]), 

    ToMainHigh_sendmsg@data	PTR void  size(2) Largest target is 28
		 -> timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), i2c_int_handler@error_buf(BANK0[3]), main@ic(BANK2[28]), 

    ToMainLow_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    ToMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK2[1]), 

    ToMainLow_sendmsg@data	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    recv_msg@msgtype	PTR unsigned char  size(2) Largest target is 2
		 -> timer0_int_handler@msgtype(BANK0[2]), main@msgtype(BANK2[1]), 

    recv_msg@data	PTR void  size(2) Largest target is 11
		 -> timer0_int_handler@val(BANK0[2]), main@msgbuffer(BANK2[11]), 

    recv_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    recv_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    sp__memcpy	PTR void  size(2) Largest target is 54
		 -> timer0_int_handler@val(BANK0[2]), FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), 
		 -> ToMainLow_MQ(BANK1[54]), main@msgbuffer(BANK2[11]), 

    send_msg@data	PTR void  size(2) Largest target is 28
		 -> timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), i2c_int_handler@error_buf(BANK0[3]), main@ic(BANK2[28]), 

    send_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    send_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    init_queue@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptHandlerHigh in COMRAM

    _SleepIfOkay->i2_in_low_int
    i2_in_low_int->i2_in_high_int
    _adc_int_handler->_ReadADC
    _timer0_int_handler->_ToMainHigh_sendmsg
    _FromMainHigh_recvmsg->i2_recv_msg
    i2_recv_msg->i2_memcpy
    _i2c_int_handler->_ToMainHigh_sendmsg
    _ToMainHigh_sendmsg->i2_send_msg
    i2_send_msg->i2_memcpy
    _InterruptHandlerLow->_uart_recv_int_handler
    _uart_recv_int_handler->_ToMainLow_sendmsg
    _ToMainLow_sendmsg->_send_msg
    _send_msg->i1_memcpy
    _timer1_int_handler->_WriteTimer1

Critical Paths under _main in BANK0

    _main->_ToMainHigh_recvmsg
    _main->_ToMainLow_recvmsg
    _ToMainLow_recvmsg->_recv_msg
    _ToMainHigh_recvmsg->_recv_msg
    _recv_msg->_memcpy
    _block_on_To_msgqueues->_in_main
    _in_main->_in_low_int
    _in_low_int->_in_high_int
    _init_queues->_init_queue

Critical Paths under _InterruptHandlerHigh in BANK0

    _InterruptHandlerHigh->_timer0_int_handler
    _timer0_int_handler->_FromMainHigh_recvmsg
    _FromMainHigh_recvmsg->i2_recv_msg
    _ToMainHigh_sendmsg->i2_send_msg

Critical Paths under _main in BANK1

    None.

Critical Paths under _InterruptHandlerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptHandlerHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptHandlerHigh in BANK3

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                60    60      0    4367
                                             68 BANK0      3     3      0
                                              0 BANK2     50    50      0
                  _enable_interrupts
                           _init_i2c
                _init_timer1_lthread
                        _init_queues
                         _OpenTimer1
                            _OpenADC
                _i2c_configure_slave
              _block_on_To_msgqueues
                 _ToMainHigh_recvmsg
                     _timer0_lthread
              _start_i2c_slave_reply
                  _ToMainLow_recvmsg
                     _timer1_lthread
                       _uart_lthread
                            ___awdiv
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     445
                                             39 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (1) _uart_lthread                                         8     0      8     124
                                             39 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (1) _timer1_lthread                                       9     1      8      31
                                             39 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (1) _ToMainLow_recvmsg                                    5     0      5     772
                                             63 BANK0      5     0      5
                           _recv_msg
 ---------------------------------------------------------------------------------
 (1) _start_i2c_slave_reply                                5     2      3      93
                                             39 BANK0      5     2      3
 ---------------------------------------------------------------------------------
 (1) _timer0_lthread                                      10     2      8      34
                                             39 BANK0     10     2      8
 ---------------------------------------------------------------------------------
 (1) _ToMainHigh_recvmsg                                   5     0      5     772
                                             63 BANK0      5     0      5
                           _recv_msg
 ---------------------------------------------------------------------------------
 (2) _recv_msg                                            14     7      7     679
                                             49 BANK0     14     7      7
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _memcpy                                              10     4      6     174
                                             39 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (1) _block_on_To_msgqueues                                1     1      0      93
                                             45 BANK0      1     1      0
                            _in_main
                          _check_msg
                        _Delay1KTCYx
 ---------------------------------------------------------------------------------
 (2) _Delay1KTCYx                                          1     0      1      31
                                             39 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 (2) _check_msg                                            3     1      2      62
                                             39 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _in_main                                              2     0      2       0
                                             43 BANK0      2     0      2
                        _in_high_int
                         _in_low_int
 ---------------------------------------------------------------------------------
 (3) _in_low_int                                           2     0      2       0
                                             41 BANK0      2     0      2
                        _in_high_int
 ---------------------------------------------------------------------------------
 (4) _in_high_int                                          2     0      2       0
                                             39 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _i2c_configure_slave                                  1     0      1      31
                                             39 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 (1) _OpenADC                                              5     2      3     217
                                             39 BANK0      5     2      3
 ---------------------------------------------------------------------------------
 (1) _OpenTimer1                                           1     0      1      93
                                             39 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 (1) _init_queues                                          1     1      0     192
                                             43 BANK0      1     1      0
                         _init_queue
 ---------------------------------------------------------------------------------
 (2) _init_queue                                           4     2      2     192
                                             39 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _init_timer1_lthread                                  2     0      2      31
                                             39 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_i2c                                             2     0      2      31
                                             39 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _enable_interrupts                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _InterruptHandlerLow                                 17    17      0    1111
                                             28 COMRAM    17    17      0
                 _timer1_int_handler
              _uart_recv_int_handler
 ---------------------------------------------------------------------------------
 (6) _uart_recv_int_handler                                2     2      0    1066
                                             26 COMRAM     2     2      0
                  _ToMainLow_sendmsg
                          _ReadUSART
 ---------------------------------------------------------------------------------
 (7) _ReadUSART                                            1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _ToMainLow_sendmsg                                    4     0      4    1051
                                             22 COMRAM     4     0      4
                           _send_msg
 ---------------------------------------------------------------------------------
 (8) _send_msg                                            12     6      6     958
                                             10 COMRAM    12     6      6
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (9) i1_memcpy                                            10     4      6     484
                                              0 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (6) _timer1_int_handler                                   0     0      0      45
                         _ConvertADC
                        _WriteTimer1
 ---------------------------------------------------------------------------------
 (7) _WriteTimer1                                          4     2      2      45
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _ConvertADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _InterruptHandlerHigh                               14    14      0    6832
                                             25 BANK0     14    14      0
                    _i2c_int_handler
                 _timer0_int_handler
                    _adc_int_handler
                        _SleepIfOkay
 ---------------------------------------------------------------------------------
 (11) _SleepIfOkay                                         0     0      0     146
                   _enter_sleep_mode
                      i2_in_high_int
                       i2_in_low_int
                        i2_check_msg
 ---------------------------------------------------------------------------------
 (12) i2_check_msg                                         3     1      2     146
                                             45 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (12) i2_in_low_int                                        2     0      2       0
                                             47 COMRAM     2     0      2
                      i2_in_high_int
 ---------------------------------------------------------------------------------
 (13) i2_in_high_int                                       2     0      2       0
                                             45 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (12) _enter_sleep_mode                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _adc_int_handler                                     2     2      0       0
                                             47 COMRAM     2     2      0
                            _ReadADC
                        _CloseTimer1
 ---------------------------------------------------------------------------------
 (12) _CloseTimer1                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _ReadADC                                             2     0      2       0
                                             45 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (11) _timer0_int_handler                                  8     8      0    4162
                                             17 BANK0      8     8      0
                 _ToMainHigh_sendmsg
               _FromMainHigh_recvmsg
                        _WriteTimer0
 ---------------------------------------------------------------------------------
 (12) _WriteTimer0                                         4     2      2      68
                                             45 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (12) _FromMainHigh_recvmsg                                5     0      5    2000
                                             12 BANK0      5     0      5
                         i2_recv_msg
 ---------------------------------------------------------------------------------
 (13) i2_recv_msg                                         14     7      7    1907
                                             55 COMRAM     2     2      0
                                              0 BANK0     12     5      7
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (11) _i2c_int_handler                                    11    11      0    2524
                                             11 BANK0     11    11      0
                 _ToMainHigh_sendmsg
                       _handle_start
 ---------------------------------------------------------------------------------
 (12) _handle_start                                        1     0      1      31
                                             45 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (12) _ToMainHigh_sendmsg                                  4     0      4    1912
                                             56 COMRAM     4     0      4
                         i2_send_msg
 ---------------------------------------------------------------------------------
 (13) i2_send_msg                                         12     6      6    1819
                                             55 COMRAM     1     1      0
                                              0 BANK0     11     5      6
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (14) i2_memcpy                                           10     4      6     484
                                             45 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _enable_interrupts
   _init_i2c
   _init_timer1_lthread
   _init_queues
     _init_queue
   _OpenTimer1
   _OpenADC
   _i2c_configure_slave
   _block_on_To_msgqueues
     _in_main
       _in_high_int
       _in_low_int
         _in_high_int
     _check_msg
     _Delay1KTCYx
   _ToMainHigh_recvmsg
     _recv_msg
       _memcpy
   _timer0_lthread
   _start_i2c_slave_reply
   _ToMainLow_recvmsg
     _recv_msg
       _memcpy
   _timer1_lthread
   _uart_lthread
   ___awdiv

 _InterruptHandlerLow (ROOT)
   _timer1_int_handler
     _ConvertADC
     _WriteTimer1
   _uart_recv_int_handler
     _ToMainLow_sendmsg
       _send_msg
         i1_memcpy
     _ReadUSART

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3FF      0     140      12       31.3%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100     32      32       8       19.5%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0      D8       6       84.4%
BITBANK0            80      0       0       3        0.0%
BANK0               80     47      49       4       57.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     3C      52       1       64.6%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0      22       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1A5      11        0.0%
DATA                 0      0     307      13        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.20 build 52243 
Symbol Table                                                                                   Tue Sep 24 08:25:16 2013

              main@uthread_data 020B                               _x 0232        _MQ_Main_Willing_to_block 0050  
                   _SSPSTATbits 000FC7                              l95 07B2       __end_of_ToMainLow_recvmsg 18B6  
                  ___awdiv@sign 00AD                              bsr 000FE0       __end_of_ToMainLow_sendmsg 19A0  
                  __CFG_CP0$OFF 000000               i2recv_msg@msgtype 0083               i2recv_msg@tlength 0088  
                           l103 084C                             l408 1444                             l445 183E  
                           l447 1856                             l448 1858                             l682 19BE  
          __size_of_WriteTimer0 0012            __size_of_WriteTimer1 0012                  _FromMainLow_MQ 0136  
                           wreg 000FE8                    __CFG_IESO$ON 000000                    ?_in_high_int 00A7  
           i2recv_msg@maxlength 0082                            l3012 1840                            l3114 1490  
                          l3122 159C                            l3220 0D08                            l3070 1102  
                          l3062 10D6                            l3054 10AA                            l3142 0AD2  
                          l3230 0D4E                            l3214 0CEA                            l3128 15C0  
                          l3082 0DE2                            l3226 0D34                            l3242 0DA8  
                          l3228 0D46                            l3158 0B90                            l3086 0E66  
                          l3246 0DC0                            l3238 0D94                            l2720 1688  
                          l2742 16EE                            l2728 16AA                            l2950 07FE  
                          l2952 0852                            l2962 08DE                            l2970 0930  
                          l2964 08F6                            l2982 09B2                            l2974 094C  
                          l2984 0A00                            l2968 0918                            l2976 096A  
                          l2988 0A4E                            _LATB 000F8A                            u2170 111E  
                          u2176 1120                            u2467 19C0                            i1l50 007C  
                          i1l48 006C                            i1l49 007C                            i2l42 136A  
                          i2l43 137A                            i2l44 138A                            i2l45 138E  
               _FromMainHigh_MQ 0100                   __CFG_FCMEN$ON 000000          ?_block_on_To_msgqueues 0001  
                          _main 0700                            fsr0h 000FEA                            fsr1h 000FE2  
                          fsr0l 000FE9                            fsr2h 000FDA                            indf1 000FE7  
                          fsr1l 000FE1                            indf2 000FDF                            fsr2l 000FD9  
                   main@msgtype 0214                            pclat 000FFA                     i2_check_msg 195A  
                          prodh 000FF4                            prodl 000FF3           handle_start@data_read 002E  
                          start 00C2                      i2_recv_msg 0B94                   __CFG_FOSC2$ON 000000  
              ?_adc_int_handler 0001                      i2_send_msg 0ED4             __end_of_CloseTimer1 1A6E  
     ToMainHigh_recvmsg@msgtype 00C0                 __end_of_ReadADC 1A5A                  send_msg@length 000D  
               __end_of_OpenADC 1448     __size_of_timer0_int_handler 00A6                     _Delay1KTCYx 19BE  
                         ?_main 0001                 __end_of___awdiv 0DCA                 ___awdiv@divisor 00A9  
                         _T1CON 000FCD                      i1memcpy@d1 0001                           i2l303 0538  
                         i1l467 19AE                           i2l271 018E                           i2l259 103E  
                         i2l275 01D0                           i2l269 0526                           i2l297 0498  
                         i2l289 0360                      i1memcpy@s1 0003     FromMainHigh_recvmsg@msgtype 008D  
               ___awdiv@counter 00AC                           _RCREG 000FAE                           _TMR0H 000FD7  
                         _TMR1H 000FCF                           _TMR0L 000FD6                           _TMR1L 000FCE  
                         _TRISB 000F93                      i2memcpy@d1 002E                      i2memcpy@s1 0030  
                  ?_init_queues 0001       __size_of_enter_sleep_mode 0006                 __end_of_in_main 16FE  
    ToMainLow_recvmsg@maxlength 00BF         timer0_lthread@msgbuffer 00AD                      _ConvertADC 1A6E  
       i2c_configure_slave@addr 00A7                           tablat 000FF5                    main@test_var 0210  
                         status 000FD8                __end_ofi1_memcpy 173E                __end_ofi2_memcpy 177E  
               __initialization 17BC                    __end_of_main 0A68     __size_of_timer1_int_handler 0012  
    __size_of_ToMainLow_recvmsg 002C      __size_of_ToMainLow_sendmsg 0022   __size_of_FromMainHigh_recvmsg 002C  
         __size_ofi2_in_low_int 002E                          ??_main 00C4                 send_msg@msgtype 000E  
                 __activetblptr 000002                 send_msg@tlength 0012            __end_of_handle_start 108A  
                        _ADCON0 000FC2                          _ADCON1 000FC1                          _ADCON2 000FC0  
                        _ADRESH 000FC4                          _ADRESL 000FC3                ___awdiv@dividend 00A7  
       ??_uart_recv_int_handler 001B                          i1l3314 172C                          i1l3308 1710  
                        i1l3338 1172                          i1l3380 0074                          i1l3372 005C  
                        i1l3366 1308                          i1l3382 0076                          i1l3374 0064  
                        i2l1312 1666                          i1l3376 0066                          i1l3378 006C  
                        i2l3200 105A                          i2l3202 1072                          i2l3302 0CB0  
                        i2l2192 15DE                      _OpenTimer1 1828                          i2l3324 176C  
                        i2l3318 1750                          i2l3262 0F30                  __CFG_WDTEN$OFF 000000  
                        i2l2562 1880                          i2l2554 186A                          i2l2804 0208  
                        i2l2902 06D0                          i2l2822 0288                          i2l2806 0234  
                        i2l3286 0BFE                          i2l2750 1364                          i2l2824 02C8  
                        i2l2816 0270                          i2l2760 1382                          i2l2752 136A  
                        i2l2762 1384                          i2l2754 1372                          i2l2746 135A  
                        i2l2852 0428                          i2l2780 016C                          i2l2764 138A  
                        i2l2756 1374                          i2l2748 1362                          i2l2846 03D4  
                        i2l2758 137A                          i2l2880 053C                          i2l2848 0416  
                        i2l2874 04FA                          i2l2786 0184                          i2l2894 062C  
                        i2l2886 059C     __end_of_i2c_configure_slave 195A                   ??_SleepIfOkay 0032  
            __size_of_ReadUSART 001E                          _OSCCON 000FD3                     _CloseTimer1 1A68  
                        _SSPADD 000FC8                          _SSPBUF 000FC9  __size_of_start_i2c_slave_reply 010A  
                     ??_ReadADC 0030   __end_of_start_i2c_slave_reply 0ED4              timer0_lthread@tptr 00A7  
                   ?i2_recv_msg 0080                       ??_OpenADC 00AA                    i2_in_low_int 185C  
                   ?i2_send_msg 0080                  __CFG_XINST$OFF 000000                       ??___awdiv 00AB  
               _i2c_int_handler 00C6                          _ic_ptr 00C7                   main@msgbuffer 0200  
              __end_of_init_i2c 158A                OpenTimer1@config 00A7                          _length 004C  
                        _memcpy 158A                          clear_0 17C4                          clear_1 17D6  
                        clear_2 17E2                ___awdiv@quotient 00AE                          _uc_ptr 004E  
                        main@ic 0216                __end_of_recv_msg 0B94     start_i2c_slave_reply@length 00A7  
                     ??_in_main 00AD                __end_of_send_msg 11E4           timer0_int_handler@val 0097  
       i2c_int_handler@i2c_data 0093                          tblptrh 000FF7                          tblptrl 000FF6  
                        tblptru 000FF8                     init_queue@i 00AA        ToMainLow_recvmsg@msgtype 00C0  
          __size_of_in_high_int 0012                     ?_ConvertADC 0001                 __CFG_FOSC$HSPLL 000000  
                    __accesstop 0080         __end_of__initialization 17E8      __end_of_ToMainHigh_recvmsg 18E2  
    __end_of_ToMainHigh_sendmsg 1936     __end_of_init_timer1_lthread 19F4             __end_of_SleepIfOkay 1626  
                __pcstackCOMRAM 0001          __size_ofi2_in_high_int 000C              __size_of_check_msg 0036  
             __end_of_ReadUSART 19BE       timer0_int_handler@msgtype 0095                       ?i1_memcpy 0001  
 __size_of_InterruptHandlerHigh 13C0     __end_of_InterruptHandlerLow 00C2                       ?i2_memcpy 002E  
                 _ToMainHigh_MQ 016C             __size_ofi2_recv_msg 0120                _enter_sleep_mode 1A62  
           __size_ofi2_send_msg 00F2            timer1_lthread@length 00AB                   ReadUSART@data 0001  
                 check_msg@qptr 00A7         ??_block_on_To_msgqueues 00AD            __size_of_init_queues 0066  
                    __pbssBANK1 0100                     ?_OpenTimer1 00A7         __end_of_i2c_int_handler 0700  
                  ?i2_check_msg 002E              timer1_lthread@tptr 00A7               recv_msg@maxlength 00B3  
               recv_msg@msgtype 00B4                 recv_msg@tlength 00BB           __size_of_handle_start 00C4  
                  ?_Delay1KTCYx 00A7                WriteTimer0@timer 0030                         ?_memcpy 00A7  
              WriteTimer1@timer 0003                   ??_WriteTimer0 0030                   ??_WriteTimer1 0003  
           __size_of_ConvertADC 0004         __size_of_timer0_lthread 000A         __size_of_timer1_lthread 0010  
                    ??i1_memcpy 0007                      ??i2_memcpy 0034                   i2_in_high_int 1A3A  
                       _SSPCON1 000FC6                         _SSPCON2 000FC5                         _SSPSTAT 000FC7  
             __end_of_check_msg 1828                       ?_init_i2c 00A7                     _SleepIfOkay 15D8  
                       _ReadADC 1A50                       ?_recv_msg 00B1                         _OpenADC 13C8  
                    _in_low_int 1674                    _handle_start 0FC6                         __Hparam 0000  
                     ?_send_msg 000B                         __Lparam 0000      __end_of_timer0_int_handler 128A  
                       ___awdiv 0CB4                 __CFG_STVREN$OFF 000000                         __pcinit 17BC  
               __size_of_memcpy 004E        __size_of_adc_int_handler 004E                      _init_queue 1448  
                       __ramtop 0400             __size_of_OpenTimer1 0034                         __ptext0 0700  
                       __ptext1 0CB4                         __ptext2 177E                         __ptext3 1A2A  
                       __ptext4 188A                         __ptext5 0DCA                         __ptext6 1A46  
                       __ptext7 18B6                         __ptext8 0A68                         __ptext9 158A  
                       _in_main 16BA                       _T1CONbits 000FCD             __end_of_WriteTimer0 1A2A  
           __end_of_WriteTimer1 1A18                  ?i2_in_high_int 002E                  OpenADC@config2 00A8  
                __pintcode_body 132E    __end_of_FromMainHigh_recvmsg 190E            end_of_initialization 17E8  
       timer1_lthread@msgbuffer 00AD  __size_of_uart_recv_int_handler 00A4                         memcpy@d 00AD  
                  ?_CloseTimer1 0001                         memcpy@n 00AB                         memcpy@s 00AF  
 __end_of_uart_recv_int_handler 132E                      ??_init_i2c 00A9     i2c_int_handler@data_written 0090  
                 __Lmediumconst 0000                         int_func 132E                   ?_uart_lthread 00A7  
              ?_i2c_int_handler 0001                    ??i2_recv_msg 0038                      ??_recv_msg 00B8  
                  ??i2_send_msg 0038                      ??_send_msg 0011      __end_of_timer1_int_handler 1A06  
                     _RCSTAbits 000FAB                         postdec1 000FE5                         postdec2 000FDD  
                       postinc0 000FEE                         postinc2 000FDE       ToMainHigh_sendmsg@msgtype 003A  
                _last_reg_recvd 0052                       _TRISCbits 000F94              __end_ofi2_recv_msg 0CB4  
            __end_ofi2_send_msg 0FC6                    ??_ConvertADC 0001   FromMainHigh_recvmsg@maxlength 008C  
                ??_uart_lthread 00AF                      main@length 0215                     ?_in_low_int 00A9  
         timer0_lthread@msgtype 00A9           _start_i2c_slave_reply 0DCA    __size_of_i2c_configure_slave 0024  
          __size_ofi2_check_msg 0024        __end_of_enter_sleep_mode 1A68              _ToMainHigh_recvmsg 18B6  
                     i1memcpy@d 0007              _ToMainHigh_sendmsg 190E                       i1memcpy@n 0005  
                     i1memcpy@s 0009                  _timer0_lthread 1A46                     ?_init_queue 00A7  
                     i2memcpy@d 0034                     _WriteTimer0 1A18                     _WriteTimer1 1A06  
                     i2memcpy@n 0032                       i2memcpy@s 0036              __end_of_ConvertADC 1A72  
                _timer1_lthread 1A2A                  __end_of_memcpy 15D8               _enable_interrupts 1A5A  
          __size_of_Delay1KTCYx 0012             ?_ToMainHigh_recvmsg 00BF                 ??i2_in_high_int 0030  
      i2c_int_handler@data_read 0095             ?_ToMainHigh_sendmsg 0039              ?_enable_interrupts 0001  
           start_initialization 17BC                   ??_in_high_int 00A9                       _ReadUSART 19A0  
             ??_adc_int_handler 0030               __size_ofi1_memcpy 0040               __size_ofi2_memcpy 0040  
           ??_enable_interrupts 00A7                    ??_OpenTimer1 00A8  __size_of_block_on_To_msgqueues 00B0  
 __end_of_block_on_To_msgqueues 113A    __end_of_InterruptHandlerHigh 13C8                      init_i2c@ic 00A7  
          ??_ToMainHigh_recvmsg 00C4            ??_ToMainHigh_sendmsg 003D          __end_of_timer0_lthread 1A50  
      i2c_int_handler@error_buf 008D          __end_of_timer1_lthread 1A3A       __end_of_enable_interrupts 1A62  
                      ??_memcpy 00AD           timer1_lthread@msgtype 00A9            _FromMainHigh_recvmsg 18E2  
  __size_of_init_timer1_lthread 0012              __end_of_OpenTimer1 185C        i2c_int_handler@msg_ready 0094  
                   __pbssBIGRAM 0232                     __pbssCOMRAM 003D                      ?_ReadUSART 0001  
                 ??_init_queues 00AB                   __pcstackBANK0 0080                   __pcstackBANK2 0200  
           __size_of_in_low_int 0046        start_i2c_slave_reply@msg 00A8             __CFG_CCP2MX$DEFAULT 000000  
               Delay1KTCYx@unit 00A7        ToMainLow_sendmsg@msgtype 0018    __size_of_InterruptHandlerLow 00AA  
           __end_of_in_high_int 19E2                    ?_SleepIfOkay 0001           ToMainLow_recvmsg@data 00C2  
                  _ToMainLow_MQ 01A2             __size_of_init_queue 007A                        ?_ReadADC 002E  
                     _check_msg 17F2                       __pnvBANK0 00C7            __size_of_CloseTimer1 0006  
        ?_start_i2c_slave_reply 00A7               __size_of_init_i2c 0062               OpenADC@portconfig 00A9  
                      ?_OpenADC 00A7                    recv_msg@data 00B6                    recv_msg@qmsg 00BD  
                  recv_msg@slot 00BA                    recv_msg@qptr 00B1               __size_of_recv_msg 012C  
                     __pintcode 0008               __size_of_send_msg 00AA                        ?___awdiv 00A7  
               ?_timer0_lthread 00A7           ?_FromMainHigh_recvmsg 008C                 ?_timer1_lthread 00A7  
                   __pintcodelo 0018          ToMainHigh_recvmsg@data 00C2            __end_of_uart_lthread 17BC  
    i2c_int_handler@msg_to_send 0092                        ?_in_main 00AB               WriteTimer0@timer0 002E  
            _timer0_int_handler 11E4               WriteTimer1@timer1 0001             uart_lthread@msgtype 00A9  
                      _ADCValue 0048           ToMainLow_sendmsg@data 0019             ?_timer0_int_handler 0001  
              uart_lthread@uptr 00A7             __end_of_init_queues 1528                   OpenADC@config 00A7  
                      _LATBbits 000F8A                 i2check_msg@qptr 002E                      ?_check_msg 00A7  
                      _IPR1bits 000F9F                        _PIE1bits 000F9D                       _msgbuffer 003D  
                 ?i2_in_low_int 0030                        i1u244_20 0064                        i1u244_21 0062  
                      i1u245_20 0074                        i1u245_21 0072                        i2u206_40 11EC  
                      i2u206_46 11EE                        i2u177_40 1362                        i2u177_41 1360  
                      _PIR1bits 000F9E                        i2u178_40 1372                        i2u178_41 1370  
                      i2u179_40 1382                        i2u179_41 1380          ToMainHigh_sendmsg@data 003B  
                      _RCONbits 000FD0                __CFG_WDTPS$32768 000000            ??_timer0_int_handler 0091  
    __size_of_enable_interrupts 0008                      _ADCON0bits 000FC2            timer0_lthread@length 00AB  
            _timer1_int_handler 19F4                        i1_memcpy 16FE            _InterruptHandlerHigh 0008  
                   ??_ReadUSART 0001                        i2_memcpy 173E            timer0_lthread@msgval 00AF  
      FromMainHigh_recvmsg@data 008F                     _in_high_int 19D0                    send_msg@data 000F  
           _i2c_configure_slave 1936                    send_msg@qmsg 0015                    send_msg@slot 0014  
                  send_msg@qptr 000B           uart_lthread@msgbuffer 00AD             ?_timer1_int_handler 0001  
                ??i2_in_low_int 0032           _uart_recv_int_handler 128A                    ??_in_low_int 00AB  
              __size_of_ReadADC 000A                        __Hrparam 0000                __size_of_OpenADC 0080  
          ?_i2c_configure_slave 00A7                        __Lrparam 0000               ?_enter_sleep_mode 0001  
        ??_FromMainHigh_recvmsg 003A            ??_timer1_int_handler 0005                 _adc_int_handler 1626  
              __size_of___awdiv 0116        __size_of_i2c_int_handler 063A              ??_enter_sleep_mode 002E  
                  ??_init_queue 00A9                    ?_WriteTimer0 002E                    ?_WriteTimer1 0001  
       ToMainLow_sendmsg@length 0017               main@t0thread_data 020D           ?_InterruptHandlerHigh 0001  
              __size_of_in_main 0044               i2send_msg@msgtype 0083     ToMainHigh_recvmsg@maxlength 00BF  
             i2send_msg@tlength 0086         init_timer1_lthread@tptr 00A7                     _init_queues 14C2  
            __end_of_in_low_int 16BA                        __ptext10 108A                        __ptext11 19BE  
                      __ptext20 1448                        __ptext12 17F2                        __ptext21 19E2  
                      __ptext13 16BA                        __ptext30 19F4                        __ptext22 1528  
                      __ptext14 1674                        __ptext31 1A06                        __ptext23 1A5A  
                      __ptext15 19D0                        __ptext40 1A68                        __ptext32 1A6E  
                      __ptext16 1936                        __ptext41 1A50                        __ptext25 128A  
                      __ptext17 13C8                        __ptext50 173E                        __ptext42 11E4  
                      __ptext34 15D8                        __ptext26 19A0                        __ptext18 1828  
                      __ptext43 1A18                        __ptext35 195A                        __ptext27 197E  
                      __ptext19 14C2                        __ptext44 18E2                        __ptext36 185C  
                      __ptext28 113A                        __ptext45 0B94                        __ptext37 1A3A  
                      __ptext29 16FE                        __ptext46 00C6                        __ptext38 1A62  
                      __ptext47 0FC6                        __ptext39 1626                        __ptext48 190E  
                      __ptext49 0ED4              uart_lthread@length 00AB        timer0_int_handler@length 0093  
                      _counter2 004A                        _init_i2c 1528             _init_timer1_lthread 19E2  
                 __size_of_main 0368                   ??i2_check_msg 0030               main@t1thread_data 0212  
                   ??_check_msg 00A9              __end_of_init_queue 14C2            __size_of_SleepIfOkay 004E  
                      _recv_msg 0A68           ??_i2c_configure_slave 00A8                        _send_msg 113A  
                init_queue@qptr 00A7           __size_of_uart_lthread 003E                  i2recv_msg@data 0085  
                i2recv_msg@qmsg 008A                   ??_Delay1KTCYx 00A8                  i2recv_msg@slot 0087  
                i2recv_msg@qptr 0080             _InterruptHandlerLow 0018            ?_init_timer1_lthread 00A7  
                   _OSCTUNEbits 000F9B                      _INTCONbits 000FF2                        memcpy@d1 00A7  
                      memcpy@s1 00A9           __end_ofi2_in_high_int 1A46    i2c_int_handler@overrun_error 0091  
              i2send_msg@length 0082                        intlevel1 0000                        intlevel2 0000  
          ?_InterruptHandlerLow 0001         ??_start_i2c_slave_reply 00AA          ?_uart_recv_int_handler 0001  
                  _uart_lthread 177E           _block_on_To_msgqueues 108A                   ?_handle_start 002E  
              ??_timer0_lthread 00AF     __size_of_ToMainHigh_recvmsg 002C         __end_of_adc_int_handler 1674  
   __size_of_ToMainHigh_sendmsg 0028                      _OSCCONbits 000FD3                ??_timer1_lthread 00AF  
      ToMainHigh_sendmsg@length 0039             __end_ofi2_check_msg 197E           ??_init_timer1_lthread 00A9  
        ??_InterruptHandlerHigh 0099               _ToMainLow_recvmsg 188A               _ToMainLow_sendmsg 197E  
            main@last_reg_recvd 020F            __end_ofi2_in_low_int 188A              ?_ToMainLow_recvmsg 00BF  
           __end_of_Delay1KTCYx 19D0               ??_i2c_int_handler 008B              ?_ToMainLow_sendmsg 0017  
                   _SSPCON1bits 000FC6                     _SSPCON2bits 000FC5                  i2send_msg@data 0084  
         ??_InterruptHandlerLow 001D             ??_ToMainLow_recvmsg 00C4                  i2send_msg@qmsg 0089  
                i2send_msg@slot 0088                  i2send_msg@qptr 0080             ??_ToMainLow_sendmsg 001B  
                 ??_CloseTimer1 002E                  ??_handle_start 002F                    _USART_Status 0051  
