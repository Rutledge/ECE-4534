

Microchip Technology PIC18 LITE Macro Assembler V1.20 build 52243 
                                                                                               Wed Oct 09 22:47:48 2013

Microchip Technology Omniscient Code Generator (Lite mode) build 52243
     1                           	processor	18F45J10
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	text0,global,reloc=2,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    46                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1
    60                           	psect	text46,global,reloc=2,class=CODE,delta=1
    61                           	psect	text47,global,reloc=2,class=CODE,delta=1
    62                           	psect	text48,global,reloc=2,class=CODE,delta=1
    63                           	psect	text49,global,reloc=2,class=CODE,delta=1
    64                           	psect	text50,global,reloc=2,class=CODE,delta=1
    65                           	psect	text51,global,reloc=2,class=CODE,delta=1
    66                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    67                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    68  0000                     _ADRESH	set	4036
    69  0000                     _ADRESL	set	4035
    70  0000                     _INTCONbits	set	4082
    71  0000                     _IPR1bits	set	3999
    72  0000                     _LATB	set	3978
    73  0000                     _LATBbits	set	3978
    74  0000                     _OSCCON	set	4051
    75  0000                     _OSCCONbits	set	4051
    76  0000                     _OSCTUNEbits	set	3995
    77  0000                     _PIE1bits	set	3997
    78  0000                     _PIR1bits	set	3998
    79  0000                     _RCONbits	set	4048
    80  0000                     _RCREG	set	4014
    81  0000                     _RCSTA	set	4011
    82  0000                     _RCSTAbits	set	4011
    83  0000                     _SPBRG	set	4015
    84  0000                     _SPBRGH	set	4016
    85  0000                     _SSPADD	set	4040
    86  0000                     _SSPBUF	set	4041
    87  0000                     _SSPCON1	set	4038
    88  0000                     _SSPCON1bits	set	4038
    89  0000                     _SSPCON2	set	4037
    90  0000                     _SSPCON2bits	set	4037
    91  0000                     _SSPSTAT	set	4039
    92  0000                     _SSPSTATbits	set	4039
    93  0000                     _T1CONbits	set	4045
    94  0000                     _TMR0H	set	4055
    95  0000                     _TMR0L	set	4054
    96  0000                     _TMR1H	set	4047
    97  0000                     _TMR1L	set	4046
    98  0000                     _TRISB	set	3987
    99  0000                     _TRISCbits	set	3988
   100  0000                     _TXREG	set	4013
   101  0000                     _TXSTA	set	4012
   102  0000                     _TXSTAbits	set	4012
   103                           
   104                           ; 0 bytes @ 0x36
   105 ;;
   106 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   107 ;;
   108 ;; *************** function _main *****************
   109 ;; Defined at:
   110 ;;		line 85 in file "../src/main.c"
   111 ;; Parameters:    Size  Location     Type
   112 ;;		None
   113 ;; Auto vars:     Size  Location     Type
   114 ;;  ic             28    0        struct __i2c_comm
   115 ;;  msgbuffer      11    2[BANK1 ] unsigned char [11]
   116 ;;  uc              5    0        struct __uart_comm
   117 ;;  t1thread_dat    2   20[BANK1 ] struct __timer1_thread_s
   118 ;;  test_var        2   18[BANK1 ] int 
   119 ;;  t0thread_dat    2   15[BANK1 ] struct __timer0_thread_s
   120 ;;  uthread_data    2   13[BANK1 ] struct __uart_thread_str
   121 ;;  length          1   23[BANK1 ] char 
   122 ;;  msgtype         1   22[BANK1 ] unsigned char 
   123 ;;  last_reg_rec    1   17[BANK1 ] unsigned char 
   124 ;;  i               1    0        unsigned char 
   125 ;;  c               1    0        unsigned char 
   126 ;; Return value:  Size  Location     Type
   127 ;;		None               void
   128 ;; Registers used:
   129 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
   130 ;; Tracked objects:
   131 ;;		On entry : 0/0
   132 ;;		On exit  : 0/0
   133 ;;		Unchanged: 0/0
   134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
   135 ;;      Params:         0       0       0       0       0
   136 ;;      Locals:         0       0      22       0       0
   137 ;;      Temps:          0       1       0       0       0
   138 ;;      Totals:         0       1      22       0       0
   139 ;;Total ram usage:       23 bytes
   140 ;; Hardware stack levels required when called:   14
   141 ;; This function calls:
   142 ;;		_enable_interrupts
   143 ;;		_init_timer1_lthread
   144 ;;		_init_queues
   145 ;;		_OpenUSART
   146 ;;		_block_on_To_msgqueues
   147 ;;		_ToMainHigh_recvmsg
   148 ;;		_timer0_lthread
   149 ;;		_start_i2c_slave_reply
   150 ;;		_ToMainLow_recvmsg
   151 ;;		_timer1_lthread
   152 ;;		_uart_lthread
   153 ;; This function is called by:
   154 ;;		Startup code after reset
   155 ;; This function uses a non-reentrant model
   156 ;;
   157                           
   158                           	psect	text0
   159  000724                     __ptext0:
   160                           	opt stack 0
   161                           
   162                           ; #config settings
   163  000724                     _main:
   164                           	opt stack 16
   165                           
   166                           ;main.c: 86: char c;
   167                           ;main.c: 87: signed char length;
   168                           ;main.c: 88: unsigned char msgtype;
   169                           ;main.c: 89: int test_var = 0;
   170                           
   171                           ;incstack = 0
   172                           ;incstack = 0
   173  000724  0E00               	movlw	0
   174  000726  0101               	movlb	1	; () banked
   175  000728  0101               	movlb	1	; () banked
   176  00072A  6FEB               	movwf	(main@test_var+1)& (0+255),b
   177  00072C  0E00               	movlw	0
   178  00072E  0101               	movlb	1	; () banked
   179  000730  6FEA               	movwf	main@test_var& (0+255),b
   180                           
   181                           ;main.c: 90: unsigned char last_reg_recvd;
   182                           ;main.c: 91: uart_comm uc;
   183                           ;main.c: 92: i2c_comm ic;
   184                           ;main.c: 93: unsigned char msgbuffer[10 + 1];
   185                           ;main.c: 94: unsigned char i;
   186                           ;main.c: 95: uart_thread_struct uthread_data;
   187                           ;main.c: 96: timer1_thread_struct t1thread_data;
   188                           ;main.c: 97: timer0_thread_struct t0thread_data;
   189                           ;main.c: 104: OSCCON = 0x82;
   190  000732  0E82               	movlw	130
   191  000734  6ED3               	movwf	4051,c	;volatile
   192                           
   193                           ; BSR set to: 1
   194                           ;main.c: 105: OSCTUNEbits.PLLEN = 0;
   195  000736  9C9B               	bcf	3995,6,c	;volatile
   196                           
   197                           ; BSR set to: 1
   198                           ;main.c: 115: init_timer1_lthread(&t1thread_data);
   199  000738  0101               	movlb	1	; () banked
   200  00073A  0E01               	movlw	high main@t1thread_data
   201  00073C  0100               	movlb	0	; () banked
   202  00073E  0100               	movlb	0	; () banked
   203  000740  6FAE               	movwf	(?_init_timer1_lthread+1)& (0+255),b
   204  000742  0101               	movlb	1	; () banked
   205  000744  0EEC               	movlw	low main@t1thread_data
   206  000746  0100               	movlb	0	; () banked
   207  000748  6FAD               	movwf	?_init_timer1_lthread& (0+255),b
   208  00074A  EC00  F00D         	call	_init_timer1_lthread	;wreg free
   209                           
   210                           ;main.c: 118: init_queues();
   211  00074E  EC4B  F00A         	call	_init_queues	;wreg free
   212                           
   213                           ;main.c: 121: TRISB = 0x0;
   214  000752  0E00               	movlw	0
   215  000754  6E93               	movwf	3987,c	;volatile
   216                           
   217                           ;main.c: 122: LATB = 0x0;
   218  000756  0E00               	movlw	0
   219  000758  6E8A               	movwf	3978,c	;volatile
   220                           
   221                           ;main.c: 140: enable_interrupts();
   222  00075A  EC33  F00D         	call	_enable_interrupts	;wreg free
   223                           
   224                           ;main.c: 145: IPR1bits.TMR1IP = 0;
   225  00075E  909F               	bcf	3999,0,c	;volatile
   226                           
   227                           ;main.c: 147: IPR1bits.RCIP = 1;
   228  000760  8A9F               	bsf	3999,5,c	;volatile
   229                           
   230                           ;main.c: 149: IPR1bits.TXIP = 0;
   231  000762  989F               	bcf	3999,4,c	;volatile
   232                           
   233                           ;main.c: 153: OpenUSART( 0b01111111 & 0b11111111 & 0b11111110 & 0b11111101 & 0b11111111 
      +                          & 0b11111111 & 0b11011111, 38);
   234  000764  0100               	movlb	0	; () banked
   235  000766  6FCF               	movwf	??_main& (0+255),b
   236  000768  0E5C               	movlw	92
   237  00076A  0100               	movlb	0	; () banked
   238  00076C  0100               	movlb	0	; () banked
   239  00076E  6FAD               	movwf	?_OpenUSART& (0+255),b
   240  000770  0100               	movlb	0	; () banked
   241  000772  51CF               	movf	??_main& (0+255),w,b
   242  000774  0E00               	movlw	0
   243  000776  0100               	movlb	0	; () banked
   244  000778  0100               	movlb	0	; () banked
   245  00077A  6FAF               	movwf	(?_OpenUSART+2)& (0+255),b
   246  00077C  0E26               	movlw	38
   247  00077E  0100               	movlb	0	; () banked
   248  000780  6FAE               	movwf	(?_OpenUSART+1)& (0+255),b
   249  000782  ECCD  F009         	call	_OpenUSART	;wreg free
   250                           
   251                           ;main.c: 157: PIE1bits.RCIE = 1;
   252  000786  8A9D               	bsf	3997,5,c	;volatile
   253                           
   254                           ;main.c: 158: PIE1bits.TXIE = 0;
   255  000788  989D               	bcf	3997,4,c	;volatile
   256  00078A                     l3116:
   257                           
   258                           ;main.c: 215: block_on_To_msgqueues();
   259  00078A  ECCC  F008         	call	_block_on_To_msgqueues	;wreg free
   260                           
   261                           ;main.c: 222: length = ToMainHigh_recvmsg(10, &msgtype, (void *) msgbuffer);
   262  00078E  0100               	movlb	0	; () banked
   263  000790  6FCF               	movwf	??_main& (0+255),b
   264  000792  0E0A               	movlw	10
   265  000794  0100               	movlb	0	; () banked
   266  000796  0100               	movlb	0	; () banked
   267  000798  6FC5               	movwf	?_ToMainHigh_recvmsg& (0+255),b
   268  00079A  0100               	movlb	0	; () banked
   269  00079C  51CF               	movf	??_main& (0+255),w,b
   270  00079E  0101               	movlb	1	; () banked
   271  0007A0  0E01               	movlw	high main@msgtype
   272  0007A2  0100               	movlb	0	; () banked
   273  0007A4  0100               	movlb	0	; () banked
   274  0007A6  6FC7               	movwf	(?_ToMainHigh_recvmsg+2)& (0+255),b
   275  0007A8  0101               	movlb	1	; () banked
   276  0007AA  0EEE               	movlw	low main@msgtype
   277  0007AC  0100               	movlb	0	; () banked
   278  0007AE  6FC6               	movwf	(?_ToMainHigh_recvmsg+1)& (0+255),b
   279  0007B0  0101               	movlb	1	; () banked
   280  0007B2  0E01               	movlw	high main@msgbuffer
   281  0007B4  0100               	movlb	0	; () banked
   282  0007B6  0100               	movlb	0	; () banked
   283  0007B8  6FC9               	movwf	(?_ToMainHigh_recvmsg+4)& (0+255),b
   284  0007BA  0101               	movlb	1	; () banked
   285  0007BC  0EDA               	movlw	low main@msgbuffer
   286  0007BE  0100               	movlb	0	; () banked
   287  0007C0  6FC8               	movwf	(?_ToMainHigh_recvmsg+3)& (0+255),b
   288  0007C2  EC2C  F00C         	call	_ToMainHigh_recvmsg	;wreg free
   289  0007C6  0101               	movlb	1	; () banked
   290  0007C8  0101               	movlb	1	; () banked
   291  0007CA  6FEF               	movwf	main@length& (0+255),b
   292                           
   293                           ; BSR set to: 1
   294                           ;main.c: 223: if (length < 0) {
   295  0007CC  0101               	movlb	1	; () banked
   296  0007CE  0101               	movlb	1	; () banked
   297  0007D0  BFEF               	btfsc	main@length& (0+255),7,b
   298  0007D2  D097               	goto	l3148
   299  0007D4  D087               	goto	l3146
   300  0007D6                     l3124:
   301                           
   302                           ; BSR set to: 1
   303                           ;main.c: 231: {
   304                           ;main.c: 232: timer0_lthread(&t0thread_data, msgtype, length, msgbuffer);
   305  0007D6  0101               	movlb	1	; () banked
   306  0007D8  0E01               	movlw	high main@t0thread_data
   307  0007DA  0100               	movlb	0	; () banked
   308  0007DC  0100               	movlb	0	; () banked
   309  0007DE  6FAE               	movwf	(?_timer0_lthread+1)& (0+255),b
   310  0007E0  0101               	movlb	1	; () banked
   311  0007E2  0EE7               	movlw	low main@t0thread_data
   312  0007E4  0100               	movlb	0	; () banked
   313  0007E6  6FAD               	movwf	?_timer0_lthread& (0+255),b
   314  0007E8  0101               	movlb	1	; () banked
   315  0007EA  0100               	movlb	0	; () banked
   316  0007EC  C1EE  F0AF         	movff	main@msgtype,?_timer0_lthread+2
   317  0007F0  0100               	movlb	0	; () banked
   318  0007F2  0100               	movlb	0	; () banked
   319  0007F4  6BB0               	clrf	(?_timer0_lthread+3)& (0+255),b
   320  0007F6  0101               	movlb	1	; () banked
   321  0007F8  0101               	movlb	1	; () banked
   322  0007FA  51EF               	movf	main@length& (0+255),w,b
   323  0007FC  0100               	movlb	0	; () banked
   324  0007FE  0100               	movlb	0	; () banked
   325  000800  6FB1               	movwf	(?_timer0_lthread+4)& (0+255),b
   326  000802  0100               	movlb	0	; () banked
   327  000804  6BB2               	clrf	(?_timer0_lthread+5)& (0+255),b
   328  000806  0100               	movlb	0	; () banked
   329  000808  BFB1               	btfsc	(?_timer0_lthread+4)& (0+255),7,b
   330  00080A  07B2               	decf	(?_timer0_lthread+5)& (0+255),f,b
   331  00080C  0101               	movlb	1	; () banked
   332  00080E  0E01               	movlw	high main@msgbuffer
   333  000810  0100               	movlb	0	; () banked
   334  000812  0100               	movlb	0	; () banked
   335  000814  6FB4               	movwf	(?_timer0_lthread+7)& (0+255),b
   336  000816  0101               	movlb	1	; () banked
   337  000818  0EDA               	movlw	low main@msgbuffer
   338  00081A  0100               	movlb	0	; () banked
   339  00081C  6FB3               	movwf	(?_timer0_lthread+6)& (0+255),b
   340  00081E  EC29  F00D         	call	_timer0_lthread	;wreg free
   341                           
   342                           ;main.c: 233: break;
   343  000822  D06F               	goto	l3148
   344  000824                     l100:
   345                           
   346                           ;main.c: 236: case 41:
   347                           ;main.c: 237: {
   348                           ;main.c: 240: last_reg_recvd = msgbuffer[0];
   349  000824  C1DA  F1E9         	movff	main@msgbuffer,main@last_reg_recvd
   350                           
   351                           ;main.c: 241: break;
   352  000828  D06C               	goto	l3148
   353  00082A                     l3126:
   354                           
   355                           ;main.c: 254: {
   356                           ;main.c: 255: length = 2;
   357  00082A  0100               	movlb	0	; () banked
   358  00082C  6FCF               	movwf	??_main& (0+255),b
   359  00082E  0E02               	movlw	2
   360  000830  0101               	movlb	1	; () banked
   361  000832  0101               	movlb	1	; () banked
   362  000834  6FEF               	movwf	main@length& (0+255),b
   363  000836  0100               	movlb	0	; () banked
   364  000838  51CF               	movf	??_main& (0+255),w,b
   365                           
   366                           ;main.c: 258: msgbuffer[1] = 0xAA;
   367  00083A  0100               	movlb	0	; () banked
   368  00083C  6FCF               	movwf	??_main& (0+255),b
   369  00083E  0EAA               	movlw	170
   370  000840  0101               	movlb	1	; () banked
   371  000842  0101               	movlb	1	; () banked
   372  000844  6FDB               	movwf	(main@msgbuffer+1)& (0+255),b
   373  000846  0100               	movlb	0	; () banked
   374  000848  51CF               	movf	??_main& (0+255),w,b
   375                           
   376                           ; BSR set to: 0
   377                           ;main.c: 262: test_var++;
   378  00084A  0101               	movlb	1	; () banked
   379  00084C  0101               	movlb	1	; () banked
   380  00084E  4BEA               	infsnz	main@test_var& (0+255),f,b
   381  000850  2BEB               	incf	(main@test_var+1)& (0+255),f,b
   382                           
   383                           ; BSR set to: 1
   384                           ;main.c: 263: if(test_var > 299)
   385  000852  0101               	movlb	1	; () banked
   386  000854  0101               	movlb	1	; () banked
   387  000856  51EB               	movf	(main@test_var+1)& (0+255),w,b
   388  000858  0A80               	xorlw	128
   389  00085A  0F7F               	addlw	-129
   390  00085C  0E2C               	movlw	44
   391  00085E  B4D8               	btfsc	status,2,c
   392  000860  5DEA               	subwf	main@test_var& (0+255),w,b
   393  000862  A0D8               	btfss	status,0,c
   394  000864  D031               	goto	l3142
   395                           
   396                           ; BSR set to: 1
   397                           ;main.c: 264: test_var = 0;
   398  000866  0E00               	movlw	0
   399  000868  0101               	movlb	1	; () banked
   400  00086A  0101               	movlb	1	; () banked
   401  00086C  6FEB               	movwf	(main@test_var+1)& (0+255),b
   402  00086E  0E00               	movlw	0
   403  000870  0101               	movlb	1	; () banked
   404  000872  6FEA               	movwf	main@test_var& (0+255),b
   405  000874  D029               	goto	l3142
   406  000876                     l3134:
   407                           
   408                           ; BSR set to: 1
   409                           ;main.c: 269: {
   410                           ;main.c: 270: length = 1;
   411  000876  0100               	movlb	0	; () banked
   412  000878  6FCF               	movwf	??_main& (0+255),b
   413  00087A  0E01               	movlw	1
   414  00087C  0101               	movlb	1	; () banked
   415  00087E  0101               	movlb	1	; () banked
   416  000880  6FEF               	movwf	main@length& (0+255),b
   417  000882  0100               	movlb	0	; () banked
   418  000884  51CF               	movf	??_main& (0+255),w,b
   419                           
   420                           ;main.c: 271: msgbuffer[0] = 0x3A;
   421  000886  0100               	movlb	0	; () banked
   422  000888  6FCF               	movwf	??_main& (0+255),b
   423  00088A  0E3A               	movlw	58
   424  00088C  D00B               	goto	L1
   425  00088E                     l3136:
   426                           
   427                           ;main.c: 275: {
   428                           ;main.c: 276: length = 1;
   429  00088E  0100               	movlb	0	; () banked
   430  000890  6FCF               	movwf	??_main& (0+255),b
   431  000892  0E01               	movlw	1
   432  000894  0101               	movlb	1	; () banked
   433  000896  0101               	movlb	1	; () banked
   434  000898  6FEF               	movwf	main@length& (0+255),b
   435  00089A  0100               	movlb	0	; () banked
   436  00089C  51CF               	movf	??_main& (0+255),w,b
   437                           
   438                           ;main.c: 277: msgbuffer[0] = 0xA3;
   439  00089E  0100               	movlb	0	; () banked
   440  0008A0  6FCF               	movwf	??_main& (0+255),b
   441  0008A2  0EA3               	movlw	163
   442  0008A4                     L1:
   443  0008A4  0101               	movlb	1	; () banked
   444  0008A6  0101               	movlb	1	; () banked
   445  0008A8  6FDA               	movwf	main@msgbuffer& (0+255),b
   446  0008AA  0100               	movlb	0	; () banked
   447  0008AC  51CF               	movf	??_main& (0+255),w,b
   448                           
   449                           ;main.c: 278: break;
   450  0008AE  D00C               	goto	l3142
   451  0008B0                     l3140:
   452  0008B0  0101               	movlb	1	; () banked
   453  0008B2  0101               	movlb	1	; () banked
   454  0008B4  51E9               	movf	main@last_reg_recvd& (0+255),w,b
   455                           
   456                           ; Switch size 1, requested type "space"
   457                           ; Number of cases is 3, Range of values is 168 to 170
   458                           ; switch strategies available:
   459                           ; Name         Instructions Cycles
   460                           ; simple_byte           10     6 (average)
   461                           ;	Chosen strategy is simple_byte
   462  0008B6  0AA8               	xorlw	168	; case 168
   463  0008B8  B4D8               	btfsc	status,2,c
   464  0008BA  D7DD               	goto	l3134
   465  0008BC  0A01               	xorlw	1	; case 169
   466  0008BE  B4D8               	btfsc	status,2,c
   467  0008C0  D7E6               	goto	l3136
   468  0008C2  0A03               	xorlw	3	; case 170
   469  0008C4  B4D8               	btfsc	status,2,c
   470  0008C6  D7B1               	goto	l3126
   471  0008C8                     l3142:
   472                           
   473                           ;main.c: 281: start_i2c_slave_reply(length, msgbuffer);
   474  0008C8  C1EF  F0AD         	movff	main@length,?_start_i2c_slave_reply
   475  0008CC  0101               	movlb	1	; () banked
   476  0008CE  0E01               	movlw	high main@msgbuffer
   477  0008D0  0100               	movlb	0	; () banked
   478  0008D2  0100               	movlb	0	; () banked
   479  0008D4  6FAF               	movwf	(?_start_i2c_slave_reply+2)& (0+255),b
   480  0008D6  0101               	movlb	1	; () banked
   481  0008D8  0EDA               	movlw	low main@msgbuffer
   482  0008DA  0100               	movlb	0	; () banked
   483  0008DC  6FAE               	movwf	(?_start_i2c_slave_reply+1)& (0+255),b
   484  0008DE  EC2C  F006         	call	_start_i2c_slave_reply	;wreg free
   485                           
   486                           ;main.c: 282: break;
   487  0008E2  D00F               	goto	l3148
   488  0008E4                     l3146:
   489  0008E4  0101               	movlb	1	; () banked
   490  0008E6  0101               	movlb	1	; () banked
   491  0008E8  51EE               	movf	main@msgtype& (0+255),w,b
   492                           
   493                           ; Switch size 1, requested type "space"
   494                           ; Number of cases is 4, Range of values is 10 to 42
   495                           ; switch strategies available:
   496                           ; Name         Instructions Cycles
   497                           ; simple_byte           13     7 (average)
   498                           ;	Chosen strategy is simple_byte
   499  0008EA  0A0A               	xorlw	10	; case 10
   500  0008EC  B4D8               	btfsc	status,2,c
   501  0008EE  D773               	goto	l3124
   502  0008F0  0A22               	xorlw	34	; case 40
   503  0008F2  B4D8               	btfsc	status,2,c
   504  0008F4  D797               	goto	l100
   505  0008F6  0A01               	xorlw	1	; case 41
   506  0008F8  B4D8               	btfsc	status,2,c
   507  0008FA  D794               	goto	l100
   508  0008FC  0A03               	xorlw	3	; case 42
   509  0008FE  B4D8               	btfsc	status,2,c
   510  000900  D7D7               	goto	l3140
   511  000902                     l3148:
   512                           
   513                           ;main.c: 290: }
   514                           ;main.c: 293: length = ToMainLow_recvmsg(10, &msgtype, (void *) msgbuffer);
   515  000902  0100               	movlb	0	; () banked
   516  000904  6FCF               	movwf	??_main& (0+255),b
   517  000906  0E0A               	movlw	10
   518  000908  0100               	movlb	0	; () banked
   519  00090A  0100               	movlb	0	; () banked
   520  00090C  6FC5               	movwf	?_ToMainLow_recvmsg& (0+255),b
   521  00090E  0100               	movlb	0	; () banked
   522  000910  51CF               	movf	??_main& (0+255),w,b
   523  000912  0101               	movlb	1	; () banked
   524  000914  0E01               	movlw	high main@msgtype
   525  000916  0100               	movlb	0	; () banked
   526  000918  0100               	movlb	0	; () banked
   527  00091A  6FC7               	movwf	(?_ToMainLow_recvmsg+2)& (0+255),b
   528  00091C  0101               	movlb	1	; () banked
   529  00091E  0EEE               	movlw	low main@msgtype
   530  000920  0100               	movlb	0	; () banked
   531  000922  6FC6               	movwf	(?_ToMainLow_recvmsg+1)& (0+255),b
   532  000924  0101               	movlb	1	; () banked
   533  000926  0E01               	movlw	high main@msgbuffer
   534  000928  0100               	movlb	0	; () banked
   535  00092A  0100               	movlb	0	; () banked
   536  00092C  6FC9               	movwf	(?_ToMainLow_recvmsg+4)& (0+255),b
   537  00092E  0101               	movlb	1	; () banked
   538  000930  0EDA               	movlw	low main@msgbuffer
   539  000932  0100               	movlb	0	; () banked
   540  000934  6FC8               	movwf	(?_ToMainLow_recvmsg+3)& (0+255),b
   541  000936  EC16  F00C         	call	_ToMainLow_recvmsg	;wreg free
   542  00093A  0101               	movlb	1	; () banked
   543  00093C  0101               	movlb	1	; () banked
   544  00093E  6FEF               	movwf	main@length& (0+255),b
   545                           
   546                           ; BSR set to: 1
   547                           ;main.c: 294: if (length < 0) {
   548  000940  0101               	movlb	1	; () banked
   549  000942  0101               	movlb	1	; () banked
   550  000944  BFEF               	btfsc	main@length& (0+255),7,b
   551  000946  D721               	goto	l3116
   552  000948  D04E               	goto	l3160
   553  00094A                     l3154:
   554                           
   555                           ; BSR set to: 1
   556                           ;main.c: 302: {
   557                           ;main.c: 303: timer1_lthread(&t1thread_data, msgtype, length, msgbuffer);
   558  00094A  0101               	movlb	1	; () banked
   559  00094C  0E01               	movlw	high main@t1thread_data
   560  00094E  0100               	movlb	0	; () banked
   561  000950  0100               	movlb	0	; () banked
   562  000952  6FC8               	movwf	(?_timer1_lthread+1)& (0+255),b
   563  000954  0101               	movlb	1	; () banked
   564  000956  0EEC               	movlw	low main@t1thread_data
   565  000958  0100               	movlb	0	; () banked
   566  00095A  6FC7               	movwf	?_timer1_lthread& (0+255),b
   567  00095C  0101               	movlb	1	; () banked
   568  00095E  0100               	movlb	0	; () banked
   569  000960  C1EE  F0C9         	movff	main@msgtype,?_timer1_lthread+2
   570  000964  0100               	movlb	0	; () banked
   571  000966  0100               	movlb	0	; () banked
   572  000968  6BCA               	clrf	(?_timer1_lthread+3)& (0+255),b
   573  00096A  0101               	movlb	1	; () banked
   574  00096C  0101               	movlb	1	; () banked
   575  00096E  51EF               	movf	main@length& (0+255),w,b
   576  000970  0100               	movlb	0	; () banked
   577  000972  0100               	movlb	0	; () banked
   578  000974  6FCB               	movwf	(?_timer1_lthread+4)& (0+255),b
   579  000976  0100               	movlb	0	; () banked
   580  000978  6BCC               	clrf	(?_timer1_lthread+5)& (0+255),b
   581  00097A  0100               	movlb	0	; () banked
   582  00097C  BFCB               	btfsc	(?_timer1_lthread+4)& (0+255),7,b
   583  00097E  07CC               	decf	(?_timer1_lthread+5)& (0+255),f,b
   584  000980  0101               	movlb	1	; () banked
   585  000982  0E01               	movlw	high main@msgbuffer
   586  000984  0100               	movlb	0	; () banked
   587  000986  0100               	movlb	0	; () banked
   588  000988  6FCE               	movwf	(?_timer1_lthread+7)& (0+255),b
   589  00098A  0101               	movlb	1	; () banked
   590  00098C  0EDA               	movlw	low main@msgbuffer
   591  00098E  0100               	movlb	0	; () banked
   592  000990  6FCD               	movwf	(?_timer1_lthread+6)& (0+255),b
   593  000992  EC35  F00B         	call	_timer1_lthread	;wreg free
   594                           
   595                           ;main.c: 304: break;
   596  000996  D6F9               	goto	l3116
   597  000998                     l3156:
   598                           
   599                           ;main.c: 307: case 31:
   600                           ;main.c: 308: {
   601                           ;main.c: 309: uart_lthread(&uthread_data, msgtype, length, msgbuffer);
   602  000998  0101               	movlb	1	; () banked
   603  00099A  0E01               	movlw	high main@uthread_data
   604  00099C  0100               	movlb	0	; () banked
   605  00099E  0100               	movlb	0	; () banked
   606  0009A0  6FAE               	movwf	(?_uart_lthread+1)& (0+255),b
   607  0009A2  0101               	movlb	1	; () banked
   608  0009A4  0EE5               	movlw	low main@uthread_data
   609  0009A6  0100               	movlb	0	; () banked
   610  0009A8  6FAD               	movwf	?_uart_lthread& (0+255),b
   611  0009AA  0101               	movlb	1	; () banked
   612  0009AC  0100               	movlb	0	; () banked
   613  0009AE  C1EE  F0AF         	movff	main@msgtype,?_uart_lthread+2
   614  0009B2  0100               	movlb	0	; () banked
   615  0009B4  0100               	movlb	0	; () banked
   616  0009B6  6BB0               	clrf	(?_uart_lthread+3)& (0+255),b
   617  0009B8  0101               	movlb	1	; () banked
   618  0009BA  0101               	movlb	1	; () banked
   619  0009BC  51EF               	movf	main@length& (0+255),w,b
   620  0009BE  0100               	movlb	0	; () banked
   621  0009C0  0100               	movlb	0	; () banked
   622  0009C2  6FB1               	movwf	(?_uart_lthread+4)& (0+255),b
   623  0009C4  0100               	movlb	0	; () banked
   624  0009C6  6BB2               	clrf	(?_uart_lthread+5)& (0+255),b
   625  0009C8  0100               	movlb	0	; () banked
   626  0009CA  BFB1               	btfsc	(?_uart_lthread+4)& (0+255),7,b
   627  0009CC  07B2               	decf	(?_uart_lthread+5)& (0+255),f,b
   628  0009CE  0101               	movlb	1	; () banked
   629  0009D0  0E01               	movlw	high main@msgbuffer
   630  0009D2  0100               	movlb	0	; () banked
   631  0009D4  0100               	movlb	0	; () banked
   632  0009D6  6FB4               	movwf	(?_uart_lthread+7)& (0+255),b
   633  0009D8  0101               	movlb	1	; () banked
   634  0009DA  0EDA               	movlw	low main@msgbuffer
   635  0009DC  0100               	movlb	0	; () banked
   636  0009DE  6FB3               	movwf	(?_uart_lthread+6)& (0+255),b
   637  0009E0  EC75  F00B         	call	_uart_lthread	;wreg free
   638                           
   639                           ;main.c: 310: break;
   640  0009E4  D6D2               	goto	l3116
   641  0009E6                     l3160:
   642  0009E6  0101               	movlb	1	; () banked
   643  0009E8  0101               	movlb	1	; () banked
   644  0009EA  51EE               	movf	main@msgtype& (0+255),w,b
   645                           
   646                           ; Switch size 1, requested type "space"
   647                           ; Number of cases is 3, Range of values is 11 to 31
   648                           ; switch strategies available:
   649                           ; Name         Instructions Cycles
   650                           ; simple_byte           10     6 (average)
   651                           ;	Chosen strategy is simple_byte
   652  0009EC  0A0B               	xorlw	11	; case 11
   653  0009EE  B4D8               	btfsc	status,2,c
   654  0009F0  D7AC               	goto	l3154
   655  0009F2  0A15               	xorlw	21	; case 30
   656  0009F4  B4D8               	btfsc	status,2,c
   657  0009F6  D7D0               	goto	l3156
   658  0009F8  0A01               	xorlw	1	; case 31
   659  0009FA  B4D8               	btfsc	status,2,c
   660  0009FC  D7CD               	goto	l3156
   661  0009FE  D6C5               	goto	l3116
   662  000A00                     __end_of_main:
   663                           	opt stack 0
   664                           status	equ	0xFD8
   665                           
   666                           	psect	cinit
   667  001762                     __pcinit:
   668                           	opt stack 0
   669  001762                     start_initialization:
   670                           	opt stack 0
   671  001762                     __initialization:
   672                           	opt stack 0
   673                           
   674                           ; Clear objects allocated to BANK2 (50 bytes)
   675  001762  EE02  F000         	lfsr	0,__pbssBANK2
   676  001766  0E32               	movlw	50
   677  001768                     clear_0:
   678  001768  6AEE               	clrf	postinc0,c
   679  00176A  06E8               	decf	wreg,f,c
   680  00176C  E1FD               	bnz	clear_0
   681                           
   682                           ; Clear objects allocated to BANK1 (216 bytes)
   683  00176E  EE01  F000         	lfsr	0,__pbssBANK1
   684  001772  0ED8               	movlw	216
   685  001774                     clear_1:
   686  001774  6AEE               	clrf	postinc0,c
   687  001776  06E8               	decf	wreg,f,c
   688  001778  E1FD               	bnz	clear_1
   689                           
   690                           ; Clear objects allocated to BANK0 (3 bytes)
   691  00177A  0100               	movlb	0
   692  00177C  6BD2               	clrf	(__pbssBANK0+2)& (0+255),b
   693  00177E  6BD1               	clrf	(__pbssBANK0+1)& (0+255),b
   694  001780  6BD0               	clrf	__pbssBANK0& (0+255),b
   695                           
   696                           ; Clear objects allocated to COMRAM (26 bytes)
   697  001782  EE00  F037         	lfsr	0,__pbssCOMRAM
   698  001786  0E1A               	movlw	26
   699  001788                     clear_2:
   700  001788  6AEE               	clrf	postinc0,c
   701  00178A  06E8               	decf	wreg,f,c
   702  00178C  E1FD               	bnz	clear_2
   703  00178E                     end_of_initialization:
   704                           	opt stack 0
   705  00178E                     __end_of__initialization:
   706                           	opt stack 0
   707  00178E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   708  001790  6EF8               	movwf	tblptru,c
   709  001792  0100               	movlb	0
   710  001794  EF92  F003         	goto	_main	;jump to C main() function
   711                           tblptru	equ	0xFF8
   712                           postinc0	equ	0xFEE
   713                           wreg	equ	0xFE8
   714                           status	equ	0xFD8
   715                           
   716                           	psect	bssCOMRAM
   717  000037                     __pbssCOMRAM:
   718                           	opt stack 0
   719  000037                     _ADCValue:
   720                           	opt stack 0
   721  000037                     	ds	2
   722  000039                     _counter2:
   723                           	opt stack 0
   724  000039                     	ds	2
   725  00003B                     _length:
   726                           	opt stack 0
   727  00003B                     	ds	2
   728  00003D                     _test:
   729                           	opt stack 0
   730  00003D                     	ds	2
   731  00003F                     _uc_ptr:
   732                           	opt stack 0
   733  00003F                     	ds	2
   734  000041                     _MQ_Main_Willing_to_block:
   735                           	opt stack 0
   736  000041                     	ds	1
   737  000042                     _USART_Status:
   738                           	opt stack 0
   739  000042                     	ds	1
   740  000043                     _last_reg_recvd:
   741                           	opt stack 0
   742  000043                     	ds	1
   743  000044                     _message4:
   744                           	opt stack 0
   745  000044                     	ds	1
   746  000045                     _msgbuffer:
   747                           	opt stack 0
   748  000045                     	ds	11
   749  000050                     _msgtype:
   750                           	opt stack 0
   751  000050                     	ds	1
   752                           tblptru	equ	0xFF8
   753                           postinc0	equ	0xFEE
   754                           wreg	equ	0xFE8
   755                           status	equ	0xFD8
   756                           
   757                           	psect	bssBANK0
   758  0000D0                     __pbssBANK0:
   759                           	opt stack 0
   760  0000D0                     _ic_ptr:
   761                           	opt stack 0
   762  0000D0                     	ds	2
   763  0000D2                     _message:
   764                           	opt stack 0
   765  0000D2                     	ds	1
   766                           tblptru	equ	0xFF8
   767                           postinc0	equ	0xFEE
   768                           wreg	equ	0xFE8
   769                           status	equ	0xFD8
   770                           
   771                           	psect	bssBANK1
   772  000100                     __pbssBANK1:
   773                           	opt stack 0
   774  000100                     _FromMainHigh_MQ:
   775                           	opt stack 0
   776  000100                     	ds	54
   777  000136                     _FromMainLow_MQ:
   778                           	opt stack 0
   779  000136                     	ds	54
   780  00016C                     _ToMainHigh_MQ:
   781                           	opt stack 0
   782  00016C                     	ds	54
   783  0001A2                     _ToMainLow_MQ:
   784                           	opt stack 0
   785  0001A2                     	ds	54
   786                           tblptru	equ	0xFF8
   787                           postinc0	equ	0xFEE
   788                           wreg	equ	0xFE8
   789                           status	equ	0xFD8
   790                           
   791                           	psect	bssBANK2
   792  000200                     __pbssBANK2:
   793                           	opt stack 0
   794  000200                     _testbuffer:
   795                           	opt stack 0
   796  000200                     	ds	50
   797                           tblptru	equ	0xFF8
   798                           postinc0	equ	0xFEE
   799                           wreg	equ	0xFE8
   800                           status	equ	0xFD8
   801                           
   802                           	psect	cstackBANK1
   803  0001D8                     __pcstackBANK1:
   804                           	opt stack 0
   805  0001D8                     ??_timer1_lthread:
   806                           
   807                           ; 0 bytes @ 0x0
   808  0001D8                     	ds	2
   809  0001DA                     main@msgbuffer:
   810                           	opt stack 0
   811                           
   812                           ; 11 bytes @ 0x2
   813  0001DA                     	ds	11
   814  0001E5                     main@uthread_data:
   815                           	opt stack 0
   816                           
   817                           ; 2 bytes @ 0xD
   818  0001E5                     	ds	2
   819  0001E7                     main@t0thread_data:
   820                           	opt stack 0
   821                           
   822                           ; 2 bytes @ 0xF
   823  0001E7                     	ds	2
   824  0001E9                     main@last_reg_recvd:
   825                           	opt stack 0
   826                           
   827                           ; 1 bytes @ 0x11
   828  0001E9                     	ds	1
   829  0001EA                     main@test_var:
   830                           	opt stack 0
   831                           
   832                           ; 2 bytes @ 0x12
   833  0001EA                     	ds	2
   834  0001EC                     main@t1thread_data:
   835                           	opt stack 0
   836                           
   837                           ; 2 bytes @ 0x14
   838  0001EC                     	ds	2
   839  0001EE                     main@msgtype:
   840                           	opt stack 0
   841                           
   842                           ; 1 bytes @ 0x16
   843  0001EE                     	ds	1
   844  0001EF                     main@length:
   845                           	opt stack 0
   846                           
   847                           ; 1 bytes @ 0x17
   848  0001EF                     	ds	1
   849                           tblptru	equ	0xFF8
   850                           postinc0	equ	0xFEE
   851                           wreg	equ	0xFE8
   852                           status	equ	0xFD8
   853                           
   854                           	psect	cstackBANK0
   855  000080                     __pcstackBANK0:
   856                           	opt stack 0
   857  000080                     i2memcpy@d:
   858                           	opt stack 0
   859                           
   860                           ; 2 bytes @ 0x0
   861  000080                     	ds	2
   862  000082                     i2memcpy@s:
   863                           	opt stack 0
   864                           
   865                           ; 2 bytes @ 0x2
   866  000082                     	ds	2
   867  000084                     ?i2_send_msg:
   868                           	opt stack 0
   869  000084                     ?i2_recv_msg:
   870                           	opt stack 0
   871  000084                     i2send_msg@qptr:
   872                           	opt stack 0
   873  000084                     i2recv_msg@qptr:
   874                           	opt stack 0
   875                           
   876                           ; 2 bytes @ 0x4
   877  000084                     	ds	2
   878  000086                     i2send_msg@length:
   879                           	opt stack 0
   880  000086                     i2recv_msg@maxlength:
   881                           	opt stack 0
   882                           
   883                           ; 1 bytes @ 0x6
   884  000086                     	ds	1
   885  000087                     i2send_msg@msgtype:
   886                           	opt stack 0
   887  000087                     i2recv_msg@msgtype:
   888                           	opt stack 0
   889                           
   890                           ; 2 bytes @ 0x7
   891  000087                     	ds	1
   892  000088                     i2send_msg@data:
   893                           	opt stack 0
   894                           
   895                           ; 2 bytes @ 0x8
   896  000088                     	ds	1
   897  000089                     i2recv_msg@data:
   898                           	opt stack 0
   899                           
   900                           ; 2 bytes @ 0x9
   901  000089                     	ds	1
   902  00008A                     i2send_msg@tlength:
   903                           	opt stack 0
   904                           
   905                           ; 2 bytes @ 0xA
   906  00008A                     	ds	1
   907  00008B                     ??i2_recv_msg:
   908                           
   909                           ; 0 bytes @ 0xB
   910  00008B                     	ds	1
   911  00008C                     i2send_msg@slot:
   912                           	opt stack 0
   913                           
   914                           ; 1 bytes @ 0xC
   915  00008C                     	ds	1
   916  00008D                     i2recv_msg@slot:
   917                           	opt stack 0
   918  00008D                     i2send_msg@qmsg:
   919                           	opt stack 0
   920                           
   921                           ; 2 bytes @ 0xD
   922  00008D                     	ds	1
   923  00008E                     i2recv_msg@tlength:
   924                           	opt stack 0
   925                           
   926                           ; 2 bytes @ 0xE
   927  00008E                     	ds	1
   928  00008F                     ?_ToMainHigh_sendmsg:
   929                           	opt stack 0
   930  00008F                     ToMainHigh_sendmsg@length:
   931                           	opt stack 0
   932                           
   933                           ; 1 bytes @ 0xF
   934  00008F                     	ds	1
   935  000090                     ToMainHigh_sendmsg@msgtype:
   936                           	opt stack 0
   937  000090                     i2recv_msg@qmsg:
   938                           	opt stack 0
   939                           
   940                           ; 2 bytes @ 0x10
   941  000090                     	ds	1
   942  000091                     ToMainHigh_sendmsg@data:
   943                           	opt stack 0
   944                           
   945                           ; 2 bytes @ 0x11
   946  000091                     	ds	1
   947  000092                     ?i2_FromMainHigh_recvmsg:
   948                           	opt stack 0
   949  000092                     i2FromMainHigh_recvmsg@maxlength:
   950                           	opt stack 0
   951                           
   952                           ; 1 bytes @ 0x12
   953  000092                     	ds	1
   954  000093                     ??_i2c_int_handler:
   955  000093                     i2FromMainHigh_recvmsg@msgtype:
   956                           	opt stack 0
   957                           
   958                           ; 2 bytes @ 0x13
   959  000093                     	ds	2
   960  000095                     i2FromMainHigh_recvmsg@data:
   961                           	opt stack 0
   962  000095                     i2c_int_handler@error_buf:
   963                           	opt stack 0
   964                           
   965                           ; 3 bytes @ 0x15
   966  000095                     	ds	2
   967  000097                     ??_timer0_int_handler:
   968                           
   969                           ; 0 bytes @ 0x17
   970  000097                     	ds	1
   971  000098                     i2c_int_handler@data_written:
   972                           	opt stack 0
   973                           
   974                           ; 1 bytes @ 0x18
   975  000098                     	ds	1
   976  000099                     i2c_int_handler@overrun_error:
   977                           	opt stack 0
   978  000099                     timer0_int_handler@length:
   979                           	opt stack 0
   980                           
   981                           ; 2 bytes @ 0x19
   982  000099                     	ds	1
   983  00009A                     i2c_int_handler@msg_to_send:
   984                           	opt stack 0
   985                           
   986                           ; 1 bytes @ 0x1A
   987  00009A                     	ds	1
   988  00009B                     i2c_int_handler@i2c_data:
   989                           	opt stack 0
   990  00009B                     timer0_int_handler@msgtype:
   991                           	opt stack 0
   992                           
   993                           ; 2 bytes @ 0x1B
   994  00009B                     	ds	1
   995  00009C                     i2c_int_handler@msg_ready:
   996                           	opt stack 0
   997                           
   998                           ; 1 bytes @ 0x1C
   999  00009C                     	ds	1
  1000  00009D                     i2c_int_handler@data_read:
  1001                           	opt stack 0
  1002  00009D                     timer0_int_handler@val:
  1003                           	opt stack 0
  1004                           
  1005                           ; 2 bytes @ 0x1D
  1006  00009D                     	ds	2
  1007  00009F                     ??_InterruptHandlerHigh:
  1008                           
  1009                           ; 0 bytes @ 0x1F
  1010  00009F                     	ds	14
  1011  0000AD                     ?_init_timer1_lthread:
  1012                           	opt stack 0
  1013  0000AD                     ?_OpenUSART:
  1014                           	opt stack 0
  1015  0000AD                     ?_start_i2c_slave_reply:
  1016                           	opt stack 0
  1017  0000AD                     ?_Delay1KTCYx:
  1018                           	opt stack 0
  1019  0000AD                     ?_init_queue:
  1020                           	opt stack 0
  1021  0000AD                     ?_check_msg:
  1022                           	opt stack 0
  1023  0000AD                     ?_timer0_lthread:
  1024                           	opt stack 0
  1025  0000AD                     ?_uart_lthread:
  1026                           	opt stack 0
  1027  0000AD                     ?_memcpy:
  1028                           	opt stack 0
  1029  0000AD                     ?_in_high_int:
  1030                           	opt stack 0
  1031  0000AD                     start_i2c_slave_reply@length:
  1032                           	opt stack 0
  1033  0000AD                     OpenUSART@config:
  1034                           	opt stack 0
  1035  0000AD                     Delay1KTCYx@unit:
  1036                           	opt stack 0
  1037  0000AD                     init_queue@qptr:
  1038                           	opt stack 0
  1039  0000AD                     check_msg@qptr:
  1040                           	opt stack 0
  1041  0000AD                     init_timer1_lthread@tptr:
  1042                           	opt stack 0
  1043  0000AD                     memcpy@d1:
  1044                           	opt stack 0
  1045                           
  1046                           ; 2 bytes @ 0x2D
  1047  0000AD                     	ds	1
  1048  0000AE                     start_i2c_slave_reply@msg:
  1049                           	opt stack 0
  1050  0000AE                     OpenUSART@spbrg:
  1051                           	opt stack 0
  1052                           
  1053                           ; 2 bytes @ 0x2E
  1054  0000AE                     	ds	1
  1055  0000AF                     ??_init_queue:
  1056  0000AF                     ??_check_msg:
  1057  0000AF                     ?_in_low_int:
  1058                           	opt stack 0
  1059  0000AF                     uart_lthread@msgtype:
  1060                           	opt stack 0
  1061  0000AF                     memcpy@s1:
  1062                           	opt stack 0
  1063                           
  1064                           ; 2 bytes @ 0x2F
  1065  0000AF                     	ds	1
  1066  0000B0                     ??_start_i2c_slave_reply:
  1067  0000B0                     init_queue@i:
  1068                           	opt stack 0
  1069                           
  1070                           ; 1 bytes @ 0x30
  1071  0000B0                     	ds	1
  1072  0000B1                     ??_init_queues:
  1073  0000B1                     ?_in_main:
  1074                           	opt stack 0
  1075  0000B1                     uart_lthread@length:
  1076                           	opt stack 0
  1077  0000B1                     memcpy@n:
  1078                           	opt stack 0
  1079                           
  1080                           ; 2 bytes @ 0x31
  1081  0000B1                     	ds	2
  1082  0000B3                     ??_block_on_To_msgqueues:
  1083  0000B3                     timer0_lthread@msgbuffer:
  1084                           	opt stack 0
  1085  0000B3                     uart_lthread@msgbuffer:
  1086                           	opt stack 0
  1087  0000B3                     memcpy@d:
  1088                           	opt stack 0
  1089                           
  1090                           ; 2 bytes @ 0x33
  1091  0000B3                     	ds	2
  1092  0000B5                     timer0_lthread@msgval:
  1093                           	opt stack 0
  1094  0000B5                     memcpy@s:
  1095                           	opt stack 0
  1096                           
  1097                           ; 2 bytes @ 0x35
  1098  0000B5                     	ds	2
  1099  0000B7                     ?_send_msg:
  1100                           	opt stack 0
  1101  0000B7                     ?_recv_msg:
  1102                           	opt stack 0
  1103  0000B7                     send_msg@qptr:
  1104                           	opt stack 0
  1105  0000B7                     recv_msg@qptr:
  1106                           	opt stack 0
  1107                           
  1108                           ; 2 bytes @ 0x37
  1109  0000B7                     	ds	2
  1110  0000B9                     send_msg@length:
  1111                           	opt stack 0
  1112  0000B9                     recv_msg@maxlength:
  1113                           	opt stack 0
  1114                           
  1115                           ; 1 bytes @ 0x39
  1116  0000B9                     	ds	1
  1117  0000BA                     send_msg@msgtype:
  1118                           	opt stack 0
  1119  0000BA                     recv_msg@msgtype:
  1120                           	opt stack 0
  1121                           
  1122                           ; 2 bytes @ 0x3A
  1123  0000BA                     	ds	1
  1124  0000BB                     send_msg@data:
  1125                           	opt stack 0
  1126                           
  1127                           ; 2 bytes @ 0x3B
  1128  0000BB                     	ds	1
  1129  0000BC                     recv_msg@data:
  1130                           	opt stack 0
  1131                           
  1132                           ; 2 bytes @ 0x3C
  1133  0000BC                     	ds	1
  1134  0000BD                     ??_send_msg:
  1135                           
  1136                           ; 0 bytes @ 0x3D
  1137  0000BD                     	ds	1
  1138  0000BE                     ??_recv_msg:
  1139  0000BE                     send_msg@tlength:
  1140                           	opt stack 0
  1141                           
  1142                           ; 2 bytes @ 0x3E
  1143  0000BE                     	ds	2
  1144  0000C0                     send_msg@slot:
  1145                           	opt stack 0
  1146  0000C0                     recv_msg@slot:
  1147                           	opt stack 0
  1148                           
  1149                           ; 1 bytes @ 0x40
  1150  0000C0                     	ds	1
  1151  0000C1                     send_msg@qmsg:
  1152                           	opt stack 0
  1153  0000C1                     recv_msg@tlength:
  1154                           	opt stack 0
  1155                           
  1156                           ; 2 bytes @ 0x41
  1157  0000C1                     	ds	2
  1158  0000C3                     ?_FromMainHigh_sendmsg:
  1159                           	opt stack 0
  1160  0000C3                     FromMainHigh_sendmsg@length:
  1161                           	opt stack 0
  1162  0000C3                     recv_msg@qmsg:
  1163                           	opt stack 0
  1164                           
  1165                           ; 2 bytes @ 0x43
  1166  0000C3                     	ds	1
  1167  0000C4                     FromMainHigh_sendmsg@msgtype:
  1168                           	opt stack 0
  1169                           
  1170                           ; 1 bytes @ 0x44
  1171  0000C4                     	ds	1
  1172  0000C5                     ?_ToMainHigh_recvmsg:
  1173                           	opt stack 0
  1174  0000C5                     ?_ToMainLow_recvmsg:
  1175                           	opt stack 0
  1176  0000C5                     ToMainLow_recvmsg@maxlength:
  1177                           	opt stack 0
  1178  0000C5                     ToMainHigh_recvmsg@maxlength:
  1179                           	opt stack 0
  1180  0000C5                     FromMainHigh_sendmsg@data:
  1181                           	opt stack 0
  1182                           
  1183                           ; 2 bytes @ 0x45
  1184  0000C5                     	ds	1
  1185  0000C6                     ToMainLow_recvmsg@msgtype:
  1186                           	opt stack 0
  1187  0000C6                     ToMainHigh_recvmsg@msgtype:
  1188                           	opt stack 0
  1189                           
  1190                           ; 2 bytes @ 0x46
  1191  0000C6                     	ds	1
  1192  0000C7                     ?_timer1_lthread:
  1193                           	opt stack 0
  1194  0000C7                     
  1195                           ; 2 bytes @ 0x47
  1196  0000C7                     	ds	1
  1197  0000C8                     ToMainLow_recvmsg@data:
  1198                           	opt stack 0
  1199  0000C8                     ToMainHigh_recvmsg@data:
  1200                           	opt stack 0
  1201                           
  1202                           ; 2 bytes @ 0x48
  1203  0000C8                     	ds	1
  1204  0000C9                     
  1205                           ; 2 bytes @ 0x49
  1206  0000C9                     	ds	1
  1207  0000CA                     
  1208                           ; 0 bytes @ 0x4A
  1209  0000CA                     	ds	1
  1210  0000CB                     
  1211                           ; 2 bytes @ 0x4B
  1212  0000CB                     	ds	2
  1213  0000CD                     
  1214                           ; 2 bytes @ 0x4D
  1215  0000CD                     	ds	2
  1216  0000CF                     ??_main:
  1217                           
  1218                           ; 0 bytes @ 0x4F
  1219  0000CF                     	ds	1
  1220                           tblptru	equ	0xFF8
  1221                           postinc0	equ	0xFEE
  1222                           wreg	equ	0xFE8
  1223                           status	equ	0xFD8
  1224                           
  1225                           	psect	cstackCOMRAM
  1226  000001                     __pcstackCOMRAM:
  1227                           	opt stack 0
  1228  000001                     ?_WriteTimer1:
  1229                           	opt stack 0
  1230  000001                     ?_WriteUSART:
  1231                           	opt stack 0
  1232  000001                     ?i1_memcpy:
  1233                           	opt stack 0
  1234  000001                     WriteUSART@data:
  1235                           	opt stack 0
  1236  000001                     WriteTimer1@timer1:
  1237                           	opt stack 0
  1238  000001                     i1memcpy@d1:
  1239                           	opt stack 0
  1240                           
  1241                           ; 2 bytes @ 0x0
  1242  000001                     	ds	1
  1243  000002                     
  1244                           ; 0 bytes @ 0x1
  1245  000002                     	ds	1
  1246  000003                     WriteTimer1@timer:
  1247                           	opt stack 0
  1248  000003                     i1memcpy@s1:
  1249                           	opt stack 0
  1250                           
  1251                           ; 2 bytes @ 0x2
  1252  000003                     	ds	2
  1253  000005                     i1memcpy@n:
  1254                           	opt stack 0
  1255                           
  1256                           ; 2 bytes @ 0x4
  1257  000005                     	ds	2
  1258  000007                     i1memcpy@d:
  1259                           	opt stack 0
  1260                           
  1261                           ; 2 bytes @ 0x6
  1262  000007                     	ds	2
  1263  000009                     i1memcpy@s:
  1264                           	opt stack 0
  1265                           
  1266                           ; 2 bytes @ 0x8
  1267  000009                     	ds	2
  1268  00000B                     ?i1_send_msg:
  1269                           	opt stack 0
  1270  00000B                     ?i1_recv_msg:
  1271                           	opt stack 0
  1272  00000B                     i1send_msg@qptr:
  1273                           	opt stack 0
  1274  00000B                     i1recv_msg@qptr:
  1275                           	opt stack 0
  1276                           
  1277                           ; 2 bytes @ 0xA
  1278  00000B                     	ds	2
  1279  00000D                     i1send_msg@length:
  1280                           	opt stack 0
  1281  00000D                     i1recv_msg@maxlength:
  1282                           	opt stack 0
  1283                           
  1284                           ; 1 bytes @ 0xC
  1285  00000D                     	ds	1
  1286  00000E                     i1send_msg@msgtype:
  1287                           	opt stack 0
  1288  00000E                     i1recv_msg@msgtype:
  1289                           	opt stack 0
  1290                           
  1291                           ; 2 bytes @ 0xD
  1292  00000E                     	ds	1
  1293  00000F                     i1send_msg@data:
  1294                           	opt stack 0
  1295                           
  1296                           ; 2 bytes @ 0xE
  1297  00000F                     	ds	1
  1298  000010                     i1recv_msg@data:
  1299                           	opt stack 0
  1300                           
  1301                           ; 2 bytes @ 0xF
  1302  000010                     	ds	1
  1303  000011                     ??i1_send_msg:
  1304                           
  1305                           ; 0 bytes @ 0x10
  1306  000011                     	ds	1
  1307  000012                     ??i1_recv_msg:
  1308  000012                     i1send_msg@tlength:
  1309                           	opt stack 0
  1310                           
  1311                           ; 2 bytes @ 0x11
  1312  000012                     	ds	2
  1313  000014                     i1send_msg@slot:
  1314                           	opt stack 0
  1315  000014                     i1recv_msg@slot:
  1316                           	opt stack 0
  1317                           
  1318                           ; 1 bytes @ 0x13
  1319  000014                     	ds	1
  1320  000015                     i1send_msg@qmsg:
  1321                           	opt stack 0
  1322  000015                     i1recv_msg@tlength:
  1323                           	opt stack 0
  1324                           
  1325                           ; 2 bytes @ 0x14
  1326  000015                     	ds	2
  1327  000017                     ?_ToMainLow_sendmsg:
  1328                           	opt stack 0
  1329  000017                     ToMainLow_sendmsg@length:
  1330                           	opt stack 0
  1331  000017                     i1recv_msg@qmsg:
  1332                           	opt stack 0
  1333                           
  1334                           ; 2 bytes @ 0x16
  1335  000017                     	ds	1
  1336  000018                     ToMainLow_sendmsg@msgtype:
  1337                           	opt stack 0
  1338                           
  1339                           ; 1 bytes @ 0x17
  1340  000018                     	ds	1
  1341  000019                     ?_FromMainHigh_recvmsg:
  1342                           	opt stack 0
  1343  000019                     FromMainHigh_recvmsg@maxlength:
  1344                           	opt stack 0
  1345  000019                     ToMainLow_sendmsg@data:
  1346                           	opt stack 0
  1347                           
  1348                           ; 2 bytes @ 0x18
  1349  000019                     	ds	1
  1350  00001A                     FromMainHigh_recvmsg@msgtype:
  1351                           	opt stack 0
  1352                           
  1353                           ; 2 bytes @ 0x19
  1354  00001A                     	ds	1
  1355  00001B                     ??_timer1_int_handler:
  1356  00001B                     
  1357                           ; 0 bytes @ 0x1A
  1358  00001B                     	ds	1
  1359  00001C                     FromMainHigh_recvmsg@data:
  1360                           	opt stack 0
  1361                           
  1362                           ; 2 bytes @ 0x1B
  1363  00001C                     	ds	2
  1364  00001E                     ??_uart_tx_int_handler:
  1365  00001E                     
  1366                           ; 0 bytes @ 0x1D
  1367  00001E                     	ds	1
  1368  00001F                     ??_InterruptHandlerLow:
  1369                           
  1370                           ; 0 bytes @ 0x1E
  1371  00001F                     	ds	17
  1372  000030                     ?_WriteTimer0:
  1373                           	opt stack 0
  1374  000030                     ?_handle_start:
  1375                           	opt stack 0
  1376  000030                     ?i2_check_msg:
  1377                           	opt stack 0
  1378  000030                     ?_ReadADC:
  1379                           	opt stack 0
  1380  000030                     ?i2_in_high_int:
  1381                           	opt stack 0
  1382  000030                     ?i2_memcpy:
  1383                           	opt stack 0
  1384  000030                     handle_start@data_read:
  1385                           	opt stack 0
  1386  000030                     ReadUSART@data:
  1387                           	opt stack 0
  1388  000030                     WriteTimer0@timer0:
  1389                           	opt stack 0
  1390  000030                     i2check_msg@qptr:
  1391                           	opt stack 0
  1392  000030                     i2memcpy@d1:
  1393                           	opt stack 0
  1394                           
  1395                           ; 2 bytes @ 0x2F
  1396  000030                     	ds	1
  1397  000031                     uart_rx_int_handler@x:
  1398                           	opt stack 0
  1399                           
  1400                           ; 2 bytes @ 0x30
  1401  000031                     	ds	1
  1402  000032                     ??i2_check_msg:
  1403  000032                     ?i2_in_low_int:
  1404                           	opt stack 0
  1405  000032                     WriteTimer0@timer:
  1406                           	opt stack 0
  1407  000032                     i2memcpy@s1:
  1408                           	opt stack 0
  1409                           
  1410                           ; 2 bytes @ 0x31
  1411  000032                     	ds	2
  1412  000034                     i2memcpy@n:
  1413                           	opt stack 0
  1414                           
  1415                           ; 2 bytes @ 0x33
  1416  000034                     	ds	2
  1417  000036                     ??i2_send_msg:
  1418  000036                     
  1419                           ; 0 bytes @ 0x35
  1420  000036                     	ds	1
  1421  000037                     tblptru	equ	0xFF8
  1422                           postinc0	equ	0xFEE
  1423                           wreg	equ	0xFE8
  1424                           status	equ	0xFD8
  1425                           
  1426 ;; *************** function _uart_lthread *****************
  1427 ;; Defined at:
  1428 ;;		line 9 in file "../src/uart_thread.c"
  1429 ;; Parameters:    Size  Location     Type
  1430 ;;  uptr            2   45[BANK0 ] PTR struct __uart_thread
  1431 ;;		 -> main@uthread_data(2), 
  1432 ;;  msgtype         2   47[BANK0 ] int 
  1433 ;;  length          2   49[BANK0 ] int 
  1434 ;;  msgbuffer       2   51[BANK0 ] PTR unsigned char 
  1435 ;;		 -> main@msgbuffer(11), 
  1436 ;; Auto vars:     Size  Location     Type
  1437 ;;		None
  1438 ;; Return value:  Size  Location     Type
  1439 ;;                  2   45[BANK0 ] int 
  1440 ;; Registers used:
  1441 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1442 ;; Tracked objects:
  1443 ;;		On entry : 0/0
  1444 ;;		On exit  : 0/0
  1445 ;;		Unchanged: 0/0
  1446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1447 ;;      Params:         0       8       0       0       0
  1448 ;;      Locals:         0       0       0       0       0
  1449 ;;      Temps:          0       0       0       0       0
  1450 ;;      Totals:         0       8       0       0       0
  1451 ;;Total ram usage:        8 bytes
  1452 ;; Hardware stack levels used:    1
  1453 ;; Hardware stack levels required when called:   10
  1454 ;; This function calls:
  1455 ;;		Nothing
  1456 ;; This function is called by:
  1457 ;;		_main
  1458 ;; This function uses a non-reentrant model
  1459 ;;
  1460                           
  1461                           	psect	text1
  1462  0016EA                     __ptext1:
  1463                           	opt stack 0
  1464  0016EA                     _uart_lthread:
  1465                           	opt stack 19
  1466                           
  1467                           ;uart_thread.c: 10: if (msgtype == 30) {
  1468                           
  1469                           ; BSR set to: 1
  1470                           ;incstack = 0
  1471                           ;incstack = 0
  1472  0016EA  0100               	movlb	0	; () banked
  1473  0016EC  0100               	movlb	0	; () banked
  1474  0016EE  51AF               	movf	uart_lthread@msgtype& (0+255),w,b
  1475  0016F0  0A1E               	xorlw	30
  1476  0016F2  11B0               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  1477  0016F4  B4D8               	btfsc	status,2,c
  1478  0016F6  0012               	return	
  1479                           
  1480                           ; BSR set to: 0
  1481                           
  1482                           ; BSR set to: 0
  1483                           
  1484                           ; BSR set to: 0
  1485                           ;uart_thread.c: 11: } else if (msgtype == 31) {
  1486  0016F8  0100               	movlb	0	; () banked
  1487  0016FA  0100               	movlb	0	; () banked
  1488  0016FC  51AF               	movf	uart_lthread@msgtype& (0+255),w,b
  1489  0016FE  0A1F               	xorlw	31
  1490  001700  11B0               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  1491  001702  A4D8               	btfss	status,2,c
  1492  001704  0012               	return	
  1493                           
  1494                           ; BSR set to: 0
  1495                           ;uart_thread.c: 14: msgbuffer[length] = '\0';
  1496  001706  0100               	movlb	0	; () banked
  1497  001708  0100               	movlb	0	; () banked
  1498  00170A  51B1               	movf	uart_lthread@length& (0+255),w,b
  1499  00170C  0100               	movlb	0	; () banked
  1500  00170E  0100               	movlb	0	; () banked
  1501  001710  25B3               	addwf	uart_lthread@msgbuffer& (0+255),w,b
  1502  001712  6ED9               	movwf	fsr2l,c
  1503  001714  0100               	movlb	0	; () banked
  1504  001716  0100               	movlb	0	; () banked
  1505  001718  51B2               	movf	(uart_lthread@length+1)& (0+255),w,b
  1506  00171A  0100               	movlb	0	; () banked
  1507  00171C  0100               	movlb	0	; () banked
  1508  00171E  21B4               	addwfc	(uart_lthread@msgbuffer+1)& (0+255),w,b
  1509  001720  6EDA               	movwf	fsr2h,c
  1510  001722  0E00               	movlw	0
  1511  001724  6EDF               	movwf	indf2,c
  1512  001726  0012               	return	
  1513  001728                     __end_of_uart_lthread:
  1514                           	opt stack 0
  1515                           tblptru	equ	0xFF8
  1516                           postinc0	equ	0xFEE
  1517                           wreg	equ	0xFE8
  1518                           indf2	equ	0xFDF
  1519                           fsr2h	equ	0xFDA
  1520                           fsr2l	equ	0xFD9
  1521                           status	equ	0xFD8
  1522                           
  1523 ;; *************** function _timer1_lthread *****************
  1524 ;; Defined at:
  1525 ;;		line 19 in file "../src/timer1_thread.c"
  1526 ;; Parameters:    Size  Location     Type
  1527 ;;  tptr            2   71[BANK0 ] PTR struct __timer1_thre
  1528 ;;		 -> main@t1thread_data(2), 
  1529 ;;  msgtype         2   73[BANK0 ] int 
  1530 ;;  length          2   75[BANK0 ] int 
  1531 ;;  msgbuffer       2   77[BANK0 ] PTR unsigned char 
  1532 ;;		 -> main@msgbuffer(11), 
  1533 ;; Auto vars:     Size  Location     Type
  1534 ;;  retval          1    0        char 
  1535 ;; Return value:  Size  Location     Type
  1536 ;;                  2   71[BANK0 ] int 
  1537 ;; Registers used:
  1538 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1539 ;; Tracked objects:
  1540 ;;		On entry : 0/0
  1541 ;;		On exit  : 0/0
  1542 ;;		Unchanged: 0/0
  1543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1544 ;;      Params:         0       8       0       0       0
  1545 ;;      Locals:         0       0       0       0       0
  1546 ;;      Temps:          0       0       2       0       0
  1547 ;;      Totals:         0       8       2       0       0
  1548 ;;Total ram usage:       10 bytes
  1549 ;; Hardware stack levels used:    1
  1550 ;; Hardware stack levels required when called:   13
  1551 ;; This function calls:
  1552 ;;		_FromMainHigh_sendmsg
  1553 ;; This function is called by:
  1554 ;;		_main
  1555 ;; This function uses a non-reentrant model
  1556 ;;
  1557                           
  1558                           	psect	text2
  1559  00166A                     __ptext2:
  1560                           	opt stack 0
  1561  00166A                     _timer1_lthread:
  1562                           	opt stack 16
  1563                           
  1564                           ;timer1_thread.c: 20: signed char retval;
  1565                           ;timer1_thread.c: 33: message++;
  1566                           
  1567                           ; BSR set to: 0
  1568                           ;incstack = 0
  1569                           ;incstack = 0
  1570  00166A  0100               	movlb	0	; () banked
  1571  00166C  0100               	movlb	0	; () banked
  1572  00166E  2BD2               	incf	_message& (0+255),f,b
  1573                           
  1574                           ; BSR set to: 0
  1575                           ;timer1_thread.c: 36: FromMainHigh_sendmsg(sizeof (message), 20, (void *) &(message));
  1576  001670  0101               	movlb	1	; () banked
  1577  001672  6FD8               	movwf	??_timer1_lthread& (0+255),b
  1578  001674  0E01               	movlw	1
  1579  001676  0100               	movlb	0	; () banked
  1580  001678  0100               	movlb	0	; () banked
  1581  00167A  6FC3               	movwf	?_FromMainHigh_sendmsg& (0+255),b
  1582  00167C  0101               	movlb	1	; () banked
  1583  00167E  51D8               	movf	??_timer1_lthread& (0+255),w,b
  1584  001680  0101               	movlb	1	; () banked
  1585  001682  6FD9               	movwf	(??_timer1_lthread+1)& (0+255),b
  1586  001684  0E14               	movlw	20
  1587  001686  0100               	movlb	0	; () banked
  1588  001688  0100               	movlb	0	; () banked
  1589  00168A  6FC4               	movwf	(?_FromMainHigh_sendmsg+1)& (0+255),b
  1590  00168C  0101               	movlb	1	; () banked
  1591  00168E  51D9               	movf	(??_timer1_lthread+1)& (0+255),w,b
  1592  001690  0100               	movlb	0	; () banked
  1593  001692  0E00               	movlw	high _message
  1594  001694  0100               	movlb	0	; () banked
  1595  001696  0100               	movlb	0	; () banked
  1596  001698  6FC6               	movwf	(?_FromMainHigh_sendmsg+3)& (0+255),b
  1597  00169A  0100               	movlb	0	; () banked
  1598  00169C  0ED2               	movlw	low _message
  1599  00169E  0100               	movlb	0	; () banked
  1600  0016A0  6FC5               	movwf	(?_FromMainHigh_sendmsg+2)& (0+255),b
  1601  0016A2  EC6D  F00C         	call	_FromMainHigh_sendmsg	;wreg free
  1602                           
  1603                           ;timer1_thread.c: 38: PIE1bits.TXIE = 1;
  1604  0016A6  889D               	bsf	3997,4,c	;volatile
  1605  0016A8  0012               	return	
  1606  0016AA                     __end_of_timer1_lthread:
  1607                           	opt stack 0
  1608                           tblptru	equ	0xFF8
  1609                           postinc0	equ	0xFEE
  1610                           wreg	equ	0xFE8
  1611                           indf2	equ	0xFDF
  1612                           fsr2h	equ	0xFDA
  1613                           fsr2l	equ	0xFD9
  1614                           status	equ	0xFD8
  1615                           
  1616 ;; *************** function _FromMainHigh_sendmsg *****************
  1617 ;; Defined at:
  1618 ;;		line 174 in file "../src/messages.c"
  1619 ;; Parameters:    Size  Location     Type
  1620 ;;  length          1   67[BANK0 ] unsigned char 
  1621 ;;  msgtype         1   68[BANK0 ] unsigned char 
  1622 ;;  data            2   69[BANK0 ] PTR void 
  1623 ;;		 -> message(1), 
  1624 ;; Auto vars:     Size  Location     Type
  1625 ;;		None
  1626 ;; Return value:  Size  Location     Type
  1627 ;;                  1    wreg      char 
  1628 ;; Registers used:
  1629 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1630 ;; Tracked objects:
  1631 ;;		On entry : 0/0
  1632 ;;		On exit  : 0/0
  1633 ;;		Unchanged: 0/0
  1634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1635 ;;      Params:         0       4       0       0       0
  1636 ;;      Locals:         0       0       0       0       0
  1637 ;;      Temps:          0       0       0       0       0
  1638 ;;      Totals:         0       4       0       0       0
  1639 ;;Total ram usage:        4 bytes
  1640 ;; Hardware stack levels used:    1
  1641 ;; Hardware stack levels required when called:   12
  1642 ;; This function calls:
  1643 ;;		_send_msg
  1644 ;; This function is called by:
  1645 ;;		_timer1_lthread
  1646 ;; This function uses a non-reentrant model
  1647 ;;
  1648                           
  1649                           	psect	text3
  1650  0018DA                     __ptext3:
  1651                           	opt stack 0
  1652  0018DA                     _FromMainHigh_sendmsg:
  1653                           	opt stack 16
  1654                           
  1655                           ;messages.c: 180: return (send_msg(&FromMainHigh_MQ, length, msgtype, data));
  1656                           ;	Return value of _FromMainHigh_sendmsg is never used
  1657                           
  1658                           ;incstack = 0
  1659                           ;incstack = 0
  1660  0018DA  0101               	movlb	1	; () banked
  1661  0018DC  0E01               	movlw	high _FromMainHigh_MQ
  1662  0018DE  0100               	movlb	0	; () banked
  1663  0018E0  0100               	movlb	0	; () banked
  1664  0018E2  6FB8               	movwf	(?_send_msg+1)& (0+255),b
  1665  0018E4  0101               	movlb	1	; () banked
  1666  0018E6  0E00               	movlw	low _FromMainHigh_MQ
  1667  0018E8  0100               	movlb	0	; () banked
  1668  0018EA  6FB7               	movwf	?_send_msg& (0+255),b
  1669  0018EC  C0C3  F0B9         	movff	FromMainHigh_sendmsg@length,?_send_msg+2
  1670  0018F0  C0C4  F0BA         	movff	FromMainHigh_sendmsg@msgtype,?_send_msg+3
  1671  0018F4  C0C5  F0BB         	movff	FromMainHigh_sendmsg@data,?_send_msg+4
  1672  0018F8  C0C6  F0BC         	movff	FromMainHigh_sendmsg@data+1,?_send_msg+5
  1673  0018FC  ECB1  F006         	call	_send_msg	;wreg free
  1674  001900  0012               	return	
  1675  001902                     __end_of_FromMainHigh_sendmsg:
  1676                           	opt stack 0
  1677                           tblptru	equ	0xFF8
  1678                           postinc0	equ	0xFEE
  1679                           wreg	equ	0xFE8
  1680                           indf2	equ	0xFDF
  1681                           fsr2h	equ	0xFDA
  1682                           fsr2l	equ	0xFD9
  1683                           status	equ	0xFD8
  1684                           
  1685 ;; *************** function _send_msg *****************
  1686 ;; Defined at:
  1687 ;;		line 24 in file "../src/messages.c"
  1688 ;; Parameters:    Size  Location     Type
  1689 ;;  qptr            2   55[BANK0 ] PTR struct __msg_queue
  1690 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  1691 ;;  length          1   57[BANK0 ] unsigned char 
  1692 ;;  msgtype         1   58[BANK0 ] unsigned char 
  1693 ;;  data            2   59[BANK0 ] PTR void 
  1694 ;;		 -> timer0_int_handler@val(2), message(1), NULL(0), i2c_int_handler@error_buf(3), 
  1695 ;; Auto vars:     Size  Location     Type
  1696 ;;  qmsg            2   65[BANK0 ] PTR struct __msg
  1697 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  1698 ;;  tlength         2   62[BANK0 ] unsigned int 
  1699 ;;  slot            1   64[BANK0 ] unsigned char 
  1700 ;; Return value:  Size  Location     Type
  1701 ;;                  1    wreg      char 
  1702 ;; Registers used:
  1703 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1704 ;; Tracked objects:
  1705 ;;		On entry : 0/0
  1706 ;;		On exit  : 0/0
  1707 ;;		Unchanged: 0/0
  1708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1709 ;;      Params:         0       6       0       0       0
  1710 ;;      Locals:         0       5       0       0       0
  1711 ;;      Temps:          0       1       0       0       0
  1712 ;;      Totals:         0      12       0       0       0
  1713 ;;Total ram usage:       12 bytes
  1714 ;; Hardware stack levels used:    1
  1715 ;; Hardware stack levels required when called:   11
  1716 ;; This function calls:
  1717 ;;		_memcpy
  1718 ;; This function is called by:
  1719 ;;		_FromMainHigh_sendmsg
  1720 ;;		_FromMainLow_sendmsg
  1721 ;; This function uses a non-reentrant model
  1722 ;;
  1723                           
  1724                           	psect	text4
  1725  000D62                     __ptext4:
  1726                           	opt stack 0
  1727  000D62                     _send_msg:
  1728                           	opt stack 16
  1729                           
  1730                           ;messages.c: 25: unsigned char slot;
  1731                           ;messages.c: 27: msg *qmsg;
  1732                           ;messages.c: 28: size_t tlength = length;
  1733                           
  1734                           ;incstack = 0
  1735                           ;incstack = 0
  1736  000D62  0100               	movlb	0	; () banked
  1737  000D64  0100               	movlb	0	; () banked
  1738  000D66  C0B9  F0BE         	movff	send_msg@length,send_msg@tlength
  1739  000D6A  0100               	movlb	0	; () banked
  1740  000D6C  0100               	movlb	0	; () banked
  1741  000D6E  6BBF               	clrf	(send_msg@tlength+1)& (0+255),b
  1742                           
  1743                           ; BSR set to: 0
  1744                           ;messages.c: 38: slot = qptr->cur_write_ind;
  1745  000D70  0100               	movlb	0	; () banked
  1746  000D72  EE20 F034          	lfsr	2,52
  1747  000D76  0100               	movlb	0	; () banked
  1748  000D78  51B7               	movf	send_msg@qptr& (0+255),w,b
  1749  000D7A  26D9               	addwf	fsr2l,f,c
  1750  000D7C  0100               	movlb	0	; () banked
  1751  000D7E  51B8               	movf	(send_msg@qptr+1)& (0+255),w,b
  1752  000D80  22DA               	addwfc	fsr2h,f,c
  1753  000D82  50DF               	movf	indf2,w,c
  1754  000D84  0100               	movlb	0	; () banked
  1755  000D86  0100               	movlb	0	; () banked
  1756  000D88  6FC0               	movwf	send_msg@slot& (0+255),b
  1757                           
  1758                           ; BSR set to: 0
  1759                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  1760  000D8A  0100               	movlb	0	; () banked
  1761  000D8C  0100               	movlb	0	; () banked
  1762  000D8E  51C0               	movf	send_msg@slot& (0+255),w,b
  1763  000D90  0D0D               	mullw	13
  1764  000D92  50F3               	movf	prodl,w,c
  1765  000D94  0100               	movlb	0	; () banked
  1766  000D96  0100               	movlb	0	; () banked
  1767  000D98  25B7               	addwf	send_msg@qptr& (0+255),w,b
  1768  000D9A  0100               	movlb	0	; () banked
  1769  000D9C  0100               	movlb	0	; () banked
  1770  000D9E  6FC1               	movwf	send_msg@qmsg& (0+255),b
  1771  000DA0  50F4               	movf	prodh,w,c
  1772  000DA2  0100               	movlb	0	; () banked
  1773  000DA4  0100               	movlb	0	; () banked
  1774  000DA6  21B8               	addwfc	(send_msg@qptr+1)& (0+255),w,b
  1775  000DA8  0100               	movlb	0	; () banked
  1776  000DAA  6FC2               	movwf	(send_msg@qmsg+1)& (0+255),b
  1777                           
  1778                           ; BSR set to: 0
  1779                           ;messages.c: 41: if (qmsg->full != 0) {
  1780  000DAC  C0C1  FFD9         	movff	send_msg@qmsg,fsr2l
  1781  000DB0  C0C2  FFDA         	movff	send_msg@qmsg+1,fsr2h
  1782  000DB4  50DF               	movf	indf2,w,c
  1783  000DB6  B4D8               	btfsc	status,2,c
  1784  000DB8  D002               	goto	l3298
  1785                           
  1786                           ; BSR set to: 0
  1787                           ;messages.c: 42: return (-1);
  1788  000DBA  0EFF               	movlw	255
  1789  000DBC  0012               	return	
  1790  000DBE                     l3298:
  1791                           
  1792                           ; BSR set to: 0
  1793                           ;messages.c: 43: }
  1794                           ;messages.c: 46: qmsg->length = length;
  1795  000DBE  0100               	movlb	0	; () banked
  1796  000DC0  EE20 F001          	lfsr	2,1
  1797  000DC4  0100               	movlb	0	; () banked
  1798  000DC6  51C1               	movf	send_msg@qmsg& (0+255),w,b
  1799  000DC8  26D9               	addwf	fsr2l,f,c
  1800  000DCA  0100               	movlb	0	; () banked
  1801  000DCC  51C2               	movf	(send_msg@qmsg+1)& (0+255),w,b
  1802  000DCE  22DA               	addwfc	fsr2h,f,c
  1803  000DD0  0100               	movlb	0	; () banked
  1804  000DD2  C0B9  FFDF         	movff	send_msg@length,indf2
  1805                           
  1806                           ;messages.c: 47: qmsg->msgtype = msgtype;
  1807  000DD6  0100               	movlb	0	; () banked
  1808  000DD8  EE20 F002          	lfsr	2,2
  1809  000DDC  0100               	movlb	0	; () banked
  1810  000DDE  51C1               	movf	send_msg@qmsg& (0+255),w,b
  1811  000DE0  26D9               	addwf	fsr2l,f,c
  1812  000DE2  0100               	movlb	0	; () banked
  1813  000DE4  51C2               	movf	(send_msg@qmsg+1)& (0+255),w,b
  1814  000DE6  22DA               	addwfc	fsr2h,f,c
  1815  000DE8  0100               	movlb	0	; () banked
  1816  000DEA  C0BA  FFDF         	movff	send_msg@msgtype,indf2
  1817                           
  1818                           ; BSR set to: 0
  1819                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  1820  000DEE  0E03               	movlw	3
  1821  000DF0  0100               	movlb	0	; () banked
  1822  000DF2  0100               	movlb	0	; () banked
  1823  000DF4  25C1               	addwf	send_msg@qmsg& (0+255),w,b
  1824  000DF6  0100               	movlb	0	; () banked
  1825  000DF8  0100               	movlb	0	; () banked
  1826  000DFA  6FAD               	movwf	?_memcpy& (0+255),b
  1827  000DFC  0E00               	movlw	0
  1828  000DFE  0100               	movlb	0	; () banked
  1829  000E00  0100               	movlb	0	; () banked
  1830  000E02  21C2               	addwfc	(send_msg@qmsg+1)& (0+255),w,b
  1831  000E04  0100               	movlb	0	; () banked
  1832  000E06  6FAE               	movwf	(?_memcpy+1)& (0+255),b
  1833  000E08  C0BB  F0AF         	movff	send_msg@data,?_memcpy+2
  1834  000E0C  C0BC  F0B0         	movff	send_msg@data+1,?_memcpy+3
  1835  000E10  C0BE  F0B1         	movff	send_msg@tlength,?_memcpy+4
  1836  000E14  C0BF  F0B2         	movff	send_msg@tlength+1,?_memcpy+5
  1837  000E18  EC7E  F00A         	call	_memcpy	;wreg free
  1838                           
  1839                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  1840  000E1C  0100               	movlb	0	; () banked
  1841  000E1E  EE20 F034          	lfsr	2,52
  1842  000E22  0100               	movlb	0	; () banked
  1843  000E24  51B7               	movf	send_msg@qptr& (0+255),w,b
  1844  000E26  26D9               	addwf	fsr2l,f,c
  1845  000E28  0100               	movlb	0	; () banked
  1846  000E2A  51B8               	movf	(send_msg@qptr+1)& (0+255),w,b
  1847  000E2C  22DA               	addwfc	fsr2h,f,c
  1848  000E2E  0100               	movlb	0	; () banked
  1849  000E30  EE10 F034          	lfsr	1,52
  1850  000E34  0100               	movlb	0	; () banked
  1851  000E36  51B7               	movf	send_msg@qptr& (0+255),w,b
  1852  000E38  26E1               	addwf	fsr1l,f,c
  1853  000E3A  0100               	movlb	0	; () banked
  1854  000E3C  51B8               	movf	(send_msg@qptr+1)& (0+255),w,b
  1855  000E3E  22E2               	addwfc	fsr1h,f,c
  1856  000E40  50E7               	movf	indf1,w,c
  1857  000E42  0100               	movlb	0	; () banked
  1858  000E44  6FBD               	movwf	??_send_msg& (0+255),b
  1859  000E46  0100               	movlb	0	; () banked
  1860  000E48  29BD               	incf	??_send_msg& (0+255),w,b
  1861  000E4A  0B03               	andlw	3
  1862  000E4C  6EDF               	movwf	indf2,c
  1863                           
  1864                           ; BSR set to: 0
  1865                           ;messages.c: 59: qmsg->full = 1;
  1866  000E4E  C0C1  FFD9         	movff	send_msg@qmsg,fsr2l
  1867  000E52  C0C2  FFDA         	movff	send_msg@qmsg+1,fsr2h
  1868  000E56  0E01               	movlw	1
  1869  000E58  6EDF               	movwf	indf2,c
  1870                           
  1871                           ; BSR set to: 0
  1872                           ;messages.c: 60: return (1);
  1873  000E5A  0E01               	movlw	1
  1874  000E5C  0012               	return	
  1875  000E5E                     __end_of_send_msg:
  1876                           	opt stack 0
  1877                           tblptru	equ	0xFF8
  1878                           prodh	equ	0xFF4
  1879                           prodl	equ	0xFF3
  1880                           postinc0	equ	0xFEE
  1881                           wreg	equ	0xFE8
  1882                           indf1	equ	0xFE7
  1883                           fsr1h	equ	0xFE2
  1884                           fsr1l	equ	0xFE1
  1885                           indf2	equ	0xFDF
  1886                           fsr2h	equ	0xFDA
  1887                           fsr2l	equ	0xFD9
  1888                           status	equ	0xFD8
  1889                           
  1890 ;; *************** function _ToMainLow_recvmsg *****************
  1891 ;; Defined at:
  1892 ;;		line 112 in file "../src/messages.c"
  1893 ;; Parameters:    Size  Location     Type
  1894 ;;  maxlength       1   69[BANK0 ] unsigned char 
  1895 ;;  msgtype         2   70[BANK0 ] PTR unsigned char 
  1896 ;;		 -> main@msgtype(1), 
  1897 ;;  data            2   72[BANK0 ] PTR void 
  1898 ;;		 -> main@msgbuffer(11), 
  1899 ;; Auto vars:     Size  Location     Type
  1900 ;;		None
  1901 ;; Return value:  Size  Location     Type
  1902 ;;                  1    wreg      char 
  1903 ;; Registers used:
  1904 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1905 ;; Tracked objects:
  1906 ;;		On entry : 0/0
  1907 ;;		On exit  : 0/0
  1908 ;;		Unchanged: 0/0
  1909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1910 ;;      Params:         0       5       0       0       0
  1911 ;;      Locals:         0       0       0       0       0
  1912 ;;      Temps:          0       0       0       0       0
  1913 ;;      Totals:         0       5       0       0       0
  1914 ;;Total ram usage:        5 bytes
  1915 ;; Hardware stack levels used:    1
  1916 ;; Hardware stack levels required when called:   12
  1917 ;; This function calls:
  1918 ;;		_recv_msg
  1919 ;; This function is called by:
  1920 ;;		_main
  1921 ;; This function uses a non-reentrant model
  1922 ;;
  1923                           
  1924                           	psect	text5
  1925  00182C                     __ptext5:
  1926                           	opt stack 0
  1927  00182C                     _ToMainLow_recvmsg:
  1928                           	opt stack 17
  1929                           
  1930                           ;messages.c: 118: return (recv_msg(&ToMainLow_MQ, maxlength, msgtype, data));
  1931                           
  1932                           ; BSR set to: 0
  1933                           ;incstack = 0
  1934                           ;incstack = 0
  1935  00182C  0101               	movlb	1	; () banked
  1936  00182E  0E01               	movlw	high _ToMainLow_MQ
  1937  001830  0100               	movlb	0	; () banked
  1938  001832  0100               	movlb	0	; () banked
  1939  001834  6FB8               	movwf	(?_recv_msg+1)& (0+255),b
  1940  001836  0101               	movlb	1	; () banked
  1941  001838  0EA2               	movlw	low _ToMainLow_MQ
  1942  00183A  0100               	movlb	0	; () banked
  1943  00183C  6FB7               	movwf	?_recv_msg& (0+255),b
  1944  00183E  C0C5  F0B9         	movff	ToMainLow_recvmsg@maxlength,?_recv_msg+2
  1945  001842  C0C6  F0BA         	movff	ToMainLow_recvmsg@msgtype,?_recv_msg+3
  1946  001846  C0C7  F0BB         	movff	ToMainLow_recvmsg@msgtype+1,?_recv_msg+4
  1947  00184A  C0C8  F0BC         	movff	ToMainLow_recvmsg@data,?_recv_msg+5
  1948  00184E  C0C9  F0BD         	movff	ToMainLow_recvmsg@data+1,?_recv_msg+6
  1949  001852  EC00  F005         	call	_recv_msg	;wreg free
  1950  001856  0012               	return	
  1951  001858                     __end_of_ToMainLow_recvmsg:
  1952                           	opt stack 0
  1953                           tblptru	equ	0xFF8
  1954                           prodh	equ	0xFF4
  1955                           prodl	equ	0xFF3
  1956                           postinc0	equ	0xFEE
  1957                           wreg	equ	0xFE8
  1958                           indf1	equ	0xFE7
  1959                           fsr1h	equ	0xFE2
  1960                           fsr1l	equ	0xFE1
  1961                           indf2	equ	0xFDF
  1962                           fsr2h	equ	0xFDA
  1963                           fsr2l	equ	0xFD9
  1964                           status	equ	0xFD8
  1965                           
  1966 ;; *************** function _start_i2c_slave_reply *****************
  1967 ;; Defined at:
  1968 ;;		line 56 in file "../src/my_i2c.c"
  1969 ;; Parameters:    Size  Location     Type
  1970 ;;  length          1   45[BANK0 ] unsigned char 
  1971 ;;  msg             2   46[BANK0 ] PTR unsigned char 
  1972 ;;		 -> main@msgbuffer(11), 
  1973 ;; Auto vars:     Size  Location     Type
  1974 ;;		None
  1975 ;; Return value:  Size  Location     Type
  1976 ;;		None               void
  1977 ;; Registers used:
  1978 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1979 ;; Tracked objects:
  1980 ;;		On entry : 0/0
  1981 ;;		On exit  : 0/0
  1982 ;;		Unchanged: 0/0
  1983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1984 ;;      Params:         0       3       0       0       0
  1985 ;;      Locals:         0       0       0       0       0
  1986 ;;      Temps:          0       2       0       0       0
  1987 ;;      Totals:         0       5       0       0       0
  1988 ;;Total ram usage:        5 bytes
  1989 ;; Hardware stack levels used:    1
  1990 ;; Hardware stack levels required when called:   10
  1991 ;; This function calls:
  1992 ;;		Nothing
  1993 ;; This function is called by:
  1994 ;;		_main
  1995 ;; This function uses a non-reentrant model
  1996 ;;
  1997                           
  1998                           	psect	text6
  1999  000C58                     __ptext6:
  2000                           	opt stack 0
  2001  000C58                     _start_i2c_slave_reply:
  2002                           	opt stack 19
  2003                           
  2004                           ;my_i2c.c: 58: for (ic_ptr->outbuflen = 0; ic_ptr->outbuflen < length; ic_ptr->outbuflen
      +                          ++) {
  2005                           
  2006                           ;incstack = 0
  2007                           ;incstack = 0
  2008  000C58  0100               	movlb	0	; () banked
  2009  000C5A  EE20 F019          	lfsr	2,25
  2010  000C5E  0100               	movlb	0	; () banked
  2011  000C60  51D0               	movf	_ic_ptr& (0+255),w,b
  2012  000C62  26D9               	addwf	fsr2l,f,c
  2013  000C64  0100               	movlb	0	; () banked
  2014  000C66  51D1               	movf	(_ic_ptr+1)& (0+255),w,b
  2015  000C68  22DA               	addwfc	fsr2h,f,c
  2016  000C6A  0E00               	movlw	0
  2017  000C6C  6EDF               	movwf	indf2,c
  2018  000C6E  D042               	goto	l3248
  2019  000C70                     l3244:
  2020                           
  2021                           ; BSR set to: 0
  2022                           ;my_i2c.c: 59: ic_ptr->outbuffer[ic_ptr->outbuflen] = msg[ic_ptr->outbuflen];
  2023  000C70  0100               	movlb	0	; () banked
  2024  000C72  EE20 F019          	lfsr	2,25
  2025  000C76  0100               	movlb	0	; () banked
  2026  000C78  51D0               	movf	_ic_ptr& (0+255),w,b
  2027  000C7A  26D9               	addwf	fsr2l,f,c
  2028  000C7C  0100               	movlb	0	; () banked
  2029  000C7E  51D1               	movf	(_ic_ptr+1)& (0+255),w,b
  2030  000C80  22DA               	addwfc	fsr2h,f,c
  2031  000C82  50DF               	movf	indf2,w,c
  2032  000C84  0100               	movlb	0	; () banked
  2033  000C86  6FB0               	movwf	??_start_i2c_slave_reply& (0+255),b
  2034  000C88  0100               	movlb	0	; () banked
  2035  000C8A  51B0               	movf	??_start_i2c_slave_reply& (0+255),w,b
  2036  000C8C  0D01               	mullw	1
  2037  000C8E  50F3               	movf	prodl,w,c
  2038  000C90  0100               	movlb	0	; () banked
  2039  000C92  0100               	movlb	0	; () banked
  2040  000C94  25AE               	addwf	start_i2c_slave_reply@msg& (0+255),w,b
  2041  000C96  6ED9               	movwf	fsr2l,c
  2042  000C98  50F4               	movf	prodh,w,c
  2043  000C9A  0100               	movlb	0	; () banked
  2044  000C9C  0100               	movlb	0	; () banked
  2045  000C9E  21AF               	addwfc	(start_i2c_slave_reply@msg+1)& (0+255),w,b
  2046  000CA0  6EDA               	movwf	fsr2h,c
  2047  000CA2  0100               	movlb	0	; () banked
  2048  000CA4  EE10 F019          	lfsr	1,25
  2049  000CA8  0100               	movlb	0	; () banked
  2050  000CAA  51D0               	movf	_ic_ptr& (0+255),w,b
  2051  000CAC  26E1               	addwf	fsr1l,f,c
  2052  000CAE  0100               	movlb	0	; () banked
  2053  000CB0  51D1               	movf	(_ic_ptr+1)& (0+255),w,b
  2054  000CB2  22E2               	addwfc	fsr1h,f,c
  2055  000CB4  50E7               	movf	indf1,w,c
  2056  000CB6  0100               	movlb	0	; () banked
  2057  000CB8  6FB1               	movwf	(??_start_i2c_slave_reply+1)& (0+255),b
  2058  000CBA  0100               	movlb	0	; () banked
  2059  000CBC  51B1               	movf	(??_start_i2c_slave_reply+1)& (0+255),w,b
  2060  000CBE  0D01               	mullw	1
  2061  000CC0  0E0F               	movlw	15
  2062  000CC2  26F3               	addwf	prodl,f,c
  2063  000CC4  0E00               	movlw	0
  2064  000CC6  22F4               	addwfc	prodh,f,c
  2065  000CC8  50F3               	movf	prodl,w,c
  2066  000CCA  0100               	movlb	0	; () banked
  2067  000CCC  0100               	movlb	0	; () banked
  2068  000CCE  25D0               	addwf	_ic_ptr& (0+255),w,b
  2069  000CD0  6EE1               	movwf	fsr1l,c
  2070  000CD2  50F4               	movf	prodh,w,c
  2071  000CD4  0100               	movlb	0	; () banked
  2072  000CD6  0100               	movlb	0	; () banked
  2073  000CD8  21D1               	addwfc	(_ic_ptr+1)& (0+255),w,b
  2074  000CDA  6EE2               	movwf	fsr1h,c
  2075  000CDC  CFDF FFE7          	movff	indf2,indf1
  2076                           
  2077                           ; BSR set to: 0
  2078  000CE0  0100               	movlb	0	; () banked
  2079  000CE2  EE20 F019          	lfsr	2,25
  2080  000CE6  0100               	movlb	0	; () banked
  2081  000CE8  51D0               	movf	_ic_ptr& (0+255),w,b
  2082  000CEA  26D9               	addwf	fsr2l,f,c
  2083  000CEC  0100               	movlb	0	; () banked
  2084  000CEE  51D1               	movf	(_ic_ptr+1)& (0+255),w,b
  2085  000CF0  22DA               	addwfc	fsr2h,f,c
  2086  000CF2  2ADF               	incf	indf2,f,c
  2087  000CF4                     l3248:
  2088                           
  2089                           ; BSR set to: 0
  2090  000CF4  0100               	movlb	0	; () banked
  2091  000CF6  EE20 F019          	lfsr	2,25
  2092  000CFA  0100               	movlb	0	; () banked
  2093  000CFC  51D0               	movf	_ic_ptr& (0+255),w,b
  2094  000CFE  26D9               	addwf	fsr2l,f,c
  2095  000D00  0100               	movlb	0	; () banked
  2096  000D02  51D1               	movf	(_ic_ptr+1)& (0+255),w,b
  2097  000D04  22DA               	addwfc	fsr2h,f,c
  2098  000D06  50DF               	movf	indf2,w,c
  2099  000D08  0100               	movlb	0	; () banked
  2100  000D0A  6FB0               	movwf	??_start_i2c_slave_reply& (0+255),b
  2101  000D0C  0100               	movlb	0	; () banked
  2102  000D0E  0100               	movlb	0	; () banked
  2103  000D10  51AD               	movf	start_i2c_slave_reply@length& (0+255),w,b
  2104  000D12  0100               	movlb	0	; () banked
  2105  000D14  5DB0               	subwf	??_start_i2c_slave_reply& (0+255),w,b
  2106  000D16  A0D8               	btfss	status,0,c
  2107  000D18  D7AB               	goto	l3244
  2108                           
  2109                           ; BSR set to: 0
  2110                           ;my_i2c.c: 60: }
  2111                           ;my_i2c.c: 61: ic_ptr->outbuflen = length;
  2112                           
  2113                           ; BSR set to: 0
  2114  000D1A  0100               	movlb	0	; () banked
  2115  000D1C  EE20 F019          	lfsr	2,25
  2116  000D20  0100               	movlb	0	; () banked
  2117  000D22  51D0               	movf	_ic_ptr& (0+255),w,b
  2118  000D24  26D9               	addwf	fsr2l,f,c
  2119  000D26  0100               	movlb	0	; () banked
  2120  000D28  51D1               	movf	(_ic_ptr+1)& (0+255),w,b
  2121  000D2A  22DA               	addwfc	fsr2h,f,c
  2122  000D2C  0100               	movlb	0	; () banked
  2123  000D2E  C0AD  FFDF         	movff	start_i2c_slave_reply@length,indf2
  2124                           
  2125                           ;my_i2c.c: 62: ic_ptr->outbufind = 1;
  2126  000D32  0100               	movlb	0	; () banked
  2127  000D34  EE20 F01A          	lfsr	2,26
  2128  000D38  0100               	movlb	0	; () banked
  2129  000D3A  51D0               	movf	_ic_ptr& (0+255),w,b
  2130  000D3C  26D9               	addwf	fsr2l,f,c
  2131  000D3E  0100               	movlb	0	; () banked
  2132  000D40  51D1               	movf	(_ic_ptr+1)& (0+255),w,b
  2133  000D42  22DA               	addwfc	fsr2h,f,c
  2134  000D44  0E01               	movlw	1
  2135  000D46  6EDF               	movwf	indf2,c
  2136                           
  2137                           ;my_i2c.c: 65: SSPBUF = ic_ptr->outbuffer[0];
  2138  000D48  0100               	movlb	0	; () banked
  2139  000D4A  EE20 F00F          	lfsr	2,15
  2140  000D4E  0100               	movlb	0	; () banked
  2141  000D50  51D0               	movf	_ic_ptr& (0+255),w,b
  2142  000D52  26D9               	addwf	fsr2l,f,c
  2143  000D54  0100               	movlb	0	; () banked
  2144  000D56  51D1               	movf	(_ic_ptr+1)& (0+255),w,b
  2145  000D58  22DA               	addwfc	fsr2h,f,c
  2146  000D5A  50DF               	movf	indf2,w,c
  2147  000D5C  6EC9               	movwf	4041,c	;volatile
  2148                           
  2149                           ; BSR set to: 0
  2150                           ;my_i2c.c: 68: SSPCON1bits.CKP = 1;
  2151  000D5E  88C6               	bsf	4038,4,c	;volatile
  2152                           
  2153                           ; BSR set to: 0
  2154  000D60  0012               	return	
  2155  000D62                     __end_of_start_i2c_slave_reply:
  2156                           	opt stack 0
  2157                           tblptru	equ	0xFF8
  2158                           prodh	equ	0xFF4
  2159                           prodl	equ	0xFF3
  2160                           postinc0	equ	0xFEE
  2161                           wreg	equ	0xFE8
  2162                           indf1	equ	0xFE7
  2163                           fsr1h	equ	0xFE2
  2164                           fsr1l	equ	0xFE1
  2165                           indf2	equ	0xFDF
  2166                           fsr2h	equ	0xFDA
  2167                           fsr2l	equ	0xFD9
  2168                           status	equ	0xFD8
  2169                           
  2170 ;; *************** function _timer0_lthread *****************
  2171 ;; Defined at:
  2172 ;;		line 9 in file "../src/timer0_thread.c"
  2173 ;; Parameters:    Size  Location     Type
  2174 ;;  tptr            2   45[BANK0 ] PTR struct __timer0_thre
  2175 ;;		 -> main@t0thread_data(2), 
  2176 ;;  msgtype         2   47[BANK0 ] int 
  2177 ;;  length          2   49[BANK0 ] int 
  2178 ;;  msgbuffer       2   51[BANK0 ] PTR unsigned char 
  2179 ;;		 -> main@msgbuffer(11), 
  2180 ;; Auto vars:     Size  Location     Type
  2181 ;;  msgval          2   53[BANK0 ] PTR unsigned int 
  2182 ;;		 -> main@msgbuffer(11), 
  2183 ;; Return value:  Size  Location     Type
  2184 ;;                  2   45[BANK0 ] int 
  2185 ;; Registers used:
  2186 ;;		None
  2187 ;; Tracked objects:
  2188 ;;		On entry : 0/0
  2189 ;;		On exit  : 0/0
  2190 ;;		Unchanged: 0/0
  2191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2192 ;;      Params:         0       8       0       0       0
  2193 ;;      Locals:         0       2       0       0       0
  2194 ;;      Temps:          0       0       0       0       0
  2195 ;;      Totals:         0      10       0       0       0
  2196 ;;Total ram usage:       10 bytes
  2197 ;; Hardware stack levels used:    1
  2198 ;; Hardware stack levels required when called:   10
  2199 ;; This function calls:
  2200 ;;		Nothing
  2201 ;; This function is called by:
  2202 ;;		_main
  2203 ;; This function uses a non-reentrant model
  2204 ;;
  2205                           
  2206                           	psect	text7
  2207  001A52                     __ptext7:
  2208                           	opt stack 0
  2209  001A52                     _timer0_lthread:
  2210                           	opt stack 19
  2211                           
  2212                           ;timer0_thread.c: 10: unsigned int *msgval;
  2213                           ;timer0_thread.c: 12: msgval = (unsigned int *) msgbuffer;
  2214                           
  2215                           ; BSR set to: 0
  2216                           ;incstack = 0
  2217                           ;incstack = 0
  2218  001A52  C0B3  F0B5         	movff	timer0_lthread@msgbuffer,timer0_lthread@msgval
  2219  001A56  C0B4  F0B6         	movff	timer0_lthread@msgbuffer+1,timer0_lthread@msgval+1
  2220  001A5A  0012               	return	
  2221  001A5C                     __end_of_timer0_lthread:
  2222                           	opt stack 0
  2223                           tblptru	equ	0xFF8
  2224                           prodh	equ	0xFF4
  2225                           prodl	equ	0xFF3
  2226                           postinc0	equ	0xFEE
  2227                           wreg	equ	0xFE8
  2228                           indf1	equ	0xFE7
  2229                           fsr1h	equ	0xFE2
  2230                           fsr1l	equ	0xFE1
  2231                           indf2	equ	0xFDF
  2232                           fsr2h	equ	0xFDA
  2233                           fsr2l	equ	0xFD9
  2234                           status	equ	0xFD8
  2235                           
  2236 ;; *************** function _ToMainHigh_recvmsg *****************
  2237 ;; Defined at:
  2238 ;;		line 135 in file "../src/messages.c"
  2239 ;; Parameters:    Size  Location     Type
  2240 ;;  maxlength       1   69[BANK0 ] unsigned char 
  2241 ;;  msgtype         2   70[BANK0 ] PTR unsigned char 
  2242 ;;		 -> main@msgtype(1), 
  2243 ;;  data            2   72[BANK0 ] PTR void 
  2244 ;;		 -> main@msgbuffer(11), 
  2245 ;; Auto vars:     Size  Location     Type
  2246 ;;		None
  2247 ;; Return value:  Size  Location     Type
  2248 ;;                  1    wreg      char 
  2249 ;; Registers used:
  2250 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2251 ;; Tracked objects:
  2252 ;;		On entry : 0/0
  2253 ;;		On exit  : 0/0
  2254 ;;		Unchanged: 0/0
  2255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2256 ;;      Params:         0       5       0       0       0
  2257 ;;      Locals:         0       0       0       0       0
  2258 ;;      Temps:          0       0       0       0       0
  2259 ;;      Totals:         0       5       0       0       0
  2260 ;;Total ram usage:        5 bytes
  2261 ;; Hardware stack levels used:    1
  2262 ;; Hardware stack levels required when called:   12
  2263 ;; This function calls:
  2264 ;;		_recv_msg
  2265 ;; This function is called by:
  2266 ;;		_main
  2267 ;; This function uses a non-reentrant model
  2268 ;;
  2269                           
  2270                           	psect	text8
  2271  001858                     __ptext8:
  2272                           	opt stack 0
  2273  001858                     _ToMainHigh_recvmsg:
  2274                           	opt stack 17
  2275                           
  2276                           ;messages.c: 141: return (recv_msg(&ToMainHigh_MQ, maxlength, msgtype, data));
  2277                           
  2278                           ;incstack = 0
  2279                           ;incstack = 0
  2280  001858  0101               	movlb	1	; () banked
  2281  00185A  0E01               	movlw	high _ToMainHigh_MQ
  2282  00185C  0100               	movlb	0	; () banked
  2283  00185E  0100               	movlb	0	; () banked
  2284  001860  6FB8               	movwf	(?_recv_msg+1)& (0+255),b
  2285  001862  0101               	movlb	1	; () banked
  2286  001864  0E6C               	movlw	low _ToMainHigh_MQ
  2287  001866  0100               	movlb	0	; () banked
  2288  001868  6FB7               	movwf	?_recv_msg& (0+255),b
  2289  00186A  C0C5  F0B9         	movff	ToMainHigh_recvmsg@maxlength,?_recv_msg+2
  2290  00186E  C0C6  F0BA         	movff	ToMainHigh_recvmsg@msgtype,?_recv_msg+3
  2291  001872  C0C7  F0BB         	movff	ToMainHigh_recvmsg@msgtype+1,?_recv_msg+4
  2292  001876  C0C8  F0BC         	movff	ToMainHigh_recvmsg@data,?_recv_msg+5
  2293  00187A  C0C9  F0BD         	movff	ToMainHigh_recvmsg@data+1,?_recv_msg+6
  2294  00187E  EC00  F005         	call	_recv_msg	;wreg free
  2295  001882  0012               	return	
  2296  001884                     __end_of_ToMainHigh_recvmsg:
  2297                           	opt stack 0
  2298                           tblptru	equ	0xFF8
  2299                           prodh	equ	0xFF4
  2300                           prodl	equ	0xFF3
  2301                           postinc0	equ	0xFEE
  2302                           wreg	equ	0xFE8
  2303                           indf1	equ	0xFE7
  2304                           fsr1h	equ	0xFE2
  2305                           fsr1l	equ	0xFE1
  2306                           indf2	equ	0xFDF
  2307                           fsr2h	equ	0xFDA
  2308                           fsr2l	equ	0xFD9
  2309                           status	equ	0xFD8
  2310                           
  2311 ;; *************** function _recv_msg *****************
  2312 ;; Defined at:
  2313 ;;		line 63 in file "../src/messages.c"
  2314 ;; Parameters:    Size  Location     Type
  2315 ;;  qptr            2   55[BANK0 ] PTR struct __msg_queue
  2316 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  2317 ;;  maxlength       1   57[BANK0 ] unsigned char 
  2318 ;;  msgtype         2   58[BANK0 ] PTR unsigned char 
  2319 ;;		 -> msgtype(1), timer0_int_handler@msgtype(2), main@msgtype(1), 
  2320 ;;  data            2   60[BANK0 ] PTR void 
  2321 ;;		 -> msgbuffer(11), timer0_int_handler@val(2), main@msgbuffer(11), 
  2322 ;; Auto vars:     Size  Location     Type
  2323 ;;  qmsg            2   67[BANK0 ] PTR struct __msg
  2324 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  2325 ;;  tlength         2   65[BANK0 ] unsigned int 
  2326 ;;  slot            1   64[BANK0 ] unsigned char 
  2327 ;; Return value:  Size  Location     Type
  2328 ;;                  1    wreg      char 
  2329 ;; Registers used:
  2330 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2331 ;; Tracked objects:
  2332 ;;		On entry : 0/0
  2333 ;;		On exit  : 0/0
  2334 ;;		Unchanged: 0/0
  2335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2336 ;;      Params:         0       7       0       0       0
  2337 ;;      Locals:         0       5       0       0       0
  2338 ;;      Temps:          0       2       0       0       0
  2339 ;;      Totals:         0      14       0       0       0
  2340 ;;Total ram usage:       14 bytes
  2341 ;; Hardware stack levels used:    1
  2342 ;; Hardware stack levels required when called:   11
  2343 ;; This function calls:
  2344 ;;		_memcpy
  2345 ;; This function is called by:
  2346 ;;		_ToMainLow_recvmsg
  2347 ;;		_ToMainHigh_recvmsg
  2348 ;;		_FromMainLow_recvmsg
  2349 ;; This function uses a non-reentrant model
  2350 ;;
  2351                           
  2352                           	psect	text9
  2353  000A00                     __ptext9:
  2354                           	opt stack 0
  2355  000A00                     _recv_msg:
  2356                           	opt stack 17
  2357                           
  2358                           ;messages.c: 64: unsigned char slot;
  2359                           ;messages.c: 68: msg *qmsg;
  2360                           ;messages.c: 69: size_t tlength;
  2361                           ;messages.c: 72: slot = qptr->cur_read_ind;
  2362                           
  2363                           ;incstack = 0
  2364                           ;incstack = 0
  2365  000A00  0100               	movlb	0	; () banked
  2366  000A02  EE20 F035          	lfsr	2,53
  2367  000A06  0100               	movlb	0	; () banked
  2368  000A08  51B7               	movf	recv_msg@qptr& (0+255),w,b
  2369  000A0A  26D9               	addwf	fsr2l,f,c
  2370  000A0C  0100               	movlb	0	; () banked
  2371  000A0E  51B8               	movf	(recv_msg@qptr+1)& (0+255),w,b
  2372  000A10  22DA               	addwfc	fsr2h,f,c
  2373  000A12  50DF               	movf	indf2,w,c
  2374  000A14  0100               	movlb	0	; () banked
  2375  000A16  0100               	movlb	0	; () banked
  2376  000A18  6FC0               	movwf	recv_msg@slot& (0+255),b
  2377                           
  2378                           ; BSR set to: 0
  2379                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  2380  000A1A  0100               	movlb	0	; () banked
  2381  000A1C  0100               	movlb	0	; () banked
  2382  000A1E  51C0               	movf	recv_msg@slot& (0+255),w,b
  2383  000A20  0D0D               	mullw	13
  2384  000A22  50F3               	movf	prodl,w,c
  2385  000A24  0100               	movlb	0	; () banked
  2386  000A26  0100               	movlb	0	; () banked
  2387  000A28  25B7               	addwf	recv_msg@qptr& (0+255),w,b
  2388  000A2A  0100               	movlb	0	; () banked
  2389  000A2C  0100               	movlb	0	; () banked
  2390  000A2E  6FC3               	movwf	recv_msg@qmsg& (0+255),b
  2391  000A30  50F4               	movf	prodh,w,c
  2392  000A32  0100               	movlb	0	; () banked
  2393  000A34  0100               	movlb	0	; () banked
  2394  000A36  21B8               	addwfc	(recv_msg@qptr+1)& (0+255),w,b
  2395  000A38  0100               	movlb	0	; () banked
  2396  000A3A  6FC4               	movwf	(recv_msg@qmsg+1)& (0+255),b
  2397                           
  2398                           ; BSR set to: 0
  2399                           ;messages.c: 74: if (qmsg->full == 1) {
  2400  000A3C  0E01               	movlw	1
  2401  000A3E  C0C3  FFD9         	movff	recv_msg@qmsg,fsr2l
  2402  000A42  C0C4  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  2403  000A46  62DF               	cpfseq	indf2,c
  2404  000A48  D06F               	goto	l3348
  2405                           
  2406                           ; BSR set to: 0
  2407                           ;messages.c: 76: if (qmsg->length > maxlength) {
  2408  000A4A  0100               	movlb	0	; () banked
  2409  000A4C  EE20 F001          	lfsr	2,1
  2410  000A50  0100               	movlb	0	; () banked
  2411  000A52  51C3               	movf	recv_msg@qmsg& (0+255),w,b
  2412  000A54  26D9               	addwf	fsr2l,f,c
  2413  000A56  0100               	movlb	0	; () banked
  2414  000A58  51C4               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  2415  000A5A  22DA               	addwfc	fsr2h,f,c
  2416  000A5C  50DF               	movf	indf2,w,c
  2417  000A5E  0100               	movlb	0	; () banked
  2418  000A60  0100               	movlb	0	; () banked
  2419  000A62  61B9               	cpfslt	recv_msg@maxlength& (0+255),b
  2420  000A64  D002               	goto	l3332
  2421                           
  2422                           ; BSR set to: 0
  2423                           ;messages.c: 77: return (-3);
  2424  000A66  0EFD               	movlw	253
  2425  000A68  0012               	return	
  2426  000A6A                     l3332:
  2427                           
  2428                           ; BSR set to: 0
  2429                           ;messages.c: 78: }
  2430                           ;messages.c: 80: tlength = qmsg->length;
  2431  000A6A  0100               	movlb	0	; () banked
  2432  000A6C  EE20 F001          	lfsr	2,1
  2433  000A70  0100               	movlb	0	; () banked
  2434  000A72  51C3               	movf	recv_msg@qmsg& (0+255),w,b
  2435  000A74  26D9               	addwf	fsr2l,f,c
  2436  000A76  0100               	movlb	0	; () banked
  2437  000A78  51C4               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  2438  000A7A  22DA               	addwfc	fsr2h,f,c
  2439  000A7C  50DF               	movf	indf2,w,c
  2440  000A7E  0100               	movlb	0	; () banked
  2441  000A80  6FBE               	movwf	??_recv_msg& (0+255),b
  2442  000A82  0100               	movlb	0	; () banked
  2443  000A84  51BE               	movf	??_recv_msg& (0+255),w,b
  2444  000A86  0100               	movlb	0	; () banked
  2445  000A88  0100               	movlb	0	; () banked
  2446  000A8A  6FC1               	movwf	recv_msg@tlength& (0+255),b
  2447  000A8C  0100               	movlb	0	; () banked
  2448  000A8E  6BC2               	clrf	(recv_msg@tlength+1)& (0+255),b
  2449                           
  2450                           ; BSR set to: 0
  2451                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  2452  000A90  C0BC  F0AD         	movff	recv_msg@data,?_memcpy
  2453  000A94  C0BD  F0AE         	movff	recv_msg@data+1,?_memcpy+1
  2454  000A98  0E03               	movlw	3
  2455  000A9A  0100               	movlb	0	; () banked
  2456  000A9C  0100               	movlb	0	; () banked
  2457  000A9E  25C3               	addwf	recv_msg@qmsg& (0+255),w,b
  2458  000AA0  0100               	movlb	0	; () banked
  2459  000AA2  6FBE               	movwf	??_recv_msg& (0+255),b
  2460  000AA4  0E00               	movlw	0
  2461  000AA6  0100               	movlb	0	; () banked
  2462  000AA8  0100               	movlb	0	; () banked
  2463  000AAA  21C4               	addwfc	(recv_msg@qmsg+1)& (0+255),w,b
  2464  000AAC  0100               	movlb	0	; () banked
  2465  000AAE  6FBF               	movwf	(??_recv_msg+1)& (0+255),b
  2466  000AB0  C0BE  F0AF         	movff	??_recv_msg,?_memcpy+2
  2467  000AB4  C0BF  F0B0         	movff	??_recv_msg+1,?_memcpy+3
  2468  000AB8  C0C1  F0B1         	movff	recv_msg@tlength,?_memcpy+4
  2469  000ABC  C0C2  F0B2         	movff	recv_msg@tlength+1,?_memcpy+5
  2470  000AC0  EC7E  F00A         	call	_memcpy	;wreg free
  2471                           
  2472                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  2473  000AC4  0100               	movlb	0	; () banked
  2474  000AC6  EE20 F035          	lfsr	2,53
  2475  000ACA  0100               	movlb	0	; () banked
  2476  000ACC  51B7               	movf	recv_msg@qptr& (0+255),w,b
  2477  000ACE  26D9               	addwf	fsr2l,f,c
  2478  000AD0  0100               	movlb	0	; () banked
  2479  000AD2  51B8               	movf	(recv_msg@qptr+1)& (0+255),w,b
  2480  000AD4  22DA               	addwfc	fsr2h,f,c
  2481  000AD6  0100               	movlb	0	; () banked
  2482  000AD8  EE10 F035          	lfsr	1,53
  2483  000ADC  0100               	movlb	0	; () banked
  2484  000ADE  51B7               	movf	recv_msg@qptr& (0+255),w,b
  2485  000AE0  26E1               	addwf	fsr1l,f,c
  2486  000AE2  0100               	movlb	0	; () banked
  2487  000AE4  51B8               	movf	(recv_msg@qptr+1)& (0+255),w,b
  2488  000AE6  22E2               	addwfc	fsr1h,f,c
  2489  000AE8  50E7               	movf	indf1,w,c
  2490  000AEA  0100               	movlb	0	; () banked
  2491  000AEC  6FBE               	movwf	??_recv_msg& (0+255),b
  2492  000AEE  0100               	movlb	0	; () banked
  2493  000AF0  29BE               	incf	??_recv_msg& (0+255),w,b
  2494  000AF2  0B03               	andlw	3
  2495  000AF4  6EDF               	movwf	indf2,c
  2496                           
  2497                           ; BSR set to: 0
  2498                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  2499  000AF6  0100               	movlb	0	; () banked
  2500  000AF8  EE20 F002          	lfsr	2,2
  2501  000AFC  0100               	movlb	0	; () banked
  2502  000AFE  51C3               	movf	recv_msg@qmsg& (0+255),w,b
  2503  000B00  26D9               	addwf	fsr2l,f,c
  2504  000B02  0100               	movlb	0	; () banked
  2505  000B04  51C4               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  2506  000B06  22DA               	addwfc	fsr2h,f,c
  2507  000B08  C0BA  FFE1         	movff	recv_msg@msgtype,fsr1l
  2508  000B0C  C0BB  FFE2         	movff	recv_msg@msgtype+1,fsr1h
  2509  000B10  CFDF FFE7          	movff	indf2,indf1
  2510                           
  2511                           ; BSR set to: 0
  2512                           ;messages.c: 91: qmsg->full = 0;
  2513  000B14  C0C3  FFD9         	movff	recv_msg@qmsg,fsr2l
  2514  000B18  C0C4  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  2515  000B1C  0E00               	movlw	0
  2516  000B1E  6EDF               	movwf	indf2,c
  2517                           
  2518                           ; BSR set to: 0
  2519                           ;messages.c: 92: return (tlength);
  2520  000B20  0100               	movlb	0	; () banked
  2521  000B22  0100               	movlb	0	; () banked
  2522  000B24  51C1               	movf	recv_msg@tlength& (0+255),w,b
  2523  000B26  0012               	return	
  2524  000B28                     l3348:
  2525                           
  2526                           ; BSR set to: 0
  2527                           ;messages.c: 94: return (-4);
  2528  000B28  0EFC               	movlw	252
  2529  000B2A  0012               	return	
  2530  000B2C                     __end_of_recv_msg:
  2531                           	opt stack 0
  2532                           tblptru	equ	0xFF8
  2533                           prodh	equ	0xFF4
  2534                           prodl	equ	0xFF3
  2535                           postinc0	equ	0xFEE
  2536                           wreg	equ	0xFE8
  2537                           indf1	equ	0xFE7
  2538                           fsr1h	equ	0xFE2
  2539                           fsr1l	equ	0xFE1
  2540                           indf2	equ	0xFDF
  2541                           fsr2h	equ	0xFDA
  2542                           fsr2l	equ	0xFD9
  2543                           status	equ	0xFD8
  2544                           
  2545 ;; *************** function _memcpy *****************
  2546 ;; Defined at:
  2547 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\memcpy.c"
  2548 ;; Parameters:    Size  Location     Type
  2549 ;;  d1              2   45[BANK0 ] PTR void 
  2550 ;;		 -> msgbuffer(11), timer0_int_handler@val(2), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  2551 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@msgbuffer(11), 
  2552 ;;  s1              2   47[BANK0 ] PTR const void 
  2553 ;;		 -> timer0_int_handler@val(2), message(1), NULL(0), i2c_int_handler@error_buf(3), 
  2554 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  2555 ;;  n               2   49[BANK0 ] unsigned int 
  2556 ;; Auto vars:     Size  Location     Type
  2557 ;;  s               2   53[BANK0 ] PTR const unsigned char 
  2558 ;;		 -> timer0_int_handler@val(2), message(1), NULL(0), i2c_int_handler@error_buf(3), 
  2559 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  2560 ;;  d               2   51[BANK0 ] PTR unsigned char 
  2561 ;;		 -> msgbuffer(11), timer0_int_handler@val(2), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  2562 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@msgbuffer(11), 
  2563 ;; Return value:  Size  Location     Type
  2564 ;;                  2   45[BANK0 ] PTR void 
  2565 ;; Registers used:
  2566 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2567 ;; Tracked objects:
  2568 ;;		On entry : 0/0
  2569 ;;		On exit  : 0/0
  2570 ;;		Unchanged: 0/0
  2571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2572 ;;      Params:         0       6       0       0       0
  2573 ;;      Locals:         0       4       0       0       0
  2574 ;;      Temps:          0       0       0       0       0
  2575 ;;      Totals:         0      10       0       0       0
  2576 ;;Total ram usage:       10 bytes
  2577 ;; Hardware stack levels used:    1
  2578 ;; Hardware stack levels required when called:   10
  2579 ;; This function calls:
  2580 ;;		Nothing
  2581 ;; This function is called by:
  2582 ;;		_send_msg
  2583 ;;		_recv_msg
  2584 ;; This function uses a non-reentrant model
  2585 ;;
  2586                           
  2587                           	psect	text10
  2588  0014FC                     __ptext10:
  2589                           	opt stack 0
  2590  0014FC                     _memcpy:
  2591                           	opt stack 16
  2592                           
  2593                           ; BSR set to: 0
  2594                           ;incstack = 0
  2595                           ;incstack = 0
  2596  0014FC  C0AF  F0B5         	movff	memcpy@s1,memcpy@s
  2597  001500  C0B0  F0B6         	movff	memcpy@s1+1,memcpy@s+1
  2598  001504  C0AD  F0B3         	movff	memcpy@d1,memcpy@d
  2599  001508  C0AE  F0B4         	movff	memcpy@d1+1,memcpy@d+1
  2600  00150C  D012               	goto	l3318
  2601  00150E                     l3312:
  2602  00150E  C0B5  FFD9         	movff	memcpy@s,fsr2l
  2603  001512  C0B6  FFDA         	movff	memcpy@s+1,fsr2h
  2604  001516  C0B3  FFE1         	movff	memcpy@d,fsr1l
  2605  00151A  C0B4  FFE2         	movff	memcpy@d+1,fsr1h
  2606  00151E  CFDF FFE7          	movff	indf2,indf1
  2607  001522  0100               	movlb	0	; () banked
  2608  001524  0100               	movlb	0	; () banked
  2609  001526  4BB5               	infsnz	memcpy@s& (0+255),f,b
  2610  001528  2BB6               	incf	(memcpy@s+1)& (0+255),f,b
  2611                           
  2612                           ; BSR set to: 0
  2613  00152A  0100               	movlb	0	; () banked
  2614  00152C  0100               	movlb	0	; () banked
  2615  00152E  4BB3               	infsnz	memcpy@d& (0+255),f,b
  2616  001530  2BB4               	incf	(memcpy@d+1)& (0+255),f,b
  2617  001532                     l3318:
  2618  001532  0100               	movlb	0	; () banked
  2619  001534  0100               	movlb	0	; () banked
  2620  001536  07B1               	decf	memcpy@n& (0+255),f,b
  2621  001538  A0D8               	btfss	status,0,c
  2622  00153A  07B2               	decf	(memcpy@n+1)& (0+255),f,b
  2623  00153C  0100               	movlb	0	; () banked
  2624  00153E  29B1               	incf	memcpy@n& (0+255),w,b
  2625  001540  B4D8               	btfsc	status,2,c
  2626  001542  29B2               	incf	(memcpy@n+1)& (0+255),w,b
  2627  001544  B4D8               	btfsc	status,2,c
  2628                           
  2629                           ; BSR set to: 0
  2630                           
  2631                           ; BSR set to: 0
  2632                           ;	Return value of _memcpy is never used
  2633  001546  0012               	return	
  2634  001548  D7E2               	goto	l3312
  2635  00154A                     __end_of_memcpy:
  2636                           	opt stack 0
  2637                           tblptru	equ	0xFF8
  2638                           prodh	equ	0xFF4
  2639                           prodl	equ	0xFF3
  2640                           postinc0	equ	0xFEE
  2641                           wreg	equ	0xFE8
  2642                           indf1	equ	0xFE7
  2643                           fsr1h	equ	0xFE2
  2644                           fsr1l	equ	0xFE1
  2645                           indf2	equ	0xFDF
  2646                           fsr2h	equ	0xFDA
  2647                           fsr2l	equ	0xFD9
  2648                           status	equ	0xFD8
  2649                           
  2650 ;; *************** function _block_on_To_msgqueues *****************
  2651 ;; Defined at:
  2652 ;;		line 258 in file "../src/messages.c"
  2653 ;; Parameters:    Size  Location     Type
  2654 ;;		None
  2655 ;; Auto vars:     Size  Location     Type
  2656 ;;		None
  2657 ;; Return value:  Size  Location     Type
  2658 ;;		None               void
  2659 ;; Registers used:
  2660 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2661 ;; Tracked objects:
  2662 ;;		On entry : 0/0
  2663 ;;		On exit  : 0/0
  2664 ;;		Unchanged: 0/0
  2665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2666 ;;      Params:         0       0       0       0       0
  2667 ;;      Locals:         0       0       0       0       0
  2668 ;;      Temps:          0       1       0       0       0
  2669 ;;      Totals:         0       1       0       0       0
  2670 ;;Total ram usage:        1 bytes
  2671 ;; Hardware stack levels used:    1
  2672 ;; Hardware stack levels required when called:   13
  2673 ;; This function calls:
  2674 ;;		_in_main
  2675 ;;		_check_msg
  2676 ;;		_Delay1KTCYx
  2677 ;; This function is called by:
  2678 ;;		_main
  2679 ;; This function uses a non-reentrant model
  2680 ;;
  2681                           
  2682                           	psect	text11
  2683  001198                     __ptext11:
  2684                           	opt stack 0
  2685  001198                     _block_on_To_msgqueues:
  2686                           	opt stack 16
  2687                           
  2688                           ;messages.c: 259: if (!in_main()) {
  2689                           
  2690                           ; BSR set to: 0
  2691                           ;incstack = 0
  2692                           ;incstack = 0
  2693  001198  EC13  F00B         	call	_in_main	;wreg free
  2694  00119C  0100               	movlb	0	; () banked
  2695  00119E  0100               	movlb	0	; () banked
  2696  0011A0  51B2               	movf	(?_in_main+1)& (0+255),w,b
  2697  0011A2  0100               	movlb	0	; () banked
  2698  0011A4  11B1               	iorwf	?_in_main& (0+255),w,b
  2699  0011A6  B4D8               	btfsc	status,2,c
  2700  0011A8  0012               	return	
  2701                           
  2702                           ; BSR set to: 0
  2703                           ;messages.c: 261: }
  2704                           ;messages.c: 262: LATBbits.LATB3 = 1;
  2705                           
  2706                           ; BSR set to: 0
  2707                           ;messages.c: 260: return;
  2708  0011AA  868A               	bsf	3978,3,c	;volatile
  2709                           
  2710                           ; BSR set to: 0
  2711                           ;messages.c: 263: MQ_Main_Willing_to_block = 1;
  2712  0011AC  0100               	movlb	0	; () banked
  2713  0011AE  6FB3               	movwf	??_block_on_To_msgqueues& (0+255),b
  2714  0011B0  0E01               	movlw	1
  2715  0011B2  6E41               	movwf	_MQ_Main_Willing_to_block,c
  2716  0011B4  0100               	movlb	0	; () banked
  2717  0011B6  51B3               	movf	??_block_on_To_msgqueues& (0+255),w,b
  2718  0011B8                     l3216:
  2719                           
  2720                           ; BSR set to: 0
  2721                           ;messages.c: 265: if (check_msg(&ToMainHigh_MQ)) {
  2722  0011B8  0101               	movlb	1	; () banked
  2723  0011BA  0E01               	movlw	high _ToMainHigh_MQ
  2724  0011BC  0100               	movlb	0	; () banked
  2725  0011BE  0100               	movlb	0	; () banked
  2726  0011C0  6FAE               	movwf	(?_check_msg+1)& (0+255),b
  2727  0011C2  0101               	movlb	1	; () banked
  2728  0011C4  0E6C               	movlw	low _ToMainHigh_MQ
  2729  0011C6  0100               	movlb	0	; () banked
  2730  0011C8  6FAD               	movwf	?_check_msg& (0+255),b
  2731  0011CA  ECCC  F00B         	call	_check_msg	;wreg free
  2732  0011CE  0900               	iorlw	0
  2733  0011D0  B4D8               	btfsc	status,2,c
  2734  0011D2  D008               	goto	l3224
  2735                           
  2736                           ;messages.c: 266: MQ_Main_Willing_to_block = 0;
  2737  0011D4  0100               	movlb	0	; () banked
  2738  0011D6  6FB3               	movwf	??_block_on_To_msgqueues& (0+255),b
  2739  0011D8  0E00               	movlw	0
  2740  0011DA  6E41               	movwf	_MQ_Main_Willing_to_block,c
  2741  0011DC  0100               	movlb	0	; () banked
  2742  0011DE  51B3               	movf	??_block_on_To_msgqueues& (0+255),w,b
  2743                           
  2744                           ; BSR set to: 0
  2745                           ;messages.c: 267: LATBbits.LATB3 = 0;
  2746  0011E0  968A               	bcf	3978,3,c	;volatile
  2747  0011E2  0012               	return	
  2748  0011E4                     l3224:
  2749                           
  2750                           ;messages.c: 269: }
  2751                           ;messages.c: 270: if (check_msg(&ToMainLow_MQ)) {
  2752  0011E4  0101               	movlb	1	; () banked
  2753  0011E6  0E01               	movlw	high _ToMainLow_MQ
  2754  0011E8  0100               	movlb	0	; () banked
  2755  0011EA  0100               	movlb	0	; () banked
  2756  0011EC  6FAE               	movwf	(?_check_msg+1)& (0+255),b
  2757  0011EE  0101               	movlb	1	; () banked
  2758  0011F0  0EA2               	movlw	low _ToMainLow_MQ
  2759  0011F2  0100               	movlb	0	; () banked
  2760  0011F4  6FAD               	movwf	?_check_msg& (0+255),b
  2761  0011F6  ECCC  F00B         	call	_check_msg	;wreg free
  2762  0011FA  0900               	iorlw	0
  2763  0011FC  B4D8               	btfsc	status,2,c
  2764  0011FE  D008               	goto	l3232
  2765                           
  2766                           ;messages.c: 271: MQ_Main_Willing_to_block = 0;
  2767  001200  0100               	movlb	0	; () banked
  2768  001202  6FB3               	movwf	??_block_on_To_msgqueues& (0+255),b
  2769  001204  0E00               	movlw	0
  2770  001206  6E41               	movwf	_MQ_Main_Willing_to_block,c
  2771  001208  0100               	movlb	0	; () banked
  2772  00120A  51B3               	movf	??_block_on_To_msgqueues& (0+255),w,b
  2773                           
  2774                           ; BSR set to: 0
  2775                           ;messages.c: 272: LATBbits.LATB3 = 0;
  2776  00120C  968A               	bcf	3978,3,c	;volatile
  2777  00120E  0012               	return	
  2778  001210                     l3232:
  2779                           
  2780                           ;messages.c: 274: }
  2781                           ;messages.c: 275: Delay1KTCYx(10);
  2782  001210  0100               	movlb	0	; () banked
  2783  001212  6FB3               	movwf	??_block_on_To_msgqueues& (0+255),b
  2784  001214  0E0A               	movlw	10
  2785  001216  0100               	movlb	0	; () banked
  2786  001218  0100               	movlb	0	; () banked
  2787  00121A  6FAD               	movwf	?_Delay1KTCYx& (0+255),b
  2788  00121C  0100               	movlb	0	; () banked
  2789  00121E  51B3               	movf	??_block_on_To_msgqueues& (0+255),w,b
  2790  001220  ECEE  F00C         	call	_Delay1KTCYx	;wreg free
  2791                           
  2792                           ;messages.c: 276: LATBbits.LATB3 = !LATBbits.LATB3;
  2793  001224  B68A               	btfsc	3978,3,c	;volatile
  2794  001226  D002               	goto	u2480
  2795  001228  0E01               	movlw	1
  2796  00122A  D001               	goto	u2486
  2797  00122C                     u2480:
  2798  00122C  0E00               	movlw	0
  2799  00122E                     u2486:
  2800  00122E  0100               	movlb	0	; () banked
  2801  001230  6FB3               	movwf	??_block_on_To_msgqueues& (0+255),b
  2802  001232  0100               	movlb	0	; () banked
  2803  001234  47B3               	rlncf	??_block_on_To_msgqueues& (0+255),f,b
  2804  001236  47B3               	rlncf	??_block_on_To_msgqueues& (0+255),f,b
  2805  001238  47B3               	rlncf	??_block_on_To_msgqueues& (0+255),f,b
  2806  00123A  508A               	movf	3978,w,c	;volatile
  2807  00123C  0100               	movlb	0	; () banked
  2808  00123E  19B3               	xorwf	??_block_on_To_msgqueues& (0+255),w,b
  2809  001240  0BF7               	andlw	-9
  2810  001242  19B3               	xorwf	??_block_on_To_msgqueues& (0+255),w,b
  2811  001244  6E8A               	movwf	3978,c	;volatile
  2812  001246  D7B8               	goto	l3216
  2813  001248                     __end_of_block_on_To_msgqueues:
  2814                           	opt stack 0
  2815                           tblptru	equ	0xFF8
  2816                           prodh	equ	0xFF4
  2817                           prodl	equ	0xFF3
  2818                           postinc0	equ	0xFEE
  2819                           wreg	equ	0xFE8
  2820                           indf1	equ	0xFE7
  2821                           fsr1h	equ	0xFE2
  2822                           fsr1l	equ	0xFE1
  2823                           indf2	equ	0xFDF
  2824                           fsr2h	equ	0xFDA
  2825                           fsr2l	equ	0xFD9
  2826                           status	equ	0xFD8
  2827                           
  2828 ;; *************** function _Delay1KTCYx *****************
  2829 ;; Defined at:
  2830 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic18\d1ktcyx.c"
  2831 ;; Parameters:    Size  Location     Type
  2832 ;;  unit            1   45[BANK0 ] unsigned char 
  2833 ;; Auto vars:     Size  Location     Type
  2834 ;;		None
  2835 ;; Return value:  Size  Location     Type
  2836 ;;		None               void
  2837 ;; Registers used:
  2838 ;;		wreg
  2839 ;; Tracked objects:
  2840 ;;		On entry : 0/0
  2841 ;;		On exit  : 0/0
  2842 ;;		Unchanged: 0/0
  2843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2844 ;;      Params:         0       1       0       0       0
  2845 ;;      Locals:         0       0       0       0       0
  2846 ;;      Temps:          0       0       0       0       0
  2847 ;;      Totals:         0       1       0       0       0
  2848 ;;Total ram usage:        1 bytes
  2849 ;; Hardware stack levels used:    1
  2850 ;; Hardware stack levels required when called:   10
  2851 ;; This function calls:
  2852 ;;		Nothing
  2853 ;; This function is called by:
  2854 ;;		_block_on_To_msgqueues
  2855 ;; This function uses a non-reentrant model
  2856 ;;
  2857                           
  2858                           	psect	text12
  2859  0019DC                     __ptext12:
  2860                           	opt stack 0
  2861  0019DC                     _Delay1KTCYx:
  2862                           	opt stack 18
  2863  0019DC                     l706:
  2864  0019DC  0EFA               	movlw	250
  2865  0019DE                     u2727:
  2866  0019DE  F000               	nop	
  2867  0019E0  2EE8               	decfsz	wreg,f,c
  2868  0019E2  D7FD               	goto	u2727
  2869  0019E4  0100               	movlb	0	; () banked
  2870  0019E6  0100               	movlb	0	; () banked
  2871  0019E8  2FAD               	decfsz	Delay1KTCYx@unit& (0+255),f,b
  2872  0019EA  D7F8               	goto	l706
  2873  0019EC  0012               	return	
  2874  0019EE                     __end_of_Delay1KTCYx:
  2875                           	opt stack 0
  2876                           tblptru	equ	0xFF8
  2877                           prodh	equ	0xFF4
  2878                           prodl	equ	0xFF3
  2879                           postinc0	equ	0xFEE
  2880                           wreg	equ	0xFE8
  2881                           indf1	equ	0xFE7
  2882                           fsr1h	equ	0xFE2
  2883                           fsr1l	equ	0xFE1
  2884                           indf2	equ	0xFDF
  2885                           fsr2h	equ	0xFDA
  2886                           fsr2l	equ	0xFD9
  2887                           status	equ	0xFD8
  2888                           
  2889 ;; *************** function _check_msg *****************
  2890 ;; Defined at:
  2891 ;;		line 222 in file "../src/messages.c"
  2892 ;; Parameters:    Size  Location     Type
  2893 ;;  qptr            2   45[BANK0 ] PTR struct __msg_queue
  2894 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  2895 ;; Auto vars:     Size  Location     Type
  2896 ;;		None
  2897 ;; Return value:  Size  Location     Type
  2898 ;;                  1    wreg      unsigned char 
  2899 ;; Registers used:
  2900 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2901 ;; Tracked objects:
  2902 ;;		On entry : 0/0
  2903 ;;		On exit  : 0/0
  2904 ;;		Unchanged: 0/0
  2905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2906 ;;      Params:         0       2       0       0       0
  2907 ;;      Locals:         0       0       0       0       0
  2908 ;;      Temps:          0       1       0       0       0
  2909 ;;      Totals:         0       3       0       0       0
  2910 ;;Total ram usage:        3 bytes
  2911 ;; Hardware stack levels used:    1
  2912 ;; Hardware stack levels required when called:   10
  2913 ;; This function calls:
  2914 ;;		Nothing
  2915 ;; This function is called by:
  2916 ;;		_block_on_To_msgqueues
  2917 ;; This function uses a non-reentrant model
  2918 ;;
  2919                           
  2920                           	psect	text13
  2921  001798                     __ptext13:
  2922                           	opt stack 0
  2923  001798                     _check_msg:
  2924                           	opt stack 18
  2925                           
  2926                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
  2927                           
  2928                           ; BSR set to: 0
  2929                           ;incstack = 0
  2930                           ;incstack = 0
  2931  001798  0100               	movlb	0	; () banked
  2932  00179A  EE20 F035          	lfsr	2,53
  2933  00179E  0100               	movlb	0	; () banked
  2934  0017A0  51AD               	movf	check_msg@qptr& (0+255),w,b
  2935  0017A2  26D9               	addwf	fsr2l,f,c
  2936  0017A4  0100               	movlb	0	; () banked
  2937  0017A6  51AE               	movf	(check_msg@qptr+1)& (0+255),w,b
  2938  0017A8  22DA               	addwfc	fsr2h,f,c
  2939  0017AA  50DF               	movf	indf2,w,c
  2940  0017AC  0100               	movlb	0	; () banked
  2941  0017AE  6FAF               	movwf	??_check_msg& (0+255),b
  2942  0017B0  0100               	movlb	0	; () banked
  2943  0017B2  51AF               	movf	??_check_msg& (0+255),w,b
  2944  0017B4  0D0D               	mullw	13
  2945  0017B6  50F3               	movf	prodl,w,c
  2946  0017B8  0100               	movlb	0	; () banked
  2947  0017BA  0100               	movlb	0	; () banked
  2948  0017BC  25AD               	addwf	check_msg@qptr& (0+255),w,b
  2949  0017BE  6ED9               	movwf	fsr2l,c
  2950  0017C0  50F4               	movf	prodh,w,c
  2951  0017C2  0100               	movlb	0	; () banked
  2952  0017C4  0100               	movlb	0	; () banked
  2953  0017C6  21AE               	addwfc	(check_msg@qptr+1)& (0+255),w,b
  2954  0017C8  6EDA               	movwf	fsr2h,c
  2955  0017CA  50DF               	movf	indf2,w,c
  2956  0017CC  0012               	return	
  2957  0017CE                     __end_of_check_msg:
  2958                           	opt stack 0
  2959                           tblptru	equ	0xFF8
  2960                           prodh	equ	0xFF4
  2961                           prodl	equ	0xFF3
  2962                           postinc0	equ	0xFEE
  2963                           wreg	equ	0xFE8
  2964                           indf1	equ	0xFE7
  2965                           fsr1h	equ	0xFE2
  2966                           fsr1l	equ	0xFE1
  2967                           indf2	equ	0xFDF
  2968                           fsr2h	equ	0xFDA
  2969                           fsr2l	equ	0xFD9
  2970                           status	equ	0xFD8
  2971                           
  2972 ;; *************** function _in_main *****************
  2973 ;; Defined at:
  2974 ;;		line 43 in file "../src/interrupts.c"
  2975 ;; Parameters:    Size  Location     Type
  2976 ;;		None
  2977 ;; Auto vars:     Size  Location     Type
  2978 ;;		None
  2979 ;; Return value:  Size  Location     Type
  2980 ;;                  2   49[BANK0 ] int 
  2981 ;; Registers used:
  2982 ;;		wreg, status,2, status,0, cstack
  2983 ;; Tracked objects:
  2984 ;;		On entry : 0/0
  2985 ;;		On exit  : 0/0
  2986 ;;		Unchanged: 0/0
  2987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2988 ;;      Params:         0       2       0       0       0
  2989 ;;      Locals:         0       0       0       0       0
  2990 ;;      Temps:          0       0       0       0       0
  2991 ;;      Totals:         0       2       0       0       0
  2992 ;;Total ram usage:        2 bytes
  2993 ;; Hardware stack levels used:    1
  2994 ;; Hardware stack levels required when called:   12
  2995 ;; This function calls:
  2996 ;;		_in_high_int
  2997 ;;		_in_low_int
  2998 ;; This function is called by:
  2999 ;;		_block_on_To_msgqueues
  3000 ;; This function uses a non-reentrant model
  3001 ;;
  3002                           
  3003                           	psect	text14
  3004  001626                     __ptext14:
  3005                           	opt stack 0
  3006  001626                     _in_main:
  3007                           	opt stack 16
  3008                           
  3009                           ;interrupts.c: 44: if ((!in_low_int()) && (!in_high_int())) {
  3010                           
  3011                           ; BSR set to: 0
  3012                           ;incstack = 0
  3013                           ;incstack = 0
  3014  001626  ECF0  F00A         	call	_in_low_int	;wreg free
  3015  00162A  0100               	movlb	0	; () banked
  3016  00162C  0100               	movlb	0	; () banked
  3017  00162E  51B0               	movf	(?_in_low_int+1)& (0+255),w,b
  3018  001630  0100               	movlb	0	; () banked
  3019  001632  11AF               	iorwf	?_in_low_int& (0+255),w,b
  3020  001634  A4D8               	btfss	status,2,c
  3021  001636  D011               	goto	l2912
  3022                           
  3023                           ; BSR set to: 0
  3024  001638  ECF7  F00C         	call	_in_high_int	;wreg free
  3025  00163C  0100               	movlb	0	; () banked
  3026  00163E  0100               	movlb	0	; () banked
  3027  001640  51AE               	movf	(?_in_high_int+1)& (0+255),w,b
  3028  001642  0100               	movlb	0	; () banked
  3029  001644  11AD               	iorwf	?_in_high_int& (0+255),w,b
  3030  001646  A4D8               	btfss	status,2,c
  3031  001648  D008               	goto	l2912
  3032                           
  3033                           ; BSR set to: 0
  3034                           ;interrupts.c: 45: return (1);
  3035  00164A  0E00               	movlw	0
  3036  00164C  0100               	movlb	0	; () banked
  3037  00164E  0100               	movlb	0	; () banked
  3038  001650  6FB2               	movwf	(?_in_main+1)& (0+255),b
  3039  001652  0E01               	movlw	1
  3040  001654  0100               	movlb	0	; () banked
  3041  001656  6FB1               	movwf	?_in_main& (0+255),b
  3042  001658  0012               	return	
  3043  00165A                     l2912:
  3044                           
  3045                           ; BSR set to: 0
  3046                           ;interrupts.c: 47: return (0);
  3047  00165A  0E00               	movlw	0
  3048  00165C  0100               	movlb	0	; () banked
  3049  00165E  0100               	movlb	0	; () banked
  3050  001660  6FB2               	movwf	(?_in_main+1)& (0+255),b
  3051  001662  0E00               	movlw	0
  3052  001664  0100               	movlb	0	; () banked
  3053  001666  6FB1               	movwf	?_in_main& (0+255),b
  3054  001668  0012               	return	
  3055  00166A                     __end_of_in_main:
  3056                           	opt stack 0
  3057                           tblptru	equ	0xFF8
  3058                           prodh	equ	0xFF4
  3059                           prodl	equ	0xFF3
  3060                           postinc0	equ	0xFEE
  3061                           wreg	equ	0xFE8
  3062                           indf1	equ	0xFE7
  3063                           fsr1h	equ	0xFE2
  3064                           fsr1l	equ	0xFE1
  3065                           indf2	equ	0xFDF
  3066                           fsr2h	equ	0xFDA
  3067                           fsr2l	equ	0xFD9
  3068                           status	equ	0xFD8
  3069                           
  3070 ;; *************** function _in_low_int *****************
  3071 ;; Defined at:
  3072 ;;		line 33 in file "../src/interrupts.c"
  3073 ;; Parameters:    Size  Location     Type
  3074 ;;		None
  3075 ;; Auto vars:     Size  Location     Type
  3076 ;;		None
  3077 ;; Return value:  Size  Location     Type
  3078 ;;                  2   47[BANK0 ] int 
  3079 ;; Registers used:
  3080 ;;		wreg, status,2, status,0, cstack
  3081 ;; Tracked objects:
  3082 ;;		On entry : 0/0
  3083 ;;		On exit  : 0/0
  3084 ;;		Unchanged: 0/0
  3085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3086 ;;      Params:         0       2       0       0       0
  3087 ;;      Locals:         0       0       0       0       0
  3088 ;;      Temps:          0       0       0       0       0
  3089 ;;      Totals:         0       2       0       0       0
  3090 ;;Total ram usage:        2 bytes
  3091 ;; Hardware stack levels used:    1
  3092 ;; Hardware stack levels required when called:   11
  3093 ;; This function calls:
  3094 ;;		_in_high_int
  3095 ;; This function is called by:
  3096 ;;		_in_main
  3097 ;; This function uses a non-reentrant model
  3098 ;;
  3099                           
  3100                           	psect	text15
  3101  0015E0                     __ptext15:
  3102                           	opt stack 0
  3103  0015E0                     _in_low_int:
  3104                           	opt stack 16
  3105                           
  3106                           ;interrupts.c: 34: if (INTCONbits.GIEL == 1) {
  3107                           
  3108                           ; BSR set to: 0
  3109                           ;incstack = 0
  3110                           ;incstack = 0
  3111  0015E0  ACF2               	btfss	intcon,6,c	;volatile
  3112  0015E2  D008               	goto	l2890
  3113                           
  3114                           ;interrupts.c: 35: return (0);
  3115  0015E4  0E00               	movlw	0
  3116  0015E6  0100               	movlb	0	; () banked
  3117  0015E8  0100               	movlb	0	; () banked
  3118  0015EA  6FB0               	movwf	(?_in_low_int+1)& (0+255),b
  3119  0015EC  0E00               	movlw	0
  3120  0015EE  0100               	movlb	0	; () banked
  3121  0015F0  6FAF               	movwf	?_in_low_int& (0+255),b
  3122  0015F2  0012               	return	
  3123  0015F4                     l2890:
  3124  0015F4  ECF7  F00C         	call	_in_high_int	;wreg free
  3125  0015F8  0100               	movlb	0	; () banked
  3126  0015FA  0100               	movlb	0	; () banked
  3127  0015FC  51AE               	movf	(?_in_high_int+1)& (0+255),w,b
  3128  0015FE  0100               	movlb	0	; () banked
  3129  001600  11AD               	iorwf	?_in_high_int& (0+255),w,b
  3130  001602  B4D8               	btfsc	status,2,c
  3131  001604  D008               	goto	l2898
  3132                           
  3133                           ; BSR set to: 0
  3134                           ;interrupts.c: 37: return (0);
  3135  001606  0E00               	movlw	0
  3136  001608  0100               	movlb	0	; () banked
  3137  00160A  0100               	movlb	0	; () banked
  3138  00160C  6FB0               	movwf	(?_in_low_int+1)& (0+255),b
  3139  00160E  0E00               	movlw	0
  3140  001610  0100               	movlb	0	; () banked
  3141  001612  6FAF               	movwf	?_in_low_int& (0+255),b
  3142  001614  0012               	return	
  3143  001616                     l2898:
  3144                           
  3145                           ; BSR set to: 0
  3146                           ;interrupts.c: 39: return (1);
  3147  001616  0E00               	movlw	0
  3148  001618  0100               	movlb	0	; () banked
  3149  00161A  0100               	movlb	0	; () banked
  3150  00161C  6FB0               	movwf	(?_in_low_int+1)& (0+255),b
  3151  00161E  0E01               	movlw	1
  3152  001620  0100               	movlb	0	; () banked
  3153  001622  6FAF               	movwf	?_in_low_int& (0+255),b
  3154  001624  0012               	return	
  3155  001626                     __end_of_in_low_int:
  3156                           	opt stack 0
  3157                           tblptru	equ	0xFF8
  3158                           prodh	equ	0xFF4
  3159                           prodl	equ	0xFF3
  3160                           intcon	equ	0xFF2
  3161                           postinc0	equ	0xFEE
  3162                           wreg	equ	0xFE8
  3163                           indf1	equ	0xFE7
  3164                           fsr1h	equ	0xFE2
  3165                           fsr1l	equ	0xFE1
  3166                           indf2	equ	0xFDF
  3167                           fsr2h	equ	0xFDA
  3168                           fsr2l	equ	0xFD9
  3169                           status	equ	0xFD8
  3170                           
  3171 ;; *************** function _in_high_int *****************
  3172 ;; Defined at:
  3173 ;;		line 25 in file "../src/interrupts.c"
  3174 ;; Parameters:    Size  Location     Type
  3175 ;;		None
  3176 ;; Auto vars:     Size  Location     Type
  3177 ;;		None
  3178 ;; Return value:  Size  Location     Type
  3179 ;;                  2   45[BANK0 ] int 
  3180 ;; Registers used:
  3181 ;;		wreg, status,2
  3182 ;; Tracked objects:
  3183 ;;		On entry : 0/0
  3184 ;;		On exit  : 0/0
  3185 ;;		Unchanged: 0/0
  3186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3187 ;;      Params:         0       2       0       0       0
  3188 ;;      Locals:         0       0       0       0       0
  3189 ;;      Temps:          0       0       0       0       0
  3190 ;;      Totals:         0       2       0       0       0
  3191 ;;Total ram usage:        2 bytes
  3192 ;; Hardware stack levels used:    1
  3193 ;; Hardware stack levels required when called:   10
  3194 ;; This function calls:
  3195 ;;		Nothing
  3196 ;; This function is called by:
  3197 ;;		_in_low_int
  3198 ;;		_in_main
  3199 ;; This function uses a non-reentrant model
  3200 ;;
  3201                           
  3202                           	psect	text16
  3203  0019EE                     __ptext16:
  3204                           	opt stack 0
  3205  0019EE                     _in_high_int:
  3206                           	opt stack 16
  3207                           
  3208                           ;interrupts.c: 26: return (!INTCONbits.GIEH);
  3209                           
  3210                           ; BSR set to: 0
  3211                           ;incstack = 0
  3212                           ;incstack = 0
  3213  0019EE  0E00               	movlw	0
  3214  0019F0  AEF2               	btfss	intcon,7,c	;volatile
  3215  0019F2  0E01               	movlw	1
  3216  0019F4  0100               	movlb	0	; () banked
  3217  0019F6  0100               	movlb	0	; () banked
  3218  0019F8  6FAD               	movwf	?_in_high_int& (0+255),b
  3219  0019FA  0100               	movlb	0	; () banked
  3220  0019FC  6BAE               	clrf	(?_in_high_int+1)& (0+255),b
  3221  0019FE  0012               	return	
  3222  001A00                     __end_of_in_high_int:
  3223                           	opt stack 0
  3224                           tblptru	equ	0xFF8
  3225                           prodh	equ	0xFF4
  3226                           prodl	equ	0xFF3
  3227                           intcon	equ	0xFF2
  3228                           postinc0	equ	0xFEE
  3229                           wreg	equ	0xFE8
  3230                           indf1	equ	0xFE7
  3231                           fsr1h	equ	0xFE2
  3232                           fsr1l	equ	0xFE1
  3233                           indf2	equ	0xFDF
  3234                           fsr2h	equ	0xFDA
  3235                           fsr2l	equ	0xFD9
  3236                           status	equ	0xFD8
  3237                           
  3238 ;; *************** function _OpenUSART *****************
  3239 ;; Defined at:
  3240 ;;		line 74 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic18\plib\USART\uopen.c"
  3241 ;; Parameters:    Size  Location     Type
  3242 ;;  config          1   45[BANK0 ] unsigned char 
  3243 ;;  spbrg           2   46[BANK0 ] unsigned int 
  3244 ;; Auto vars:     Size  Location     Type
  3245 ;;		None
  3246 ;; Return value:  Size  Location     Type
  3247 ;;		None               void
  3248 ;; Registers used:
  3249 ;;		wreg, status,2
  3250 ;; Tracked objects:
  3251 ;;		On entry : 0/0
  3252 ;;		On exit  : 0/0
  3253 ;;		Unchanged: 0/0
  3254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3255 ;;      Params:         0       3       0       0       0
  3256 ;;      Locals:         0       0       0       0       0
  3257 ;;      Temps:          0       0       0       0       0
  3258 ;;      Totals:         0       3       0       0       0
  3259 ;;Total ram usage:        3 bytes
  3260 ;; Hardware stack levels used:    1
  3261 ;; Hardware stack levels required when called:   10
  3262 ;; This function calls:
  3263 ;;		Nothing
  3264 ;; This function is called by:
  3265 ;;		_main
  3266 ;; This function uses a non-reentrant model
  3267 ;;
  3268                           
  3269                           	psect	text17
  3270  00139A                     __ptext17:
  3271                           	opt stack 0
  3272  00139A                     _OpenUSART:
  3273                           	opt stack 19
  3274                           
  3275                           ; BSR set to: 0
  3276                           ;incstack = 0
  3277                           ;incstack = 0
  3278  00139A  0E00               	movlw	0
  3279  00139C  6EAC               	movwf	4012,c	;volatile
  3280  00139E  0E00               	movlw	0
  3281  0013A0  6EAB               	movwf	4011,c	;volatile
  3282  0013A2  0100               	movlb	0	; () banked
  3283  0013A4  0100               	movlb	0	; () banked
  3284  0013A6  B1AD               	btfsc	OpenUSART@config& (0+255),0,b
  3285                           
  3286                           ; BSR set to: 0
  3287  0013A8  88AC               	bsf	4012,4,c	;volatile
  3288                           
  3289                           ; BSR set to: 0
  3290  0013AA  0100               	movlb	0	; () banked
  3291  0013AC  0100               	movlb	0	; () banked
  3292  0013AE  A3AD               	btfss	OpenUSART@config& (0+255),1,b
  3293  0013B0  D002               	goto	l460
  3294                           
  3295                           ; BSR set to: 0
  3296  0013B2  8CAC               	bsf	4012,6,c	;volatile
  3297  0013B4  8CAB               	bsf	4011,6,c	;volatile
  3298  0013B6                     l460:
  3299                           
  3300                           ; BSR set to: 0
  3301  0013B6  0100               	movlb	0	; () banked
  3302  0013B8  0100               	movlb	0	; () banked
  3303  0013BA  B5AD               	btfsc	OpenUSART@config& (0+255),2,b
  3304                           
  3305                           ; BSR set to: 0
  3306  0013BC  8EAC               	bsf	4012,7,c	;volatile
  3307                           
  3308                           ; BSR set to: 0
  3309  0013BE  0100               	movlb	0	; () banked
  3310  0013C0  0100               	movlb	0	; () banked
  3311  0013C2  A7AD               	btfss	OpenUSART@config& (0+255),3,b
  3312  0013C4  D002               	goto	l462
  3313                           
  3314                           ; BSR set to: 0
  3315  0013C6  88AB               	bsf	4011,4,c	;volatile
  3316  0013C8  D001               	goto	l463
  3317  0013CA                     l462:
  3318                           
  3319                           ; BSR set to: 0
  3320  0013CA  8AAB               	bsf	4011,5,c	;volatile
  3321  0013CC                     l463:
  3322                           
  3323                           ; BSR set to: 0
  3324  0013CC  0100               	movlb	0	; () banked
  3325  0013CE  0100               	movlb	0	; () banked
  3326  0013D0  B9AD               	btfsc	OpenUSART@config& (0+255),4,b
  3327                           
  3328                           ; BSR set to: 0
  3329  0013D2  84AC               	bsf	4012,2,c	;volatile
  3330                           
  3331                           ; BSR set to: 0
  3332  0013D4  989E               	bcf	3998,4,c	;volatile
  3333  0013D6  0100               	movlb	0	; () banked
  3334  0013D8  0100               	movlb	0	; () banked
  3335  0013DA  BBAD               	btfsc	OpenUSART@config& (0+255),5,b
  3336                           
  3337                           ; BSR set to: 0
  3338  0013DC  86AB               	bsf	4011,3,c	;volatile
  3339                           
  3340                           ; BSR set to: 0
  3341  0013DE  0100               	movlb	0	; () banked
  3342  0013E0  0100               	movlb	0	; () banked
  3343  0013E2  ADAD               	btfss	OpenUSART@config& (0+255),6,b
  3344  0013E4  D002               	goto	l466
  3345                           
  3346                           ; BSR set to: 0
  3347  0013E6  8A9D               	bsf	3997,5,c	;volatile
  3348  0013E8  D001               	goto	l467
  3349  0013EA                     l466:
  3350                           
  3351                           ; BSR set to: 0
  3352  0013EA  9A9D               	bcf	3997,5,c	;volatile
  3353  0013EC                     l467:
  3354                           
  3355                           ; BSR set to: 0
  3356  0013EC  9A9E               	bcf	3998,5,c	;volatile
  3357  0013EE  0100               	movlb	0	; () banked
  3358  0013F0  0100               	movlb	0	; () banked
  3359  0013F2  AFAD               	btfss	OpenUSART@config& (0+255),7,b
  3360  0013F4  D002               	goto	l468
  3361                           
  3362                           ; BSR set to: 0
  3363  0013F6  889D               	bsf	3997,4,c	;volatile
  3364  0013F8  D001               	goto	l469
  3365  0013FA                     l468:
  3366                           
  3367                           ; BSR set to: 0
  3368  0013FA  989D               	bcf	3997,4,c	;volatile
  3369  0013FC                     l469:
  3370                           
  3371                           ; BSR set to: 0
  3372  0013FC  C0AE  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  3373                           
  3374                           ; BSR set to: 0
  3375  001400  0100               	movlb	0	; () banked
  3376  001402  0100               	movlb	0	; () banked
  3377  001404  51AF               	movf	(OpenUSART@spbrg+1)& (0+255),w,b
  3378  001406  6EB0               	movwf	4016,c	;volatile
  3379                           
  3380                           ; BSR set to: 0
  3381  001408  8AAC               	bsf	4012,5,c	;volatile
  3382                           
  3383                           ; BSR set to: 0
  3384  00140A  8EAB               	bsf	4011,7,c	;volatile
  3385                           
  3386                           ; BSR set to: 0
  3387  00140C  9C94               	bcf	3988,6,c	;volatile
  3388                           
  3389                           ; BSR set to: 0
  3390  00140E  8E94               	bsf	3988,7,c	;volatile
  3391                           
  3392                           ; BSR set to: 0
  3393  001410  A8AC               	btfss	4012,4,c	;volatile
  3394  001412  0012               	return	
  3395                           
  3396                           ; BSR set to: 0
  3397  001414  BEAC               	btfsc	4012,7,c	;volatile
  3398  001416  0012               	return	
  3399                           
  3400                           ; BSR set to: 0
  3401  001418  8C94               	bsf	3988,6,c	;volatile
  3402  00141A  0012               	return	
  3403  00141C                     __end_of_OpenUSART:
  3404                           	opt stack 0
  3405                           tblptru	equ	0xFF8
  3406                           prodh	equ	0xFF4
  3407                           prodl	equ	0xFF3
  3408                           intcon	equ	0xFF2
  3409                           postinc0	equ	0xFEE
  3410                           wreg	equ	0xFE8
  3411                           indf1	equ	0xFE7
  3412                           fsr1h	equ	0xFE2
  3413                           fsr1l	equ	0xFE1
  3414                           indf2	equ	0xFDF
  3415                           fsr2h	equ	0xFDA
  3416                           fsr2l	equ	0xFD9
  3417                           status	equ	0xFD8
  3418                           
  3419 ;; *************** function _init_queues *****************
  3420 ;; Defined at:
  3421 ;;		line 194 in file "../src/messages.c"
  3422 ;; Parameters:    Size  Location     Type
  3423 ;;		None
  3424 ;; Auto vars:     Size  Location     Type
  3425 ;;		None
  3426 ;; Return value:  Size  Location     Type
  3427 ;;		None               void
  3428 ;; Registers used:
  3429 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3430 ;; Tracked objects:
  3431 ;;		On entry : 0/0
  3432 ;;		On exit  : 0/0
  3433 ;;		Unchanged: 0/0
  3434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3435 ;;      Params:         0       0       0       0       0
  3436 ;;      Locals:         0       0       0       0       0
  3437 ;;      Temps:          0       1       0       0       0
  3438 ;;      Totals:         0       1       0       0       0
  3439 ;;Total ram usage:        1 bytes
  3440 ;; Hardware stack levels used:    1
  3441 ;; Hardware stack levels required when called:   11
  3442 ;; This function calls:
  3443 ;;		_init_queue
  3444 ;; This function is called by:
  3445 ;;		_main
  3446 ;; This function uses a non-reentrant model
  3447 ;;
  3448                           
  3449                           	psect	text18
  3450  001496                     __ptext18:
  3451                           	opt stack 0
  3452  001496                     _init_queues:
  3453                           	opt stack 18
  3454                           
  3455                           ;messages.c: 195: MQ_Main_Willing_to_block = 0;
  3456                           
  3457                           ; BSR set to: 0
  3458                           ;incstack = 0
  3459                           ;incstack = 0
  3460  001496  0100               	movlb	0	; () banked
  3461  001498  6FB1               	movwf	??_init_queues& (0+255),b
  3462  00149A  0E00               	movlw	0
  3463  00149C  6E41               	movwf	_MQ_Main_Willing_to_block,c
  3464  00149E  0100               	movlb	0	; () banked
  3465  0014A0  51B1               	movf	??_init_queues& (0+255),w,b
  3466                           
  3467                           ; BSR set to: 0
  3468                           ;messages.c: 196: init_queue(&ToMainLow_MQ);
  3469  0014A2  0101               	movlb	1	; () banked
  3470  0014A4  0E01               	movlw	high _ToMainLow_MQ
  3471  0014A6  0100               	movlb	0	; () banked
  3472  0014A8  0100               	movlb	0	; () banked
  3473  0014AA  6FAE               	movwf	(?_init_queue+1)& (0+255),b
  3474  0014AC  0101               	movlb	1	; () banked
  3475  0014AE  0EA2               	movlw	low _ToMainLow_MQ
  3476  0014B0  0100               	movlb	0	; () banked
  3477  0014B2  6FAD               	movwf	?_init_queue& (0+255),b
  3478  0014B4  EC0E  F00A         	call	_init_queue	;wreg free
  3479                           
  3480                           ;messages.c: 197: init_queue(&ToMainHigh_MQ);
  3481  0014B8  0101               	movlb	1	; () banked
  3482  0014BA  0E01               	movlw	high _ToMainHigh_MQ
  3483  0014BC  0100               	movlb	0	; () banked
  3484  0014BE  0100               	movlb	0	; () banked
  3485  0014C0  6FAE               	movwf	(?_init_queue+1)& (0+255),b
  3486  0014C2  0101               	movlb	1	; () banked
  3487  0014C4  0E6C               	movlw	low _ToMainHigh_MQ
  3488  0014C6  0100               	movlb	0	; () banked
  3489  0014C8  6FAD               	movwf	?_init_queue& (0+255),b
  3490  0014CA  EC0E  F00A         	call	_init_queue	;wreg free
  3491                           
  3492                           ;messages.c: 198: init_queue(&FromMainLow_MQ);
  3493  0014CE  0101               	movlb	1	; () banked
  3494  0014D0  0E01               	movlw	high _FromMainLow_MQ
  3495  0014D2  0100               	movlb	0	; () banked
  3496  0014D4  0100               	movlb	0	; () banked
  3497  0014D6  6FAE               	movwf	(?_init_queue+1)& (0+255),b
  3498  0014D8  0101               	movlb	1	; () banked
  3499  0014DA  0E36               	movlw	low _FromMainLow_MQ
  3500  0014DC  0100               	movlb	0	; () banked
  3501  0014DE  6FAD               	movwf	?_init_queue& (0+255),b
  3502  0014E0  EC0E  F00A         	call	_init_queue	;wreg free
  3503                           
  3504                           ;messages.c: 199: init_queue(&FromMainHigh_MQ);
  3505  0014E4  0101               	movlb	1	; () banked
  3506  0014E6  0E01               	movlw	high _FromMainHigh_MQ
  3507  0014E8  0100               	movlb	0	; () banked
  3508  0014EA  0100               	movlb	0	; () banked
  3509  0014EC  6FAE               	movwf	(?_init_queue+1)& (0+255),b
  3510  0014EE  0101               	movlb	1	; () banked
  3511  0014F0  0E00               	movlw	low _FromMainHigh_MQ
  3512  0014F2  0100               	movlb	0	; () banked
  3513  0014F4  6FAD               	movwf	?_init_queue& (0+255),b
  3514  0014F6  EC0E  F00A         	call	_init_queue	;wreg free
  3515  0014FA  0012               	return	
  3516  0014FC                     __end_of_init_queues:
  3517                           	opt stack 0
  3518                           tblptru	equ	0xFF8
  3519                           prodh	equ	0xFF4
  3520                           prodl	equ	0xFF3
  3521                           intcon	equ	0xFF2
  3522                           postinc0	equ	0xFEE
  3523                           wreg	equ	0xFE8
  3524                           indf1	equ	0xFE7
  3525                           fsr1h	equ	0xFE2
  3526                           fsr1l	equ	0xFE1
  3527                           indf2	equ	0xFDF
  3528                           fsr2h	equ	0xFDA
  3529                           fsr2l	equ	0xFD9
  3530                           status	equ	0xFD8
  3531                           
  3532 ;; *************** function _init_queue *****************
  3533 ;; Defined at:
  3534 ;;		line 14 in file "../src/messages.c"
  3535 ;; Parameters:    Size  Location     Type
  3536 ;;  qptr            2   45[BANK0 ] PTR struct __msg_queue
  3537 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3538 ;; Auto vars:     Size  Location     Type
  3539 ;;  i               1   48[BANK0 ] unsigned char 
  3540 ;; Return value:  Size  Location     Type
  3541 ;;		None               void
  3542 ;; Registers used:
  3543 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3544 ;; Tracked objects:
  3545 ;;		On entry : 0/0
  3546 ;;		On exit  : 0/0
  3547 ;;		Unchanged: 0/0
  3548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3549 ;;      Params:         0       2       0       0       0
  3550 ;;      Locals:         0       1       0       0       0
  3551 ;;      Temps:          0       1       0       0       0
  3552 ;;      Totals:         0       4       0       0       0
  3553 ;;Total ram usage:        4 bytes
  3554 ;; Hardware stack levels used:    1
  3555 ;; Hardware stack levels required when called:   10
  3556 ;; This function calls:
  3557 ;;		Nothing
  3558 ;; This function is called by:
  3559 ;;		_init_queues
  3560 ;; This function uses a non-reentrant model
  3561 ;;
  3562                           
  3563                           	psect	text19
  3564  00141C                     __ptext19:
  3565                           	opt stack 0
  3566  00141C                     _init_queue:
  3567                           	opt stack 18
  3568                           
  3569                           ;messages.c: 15: unsigned char i;
  3570                           ;messages.c: 17: qptr->cur_write_ind = 0;
  3571                           
  3572                           ;incstack = 0
  3573                           ;incstack = 0
  3574  00141C  0100               	movlb	0	; () banked
  3575  00141E  EE20 F034          	lfsr	2,52
  3576  001422  0100               	movlb	0	; () banked
  3577  001424  51AD               	movf	init_queue@qptr& (0+255),w,b
  3578  001426  26D9               	addwf	fsr2l,f,c
  3579  001428  0100               	movlb	0	; () banked
  3580  00142A  51AE               	movf	(init_queue@qptr+1)& (0+255),w,b
  3581  00142C  22DA               	addwfc	fsr2h,f,c
  3582  00142E  0E00               	movlw	0
  3583  001430  6EDF               	movwf	indf2,c
  3584                           
  3585                           ;messages.c: 18: qptr->cur_read_ind = 0;
  3586  001432  0100               	movlb	0	; () banked
  3587  001434  EE20 F035          	lfsr	2,53
  3588  001438  0100               	movlb	0	; () banked
  3589  00143A  51AD               	movf	init_queue@qptr& (0+255),w,b
  3590  00143C  26D9               	addwf	fsr2l,f,c
  3591  00143E  0100               	movlb	0	; () banked
  3592  001440  51AE               	movf	(init_queue@qptr+1)& (0+255),w,b
  3593  001442  22DA               	addwfc	fsr2h,f,c
  3594  001444  0E00               	movlw	0
  3595  001446  6EDF               	movwf	indf2,c
  3596                           
  3597                           ; BSR set to: 0
  3598                           ;messages.c: 19: for (i = 0; i < 4; i++) {
  3599  001448  0100               	movlb	0	; () banked
  3600  00144A  6FAF               	movwf	??_init_queue& (0+255),b
  3601  00144C  0E00               	movlw	0
  3602  00144E  0100               	movlb	0	; () banked
  3603  001450  0100               	movlb	0	; () banked
  3604  001452  6FB0               	movwf	init_queue@i& (0+255),b
  3605  001454  0100               	movlb	0	; () banked
  3606  001456  51AF               	movf	??_init_queue& (0+255),w,b
  3607                           
  3608                           ; BSR set to: 0
  3609  001458  0E03               	movlw	3
  3610  00145A  0100               	movlb	0	; () banked
  3611  00145C  0100               	movlb	0	; () banked
  3612  00145E  65B0               	cpfsgt	init_queue@i& (0+255),b
  3613  001460  D001               	goto	l3280
  3614  001462  0012               	return	
  3615  001464                     l3280:
  3616                           
  3617                           ; BSR set to: 0
  3618                           ;messages.c: 20: qptr->queue[i].full = 0;
  3619  001464  0100               	movlb	0	; () banked
  3620  001466  0100               	movlb	0	; () banked
  3621  001468  51B0               	movf	init_queue@i& (0+255),w,b
  3622  00146A  0D0D               	mullw	13
  3623  00146C  50F3               	movf	prodl,w,c
  3624  00146E  0100               	movlb	0	; () banked
  3625  001470  0100               	movlb	0	; () banked
  3626  001472  25AD               	addwf	init_queue@qptr& (0+255),w,b
  3627  001474  6ED9               	movwf	fsr2l,c
  3628  001476  50F4               	movf	prodh,w,c
  3629  001478  0100               	movlb	0	; () banked
  3630  00147A  0100               	movlb	0	; () banked
  3631  00147C  21AE               	addwfc	(init_queue@qptr+1)& (0+255),w,b
  3632  00147E  6EDA               	movwf	fsr2h,c
  3633  001480  0E00               	movlw	0
  3634  001482  6EDF               	movwf	indf2,c
  3635                           
  3636                           ; BSR set to: 0
  3637  001484  0100               	movlb	0	; () banked
  3638  001486  0100               	movlb	0	; () banked
  3639  001488  2BB0               	incf	init_queue@i& (0+255),f,b
  3640                           
  3641                           ; BSR set to: 0
  3642  00148A  0E03               	movlw	3
  3643  00148C  0100               	movlb	0	; () banked
  3644  00148E  0100               	movlb	0	; () banked
  3645  001490  65B0               	cpfsgt	init_queue@i& (0+255),b
  3646  001492  D7E8               	goto	l3280
  3647  001494  0012               	return	
  3648  001496                     __end_of_init_queue:
  3649                           	opt stack 0
  3650                           tblptru	equ	0xFF8
  3651                           prodh	equ	0xFF4
  3652                           prodl	equ	0xFF3
  3653                           intcon	equ	0xFF2
  3654                           postinc0	equ	0xFEE
  3655                           wreg	equ	0xFE8
  3656                           indf1	equ	0xFE7
  3657                           fsr1h	equ	0xFE2
  3658                           fsr1l	equ	0xFE1
  3659                           indf2	equ	0xFDF
  3660                           fsr2h	equ	0xFDA
  3661                           fsr2l	equ	0xFD9
  3662                           status	equ	0xFD8
  3663                           
  3664 ;; *************** function _init_timer1_lthread *****************
  3665 ;; Defined at:
  3666 ;;		line 6 in file "../src/timer1_thread.c"
  3667 ;; Parameters:    Size  Location     Type
  3668 ;;  tptr            2   45[BANK0 ] PTR struct __timer1_thre
  3669 ;;		 -> main@t1thread_data(2), 
  3670 ;; Auto vars:     Size  Location     Type
  3671 ;;		None
  3672 ;; Return value:  Size  Location     Type
  3673 ;;		None               void
  3674 ;; Registers used:
  3675 ;;		wreg, fsr2l, fsr2h
  3676 ;; Tracked objects:
  3677 ;;		On entry : 0/0
  3678 ;;		On exit  : 0/0
  3679 ;;		Unchanged: 0/0
  3680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3681 ;;      Params:         0       2       0       0       0
  3682 ;;      Locals:         0       0       0       0       0
  3683 ;;      Temps:          0       0       0       0       0
  3684 ;;      Totals:         0       2       0       0       0
  3685 ;;Total ram usage:        2 bytes
  3686 ;; Hardware stack levels used:    1
  3687 ;; Hardware stack levels required when called:   10
  3688 ;; This function calls:
  3689 ;;		Nothing
  3690 ;; This function is called by:
  3691 ;;		_main
  3692 ;; This function uses a non-reentrant model
  3693 ;;
  3694                           
  3695                           	psect	text20
  3696  001A00                     __ptext20:
  3697                           	opt stack 0
  3698  001A00                     _init_timer1_lthread:
  3699                           	opt stack 19
  3700                           
  3701                           ;timer1_thread.c: 7: tptr->msgcount = 0;
  3702                           
  3703                           ; BSR set to: 0
  3704                           ;incstack = 0
  3705                           ;incstack = 0
  3706  001A00  C0AD  FFD9         	movff	init_timer1_lthread@tptr,fsr2l
  3707  001A04  C0AE  FFDA         	movff	init_timer1_lthread@tptr+1,fsr2h
  3708  001A08  0E00               	movlw	0
  3709  001A0A  6EDE               	movwf	postinc2,c
  3710  001A0C  0E00               	movlw	0
  3711  001A0E  6EDD               	movwf	postdec2,c
  3712  001A10  0012               	return	
  3713  001A12                     __end_of_init_timer1_lthread:
  3714                           	opt stack 0
  3715                           tblptru	equ	0xFF8
  3716                           prodh	equ	0xFF4
  3717                           prodl	equ	0xFF3
  3718                           intcon	equ	0xFF2
  3719                           postinc0	equ	0xFEE
  3720                           wreg	equ	0xFE8
  3721                           indf1	equ	0xFE7
  3722                           fsr1h	equ	0xFE2
  3723                           fsr1l	equ	0xFE1
  3724                           indf2	equ	0xFDF
  3725                           postinc2	equ	0xFDE
  3726                           postdec2	equ	0xFDD
  3727                           fsr2h	equ	0xFDA
  3728                           fsr2l	equ	0xFD9
  3729                           status	equ	0xFD8
  3730                           
  3731 ;; *************** function _enable_interrupts *****************
  3732 ;; Defined at:
  3733 ;;		line 17 in file "../src/interrupts.c"
  3734 ;; Parameters:    Size  Location     Type
  3735 ;;		None
  3736 ;; Auto vars:     Size  Location     Type
  3737 ;;		None
  3738 ;; Return value:  Size  Location     Type
  3739 ;;		None               void
  3740 ;; Registers used:
  3741 ;;		None
  3742 ;; Tracked objects:
  3743 ;;		On entry : 0/0
  3744 ;;		On exit  : 0/0
  3745 ;;		Unchanged: 0/0
  3746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3747 ;;      Params:         0       0       0       0       0
  3748 ;;      Locals:         0       0       0       0       0
  3749 ;;      Temps:          0       0       0       0       0
  3750 ;;      Totals:         0       0       0       0       0
  3751 ;;Total ram usage:        0 bytes
  3752 ;; Hardware stack levels used:    1
  3753 ;; Hardware stack levels required when called:   10
  3754 ;; This function calls:
  3755 ;;		Nothing
  3756 ;; This function is called by:
  3757 ;;		_main
  3758 ;; This function uses a non-reentrant model
  3759 ;;
  3760                           
  3761                           	psect	text21
  3762  001A66                     __ptext21:
  3763                           	opt stack 0
  3764  001A66                     _enable_interrupts:
  3765                           	opt stack 19
  3766                           
  3767                           ;interrupts.c: 20: RCONbits.IPEN = 1;
  3768                           
  3769                           ;incstack = 0
  3770                           ;incstack = 0
  3771  001A66  8ED0               	bsf	4048,7,c	;volatile
  3772                           
  3773                           ;interrupts.c: 21: INTCONbits.GIEH = 1;
  3774  001A68  8EF2               	bsf	intcon,7,c	;volatile
  3775                           
  3776                           ;interrupts.c: 22: INTCONbits.GIEL = 1;
  3777  001A6A  8CF2               	bsf	intcon,6,c	;volatile
  3778  001A6C  0012               	return	
  3779  001A6E                     __end_of_enable_interrupts:
  3780                           	opt stack 0
  3781                           tblptru	equ	0xFF8
  3782                           prodh	equ	0xFF4
  3783                           prodl	equ	0xFF3
  3784                           intcon	equ	0xFF2
  3785                           postinc0	equ	0xFEE
  3786                           wreg	equ	0xFE8
  3787                           indf1	equ	0xFE7
  3788                           fsr1h	equ	0xFE2
  3789                           fsr1l	equ	0xFE1
  3790                           indf2	equ	0xFDF
  3791                           postinc2	equ	0xFDE
  3792                           postdec2	equ	0xFDD
  3793                           fsr2h	equ	0xFDA
  3794                           fsr2l	equ	0xFD9
  3795                           status	equ	0xFD8
  3796                           
  3797 ;; *************** function _InterruptHandlerLow *****************
  3798 ;; Defined at:
  3799 ;;		line 140 in file "../src/interrupts.c"
  3800 ;; Parameters:    Size  Location     Type
  3801 ;;		None
  3802 ;; Auto vars:     Size  Location     Type
  3803 ;;		None
  3804 ;; Return value:  Size  Location     Type
  3805 ;;		None               void
  3806 ;; Registers used:
  3807 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3808 ;; Tracked objects:
  3809 ;;		On entry : 0/0
  3810 ;;		On exit  : 0/0
  3811 ;;		Unchanged: 0/0
  3812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3813 ;;      Params:         0       0       0       0       0
  3814 ;;      Locals:         0       0       0       0       0
  3815 ;;      Temps:         17       0       0       0       0
  3816 ;;      Totals:        17       0       0       0       0
  3817 ;;Total ram usage:       17 bytes
  3818 ;; Hardware stack levels used:    1
  3819 ;; Hardware stack levels required when called:    9
  3820 ;; This function calls:
  3821 ;;		_timer1_int_handler
  3822 ;;		_uart_tx_int_handler
  3823 ;; This function is called by:
  3824 ;;		Interrupt level 1
  3825 ;; This function uses a non-reentrant model
  3826 ;;
  3827                           
  3828                           	psect	intcodelo
  3829  000018                     __pintcodelo:
  3830                           	opt stack 0
  3831  000018                     _InterruptHandlerLow:
  3832                           	opt stack 16
  3833                           
  3834                           ;incstack = 0
  3835  000018  CFD8 F01F          	movff	status,??_InterruptHandlerLow
  3836  00001C  CFE8 F020          	movff	wreg,??_InterruptHandlerLow+1
  3837  000020  CFE0 F021          	movff	bsr,??_InterruptHandlerLow+2
  3838  000024  CFFA F022          	movff	pclath,??_InterruptHandlerLow+3
  3839  000028  CFFB F023          	movff	pclatu,??_InterruptHandlerLow+4
  3840  00002C  CFE9 F024          	movff	fsr0l,??_InterruptHandlerLow+5
  3841  000030  CFEA F025          	movff	fsr0h,??_InterruptHandlerLow+6
  3842  000034  CFE1 F026          	movff	fsr1l,??_InterruptHandlerLow+7
  3843  000038  CFE2 F027          	movff	fsr1h,??_InterruptHandlerLow+8
  3844  00003C  CFD9 F028          	movff	fsr2l,??_InterruptHandlerLow+9
  3845  000040  CFDA F029          	movff	fsr2h,??_InterruptHandlerLow+10
  3846  000044  CFF3 F02A          	movff	prodl,??_InterruptHandlerLow+11
  3847  000048  CFF4 F02B          	movff	prodh,??_InterruptHandlerLow+12
  3848  00004C  CFF6 F02C          	movff	tblptrl,??_InterruptHandlerLow+13
  3849  000050  CFF7 F02D          	movff	tblptrh,??_InterruptHandlerLow+14
  3850  000054  CFF8 F02E          	movff	tblptru,??_InterruptHandlerLow+15
  3851  000058  CFF5 F02F          	movff	tablat,??_InterruptHandlerLow+16
  3852  00005C                     
  3853                           ;interrupts.c: 142: if (PIR1bits.TMR1IF) {
  3854  00005C  A09E               	btfss	3998,0,c	;volatile
  3855  00005E  D001               	goto	i1u269_21
  3856  000060  D001               	goto	i1u269_20
  3857  000062                     i1u269_21:
  3858  000062  D004               	goto	i1l3554
  3859  000064                     i1u269_20:
  3860  000064                     
  3861                           ;interrupts.c: 143: PIR1bits.TMR1IF = 0;
  3862  000064  909E               	bcf	3998,0,c	;volatile
  3863  000066                     
  3864                           ;interrupts.c: 144: timer1_int_handler();
  3865  000066  EC58  F00C         	call	_timer1_int_handler	;wreg free
  3866  00006A  D000               	goto	i1l3554
  3867  00006C                     i1l3554:
  3868                           
  3869                           ;interrupts.c: 145: }
  3870                           ;interrupts.c: 153: if (PIR1bits.TXIF && PIE1bits.TXIE) {
  3871  00006C  A89E               	btfss	3998,4,c	;volatile
  3872  00006E  D001               	goto	i1u270_21
  3873  000070  D001               	goto	i1u270_20
  3874  000072                     i1u270_21:
  3875  000072  D007               	goto	i1l55
  3876  000074                     i1u270_20:
  3877  000074  A89D               	btfss	3997,4,c	;volatile
  3878  000076  D001               	goto	i1u271_21
  3879  000078  D001               	goto	i1u271_20
  3880  00007A                     i1u271_21:
  3881  00007A  D003               	goto	i1l55
  3882  00007C                     i1u271_20:
  3883  00007C                     
  3884                           ;interrupts.c: 155: uart_tx_int_handler();
  3885  00007C  EC81  F00C         	call	_uart_tx_int_handler	;wreg free
  3886  000080  D000               	goto	i1l55
  3887  000082                     i1l55:
  3888  000082  C02F  FFF5         	movff	??_InterruptHandlerLow+16,tablat
  3889  000086  C02E  FFF8         	movff	??_InterruptHandlerLow+15,tblptru
  3890  00008A  C02D  FFF7         	movff	??_InterruptHandlerLow+14,tblptrh
  3891  00008E  C02C  FFF6         	movff	??_InterruptHandlerLow+13,tblptrl
  3892  000092  C02B  FFF4         	movff	??_InterruptHandlerLow+12,prodh
  3893  000096  C02A  FFF3         	movff	??_InterruptHandlerLow+11,prodl
  3894  00009A  C029  FFDA         	movff	??_InterruptHandlerLow+10,fsr2h
  3895  00009E  C028  FFD9         	movff	??_InterruptHandlerLow+9,fsr2l
  3896  0000A2  C027  FFE2         	movff	??_InterruptHandlerLow+8,fsr1h
  3897  0000A6  C026  FFE1         	movff	??_InterruptHandlerLow+7,fsr1l
  3898  0000AA  C025  FFEA         	movff	??_InterruptHandlerLow+6,fsr0h
  3899  0000AE  C024  FFE9         	movff	??_InterruptHandlerLow+5,fsr0l
  3900  0000B2  C023  FFFB         	movff	??_InterruptHandlerLow+4,pclatu
  3901  0000B6  C022  FFFA         	movff	??_InterruptHandlerLow+3,pclath
  3902  0000BA  C021  FFE0         	movff	??_InterruptHandlerLow+2,bsr
  3903  0000BE  C020  FFE8         	movff	??_InterruptHandlerLow+1,wreg
  3904  0000C2  C01F  FFD8         	movff	??_InterruptHandlerLow,status
  3905  0000C6  0010               	retfie	
  3906  0000C8                     __end_of_InterruptHandlerLow:
  3907                           	opt stack 0
  3908                           pclatu	equ	0xFFB
  3909                           pclath	equ	0xFFA
  3910                           tblptru	equ	0xFF8
  3911                           tblptrh	equ	0xFF7
  3912                           tblptrl	equ	0xFF6
  3913                           tablat	equ	0xFF5
  3914                           prodh	equ	0xFF4
  3915                           prodl	equ	0xFF3
  3916                           intcon	equ	0xFF2
  3917                           postinc0	equ	0xFEE
  3918                           fsr0h	equ	0xFEA
  3919                           fsr0l	equ	0xFE9
  3920                           wreg	equ	0xFE8
  3921                           indf1	equ	0xFE7
  3922                           fsr1h	equ	0xFE2
  3923                           fsr1l	equ	0xFE1
  3924                           bsr	equ	0xFE0
  3925                           indf2	equ	0xFDF
  3926                           postinc2	equ	0xFDE
  3927                           postdec2	equ	0xFDD
  3928                           fsr2h	equ	0xFDA
  3929                           fsr2l	equ	0xFD9
  3930                           status	equ	0xFD8
  3931                           
  3932 ;; *************** function _uart_tx_int_handler *****************
  3933 ;; Defined at:
  3934 ;;		line 79 in file "../src/user_interrupts.c"
  3935 ;; Parameters:    Size  Location     Type
  3936 ;;		None
  3937 ;; Auto vars:     Size  Location     Type
  3938 ;;		None
  3939 ;; Return value:  Size  Location     Type
  3940 ;;		None               void
  3941 ;; Registers used:
  3942 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3943 ;; Tracked objects:
  3944 ;;		On entry : 0/0
  3945 ;;		On exit  : 0/0
  3946 ;;		Unchanged: 0/0
  3947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3948 ;;      Params:         0       0       0       0       0
  3949 ;;      Locals:         0       0       0       0       0
  3950 ;;      Temps:          1       0       0       0       0
  3951 ;;      Totals:         1       0       0       0       0
  3952 ;;Total ram usage:        1 bytes
  3953 ;; Hardware stack levels used:    1
  3954 ;; Hardware stack levels required when called:    8
  3955 ;; This function calls:
  3956 ;;		_FromMainHigh_recvmsg
  3957 ;;		_WriteUSART
  3958 ;; This function is called by:
  3959 ;;		_InterruptHandlerLow
  3960 ;; This function uses a non-reentrant model
  3961 ;;
  3962                           
  3963                           	psect	text23
  3964  001902                     __ptext23:
  3965                           	opt stack 0
  3966  001902                     _uart_tx_int_handler:
  3967                           	opt stack 16
  3968                           
  3969                           ;user_interrupts.c: 80: FromMainHigh_recvmsg(10, &msgtype, (void *) msgbuffer);
  3970                           
  3971                           ;incstack = 0
  3972                           ;incstack = 0
  3973  001902  6E1E               	movwf	??_uart_tx_int_handler& (0+255),c
  3974  001904  0E0A               	movlw	10
  3975  001906  6E19               	movwf	?_FromMainHigh_recvmsg,c
  3976  001908  501E               	movf	??_uart_tx_int_handler& (0+255),w,c
  3977  00190A  0E00               	movlw	high _msgtype
  3978  00190C  6E1B               	movwf	?_FromMainHigh_recvmsg+2,c
  3979  00190E  0E50               	movlw	low _msgtype
  3980  001910  6E1A               	movwf	?_FromMainHigh_recvmsg+1,c
  3981  001912  0E00               	movlw	high _msgbuffer
  3982  001914  6E1D               	movwf	?_FromMainHigh_recvmsg+4,c
  3983  001916  0E45               	movlw	low _msgbuffer
  3984  001918  6E1C               	movwf	?_FromMainHigh_recvmsg+3,c
  3985  00191A  ECA9  F00C         	call	_FromMainHigh_recvmsg	;wreg free
  3986                           
  3987                           ;user_interrupts.c: 82: WriteUSART(msgbuffer[0]);
  3988  00191E  C045  F001         	movff	_msgbuffer,?_WriteUSART
  3989  001922  EC1B  F00D         	call	_WriteUSART	;wreg free
  3990                           
  3991                           ;user_interrupts.c: 83: message4++;
  3992  001926  2A44               	incf	_message4,f,c
  3993  001928  0012               	return	
  3994  00192A                     __end_of_uart_tx_int_handler:
  3995                           	opt stack 0
  3996                           pclatu	equ	0xFFB
  3997                           pclath	equ	0xFFA
  3998                           tblptru	equ	0xFF8
  3999                           tblptrh	equ	0xFF7
  4000                           tblptrl	equ	0xFF6
  4001                           tablat	equ	0xFF5
  4002                           prodh	equ	0xFF4
  4003                           prodl	equ	0xFF3
  4004                           intcon	equ	0xFF2
  4005                           postinc0	equ	0xFEE
  4006                           fsr0h	equ	0xFEA
  4007                           fsr0l	equ	0xFE9
  4008                           wreg	equ	0xFE8
  4009                           indf1	equ	0xFE7
  4010                           fsr1h	equ	0xFE2
  4011                           fsr1l	equ	0xFE1
  4012                           bsr	equ	0xFE0
  4013                           indf2	equ	0xFDF
  4014                           postinc2	equ	0xFDE
  4015                           postdec2	equ	0xFDD
  4016                           fsr2h	equ	0xFDA
  4017                           fsr2l	equ	0xFD9
  4018                           status	equ	0xFD8
  4019                           
  4020 ;; *************** function _WriteUSART *****************
  4021 ;; Defined at:
  4022 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic18\plib\USART\uwrite.c"
  4023 ;; Parameters:    Size  Location     Type
  4024 ;;  data            1    0[COMRAM] unsigned char 
  4025 ;; Auto vars:     Size  Location     Type
  4026 ;;		None
  4027 ;; Return value:  Size  Location     Type
  4028 ;;		None               void
  4029 ;; Registers used:
  4030 ;;		None
  4031 ;; Tracked objects:
  4032 ;;		On entry : 0/0
  4033 ;;		On exit  : 0/0
  4034 ;;		Unchanged: 0/0
  4035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4036 ;;      Params:         1       0       0       0       0
  4037 ;;      Locals:         0       0       0       0       0
  4038 ;;      Temps:          0       0       0       0       0
  4039 ;;      Totals:         1       0       0       0       0
  4040 ;;Total ram usage:        1 bytes
  4041 ;; Hardware stack levels used:    1
  4042 ;; Hardware stack levels required when called:    5
  4043 ;; This function calls:
  4044 ;;		Nothing
  4045 ;; This function is called by:
  4046 ;;		_uart_tx_int_handler
  4047 ;; This function uses a non-reentrant model
  4048 ;;
  4049                           
  4050                           	psect	text24
  4051  001A36                     __ptext24:
  4052                           	opt stack 0
  4053  001A36                     _WriteUSART:
  4054                           	opt stack 18
  4055                           
  4056                           ;incstack = 0
  4057                           ;incstack = 0
  4058  001A36  ACAC               	btfss	4012,6,c	;volatile
  4059  001A38  D003               	goto	i1l493
  4060  001A3A  90AC               	bcf	4012,0,c	;volatile
  4061  001A3C  B242               	btfsc	_USART_Status,1,c
  4062  001A3E  80AC               	bsf	4012,0,c	;volatile
  4063  001A40                     i1l493:
  4064  001A40  C001  FFAD         	movff	WriteUSART@data,4013	;volatile
  4065  001A44  0012               	return	
  4066  001A46                     __end_of_WriteUSART:
  4067                           	opt stack 0
  4068                           pclatu	equ	0xFFB
  4069                           pclath	equ	0xFFA
  4070                           tblptru	equ	0xFF8
  4071                           tblptrh	equ	0xFF7
  4072                           tblptrl	equ	0xFF6
  4073                           tablat	equ	0xFF5
  4074                           prodh	equ	0xFF4
  4075                           prodl	equ	0xFF3
  4076                           intcon	equ	0xFF2
  4077                           postinc0	equ	0xFEE
  4078                           fsr0h	equ	0xFEA
  4079                           fsr0l	equ	0xFE9
  4080                           wreg	equ	0xFE8
  4081                           indf1	equ	0xFE7
  4082                           fsr1h	equ	0xFE2
  4083                           fsr1l	equ	0xFE1
  4084                           bsr	equ	0xFE0
  4085                           indf2	equ	0xFDF
  4086                           postinc2	equ	0xFDE
  4087                           postdec2	equ	0xFDD
  4088                           fsr2h	equ	0xFDA
  4089                           fsr2l	equ	0xFD9
  4090                           status	equ	0xFD8
  4091                           
  4092 ;; *************** function _FromMainHigh_recvmsg *****************
  4093 ;; Defined at:
  4094 ;;		line 183 in file "../src/messages.c"
  4095 ;; Parameters:    Size  Location     Type
  4096 ;;  maxlength       1   24[COMRAM] unsigned char 
  4097 ;;  msgtype         2   25[COMRAM] PTR unsigned char 
  4098 ;;		 -> msgtype(1), timer0_int_handler@msgtype(2), 
  4099 ;;  data            2   27[COMRAM] PTR void 
  4100 ;;		 -> msgbuffer(11), timer0_int_handler@val(2), 
  4101 ;; Auto vars:     Size  Location     Type
  4102 ;;		None
  4103 ;; Return value:  Size  Location     Type
  4104 ;;                  1    wreg      char 
  4105 ;; Registers used:
  4106 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4107 ;; Tracked objects:
  4108 ;;		On entry : 0/0
  4109 ;;		On exit  : 0/0
  4110 ;;		Unchanged: 0/0
  4111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4112 ;;      Params:         5       0       0       0       0
  4113 ;;      Locals:         0       0       0       0       0
  4114 ;;      Temps:          0       0       0       0       0
  4115 ;;      Totals:         5       0       0       0       0
  4116 ;;Total ram usage:        5 bytes
  4117 ;; Hardware stack levels used:    1
  4118 ;; Hardware stack levels required when called:    7
  4119 ;; This function calls:
  4120 ;;		i1_recv_msg
  4121 ;; This function is called by:
  4122 ;;		_uart_tx_int_handler
  4123 ;; This function uses a non-reentrant model
  4124 ;;
  4125                           
  4126                           	psect	text25
  4127  001952                     __ptext25:
  4128                           	opt stack 0
  4129  001952                     _FromMainHigh_recvmsg:
  4130                           	opt stack 16
  4131                           
  4132                           ;messages.c: 189: return (recv_msg(&FromMainHigh_MQ, maxlength, msgtype, data));
  4133                           
  4134                           ;incstack = 0
  4135                           ;incstack = 0
  4136  001952  0101               	movlb	1	; () banked
  4137  001954  0E01               	movlw	high _FromMainHigh_MQ
  4138  001956  6E0C               	movwf	?i1_recv_msg+1,c
  4139  001958  0101               	movlb	1	; () banked
  4140  00195A  0E00               	movlw	low _FromMainHigh_MQ
  4141  00195C  6E0B               	movwf	?i1_recv_msg,c
  4142  00195E  C019  F00D         	movff	FromMainHigh_recvmsg@maxlength,?i1_recv_msg+2
  4143  001962  C01A  F00E         	movff	FromMainHigh_recvmsg@msgtype,?i1_recv_msg+3
  4144  001966  C01B  F00F         	movff	FromMainHigh_recvmsg@msgtype+1,?i1_recv_msg+4
  4145  00196A  C01C  F010         	movff	FromMainHigh_recvmsg@data,?i1_recv_msg+5
  4146  00196E  C01D  F011         	movff	FromMainHigh_recvmsg@data+1,?i1_recv_msg+6
  4147  001972  ECA8  F007         	call	i1_recv_msg	;wreg free
  4148  001976  0012               	return	
  4149  001978                     __end_of_FromMainHigh_recvmsg:
  4150                           	opt stack 0
  4151                           pclatu	equ	0xFFB
  4152                           pclath	equ	0xFFA
  4153                           tblptru	equ	0xFF8
  4154                           tblptrh	equ	0xFF7
  4155                           tblptrl	equ	0xFF6
  4156                           tablat	equ	0xFF5
  4157                           prodh	equ	0xFF4
  4158                           prodl	equ	0xFF3
  4159                           intcon	equ	0xFF2
  4160                           postinc0	equ	0xFEE
  4161                           fsr0h	equ	0xFEA
  4162                           fsr0l	equ	0xFE9
  4163                           wreg	equ	0xFE8
  4164                           indf1	equ	0xFE7
  4165                           fsr1h	equ	0xFE2
  4166                           fsr1l	equ	0xFE1
  4167                           bsr	equ	0xFE0
  4168                           indf2	equ	0xFDF
  4169                           postinc2	equ	0xFDE
  4170                           postdec2	equ	0xFDD
  4171                           fsr2h	equ	0xFDA
  4172                           fsr2l	equ	0xFD9
  4173                           status	equ	0xFD8
  4174                           
  4175 ;; *************** function i1_recv_msg *****************
  4176 ;; Defined at:
  4177 ;;		line 63 in file "../src/messages.c"
  4178 ;; Parameters:    Size  Location     Type
  4179 ;;  recv_msg        2   10[COMRAM] PTR struct __msg_queue
  4180 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4181 ;;  recv_msg        1   12[COMRAM] unsigned char 
  4182 ;;  recv_msg        2   13[COMRAM] PTR unsigned char 
  4183 ;;		 -> msgtype(1), timer0_int_handler@msgtype(2), main@msgtype(1), 
  4184 ;;  recv_msg        2   15[COMRAM] PTR void 
  4185 ;;		 -> msgbuffer(11), timer0_int_handler@val(2), main@msgbuffer(11), 
  4186 ;; Auto vars:     Size  Location     Type
  4187 ;;  recv_msg        2   22[COMRAM] PTR struct __msg
  4188 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4189 ;;  recv_msg        2   20[COMRAM] unsigned int 
  4190 ;;  recv_msg        1   19[COMRAM] unsigned char 
  4191 ;; Return value:  Size  Location     Type
  4192 ;;                  1    wreg      char 
  4193 ;; Registers used:
  4194 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4195 ;; Tracked objects:
  4196 ;;		On entry : 0/0
  4197 ;;		On exit  : 0/0
  4198 ;;		Unchanged: 0/0
  4199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4200 ;;      Params:         7       0       0       0       0
  4201 ;;      Locals:         5       0       0       0       0
  4202 ;;      Temps:          2       0       0       0       0
  4203 ;;      Totals:        14       0       0       0       0
  4204 ;;Total ram usage:       14 bytes
  4205 ;; Hardware stack levels used:    1
  4206 ;; Hardware stack levels required when called:    6
  4207 ;; This function calls:
  4208 ;;		i1_memcpy
  4209 ;; This function is called by:
  4210 ;;		_FromMainHigh_recvmsg
  4211 ;; This function uses a non-reentrant model
  4212 ;;
  4213                           
  4214                           	psect	text26
  4215  000F50                     __ptext26:
  4216                           	opt stack 0
  4217  000F50                     i1_recv_msg:
  4218                           	opt stack 16
  4219                           
  4220                           ;messages.c: 64: unsigned char slot;
  4221                           ;messages.c: 68: msg *qmsg;
  4222                           ;messages.c: 69: size_t tlength;
  4223                           ;messages.c: 72: slot = qptr->cur_read_ind;
  4224                           
  4225                           ;incstack = 0
  4226                           ;incstack = 0
  4227  000F50  EE20 F035          	lfsr	2,53
  4228  000F54  500B               	movf	i1recv_msg@qptr,w,c
  4229  000F56  26D9               	addwf	fsr2l,f,c
  4230  000F58  500C               	movf	i1recv_msg@qptr+1,w,c
  4231  000F5A  22DA               	addwfc	fsr2h,f,c
  4232  000F5C  50DF               	movf	indf2,w,c
  4233  000F5E  6E14               	movwf	i1recv_msg@slot,c
  4234                           
  4235                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  4236  000F60  5014               	movf	i1recv_msg@slot,w,c
  4237  000F62  0D0D               	mullw	13
  4238  000F64  50F3               	movf	prodl,w,c
  4239  000F66  240B               	addwf	i1recv_msg@qptr,w,c
  4240  000F68  6E17               	movwf	i1recv_msg@qmsg,c
  4241  000F6A  50F4               	movf	prodh,w,c
  4242  000F6C  200C               	addwfc	i1recv_msg@qptr+1,w,c
  4243  000F6E  6E18               	movwf	i1recv_msg@qmsg+1,c
  4244                           
  4245                           ;messages.c: 74: if (qmsg->full == 1) {
  4246  000F70  0E01               	movlw	1
  4247  000F72  C017  FFD9         	movff	i1recv_msg@qmsg,fsr2l
  4248  000F76  C018  FFDA         	movff	i1recv_msg@qmsg+1,fsr2h
  4249  000F7A  62DF               	cpfseq	indf2,c
  4250  000F7C  D04F               	goto	i1l3526
  4251                           
  4252                           ;messages.c: 76: if (qmsg->length > maxlength) {
  4253  000F7E  EE20 F001          	lfsr	2,1
  4254  000F82  5017               	movf	i1recv_msg@qmsg,w,c
  4255  000F84  26D9               	addwf	fsr2l,f,c
  4256  000F86  5018               	movf	i1recv_msg@qmsg+1,w,c
  4257  000F88  22DA               	addwfc	fsr2h,f,c
  4258  000F8A  50DF               	movf	indf2,w,c
  4259  000F8C  600D               	cpfslt	i1recv_msg@maxlength,c
  4260  000F8E  D002               	goto	i1l3510
  4261                           
  4262                           ;messages.c: 77: return (-3);
  4263  000F90  0EFD               	movlw	253
  4264  000F92  0012               	return	
  4265  000F94                     i1l3510:
  4266                           
  4267                           ;messages.c: 78: }
  4268                           ;messages.c: 80: tlength = qmsg->length;
  4269  000F94  EE20 F001          	lfsr	2,1
  4270  000F98  5017               	movf	i1recv_msg@qmsg,w,c
  4271  000F9A  26D9               	addwf	fsr2l,f,c
  4272  000F9C  5018               	movf	i1recv_msg@qmsg+1,w,c
  4273  000F9E  22DA               	addwfc	fsr2h,f,c
  4274  000FA0  50DF               	movf	indf2,w,c
  4275  000FA2  6E12               	movwf	??i1_recv_msg& (0+255),c
  4276  000FA4  5012               	movf	??i1_recv_msg,w,c
  4277  000FA6  6E15               	movwf	i1recv_msg@tlength,c
  4278  000FA8  6A16               	clrf	i1recv_msg@tlength+1,c
  4279                           
  4280                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  4281  000FAA  C010  F001         	movff	i1recv_msg@data,?i1_memcpy
  4282  000FAE  C011  F002         	movff	i1recv_msg@data+1,?i1_memcpy+1
  4283  000FB2  0E03               	movlw	3
  4284  000FB4  2417               	addwf	i1recv_msg@qmsg,w,c
  4285  000FB6  6E12               	movwf	??i1_recv_msg& (0+255),c
  4286  000FB8  0E00               	movlw	0
  4287  000FBA  2018               	addwfc	i1recv_msg@qmsg+1,w,c
  4288  000FBC  6E13               	movwf	(??i1_recv_msg+1)& (0+255),c
  4289  000FBE  C012  F003         	movff	??i1_recv_msg,?i1_memcpy+2
  4290  000FC2  C013  F004         	movff	??i1_recv_msg+1,?i1_memcpy+3
  4291  000FC6  C015  F005         	movff	i1recv_msg@tlength,?i1_memcpy+4
  4292  000FCA  C016  F006         	movff	i1recv_msg@tlength+1,?i1_memcpy+5
  4293  000FCE  EC55  F00B         	call	i1_memcpy	;wreg free
  4294                           
  4295                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  4296  000FD2  EE20 F035          	lfsr	2,53
  4297  000FD6  500B               	movf	i1recv_msg@qptr,w,c
  4298  000FD8  26D9               	addwf	fsr2l,f,c
  4299  000FDA  500C               	movf	i1recv_msg@qptr+1,w,c
  4300  000FDC  22DA               	addwfc	fsr2h,f,c
  4301  000FDE  EE10 F035          	lfsr	1,53
  4302  000FE2  500B               	movf	i1recv_msg@qptr,w,c
  4303  000FE4  26E1               	addwf	fsr1l,f,c
  4304  000FE6  500C               	movf	i1recv_msg@qptr+1,w,c
  4305  000FE8  22E2               	addwfc	fsr1h,f,c
  4306  000FEA  50E7               	movf	indf1,w,c
  4307  000FEC  6E12               	movwf	??i1_recv_msg& (0+255),c
  4308  000FEE  2812               	incf	??i1_recv_msg,w,c
  4309  000FF0  0B03               	andlw	3
  4310  000FF2  6EDF               	movwf	indf2,c
  4311                           
  4312                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  4313  000FF4  EE20 F002          	lfsr	2,2
  4314  000FF8  5017               	movf	i1recv_msg@qmsg,w,c
  4315  000FFA  26D9               	addwf	fsr2l,f,c
  4316  000FFC  5018               	movf	i1recv_msg@qmsg+1,w,c
  4317  000FFE  22DA               	addwfc	fsr2h,f,c
  4318  001000  C00E  FFE1         	movff	i1recv_msg@msgtype,fsr1l
  4319  001004  C00F  FFE2         	movff	i1recv_msg@msgtype+1,fsr1h
  4320  001008  CFDF FFE7          	movff	indf2,indf1
  4321                           
  4322                           ;messages.c: 91: qmsg->full = 0;
  4323  00100C  C017  FFD9         	movff	i1recv_msg@qmsg,fsr2l
  4324  001010  C018  FFDA         	movff	i1recv_msg@qmsg+1,fsr2h
  4325  001014  0E00               	movlw	0
  4326  001016  6EDF               	movwf	indf2,c
  4327                           
  4328                           ;messages.c: 92: return (tlength);
  4329  001018  5015               	movf	i1recv_msg@tlength,w,c
  4330  00101A  0012               	return	
  4331  00101C                     i1l3526:
  4332                           
  4333                           ;messages.c: 94: return (-4);
  4334  00101C  0EFC               	movlw	252
  4335  00101E  0012               	return	
  4336  001020                     __end_ofi1_recv_msg:
  4337                           	opt stack 0
  4338                           pclatu	equ	0xFFB
  4339                           pclath	equ	0xFFA
  4340                           tblptru	equ	0xFF8
  4341                           tblptrh	equ	0xFF7
  4342                           tblptrl	equ	0xFF6
  4343                           tablat	equ	0xFF5
  4344                           prodh	equ	0xFF4
  4345                           prodl	equ	0xFF3
  4346                           intcon	equ	0xFF2
  4347                           postinc0	equ	0xFEE
  4348                           fsr0h	equ	0xFEA
  4349                           fsr0l	equ	0xFE9
  4350                           wreg	equ	0xFE8
  4351                           indf1	equ	0xFE7
  4352                           fsr1h	equ	0xFE2
  4353                           fsr1l	equ	0xFE1
  4354                           bsr	equ	0xFE0
  4355                           indf2	equ	0xFDF
  4356                           postinc2	equ	0xFDE
  4357                           postdec2	equ	0xFDD
  4358                           fsr2h	equ	0xFDA
  4359                           fsr2l	equ	0xFD9
  4360                           status	equ	0xFD8
  4361                           
  4362 ;; *************** function _timer1_int_handler *****************
  4363 ;; Defined at:
  4364 ;;		line 37 in file "../src/user_interrupts.c"
  4365 ;; Parameters:    Size  Location     Type
  4366 ;;		None
  4367 ;; Auto vars:     Size  Location     Type
  4368 ;;		None
  4369 ;; Return value:  Size  Location     Type
  4370 ;;		None               void
  4371 ;; Registers used:
  4372 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4373 ;; Tracked objects:
  4374 ;;		On entry : 0/0
  4375 ;;		On exit  : 0/0
  4376 ;;		Unchanged: 0/0
  4377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4378 ;;      Params:         0       0       0       0       0
  4379 ;;      Locals:         0       0       0       0       0
  4380 ;;      Temps:          2       0       0       0       0
  4381 ;;      Totals:         2       0       0       0       0
  4382 ;;Total ram usage:        2 bytes
  4383 ;; Hardware stack levels used:    1
  4384 ;; Hardware stack levels required when called:    8
  4385 ;; This function calls:
  4386 ;;		_ToMainLow_sendmsg
  4387 ;;		_WriteTimer1
  4388 ;; This function is called by:
  4389 ;;		_InterruptHandlerLow
  4390 ;; This function uses a non-reentrant model
  4391 ;;
  4392                           
  4393                           	psect	text27
  4394  0018B0                     __ptext27:
  4395                           	opt stack 0
  4396  0018B0                     _timer1_int_handler:
  4397                           	opt stack 16
  4398                           
  4399                           ;user_interrupts.c: 47: ToMainLow_sendmsg(0, 11, (void *) 0);
  4400                           
  4401                           ;incstack = 0
  4402                           ;incstack = 0
  4403  0018B0  6E1B               	movwf	??_timer1_int_handler& (0+255),c
  4404  0018B2  0E00               	movlw	0
  4405  0018B4  6E17               	movwf	?_ToMainLow_sendmsg,c
  4406  0018B6  501B               	movf	??_timer1_int_handler& (0+255),w,c
  4407  0018B8  6E1C               	movwf	(??_timer1_int_handler+1)& (0+255),c
  4408  0018BA  0E0B               	movlw	11
  4409  0018BC  6E18               	movwf	?_ToMainLow_sendmsg+1,c
  4410  0018BE  501C               	movf	(??_timer1_int_handler+1)& (0+255),w,c
  4411  0018C0  0E00               	movlw	0
  4412  0018C2  6E1A               	movwf	?_ToMainLow_sendmsg+3,c
  4413  0018C4  0E00               	movlw	0
  4414  0018C6  6E19               	movwf	?_ToMainLow_sendmsg+2,c
  4415  0018C8  ECCE  F00C         	call	_ToMainLow_sendmsg	;wreg free
  4416                           
  4417                           ;user_interrupts.c: 50: WriteTimer1(65086);
  4418  0018CC  0EFE               	movlw	254
  4419  0018CE  6E02               	movwf	?_WriteTimer1+1,c
  4420  0018D0  0E3E               	movlw	62
  4421  0018D2  6E01               	movwf	?_WriteTimer1,c
  4422  0018D4  EC09  F00D         	call	_WriteTimer1	;wreg free
  4423  0018D8  0012               	return	
  4424  0018DA                     __end_of_timer1_int_handler:
  4425                           	opt stack 0
  4426                           pclatu	equ	0xFFB
  4427                           pclath	equ	0xFFA
  4428                           tblptru	equ	0xFF8
  4429                           tblptrh	equ	0xFF7
  4430                           tblptrl	equ	0xFF6
  4431                           tablat	equ	0xFF5
  4432                           prodh	equ	0xFF4
  4433                           prodl	equ	0xFF3
  4434                           intcon	equ	0xFF2
  4435                           postinc0	equ	0xFEE
  4436                           fsr0h	equ	0xFEA
  4437                           fsr0l	equ	0xFE9
  4438                           wreg	equ	0xFE8
  4439                           indf1	equ	0xFE7
  4440                           fsr1h	equ	0xFE2
  4441                           fsr1l	equ	0xFE1
  4442                           bsr	equ	0xFE0
  4443                           indf2	equ	0xFDF
  4444                           postinc2	equ	0xFDE
  4445                           postdec2	equ	0xFDD
  4446                           fsr2h	equ	0xFDA
  4447                           fsr2l	equ	0xFD9
  4448                           status	equ	0xFD8
  4449                           
  4450 ;; *************** function _WriteTimer1 *****************
  4451 ;; Defined at:
  4452 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic18\plib\Timers\t1write.c"
  4453 ;; Parameters:    Size  Location     Type
  4454 ;;  timer1          2    0[COMRAM] unsigned int 
  4455 ;; Auto vars:     Size  Location     Type
  4456 ;;  timer           2    2[COMRAM] struct Timers
  4457 ;; Return value:  Size  Location     Type
  4458 ;;		None               void
  4459 ;; Registers used:
  4460 ;;		None
  4461 ;; Tracked objects:
  4462 ;;		On entry : 0/0
  4463 ;;		On exit  : 0/0
  4464 ;;		Unchanged: 0/0
  4465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4466 ;;      Params:         2       0       0       0       0
  4467 ;;      Locals:         2       0       0       0       0
  4468 ;;      Temps:          0       0       0       0       0
  4469 ;;      Totals:         4       0       0       0       0
  4470 ;;Total ram usage:        4 bytes
  4471 ;; Hardware stack levels used:    1
  4472 ;; Hardware stack levels required when called:    5
  4473 ;; This function calls:
  4474 ;;		Nothing
  4475 ;; This function is called by:
  4476 ;;		_timer1_int_handler
  4477 ;; This function uses a non-reentrant model
  4478 ;;
  4479                           
  4480                           	psect	text28
  4481  001A12                     __ptext28:
  4482                           	opt stack 0
  4483  001A12                     _WriteTimer1:
  4484                           	opt stack 18
  4485                           
  4486                           ;incstack = 0
  4487                           ;incstack = 0
  4488  001A12  C001  F003         	movff	WriteTimer1@timer1,WriteTimer1@timer
  4489  001A16  C002  F004         	movff	WriteTimer1@timer1+1,WriteTimer1@timer+1
  4490  001A1A  C004  FFCF         	movff	WriteTimer1@timer+1,4047	;volatile
  4491  001A1E  C003  FFCE         	movff	WriteTimer1@timer,4046	;volatile
  4492  001A22  0012               	return	
  4493  001A24                     __end_of_WriteTimer1:
  4494                           	opt stack 0
  4495                           pclatu	equ	0xFFB
  4496                           pclath	equ	0xFFA
  4497                           tblptru	equ	0xFF8
  4498                           tblptrh	equ	0xFF7
  4499                           tblptrl	equ	0xFF6
  4500                           tablat	equ	0xFF5
  4501                           prodh	equ	0xFF4
  4502                           prodl	equ	0xFF3
  4503                           intcon	equ	0xFF2
  4504                           postinc0	equ	0xFEE
  4505                           fsr0h	equ	0xFEA
  4506                           fsr0l	equ	0xFE9
  4507                           wreg	equ	0xFE8
  4508                           indf1	equ	0xFE7
  4509                           fsr1h	equ	0xFE2
  4510                           fsr1l	equ	0xFE1
  4511                           bsr	equ	0xFE0
  4512                           indf2	equ	0xFDF
  4513                           postinc2	equ	0xFDE
  4514                           postdec2	equ	0xFDD
  4515                           fsr2h	equ	0xFDA
  4516                           fsr2l	equ	0xFD9
  4517                           status	equ	0xFD8
  4518                           
  4519 ;; *************** function _ToMainLow_sendmsg *****************
  4520 ;; Defined at:
  4521 ;;		line 103 in file "../src/messages.c"
  4522 ;; Parameters:    Size  Location     Type
  4523 ;;  length          1   22[COMRAM] unsigned char 
  4524 ;;  msgtype         1   23[COMRAM] unsigned char 
  4525 ;;  data            2   24[COMRAM] PTR void 
  4526 ;;		 -> NULL(0), 
  4527 ;; Auto vars:     Size  Location     Type
  4528 ;;		None
  4529 ;; Return value:  Size  Location     Type
  4530 ;;                  1    wreg      char 
  4531 ;; Registers used:
  4532 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4533 ;; Tracked objects:
  4534 ;;		On entry : 0/0
  4535 ;;		On exit  : 0/0
  4536 ;;		Unchanged: 0/0
  4537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4538 ;;      Params:         4       0       0       0       0
  4539 ;;      Locals:         0       0       0       0       0
  4540 ;;      Temps:          0       0       0       0       0
  4541 ;;      Totals:         4       0       0       0       0
  4542 ;;Total ram usage:        4 bytes
  4543 ;; Hardware stack levels used:    1
  4544 ;; Hardware stack levels required when called:    7
  4545 ;; This function calls:
  4546 ;;		i1_send_msg
  4547 ;; This function is called by:
  4548 ;;		_timer1_int_handler
  4549 ;;		_uart_recv_int_handler
  4550 ;; This function uses a non-reentrant model
  4551 ;;
  4552                           
  4553                           	psect	text29
  4554  00199C                     __ptext29:
  4555                           	opt stack 0
  4556  00199C                     _ToMainLow_sendmsg:
  4557                           	opt stack 16
  4558                           
  4559                           ;messages.c: 109: return (send_msg(&ToMainLow_MQ, length, msgtype, data));
  4560                           ;	Return value of _ToMainLow_sendmsg is never used
  4561                           
  4562                           ;incstack = 0
  4563                           ;incstack = 0
  4564  00199C  0101               	movlb	1	; () banked
  4565  00199E  0E01               	movlw	high _ToMainLow_MQ
  4566  0019A0  6E0C               	movwf	?i1_send_msg+1,c
  4567  0019A2  0101               	movlb	1	; () banked
  4568  0019A4  0EA2               	movlw	low _ToMainLow_MQ
  4569  0019A6  6E0B               	movwf	?i1_send_msg,c
  4570  0019A8  C017  F00D         	movff	ToMainLow_sendmsg@length,?i1_send_msg+2
  4571  0019AC  C018  F00E         	movff	ToMainLow_sendmsg@msgtype,?i1_send_msg+3
  4572  0019B0  C019  F00F         	movff	ToMainLow_sendmsg@data,?i1_send_msg+4
  4573  0019B4  C01A  F010         	movff	ToMainLow_sendmsg@data+1,?i1_send_msg+5
  4574  0019B8  EC24  F009         	call	i1_send_msg	;wreg free
  4575  0019BC  0012               	return	
  4576  0019BE                     __end_of_ToMainLow_sendmsg:
  4577                           	opt stack 0
  4578                           pclatu	equ	0xFFB
  4579                           pclath	equ	0xFFA
  4580                           tblptru	equ	0xFF8
  4581                           tblptrh	equ	0xFF7
  4582                           tblptrl	equ	0xFF6
  4583                           tablat	equ	0xFF5
  4584                           prodh	equ	0xFF4
  4585                           prodl	equ	0xFF3
  4586                           intcon	equ	0xFF2
  4587                           postinc0	equ	0xFEE
  4588                           fsr0h	equ	0xFEA
  4589                           fsr0l	equ	0xFE9
  4590                           wreg	equ	0xFE8
  4591                           indf1	equ	0xFE7
  4592                           fsr1h	equ	0xFE2
  4593                           fsr1l	equ	0xFE1
  4594                           bsr	equ	0xFE0
  4595                           indf2	equ	0xFDF
  4596                           postinc2	equ	0xFDE
  4597                           postdec2	equ	0xFDD
  4598                           fsr2h	equ	0xFDA
  4599                           fsr2l	equ	0xFD9
  4600                           status	equ	0xFD8
  4601                           
  4602 ;; *************** function i1_send_msg *****************
  4603 ;; Defined at:
  4604 ;;		line 24 in file "../src/messages.c"
  4605 ;; Parameters:    Size  Location     Type
  4606 ;;  send_msg        2   10[COMRAM] PTR struct __msg_queue
  4607 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4608 ;;  send_msg        1   12[COMRAM] unsigned char 
  4609 ;;  send_msg        1   13[COMRAM] unsigned char 
  4610 ;;  send_msg        2   14[COMRAM] PTR void 
  4611 ;;		 -> timer0_int_handler@val(2), message(1), NULL(0), i2c_int_handler@error_buf(3), 
  4612 ;; Auto vars:     Size  Location     Type
  4613 ;;  send_msg        2   20[COMRAM] PTR struct __msg
  4614 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4615 ;;  send_msg        2   17[COMRAM] unsigned int 
  4616 ;;  send_msg        1   19[COMRAM] unsigned char 
  4617 ;; Return value:  Size  Location     Type
  4618 ;;                  1    wreg      char 
  4619 ;; Registers used:
  4620 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4621 ;; Tracked objects:
  4622 ;;		On entry : 0/0
  4623 ;;		On exit  : 0/0
  4624 ;;		Unchanged: 0/0
  4625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4626 ;;      Params:         6       0       0       0       0
  4627 ;;      Locals:         5       0       0       0       0
  4628 ;;      Temps:          1       0       0       0       0
  4629 ;;      Totals:        12       0       0       0       0
  4630 ;;Total ram usage:       12 bytes
  4631 ;; Hardware stack levels used:    1
  4632 ;; Hardware stack levels required when called:    6
  4633 ;; This function calls:
  4634 ;;		i1_memcpy
  4635 ;; This function is called by:
  4636 ;;		_ToMainLow_sendmsg
  4637 ;; This function uses a non-reentrant model
  4638 ;;
  4639                           
  4640                           	psect	text30
  4641  001248                     __ptext30:
  4642                           	opt stack 0
  4643  001248                     i1_send_msg:
  4644                           	opt stack 16
  4645                           
  4646                           ;messages.c: 25: unsigned char slot;
  4647                           ;messages.c: 27: msg *qmsg;
  4648                           ;messages.c: 28: size_t tlength = length;
  4649                           
  4650                           ;incstack = 0
  4651                           ;incstack = 0
  4652  001248  C00D  F012         	movff	i1send_msg@length,i1send_msg@tlength
  4653  00124C  6A13               	clrf	i1send_msg@tlength+1,c
  4654                           
  4655                           ;messages.c: 38: slot = qptr->cur_write_ind;
  4656  00124E  EE20 F034          	lfsr	2,52
  4657  001252  500B               	movf	i1send_msg@qptr,w,c
  4658  001254  26D9               	addwf	fsr2l,f,c
  4659  001256  500C               	movf	i1send_msg@qptr+1,w,c
  4660  001258  22DA               	addwfc	fsr2h,f,c
  4661  00125A  50DF               	movf	indf2,w,c
  4662  00125C  6E14               	movwf	i1send_msg@slot,c
  4663                           
  4664                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  4665  00125E  5014               	movf	i1send_msg@slot,w,c
  4666  001260  0D0D               	mullw	13
  4667  001262  50F3               	movf	prodl,w,c
  4668  001264  240B               	addwf	i1send_msg@qptr,w,c
  4669  001266  6E15               	movwf	i1send_msg@qmsg,c
  4670  001268  50F4               	movf	prodh,w,c
  4671  00126A  200C               	addwfc	i1send_msg@qptr+1,w,c
  4672  00126C  6E16               	movwf	i1send_msg@qmsg+1,c
  4673                           
  4674                           ;messages.c: 41: if (qmsg->full != 0) {
  4675  00126E  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  4676  001272  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  4677  001276  50DF               	movf	indf2,w,c
  4678  001278  B4D8               	btfsc	status,2,c
  4679  00127A  D002               	goto	i1l3486
  4680                           
  4681                           ;messages.c: 42: return (-1);
  4682  00127C  0EFF               	movlw	255
  4683  00127E  0012               	return	
  4684  001280                     i1l3486:
  4685                           
  4686                           ;messages.c: 43: }
  4687                           ;messages.c: 46: qmsg->length = length;
  4688  001280  EE20 F001          	lfsr	2,1
  4689  001284  5015               	movf	i1send_msg@qmsg,w,c
  4690  001286  26D9               	addwf	fsr2l,f,c
  4691  001288  5016               	movf	i1send_msg@qmsg+1,w,c
  4692  00128A  22DA               	addwfc	fsr2h,f,c
  4693  00128C  C00D  FFDF         	movff	i1send_msg@length,indf2
  4694                           
  4695                           ;messages.c: 47: qmsg->msgtype = msgtype;
  4696  001290  EE20 F002          	lfsr	2,2
  4697  001294  5015               	movf	i1send_msg@qmsg,w,c
  4698  001296  26D9               	addwf	fsr2l,f,c
  4699  001298  5016               	movf	i1send_msg@qmsg+1,w,c
  4700  00129A  22DA               	addwfc	fsr2h,f,c
  4701  00129C  C00E  FFDF         	movff	i1send_msg@msgtype,indf2
  4702                           
  4703                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  4704  0012A0  0E03               	movlw	3
  4705  0012A2  2415               	addwf	i1send_msg@qmsg,w,c
  4706  0012A4  6E01               	movwf	?i1_memcpy,c
  4707  0012A6  0E00               	movlw	0
  4708  0012A8  2016               	addwfc	i1send_msg@qmsg+1,w,c
  4709  0012AA  6E02               	movwf	?i1_memcpy+1,c
  4710  0012AC  C00F  F003         	movff	i1send_msg@data,?i1_memcpy+2
  4711  0012B0  C010  F004         	movff	i1send_msg@data+1,?i1_memcpy+3
  4712  0012B4  C012  F005         	movff	i1send_msg@tlength,?i1_memcpy+4
  4713  0012B8  C013  F006         	movff	i1send_msg@tlength+1,?i1_memcpy+5
  4714  0012BC  EC55  F00B         	call	i1_memcpy	;wreg free
  4715                           
  4716                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  4717  0012C0  EE20 F034          	lfsr	2,52
  4718  0012C4  500B               	movf	i1send_msg@qptr,w,c
  4719  0012C6  26D9               	addwf	fsr2l,f,c
  4720  0012C8  500C               	movf	i1send_msg@qptr+1,w,c
  4721  0012CA  22DA               	addwfc	fsr2h,f,c
  4722  0012CC  EE10 F034          	lfsr	1,52
  4723  0012D0  500B               	movf	i1send_msg@qptr,w,c
  4724  0012D2  26E1               	addwf	fsr1l,f,c
  4725  0012D4  500C               	movf	i1send_msg@qptr+1,w,c
  4726  0012D6  22E2               	addwfc	fsr1h,f,c
  4727  0012D8  50E7               	movf	indf1,w,c
  4728  0012DA  6E11               	movwf	??i1_send_msg& (0+255),c
  4729  0012DC  2811               	incf	??i1_send_msg,w,c
  4730  0012DE  0B03               	andlw	3
  4731  0012E0  6EDF               	movwf	indf2,c
  4732                           
  4733                           ;messages.c: 59: qmsg->full = 1;
  4734  0012E2  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  4735  0012E6  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  4736  0012EA  0E01               	movlw	1
  4737  0012EC  6EDF               	movwf	indf2,c
  4738                           
  4739                           ;messages.c: 60: return (1);
  4740  0012EE  0E01               	movlw	1
  4741  0012F0  0012               	return	
  4742  0012F2                     __end_ofi1_send_msg:
  4743                           	opt stack 0
  4744                           pclatu	equ	0xFFB
  4745                           pclath	equ	0xFFA
  4746                           tblptru	equ	0xFF8
  4747                           tblptrh	equ	0xFF7
  4748                           tblptrl	equ	0xFF6
  4749                           tablat	equ	0xFF5
  4750                           prodh	equ	0xFF4
  4751                           prodl	equ	0xFF3
  4752                           intcon	equ	0xFF2
  4753                           postinc0	equ	0xFEE
  4754                           fsr0h	equ	0xFEA
  4755                           fsr0l	equ	0xFE9
  4756                           wreg	equ	0xFE8
  4757                           indf1	equ	0xFE7
  4758                           fsr1h	equ	0xFE2
  4759                           fsr1l	equ	0xFE1
  4760                           bsr	equ	0xFE0
  4761                           indf2	equ	0xFDF
  4762                           postinc2	equ	0xFDE
  4763                           postdec2	equ	0xFDD
  4764                           fsr2h	equ	0xFDA
  4765                           fsr2l	equ	0xFD9
  4766                           status	equ	0xFD8
  4767                           
  4768 ;; *************** function i1_memcpy *****************
  4769 ;; Defined at:
  4770 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\memcpy.c"
  4771 ;; Parameters:    Size  Location     Type
  4772 ;;  memcpy          2    0[COMRAM] PTR void 
  4773 ;;		 -> msgbuffer(11), timer0_int_handler@val(2), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  4774 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@msgbuffer(11), 
  4775 ;;  memcpy          2    2[COMRAM] PTR const void 
  4776 ;;		 -> timer0_int_handler@val(2), message(1), NULL(0), i2c_int_handler@error_buf(3), 
  4777 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4778 ;;  memcpy          2    4[COMRAM] unsigned int 
  4779 ;; Auto vars:     Size  Location     Type
  4780 ;;  memcpy          2    8[COMRAM] PTR const unsigned char 
  4781 ;;		 -> timer0_int_handler@val(2), message(1), NULL(0), i2c_int_handler@error_buf(3), 
  4782 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4783 ;;  memcpy          2    6[COMRAM] PTR unsigned char 
  4784 ;;		 -> msgbuffer(11), timer0_int_handler@val(2), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  4785 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@msgbuffer(11), 
  4786 ;; Return value:  Size  Location     Type
  4787 ;;                  2    0[COMRAM] PTR void 
  4788 ;; Registers used:
  4789 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4790 ;; Tracked objects:
  4791 ;;		On entry : 0/0
  4792 ;;		On exit  : 0/0
  4793 ;;		Unchanged: 0/0
  4794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4795 ;;      Params:         6       0       0       0       0
  4796 ;;      Locals:         4       0       0       0       0
  4797 ;;      Temps:          0       0       0       0       0
  4798 ;;      Totals:        10       0       0       0       0
  4799 ;;Total ram usage:       10 bytes
  4800 ;; Hardware stack levels used:    1
  4801 ;; Hardware stack levels required when called:    5
  4802 ;; This function calls:
  4803 ;;		Nothing
  4804 ;; This function is called by:
  4805 ;;		i1_send_msg
  4806 ;;		i1_recv_msg
  4807 ;; This function uses a non-reentrant model
  4808 ;;
  4809                           
  4810                           	psect	text31
  4811  0016AA                     __ptext31:
  4812                           	opt stack 0
  4813  0016AA                     i1_memcpy:
  4814                           	opt stack 16
  4815                           
  4816                           ;incstack = 0
  4817                           ;incstack = 0
  4818  0016AA  C003  F009         	movff	i1memcpy@s1,i1memcpy@s
  4819  0016AE  C004  F00A         	movff	i1memcpy@s1+1,i1memcpy@s+1
  4820  0016B2  C001  F007         	movff	i1memcpy@d1,i1memcpy@d
  4821  0016B6  C002  F008         	movff	i1memcpy@d1+1,i1memcpy@d+1
  4822  0016BA  D00E               	goto	i1l3462
  4823  0016BC                     i1l3456:
  4824  0016BC  C009  FFD9         	movff	i1memcpy@s,fsr2l
  4825  0016C0  C00A  FFDA         	movff	i1memcpy@s+1,fsr2h
  4826  0016C4  C007  FFE1         	movff	i1memcpy@d,fsr1l
  4827  0016C8  C008  FFE2         	movff	i1memcpy@d+1,fsr1h
  4828  0016CC  CFDF FFE7          	movff	indf2,indf1
  4829  0016D0  4A09               	infsnz	i1memcpy@s,f,c
  4830  0016D2  2A0A               	incf	i1memcpy@s+1,f,c
  4831  0016D4  4A07               	infsnz	i1memcpy@d,f,c
  4832  0016D6  2A08               	incf	i1memcpy@d+1,f,c
  4833  0016D8                     i1l3462:
  4834  0016D8  0605               	decf	i1memcpy@n,f,c
  4835  0016DA  A0D8               	btfss	status,0,c
  4836  0016DC  0606               	decf	i1memcpy@n+1,f,c
  4837  0016DE  2805               	incf	i1memcpy@n& (0+255),w,c
  4838  0016E0  B4D8               	btfsc	status,2,c
  4839  0016E2  2806               	incf	(i1memcpy@n+1)& (0+255),w,c
  4840  0016E4  B4D8               	btfsc	status,2,c
  4841                           
  4842                           ;	Return value of i1_memcpy is never used
  4843  0016E6  0012               	return	
  4844  0016E8  D7E9               	goto	i1l3456
  4845  0016EA                     __end_ofi1_memcpy:
  4846                           	opt stack 0
  4847                           pclatu	equ	0xFFB
  4848                           pclath	equ	0xFFA
  4849                           tblptru	equ	0xFF8
  4850                           tblptrh	equ	0xFF7
  4851                           tblptrl	equ	0xFF6
  4852                           tablat	equ	0xFF5
  4853                           prodh	equ	0xFF4
  4854                           prodl	equ	0xFF3
  4855                           intcon	equ	0xFF2
  4856                           postinc0	equ	0xFEE
  4857                           fsr0h	equ	0xFEA
  4858                           fsr0l	equ	0xFE9
  4859                           wreg	equ	0xFE8
  4860                           indf1	equ	0xFE7
  4861                           fsr1h	equ	0xFE2
  4862                           fsr1l	equ	0xFE1
  4863                           bsr	equ	0xFE0
  4864                           indf2	equ	0xFDF
  4865                           postinc2	equ	0xFDE
  4866                           postdec2	equ	0xFDD
  4867                           fsr2h	equ	0xFDA
  4868                           fsr2l	equ	0xFD9
  4869                           status	equ	0xFD8
  4870                           
  4871 ;; *************** function _InterruptHandlerHigh *****************
  4872 ;; Defined at:
  4873 ;;		line 86 in file "../src/interrupts.c"
  4874 ;; Parameters:    Size  Location     Type
  4875 ;;		None
  4876 ;; Auto vars:     Size  Location     Type
  4877 ;;		None
  4878 ;; Return value:  Size  Location     Type
  4879 ;;		None               void
  4880 ;; Registers used:
  4881 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  4882 ;; Tracked objects:
  4883 ;;		On entry : 0/0
  4884 ;;		On exit  : 0/0
  4885 ;;		Unchanged: 0/0
  4886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4887 ;;      Params:         0       0       0       0       0
  4888 ;;      Locals:         0       0       0       0       0
  4889 ;;      Temps:          0      14       0       0       0
  4890 ;;      Totals:         0      14       0       0       0
  4891 ;;Total ram usage:       14 bytes
  4892 ;; Hardware stack levels used:    1
  4893 ;; Hardware stack levels required when called:    4
  4894 ;; This function calls:
  4895 ;;		_i2c_int_handler
  4896 ;;		_timer0_int_handler
  4897 ;;		_adc_int_handler
  4898 ;;		_uart_rx_int_handler
  4899 ;;		_SleepIfOkay
  4900 ;; This function is called by:
  4901 ;;		Interrupt level 2
  4902 ;; This function uses a non-reentrant model
  4903 ;;
  4904                           
  4905                           	psect	intcode
  4906  000008                     __pintcode:
  4907                           	opt stack 0
  4908  000008                     _InterruptHandlerHigh:
  4909                           	opt stack 16
  4910                           
  4911                           ;incstack = 0
  4912  000008  CFFA F09F          	movff	pclath,??_InterruptHandlerHigh
  4913  00000C  CFFB F0A0          	movff	pclatu,??_InterruptHandlerHigh+1
  4914  000010  CFE9 F0A1          	movff	fsr0l,??_InterruptHandlerHigh+2
  4915  000014  EF79  F009         	goto	int_func
  4916                           pclatu	equ	0xFFB
  4917                           pclath	equ	0xFFA
  4918                           tblptru	equ	0xFF8
  4919                           tblptrh	equ	0xFF7
  4920                           tblptrl	equ	0xFF6
  4921                           tablat	equ	0xFF5
  4922                           prodh	equ	0xFF4
  4923                           prodl	equ	0xFF3
  4924                           intcon	equ	0xFF2
  4925                           postinc0	equ	0xFEE
  4926                           fsr0h	equ	0xFEA
  4927                           fsr0l	equ	0xFE9
  4928                           wreg	equ	0xFE8
  4929                           indf1	equ	0xFE7
  4930                           fsr1h	equ	0xFE2
  4931                           fsr1l	equ	0xFE1
  4932                           bsr	equ	0xFE0
  4933                           indf2	equ	0xFDF
  4934                           postinc2	equ	0xFDE
  4935                           postdec2	equ	0xFDD
  4936                           fsr2h	equ	0xFDA
  4937                           fsr2l	equ	0xFD9
  4938                           status	equ	0xFD8
  4939                           
  4940                           	psect	intcode_body
  4941  0012F2                     __pintcode_body:
  4942                           	opt stack 16
  4943  0012F2                     int_func:
  4944                           	opt stack 16
  4945  0012F2  CFEA F0A2          	movff	fsr0h,??_InterruptHandlerHigh+3
  4946  0012F6  CFE1 F0A3          	movff	fsr1l,??_InterruptHandlerHigh+4
  4947  0012FA  CFE2 F0A4          	movff	fsr1h,??_InterruptHandlerHigh+5
  4948  0012FE  CFD9 F0A5          	movff	fsr2l,??_InterruptHandlerHigh+6
  4949  001302  CFDA F0A6          	movff	fsr2h,??_InterruptHandlerHigh+7
  4950  001306  CFF3 F0A7          	movff	prodl,??_InterruptHandlerHigh+8
  4951  00130A  CFF4 F0A8          	movff	prodh,??_InterruptHandlerHigh+9
  4952  00130E  CFF6 F0A9          	movff	tblptrl,??_InterruptHandlerHigh+10
  4953  001312  CFF7 F0AA          	movff	tblptrh,??_InterruptHandlerHigh+11
  4954  001316  CFF8 F0AB          	movff	tblptru,??_InterruptHandlerHigh+12
  4955  00131A  CFF5 F0AC          	movff	tablat,??_InterruptHandlerHigh+13
  4956  00131E                     
  4957                           ;interrupts.c: 91: if (PIR1bits.SSPIF) {
  4958  00131E  A69E               	btfss	3998,3,c	;volatile
  4959  001320  D001               	goto	i2u200_41
  4960  001322  D001               	goto	i2u200_40
  4961  001324                     i2u200_41:
  4962  001324  D004               	goto	i2l2922
  4963  001326                     i2u200_40:
  4964  001326                     
  4965                           ;interrupts.c: 93: PIR1bits.SSPIF = 0;
  4966  001326  969E               	bcf	3998,3,c	;volatile
  4967  001328                     
  4968                           ;interrupts.c: 95: i2c_int_handler();
  4969  001328  EC66  F000         	call	_i2c_int_handler	;wreg free
  4970  00132C  D000               	goto	i2l2922
  4971  00132E                     i2l2922:
  4972                           
  4973                           ;interrupts.c: 96: }
  4974                           ;interrupts.c: 99: if (INTCONbits.TMR0IF) {
  4975  00132E  A4F2               	btfss	intcon,2,c	;volatile
  4976  001330  D001               	goto	i2u201_41
  4977  001332  D001               	goto	i2u201_40
  4978  001334                     i2u201_41:
  4979  001334  D004               	goto	i2l2928
  4980  001336                     i2u201_40:
  4981  001336                     
  4982                           ;interrupts.c: 100: INTCONbits.TMR0IF = 0;
  4983  001336  94F2               	bcf	intcon,2,c	;volatile
  4984  001338                     
  4985                           ;interrupts.c: 102: timer0_int_handler();
  4986  001338  EC72  F008         	call	_timer0_int_handler	;wreg free
  4987  00133C  D000               	goto	i2l2928
  4988  00133E                     i2l2928:
  4989                           
  4990                           ;interrupts.c: 103: }
  4991                           ;interrupts.c: 105: if(PIR1bits.ADIF)
  4992  00133E  AC9E               	btfss	3998,6,c	;volatile
  4993  001340  D001               	goto	i2u202_41
  4994  001342  D001               	goto	i2u202_40
  4995  001344                     i2u202_41:
  4996  001344  D004               	goto	i2l2934
  4997  001346                     i2u202_40:
  4998  001346                     
  4999                           ;interrupts.c: 106: {
  5000                           ;interrupts.c: 107: PIR1bits.ADIF = 0;
  5001  001346  9C9E               	bcf	3998,6,c	;volatile
  5002  001348                     
  5003                           ;interrupts.c: 108: adc_int_handler();
  5004  001348  ECE7  F00B         	call	_adc_int_handler	;wreg free
  5005  00134C  D000               	goto	i2l2934
  5006  00134E                     i2l2934:
  5007                           
  5008                           ;interrupts.c: 110: }
  5009                           ;interrupts.c: 112: if (PIR1bits.RCIF)
  5010  00134E  AA9E               	btfss	3998,5,c	;volatile
  5011  001350  D001               	goto	i2u203_41
  5012  001352  D001               	goto	i2u203_40
  5013  001354                     i2u203_41:
  5014  001354  D003               	goto	i2l2938
  5015  001356                     i2u203_40:
  5016  001356                     
  5017                           ;interrupts.c: 113: {
  5018                           ;interrupts.c: 114: uart_rx_int_handler();
  5019  001356  EC94  F00B         	call	_uart_rx_int_handler	;wreg free
  5020  00135A  D000               	goto	i2l2938
  5021  00135C                     i2l2938:
  5022                           
  5023                           ;interrupts.c: 117: }
  5024                           ;interrupts.c: 125: SleepIfOkay();
  5025  00135C  ECA5  F00A         	call	_SleepIfOkay	;wreg free
  5026  001360  C0AC  FFF5         	movff	??_InterruptHandlerHigh+13,tablat
  5027  001364  C0AB  FFF8         	movff	??_InterruptHandlerHigh+12,tblptru
  5028  001368  C0AA  FFF7         	movff	??_InterruptHandlerHigh+11,tblptrh
  5029  00136C  C0A9  FFF6         	movff	??_InterruptHandlerHigh+10,tblptrl
  5030  001370  C0A8  FFF4         	movff	??_InterruptHandlerHigh+9,prodh
  5031  001374  C0A7  FFF3         	movff	??_InterruptHandlerHigh+8,prodl
  5032  001378  C0A6  FFDA         	movff	??_InterruptHandlerHigh+7,fsr2h
  5033  00137C  C0A5  FFD9         	movff	??_InterruptHandlerHigh+6,fsr2l
  5034  001380  C0A4  FFE2         	movff	??_InterruptHandlerHigh+5,fsr1h
  5035  001384  C0A3  FFE1         	movff	??_InterruptHandlerHigh+4,fsr1l
  5036  001388  C0A2  FFEA         	movff	??_InterruptHandlerHigh+3,fsr0h
  5037  00138C  C0A1  FFE9         	movff	??_InterruptHandlerHigh+2,fsr0l
  5038  001390  C0A0  FFFB         	movff	??_InterruptHandlerHigh+1,pclatu
  5039  001394  C09F  FFFA         	movff	??_InterruptHandlerHigh,pclath
  5040  001398  0011               	retfie		f
  5041  00139A                     __end_of_InterruptHandlerHigh:
  5042                           	opt stack 0
  5043                           pclatu	equ	0xFFB
  5044                           pclath	equ	0xFFA
  5045                           tblptru	equ	0xFF8
  5046                           tblptrh	equ	0xFF7
  5047                           tblptrl	equ	0xFF6
  5048                           tablat	equ	0xFF5
  5049                           prodh	equ	0xFF4
  5050                           prodl	equ	0xFF3
  5051                           intcon	equ	0xFF2
  5052                           postinc0	equ	0xFEE
  5053                           fsr0h	equ	0xFEA
  5054                           fsr0l	equ	0xFE9
  5055                           wreg	equ	0xFE8
  5056                           indf1	equ	0xFE7
  5057                           fsr1h	equ	0xFE2
  5058                           fsr1l	equ	0xFE1
  5059                           bsr	equ	0xFE0
  5060                           indf2	equ	0xFDF
  5061                           postinc2	equ	0xFDE
  5062                           postdec2	equ	0xFDD
  5063                           fsr2h	equ	0xFDA
  5064                           fsr2l	equ	0xFD9
  5065                           status	equ	0xFD8
  5066                           
  5067 ;; *************** function _SleepIfOkay *****************
  5068 ;; Defined at:
  5069 ;;		line 228 in file "../src/messages.c"
  5070 ;; Parameters:    Size  Location     Type
  5071 ;;		None
  5072 ;; Auto vars:     Size  Location     Type
  5073 ;;		None
  5074 ;; Return value:  Size  Location     Type
  5075 ;;		None               void
  5076 ;; Registers used:
  5077 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5078 ;; Tracked objects:
  5079 ;;		On entry : 0/0
  5080 ;;		On exit  : 0/0
  5081 ;;		Unchanged: 0/0
  5082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5083 ;;      Params:         0       0       0       0       0
  5084 ;;      Locals:         0       0       0       0       0
  5085 ;;      Temps:          0       0       0       0       0
  5086 ;;      Totals:         0       0       0       0       0
  5087 ;;Total ram usage:        0 bytes
  5088 ;; Hardware stack levels used:    1
  5089 ;; Hardware stack levels required when called:    2
  5090 ;; This function calls:
  5091 ;;		_enter_sleep_mode
  5092 ;;		i2_in_high_int
  5093 ;;		i2_in_low_int
  5094 ;;		i2_check_msg
  5095 ;; This function is called by:
  5096 ;;		_InterruptHandlerHigh
  5097 ;; This function uses a non-reentrant model
  5098 ;;
  5099                           
  5100                           	psect	text33
  5101  00154A                     __ptext33:
  5102                           	opt stack 0
  5103  00154A                     _SleepIfOkay:
  5104                           	opt stack 17
  5105                           
  5106                           ;messages.c: 230: if (MQ_Main_Willing_to_block == 0) {
  5107                           
  5108                           ;incstack = 0
  5109                           ;incstack = 0
  5110  00154A  6641               	tstfsz	_MQ_Main_Willing_to_block,c
  5111  00154C  D001               	goto	i2l2322
  5112  00154E  0012               	return	
  5113  001550                     i2l2322:
  5114                           
  5115                           ;messages.c: 232: }
  5116                           ;messages.c: 235: if (in_low_int()) {
  5117  001550  ECFF  F00B         	call	i2_in_low_int	;wreg free
  5118  001554  5033               	movf	?i2_in_low_int+1,w,c
  5119  001556  1032               	iorwf	?i2_in_low_int,w,c
  5120  001558  A4D8               	btfss	status,2,c
  5121  00155A  0012               	return	
  5122                           
  5123                           ;messages.c: 237: }
  5124                           ;messages.c: 240: if (!in_high_int()) {
  5125                           
  5126                           ;messages.c: 236: return;
  5127  00155C  EC23  F00D         	call	i2_in_high_int	;wreg free
  5128  001560  5031               	movf	?i2_in_high_int+1,w,c
  5129  001562  1030               	iorwf	?i2_in_high_int,w,c
  5130  001564  B4D8               	btfsc	status,2,c
  5131  001566  0012               	return	
  5132                           
  5133                           ;messages.c: 242: }
  5134                           ;messages.c: 247: if (check_msg(&ToMainHigh_MQ)) {
  5135                           
  5136                           ;messages.c: 241: return;
  5137  001568  0101               	movlb	1	; () banked
  5138  00156A  0E01               	movlw	high _ToMainHigh_MQ
  5139  00156C  6E31               	movwf	?i2_check_msg+1,c
  5140  00156E  0101               	movlb	1	; () banked
  5141  001570  0E6C               	movlw	low _ToMainHigh_MQ
  5142  001572  6E30               	movwf	?i2_check_msg,c
  5143  001574  ECBC  F00C         	call	i2_check_msg	;wreg free
  5144  001578  0900               	iorlw	0
  5145  00157A  A4D8               	btfss	status,2,c
  5146  00157C  0012               	return	
  5147                           
  5148                           ;messages.c: 249: }
  5149                           ;messages.c: 250: if (check_msg(&ToMainLow_MQ)) {
  5150                           
  5151                           ;messages.c: 248: return;
  5152  00157E  0101               	movlb	1	; () banked
  5153  001580  0E01               	movlw	high _ToMainLow_MQ
  5154  001582  6E31               	movwf	?i2_check_msg+1,c
  5155  001584  0101               	movlb	1	; () banked
  5156  001586  0EA2               	movlw	low _ToMainLow_MQ
  5157  001588  6E30               	movwf	?i2_check_msg,c
  5158  00158A  ECBC  F00C         	call	i2_check_msg	;wreg free
  5159  00158E  0900               	iorlw	0
  5160  001590  B4D8               	btfsc	status,2,c
  5161                           
  5162                           ;messages.c: 252: }
  5163                           ;messages.c: 253: enter_sleep_mode();
  5164                           
  5165                           ;messages.c: 251: return;
  5166  001592  EC37  F00D         	call	_enter_sleep_mode	;wreg free
  5167  001596  0012               	return	
  5168  001598                     __end_of_SleepIfOkay:
  5169                           	opt stack 0
  5170                           pclatu	equ	0xFFB
  5171                           pclath	equ	0xFFA
  5172                           tblptru	equ	0xFF8
  5173                           tblptrh	equ	0xFF7
  5174                           tblptrl	equ	0xFF6
  5175                           tablat	equ	0xFF5
  5176                           prodh	equ	0xFF4
  5177                           prodl	equ	0xFF3
  5178                           intcon	equ	0xFF2
  5179                           postinc0	equ	0xFEE
  5180                           fsr0h	equ	0xFEA
  5181                           fsr0l	equ	0xFE9
  5182                           wreg	equ	0xFE8
  5183                           indf1	equ	0xFE7
  5184                           fsr1h	equ	0xFE2
  5185                           fsr1l	equ	0xFE1
  5186                           bsr	equ	0xFE0
  5187                           indf2	equ	0xFDF
  5188                           postinc2	equ	0xFDE
  5189                           postdec2	equ	0xFDD
  5190                           fsr2h	equ	0xFDA
  5191                           fsr2l	equ	0xFD9
  5192                           status	equ	0xFD8
  5193                           
  5194 ;; *************** function i2_check_msg *****************
  5195 ;; Defined at:
  5196 ;;		line 222 in file "../src/messages.c"
  5197 ;; Parameters:    Size  Location     Type
  5198 ;;  check_msg       2   47[COMRAM] PTR struct __msg_queue
  5199 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5200 ;; Auto vars:     Size  Location     Type
  5201 ;;		None
  5202 ;; Return value:  Size  Location     Type
  5203 ;;                  1    wreg      unsigned char 
  5204 ;; Registers used:
  5205 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5206 ;; Tracked objects:
  5207 ;;		On entry : 0/0
  5208 ;;		On exit  : 0/0
  5209 ;;		Unchanged: 0/0
  5210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5211 ;;      Params:         2       0       0       0       0
  5212 ;;      Locals:         0       0       0       0       0
  5213 ;;      Temps:          1       0       0       0       0
  5214 ;;      Totals:         3       0       0       0       0
  5215 ;;Total ram usage:        3 bytes
  5216 ;; Hardware stack levels used:    1
  5217 ;; This function calls:
  5218 ;;		Nothing
  5219 ;; This function is called by:
  5220 ;;		_SleepIfOkay
  5221 ;; This function uses a non-reentrant model
  5222 ;;
  5223                           
  5224                           	psect	text34
  5225  001978                     __ptext34:
  5226                           	opt stack 0
  5227  001978                     i2_check_msg:
  5228                           	opt stack 18
  5229                           
  5230                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
  5231                           
  5232                           ;incstack = 0
  5233                           ;incstack = 0
  5234  001978  EE20 F035          	lfsr	2,53
  5235  00197C  5030               	movf	i2check_msg@qptr,w,c
  5236  00197E  26D9               	addwf	fsr2l,f,c
  5237  001980  5031               	movf	i2check_msg@qptr+1,w,c
  5238  001982  22DA               	addwfc	fsr2h,f,c
  5239  001984  50DF               	movf	indf2,w,c
  5240  001986  6E32               	movwf	??i2_check_msg& (0+255),c
  5241  001988  5032               	movf	??i2_check_msg,w,c
  5242  00198A  0D0D               	mullw	13
  5243  00198C  50F3               	movf	prodl,w,c
  5244  00198E  2430               	addwf	i2check_msg@qptr,w,c
  5245  001990  6ED9               	movwf	fsr2l,c
  5246  001992  50F4               	movf	prodh,w,c
  5247  001994  2031               	addwfc	i2check_msg@qptr+1,w,c
  5248  001996  6EDA               	movwf	fsr2h,c
  5249  001998  50DF               	movf	indf2,w,c
  5250  00199A  0012               	return	
  5251  00199C                     __end_ofi2_check_msg:
  5252                           	opt stack 0
  5253                           pclatu	equ	0xFFB
  5254                           pclath	equ	0xFFA
  5255                           tblptru	equ	0xFF8
  5256                           tblptrh	equ	0xFF7
  5257                           tblptrl	equ	0xFF6
  5258                           tablat	equ	0xFF5
  5259                           prodh	equ	0xFF4
  5260                           prodl	equ	0xFF3
  5261                           intcon	equ	0xFF2
  5262                           postinc0	equ	0xFEE
  5263                           fsr0h	equ	0xFEA
  5264                           fsr0l	equ	0xFE9
  5265                           wreg	equ	0xFE8
  5266                           indf1	equ	0xFE7
  5267                           fsr1h	equ	0xFE2
  5268                           fsr1l	equ	0xFE1
  5269                           bsr	equ	0xFE0
  5270                           indf2	equ	0xFDF
  5271                           postinc2	equ	0xFDE
  5272                           postdec2	equ	0xFDD
  5273                           fsr2h	equ	0xFDA
  5274                           fsr2l	equ	0xFD9
  5275                           status	equ	0xFD8
  5276                           
  5277 ;; *************** function i2_in_low_int *****************
  5278 ;; Defined at:
  5279 ;;		line 33 in file "../src/interrupts.c"
  5280 ;; Parameters:    Size  Location     Type
  5281 ;;		None
  5282 ;; Auto vars:     Size  Location     Type
  5283 ;;		None
  5284 ;; Return value:  Size  Location     Type
  5285 ;;                  2   49[COMRAM] int 
  5286 ;; Registers used:
  5287 ;;		wreg, status,2, status,0, cstack
  5288 ;; Tracked objects:
  5289 ;;		On entry : 0/0
  5290 ;;		On exit  : 0/0
  5291 ;;		Unchanged: 0/0
  5292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5293 ;;      Params:         2       0       0       0       0
  5294 ;;      Locals:         0       0       0       0       0
  5295 ;;      Temps:          0       0       0       0       0
  5296 ;;      Totals:         2       0       0       0       0
  5297 ;;Total ram usage:        2 bytes
  5298 ;; Hardware stack levels used:    1
  5299 ;; Hardware stack levels required when called:    1
  5300 ;; This function calls:
  5301 ;;		i2_in_high_int
  5302 ;; This function is called by:
  5303 ;;		_SleepIfOkay
  5304 ;; This function uses a non-reentrant model
  5305 ;;
  5306                           
  5307                           	psect	text35
  5308  0017FE                     __ptext35:
  5309                           	opt stack 0
  5310  0017FE                     i2_in_low_int:
  5311                           	opt stack 17
  5312                           
  5313                           ;interrupts.c: 34: if (INTCONbits.GIEL == 1) {
  5314                           
  5315                           ;incstack = 0
  5316                           ;incstack = 0
  5317  0017FE  ACF2               	btfss	intcon,6,c	;volatile
  5318  001800  D005               	goto	i2l2694
  5319                           
  5320                           ;interrupts.c: 35: return (0);
  5321  001802  0E00               	movlw	0
  5322  001804  6E33               	movwf	?i2_in_low_int+1,c
  5323  001806  0E00               	movlw	0
  5324  001808  6E32               	movwf	?i2_in_low_int,c
  5325  00180A  0012               	return	
  5326  00180C                     i2l2694:
  5327  00180C  EC23  F00D         	call	i2_in_high_int	;wreg free
  5328  001810  5031               	movf	?i2_in_high_int+1,w,c
  5329  001812  1030               	iorwf	?i2_in_high_int,w,c
  5330  001814  B4D8               	btfsc	status,2,c
  5331  001816  D005               	goto	i2l2702
  5332                           
  5333                           ;interrupts.c: 37: return (0);
  5334  001818  0E00               	movlw	0
  5335  00181A  6E33               	movwf	?i2_in_low_int+1,c
  5336  00181C  0E00               	movlw	0
  5337  00181E  6E32               	movwf	?i2_in_low_int,c
  5338  001820  0012               	return	
  5339  001822                     i2l2702:
  5340                           
  5341                           ;interrupts.c: 39: return (1);
  5342  001822  0E00               	movlw	0
  5343  001824  6E33               	movwf	?i2_in_low_int+1,c
  5344  001826  0E01               	movlw	1
  5345  001828  6E32               	movwf	?i2_in_low_int,c
  5346  00182A  0012               	return	
  5347  00182C                     __end_ofi2_in_low_int:
  5348                           	opt stack 0
  5349                           pclatu	equ	0xFFB
  5350                           pclath	equ	0xFFA
  5351                           tblptru	equ	0xFF8
  5352                           tblptrh	equ	0xFF7
  5353                           tblptrl	equ	0xFF6
  5354                           tablat	equ	0xFF5
  5355                           prodh	equ	0xFF4
  5356                           prodl	equ	0xFF3
  5357                           intcon	equ	0xFF2
  5358                           postinc0	equ	0xFEE
  5359                           fsr0h	equ	0xFEA
  5360                           fsr0l	equ	0xFE9
  5361                           wreg	equ	0xFE8
  5362                           indf1	equ	0xFE7
  5363                           fsr1h	equ	0xFE2
  5364                           fsr1l	equ	0xFE1
  5365                           bsr	equ	0xFE0
  5366                           indf2	equ	0xFDF
  5367                           postinc2	equ	0xFDE
  5368                           postdec2	equ	0xFDD
  5369                           fsr2h	equ	0xFDA
  5370                           fsr2l	equ	0xFD9
  5371                           status	equ	0xFD8
  5372                           
  5373 ;; *************** function i2_in_high_int *****************
  5374 ;; Defined at:
  5375 ;;		line 25 in file "../src/interrupts.c"
  5376 ;; Parameters:    Size  Location     Type
  5377 ;;		None
  5378 ;; Auto vars:     Size  Location     Type
  5379 ;;		None
  5380 ;; Return value:  Size  Location     Type
  5381 ;;                  2   47[COMRAM] int 
  5382 ;; Registers used:
  5383 ;;		wreg, status,2
  5384 ;; Tracked objects:
  5385 ;;		On entry : 0/0
  5386 ;;		On exit  : 0/0
  5387 ;;		Unchanged: 0/0
  5388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5389 ;;      Params:         2       0       0       0       0
  5390 ;;      Locals:         0       0       0       0       0
  5391 ;;      Temps:          0       0       0       0       0
  5392 ;;      Totals:         2       0       0       0       0
  5393 ;;Total ram usage:        2 bytes
  5394 ;; Hardware stack levels used:    1
  5395 ;; This function calls:
  5396 ;;		Nothing
  5397 ;; This function is called by:
  5398 ;;		_SleepIfOkay
  5399 ;;		i2_in_low_int
  5400 ;; This function uses a non-reentrant model
  5401 ;;
  5402                           
  5403                           	psect	text36
  5404  001A46                     __ptext36:
  5405                           	opt stack 0
  5406  001A46                     i2_in_high_int:
  5407                           	opt stack 17
  5408                           
  5409                           ;interrupts.c: 26: return (!INTCONbits.GIEH);
  5410                           
  5411                           ;incstack = 0
  5412                           ;incstack = 0
  5413  001A46  0E00               	movlw	0
  5414  001A48  AEF2               	btfss	intcon,7,c	;volatile
  5415  001A4A  0E01               	movlw	1
  5416  001A4C  6E30               	movwf	?i2_in_high_int,c
  5417  001A4E  6A31               	clrf	?i2_in_high_int+1,c
  5418  001A50  0012               	return	
  5419  001A52                     __end_ofi2_in_high_int:
  5420                           	opt stack 0
  5421                           pclatu	equ	0xFFB
  5422                           pclath	equ	0xFFA
  5423                           tblptru	equ	0xFF8
  5424                           tblptrh	equ	0xFF7
  5425                           tblptrl	equ	0xFF6
  5426                           tablat	equ	0xFF5
  5427                           prodh	equ	0xFF4
  5428                           prodl	equ	0xFF3
  5429                           intcon	equ	0xFF2
  5430                           postinc0	equ	0xFEE
  5431                           fsr0h	equ	0xFEA
  5432                           fsr0l	equ	0xFE9
  5433                           wreg	equ	0xFE8
  5434                           indf1	equ	0xFE7
  5435                           fsr1h	equ	0xFE2
  5436                           fsr1l	equ	0xFE1
  5437                           bsr	equ	0xFE0
  5438                           indf2	equ	0xFDF
  5439                           postinc2	equ	0xFDE
  5440                           postdec2	equ	0xFDD
  5441                           fsr2h	equ	0xFDA
  5442                           fsr2l	equ	0xFD9
  5443                           status	equ	0xFD8
  5444                           
  5445 ;; *************** function _enter_sleep_mode *****************
  5446 ;; Defined at:
  5447 ;;		line 202 in file "../src/messages.c"
  5448 ;; Parameters:    Size  Location     Type
  5449 ;;		None
  5450 ;; Auto vars:     Size  Location     Type
  5451 ;;		None
  5452 ;; Return value:  Size  Location     Type
  5453 ;;		None               void
  5454 ;; Registers used:
  5455 ;;		None
  5456 ;; Tracked objects:
  5457 ;;		On entry : 0/0
  5458 ;;		On exit  : 0/0
  5459 ;;		Unchanged: 0/0
  5460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5461 ;;      Params:         0       0       0       0       0
  5462 ;;      Locals:         0       0       0       0       0
  5463 ;;      Temps:          0       0       0       0       0
  5464 ;;      Totals:         0       0       0       0       0
  5465 ;;Total ram usage:        0 bytes
  5466 ;; Hardware stack levels used:    1
  5467 ;; This function calls:
  5468 ;;		Nothing
  5469 ;; This function is called by:
  5470 ;;		_SleepIfOkay
  5471 ;; This function uses a non-reentrant model
  5472 ;;
  5473                           
  5474                           	psect	text37
  5475  001A6E                     __ptext37:
  5476                           	opt stack 0
  5477  001A6E                     _enter_sleep_mode:
  5478                           	opt stack 18
  5479                           
  5480                           ;messages.c: 204: OSCCONbits.IDLEN = 1;
  5481                           
  5482                           ;incstack = 0
  5483                           ;incstack = 0
  5484  001A6E  8ED3               	bsf	4051,7,c	;volatile
  5485  001A70  0003               	sleep		;# 
  5486  001A72  0012               	return	
  5487  001A74                     __end_of_enter_sleep_mode:
  5488                           	opt stack 0
  5489                           pclatu	equ	0xFFB
  5490                           pclath	equ	0xFFA
  5491                           tblptru	equ	0xFF8
  5492                           tblptrh	equ	0xFF7
  5493                           tblptrl	equ	0xFF6
  5494                           tablat	equ	0xFF5
  5495                           prodh	equ	0xFF4
  5496                           prodl	equ	0xFF3
  5497                           intcon	equ	0xFF2
  5498                           postinc0	equ	0xFEE
  5499                           fsr0h	equ	0xFEA
  5500                           fsr0l	equ	0xFE9
  5501                           wreg	equ	0xFE8
  5502                           indf1	equ	0xFE7
  5503                           fsr1h	equ	0xFE2
  5504                           fsr1l	equ	0xFE1
  5505                           bsr	equ	0xFE0
  5506                           indf2	equ	0xFDF
  5507                           postinc2	equ	0xFDE
  5508                           postdec2	equ	0xFDD
  5509                           fsr2h	equ	0xFDA
  5510                           fsr2l	equ	0xFD9
  5511                           status	equ	0xFD8
  5512                           
  5513 ;; *************** function _uart_rx_int_handler *****************
  5514 ;; Defined at:
  5515 ;;		line 61 in file "../src/user_interrupts.c"
  5516 ;; Parameters:    Size  Location     Type
  5517 ;;		None
  5518 ;; Auto vars:     Size  Location     Type
  5519 ;;  x               2   48[COMRAM] int 
  5520 ;; Return value:  Size  Location     Type
  5521 ;;		None               void
  5522 ;; Registers used:
  5523 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5524 ;; Tracked objects:
  5525 ;;		On entry : 0/0
  5526 ;;		On exit  : 0/0
  5527 ;;		Unchanged: 0/0
  5528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5529 ;;      Params:         0       0       0       0       0
  5530 ;;      Locals:         2       0       0       0       0
  5531 ;;      Temps:          0       0       0       0       0
  5532 ;;      Totals:         2       0       0       0       0
  5533 ;;Total ram usage:        2 bytes
  5534 ;; Hardware stack levels used:    1
  5535 ;; Hardware stack levels required when called:    1
  5536 ;; This function calls:
  5537 ;;		_ReadUSART
  5538 ;; This function is called by:
  5539 ;;		_InterruptHandlerHigh
  5540 ;; This function uses a non-reentrant model
  5541 ;;
  5542                           
  5543                           	psect	text38
  5544  001728                     __ptext38:
  5545                           	opt stack 0
  5546  001728                     _uart_rx_int_handler:
  5547                           	opt stack 18
  5548                           
  5549                           ;user_interrupts.c: 62: testbuffer[counter2] = ReadUSART();
  5550                           
  5551                           ;incstack = 0
  5552                           ;incstack = 0
  5553  001728  0102               	movlb	2	; () banked
  5554  00172A  0E00               	movlw	low _testbuffer
  5555  00172C  2439               	addwf	_counter2,w,c
  5556  00172E  6ED9               	movwf	fsr2l,c
  5557  001730  0102               	movlb	2	; () banked
  5558  001732  0E02               	movlw	high _testbuffer
  5559  001734  203A               	addwfc	_counter2+1,w,c
  5560  001736  6EDA               	movwf	fsr2h,c
  5561  001738  ECDF  F00C         	call	_ReadUSART	;wreg free
  5562  00173C  6EDF               	movwf	indf2,c
  5563                           
  5564                           ;user_interrupts.c: 64: counter2++;
  5565  00173E  4A39               	infsnz	_counter2,f,c
  5566  001740  2A3A               	incf	_counter2+1,f,c
  5567                           
  5568                           ;user_interrupts.c: 65: if(counter2 == 49)
  5569  001742  5039               	movf	_counter2,w,c
  5570  001744  0A31               	xorlw	49
  5571  001746  103A               	iorwf	_counter2+1,w,c
  5572  001748  A4D8               	btfss	status,2,c
  5573  00174A  0012               	return	
  5574                           
  5575                           ;user_interrupts.c: 66: {
  5576                           ;user_interrupts.c: 68: int x = 5;
  5577  00174C  0E00               	movlw	0
  5578  00174E  6E32               	movwf	uart_rx_int_handler@x+1,c
  5579  001750  0E05               	movlw	5
  5580  001752  6E31               	movwf	uart_rx_int_handler@x,c
  5581                           
  5582                           ;user_interrupts.c: 69: ADCValue++;
  5583  001754  4A37               	infsnz	_ADCValue,f,c
  5584  001756  2A38               	incf	_ADCValue+1,f,c
  5585                           
  5586                           ;user_interrupts.c: 70: counter2 = 0;
  5587  001758  0E00               	movlw	0
  5588  00175A  6E3A               	movwf	_counter2+1,c
  5589  00175C  0E00               	movlw	0
  5590  00175E  6E39               	movwf	_counter2,c
  5591  001760  0012               	return	
  5592  001762                     __end_of_uart_rx_int_handler:
  5593                           	opt stack 0
  5594                           pclatu	equ	0xFFB
  5595                           pclath	equ	0xFFA
  5596                           tblptru	equ	0xFF8
  5597                           tblptrh	equ	0xFF7
  5598                           tblptrl	equ	0xFF6
  5599                           tablat	equ	0xFF5
  5600                           prodh	equ	0xFF4
  5601                           prodl	equ	0xFF3
  5602                           intcon	equ	0xFF2
  5603                           postinc0	equ	0xFEE
  5604                           fsr0h	equ	0xFEA
  5605                           fsr0l	equ	0xFE9
  5606                           wreg	equ	0xFE8
  5607                           indf1	equ	0xFE7
  5608                           fsr1h	equ	0xFE2
  5609                           fsr1l	equ	0xFE1
  5610                           bsr	equ	0xFE0
  5611                           indf2	equ	0xFDF
  5612                           postinc2	equ	0xFDE
  5613                           postdec2	equ	0xFDD
  5614                           fsr2h	equ	0xFDA
  5615                           fsr2l	equ	0xFD9
  5616                           status	equ	0xFD8
  5617                           
  5618 ;; *************** function _ReadUSART *****************
  5619 ;; Defined at:
  5620 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic18\plib\USART\uread.c"
  5621 ;; Parameters:    Size  Location     Type
  5622 ;;		None
  5623 ;; Auto vars:     Size  Location     Type
  5624 ;;  data            1   47[COMRAM] unsigned char 
  5625 ;; Return value:  Size  Location     Type
  5626 ;;                  1    wreg      unsigned char 
  5627 ;; Registers used:
  5628 ;;		wreg, status,2, status,0
  5629 ;; Tracked objects:
  5630 ;;		On entry : 0/0
  5631 ;;		On exit  : 0/0
  5632 ;;		Unchanged: 0/0
  5633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5634 ;;      Params:         0       0       0       0       0
  5635 ;;      Locals:         1       0       0       0       0
  5636 ;;      Temps:          0       0       0       0       0
  5637 ;;      Totals:         1       0       0       0       0
  5638 ;;Total ram usage:        1 bytes
  5639 ;; Hardware stack levels used:    1
  5640 ;; This function calls:
  5641 ;;		Nothing
  5642 ;; This function is called by:
  5643 ;;		_uart_rx_int_handler
  5644 ;;		_uart_recv_int_handler
  5645 ;; This function uses a non-reentrant model
  5646 ;;
  5647                           
  5648                           	psect	text39
  5649  0019BE                     __ptext39:
  5650                           	opt stack 0
  5651  0019BE                     _ReadUSART:
  5652                           	opt stack 18
  5653                           
  5654                           ;incstack = 0
  5655                           ;incstack = 0
  5656  0019BE  0EF2               	movlw	242
  5657  0019C0  1642               	andwf	_USART_Status,f,c
  5658  0019C2  ACAB               	btfss	4011,6,c	;volatile
  5659  0019C4  D003               	goto	i2l480
  5660  0019C6  9042               	bcf	_USART_Status,0,c
  5661  0019C8  B0AB               	btfsc	4011,0,c	;volatile
  5662  0019CA  8042               	bsf	_USART_Status,0,c
  5663  0019CC                     i2l480:
  5664  0019CC  B4AB               	btfsc	4011,2,c	;volatile
  5665  0019CE  8442               	bsf	_USART_Status,2,c
  5666  0019D0  B2AB               	btfsc	4011,1,c	;volatile
  5667  0019D2  8642               	bsf	_USART_Status,3,c
  5668  0019D4  CFAE F030          	movff	4014,ReadUSART@data	;volatile
  5669  0019D8  5030               	movf	ReadUSART@data,w,c
  5670  0019DA  0012               	return	
  5671  0019DC                     __end_of_ReadUSART:
  5672                           	opt stack 0
  5673                           pclatu	equ	0xFFB
  5674                           pclath	equ	0xFFA
  5675                           tblptru	equ	0xFF8
  5676                           tblptrh	equ	0xFF7
  5677                           tblptrl	equ	0xFF6
  5678                           tablat	equ	0xFF5
  5679                           prodh	equ	0xFF4
  5680                           prodl	equ	0xFF3
  5681                           intcon	equ	0xFF2
  5682                           postinc0	equ	0xFEE
  5683                           fsr0h	equ	0xFEA
  5684                           fsr0l	equ	0xFE9
  5685                           wreg	equ	0xFE8
  5686                           indf1	equ	0xFE7
  5687                           fsr1h	equ	0xFE2
  5688                           fsr1l	equ	0xFE1
  5689                           bsr	equ	0xFE0
  5690                           indf2	equ	0xFDF
  5691                           postinc2	equ	0xFDE
  5692                           postdec2	equ	0xFDD
  5693                           fsr2h	equ	0xFDA
  5694                           fsr2l	equ	0xFD9
  5695                           status	equ	0xFD8
  5696                           
  5697 ;; *************** function _adc_int_handler *****************
  5698 ;; Defined at:
  5699 ;;		line 89 in file "../src/user_interrupts.c"
  5700 ;; Parameters:    Size  Location     Type
  5701 ;;		None
  5702 ;; Auto vars:     Size  Location     Type
  5703 ;;		None
  5704 ;; Return value:  Size  Location     Type
  5705 ;;		None               void
  5706 ;; Registers used:
  5707 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  5708 ;; Tracked objects:
  5709 ;;		On entry : 0/0
  5710 ;;		On exit  : 0/0
  5711 ;;		Unchanged: 0/0
  5712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5713 ;;      Params:         0       0       0       0       0
  5714 ;;      Locals:         0       0       0       0       0
  5715 ;;      Temps:          0       0       0       0       0
  5716 ;;      Totals:         0       0       0       0       0
  5717 ;;Total ram usage:        0 bytes
  5718 ;; Hardware stack levels used:    1
  5719 ;; Hardware stack levels required when called:    1
  5720 ;; This function calls:
  5721 ;;		_ReadADC
  5722 ;;		_CloseTimer1
  5723 ;; This function is called by:
  5724 ;;		_InterruptHandlerHigh
  5725 ;; This function uses a non-reentrant model
  5726 ;;
  5727                           
  5728                           	psect	text40
  5729  0017CE                     __ptext40:
  5730                           	opt stack 0
  5731  0017CE                     _adc_int_handler:
  5732                           	opt stack 18
  5733                           
  5734                           ;user_interrupts.c: 91: ADCValue = ReadADC();
  5735                           
  5736                           ;incstack = 0
  5737                           ;incstack = 0
  5738  0017CE  EC2E  F00D         	call	_ReadADC	;wreg free
  5739  0017D2  C030  F037         	movff	?_ReadADC,_ADCValue
  5740  0017D6  C031  F038         	movff	?_ReadADC+1,_ADCValue+1
  5741                           
  5742                           ;user_interrupts.c: 98: if(counter2 < 299)
  5743  0017DA  503A               	movf	_counter2+1,w,c
  5744  0017DC  0A80               	xorlw	128
  5745  0017DE  0F7F               	addlw	-129
  5746  0017E0  0E2B               	movlw	43
  5747  0017E2  B4D8               	btfsc	status,2,c
  5748  0017E4  5C39               	subwf	_counter2,w,c
  5749  0017E6  B0D8               	btfsc	status,0,c
  5750  0017E8  D003               	goto	i2l1322
  5751                           
  5752                           ;user_interrupts.c: 99: counter2++;
  5753  0017EA  4A39               	infsnz	_counter2,f,c
  5754  0017EC  2A3A               	incf	_counter2+1,f,c
  5755  0017EE  0012               	return	
  5756  0017F0                     i2l1322:
  5757                           
  5758                           ;user_interrupts.c: 100: else
  5759                           ;user_interrupts.c: 101: {
  5760                           ;user_interrupts.c: 102: counter2 = 0;
  5761  0017F0  0E00               	movlw	0
  5762  0017F2  6E3A               	movwf	_counter2+1,c
  5763  0017F4  0E00               	movlw	0
  5764  0017F6  6E39               	movwf	_counter2,c
  5765                           
  5766                           ;user_interrupts.c: 103: CloseTimer1();
  5767  0017F8  EC3A  F00D         	call	_CloseTimer1	;wreg free
  5768  0017FC  0012               	return	
  5769  0017FE                     __end_of_adc_int_handler:
  5770                           	opt stack 0
  5771                           pclatu	equ	0xFFB
  5772                           pclath	equ	0xFFA
  5773                           tblptru	equ	0xFF8
  5774                           tblptrh	equ	0xFF7
  5775                           tblptrl	equ	0xFF6
  5776                           tablat	equ	0xFF5
  5777                           prodh	equ	0xFF4
  5778                           prodl	equ	0xFF3
  5779                           intcon	equ	0xFF2
  5780                           postinc0	equ	0xFEE
  5781                           fsr0h	equ	0xFEA
  5782                           fsr0l	equ	0xFE9
  5783                           wreg	equ	0xFE8
  5784                           indf1	equ	0xFE7
  5785                           fsr1h	equ	0xFE2
  5786                           fsr1l	equ	0xFE1
  5787                           bsr	equ	0xFE0
  5788                           indf2	equ	0xFDF
  5789                           postinc2	equ	0xFDE
  5790                           postdec2	equ	0xFDD
  5791                           fsr2h	equ	0xFDA
  5792                           fsr2l	equ	0xFD9
  5793                           status	equ	0xFD8
  5794                           
  5795 ;; *************** function _CloseTimer1 *****************
  5796 ;; Defined at:
  5797 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic18\plib\Timers\t1close.c"
  5798 ;; Parameters:    Size  Location     Type
  5799 ;;		None
  5800 ;; Auto vars:     Size  Location     Type
  5801 ;;		None
  5802 ;; Return value:  Size  Location     Type
  5803 ;;		None               void
  5804 ;; Registers used:
  5805 ;;		None
  5806 ;; Tracked objects:
  5807 ;;		On entry : 0/0
  5808 ;;		On exit  : 0/0
  5809 ;;		Unchanged: 0/0
  5810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5811 ;;      Params:         0       0       0       0       0
  5812 ;;      Locals:         0       0       0       0       0
  5813 ;;      Temps:          0       0       0       0       0
  5814 ;;      Totals:         0       0       0       0       0
  5815 ;;Total ram usage:        0 bytes
  5816 ;; Hardware stack levels used:    1
  5817 ;; This function calls:
  5818 ;;		Nothing
  5819 ;; This function is called by:
  5820 ;;		_adc_int_handler
  5821 ;; This function uses a non-reentrant model
  5822 ;;
  5823                           
  5824                           	psect	text41
  5825  001A74                     __ptext41:
  5826                           	opt stack 0
  5827  001A74                     _CloseTimer1:
  5828                           	opt stack 18
  5829                           
  5830                           ;incstack = 0
  5831                           ;incstack = 0
  5832  001A74  90CD               	bcf	4045,0,c	;volatile
  5833  001A76  909D               	bcf	3997,0,c	;volatile
  5834  001A78  0012               	return	
  5835  001A7A                     __end_of_CloseTimer1:
  5836                           	opt stack 0
  5837                           pclatu	equ	0xFFB
  5838                           pclath	equ	0xFFA
  5839                           tblptru	equ	0xFF8
  5840                           tblptrh	equ	0xFF7
  5841                           tblptrl	equ	0xFF6
  5842                           tablat	equ	0xFF5
  5843                           prodh	equ	0xFF4
  5844                           prodl	equ	0xFF3
  5845                           intcon	equ	0xFF2
  5846                           postinc0	equ	0xFEE
  5847                           fsr0h	equ	0xFEA
  5848                           fsr0l	equ	0xFE9
  5849                           wreg	equ	0xFE8
  5850                           indf1	equ	0xFE7
  5851                           fsr1h	equ	0xFE2
  5852                           fsr1l	equ	0xFE1
  5853                           bsr	equ	0xFE0
  5854                           indf2	equ	0xFDF
  5855                           postinc2	equ	0xFDE
  5856                           postdec2	equ	0xFDD
  5857                           fsr2h	equ	0xFDA
  5858                           fsr2l	equ	0xFD9
  5859                           status	equ	0xFD8
  5860                           
  5861 ;; *************** function _ReadADC *****************
  5862 ;; Defined at:
  5863 ;;		line 25 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic18\plib\ADC\adcread.c"
  5864 ;; Parameters:    Size  Location     Type
  5865 ;;		None
  5866 ;; Auto vars:     Size  Location     Type
  5867 ;;		None
  5868 ;; Return value:  Size  Location     Type
  5869 ;;                  2   47[COMRAM] int 
  5870 ;; Registers used:
  5871 ;;		wreg, status,2
  5872 ;; Tracked objects:
  5873 ;;		On entry : 0/0
  5874 ;;		On exit  : 0/0
  5875 ;;		Unchanged: 0/0
  5876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5877 ;;      Params:         2       0       0       0       0
  5878 ;;      Locals:         0       0       0       0       0
  5879 ;;      Temps:          0       0       0       0       0
  5880 ;;      Totals:         2       0       0       0       0
  5881 ;;Total ram usage:        2 bytes
  5882 ;; Hardware stack levels used:    1
  5883 ;; This function calls:
  5884 ;;		Nothing
  5885 ;; This function is called by:
  5886 ;;		_adc_int_handler
  5887 ;; This function uses a non-reentrant model
  5888 ;;
  5889                           
  5890                           	psect	text42
  5891  001A5C                     __ptext42:
  5892                           	opt stack 0
  5893  001A5C                     _ReadADC:
  5894                           	opt stack 18
  5895                           
  5896                           ;incstack = 0
  5897                           ;incstack = 0
  5898  001A5C  50C4               	movf	4036,w,c	;volatile
  5899  001A5E  6E31               	movwf	?_ReadADC+1,c
  5900  001A60  50C3               	movf	4035,w,c	;volatile
  5901  001A62  6E30               	movwf	?_ReadADC,c
  5902  001A64  0012               	return	
  5903  001A66                     __end_of_ReadADC:
  5904                           	opt stack 0
  5905                           pclatu	equ	0xFFB
  5906                           pclath	equ	0xFFA
  5907                           tblptru	equ	0xFF8
  5908                           tblptrh	equ	0xFF7
  5909                           tblptrl	equ	0xFF6
  5910                           tablat	equ	0xFF5
  5911                           prodh	equ	0xFF4
  5912                           prodl	equ	0xFF3
  5913                           intcon	equ	0xFF2
  5914                           postinc0	equ	0xFEE
  5915                           fsr0h	equ	0xFEA
  5916                           fsr0l	equ	0xFE9
  5917                           wreg	equ	0xFE8
  5918                           indf1	equ	0xFE7
  5919                           fsr1h	equ	0xFE2
  5920                           fsr1l	equ	0xFE1
  5921                           bsr	equ	0xFE0
  5922                           indf2	equ	0xFDF
  5923                           postinc2	equ	0xFDE
  5924                           postdec2	equ	0xFDD
  5925                           fsr2h	equ	0xFDA
  5926                           fsr2l	equ	0xFD9
  5927                           status	equ	0xFD8
  5928                           
  5929 ;; *************** function _timer0_int_handler *****************
  5930 ;; Defined at:
  5931 ;;		line 19 in file "../src/user_interrupts.c"
  5932 ;; Parameters:    Size  Location     Type
  5933 ;;		None
  5934 ;; Auto vars:     Size  Location     Type
  5935 ;;  val             2   29[BANK0 ] unsigned int 
  5936 ;;  msgtype         2   27[BANK0 ] int 
  5937 ;;  length          2   25[BANK0 ] int 
  5938 ;; Return value:  Size  Location     Type
  5939 ;;		None               void
  5940 ;; Registers used:
  5941 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5942 ;; Tracked objects:
  5943 ;;		On entry : 0/0
  5944 ;;		On exit  : 0/0
  5945 ;;		Unchanged: 0/0
  5946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5947 ;;      Params:         0       0       0       0       0
  5948 ;;      Locals:         0       6       0       0       0
  5949 ;;      Temps:          0       2       0       0       0
  5950 ;;      Totals:         0       8       0       0       0
  5951 ;;Total ram usage:        8 bytes
  5952 ;; Hardware stack levels used:    1
  5953 ;; Hardware stack levels required when called:    3
  5954 ;; This function calls:
  5955 ;;		_ToMainHigh_sendmsg
  5956 ;;		_WriteTimer0
  5957 ;;		i2_FromMainHigh_recvmsg
  5958 ;; This function is called by:
  5959 ;;		_InterruptHandlerHigh
  5960 ;; This function uses a non-reentrant model
  5961 ;;
  5962                           
  5963                           	psect	text43
  5964  0010E4                     __ptext43:
  5965                           	opt stack 0
  5966  0010E4                     _timer0_int_handler:
  5967                           	opt stack 16
  5968                           
  5969                           ;user_interrupts.c: 20: unsigned int val;
  5970                           ;user_interrupts.c: 21: int length, msgtype;
  5971                           ;user_interrupts.c: 24: LATBbits.LATB0 = !LATBbits.LATB0;
  5972                           
  5973                           ;incstack = 0
  5974                           ;incstack = 0
  5975  0010E4  B08A               	btfsc	3978,0,c	;volatile
  5976  0010E6  D002               	goto	i2u230_40
  5977  0010E8  0E01               	movlw	1
  5978  0010EA  D001               	goto	i2u230_46
  5979  0010EC                     i2u230_40:
  5980  0010EC  0E00               	movlw	0
  5981  0010EE                     i2u230_46:
  5982  0010EE  0100               	movlb	0	; () banked
  5983  0010F0  6F97               	movwf	??_timer0_int_handler& (0+255),b
  5984  0010F2  508A               	movf	3978,w,c	;volatile
  5985  0010F4  0100               	movlb	0	; () banked
  5986  0010F6  1997               	xorwf	??_timer0_int_handler& (0+255),w,b
  5987  0010F8  0BFE               	andlw	-2
  5988  0010FA  1997               	xorwf	??_timer0_int_handler& (0+255),w,b
  5989  0010FC  6E8A               	movwf	3978,c	;volatile
  5990                           
  5991                           ; BSR set to: 0
  5992                           ;user_interrupts.c: 26: WriteTimer0(0);
  5993  0010FE  0E00               	movlw	0
  5994  001100  6E31               	movwf	?_WriteTimer0+1,c
  5995  001102  0E00               	movlw	0
  5996  001104  6E30               	movwf	?_WriteTimer0,c
  5997  001106  EC12  F00D         	call	_WriteTimer0	;wreg free
  5998                           
  5999                           ;user_interrupts.c: 28: length = FromMainHigh_recvmsg(sizeof(val), (unsigned char *)&msg
      +                          type, (void *) &val);
  6000  00110A  0100               	movlb	0	; () banked
  6001  00110C  6F97               	movwf	??_timer0_int_handler& (0+255),b
  6002  00110E  0E02               	movlw	2
  6003  001110  0100               	movlb	0	; () banked
  6004  001112  0100               	movlb	0	; () banked
  6005  001114  6F92               	movwf	?i2_FromMainHigh_recvmsg& (0+255),b
  6006  001116  0100               	movlb	0	; () banked
  6007  001118  5197               	movf	??_timer0_int_handler& (0+255),w,b
  6008  00111A  0100               	movlb	0	; () banked
  6009  00111C  0E00               	movlw	high timer0_int_handler@msgtype
  6010  00111E  0100               	movlb	0	; () banked
  6011  001120  0100               	movlb	0	; () banked
  6012  001122  6F94               	movwf	(?i2_FromMainHigh_recvmsg+2)& (0+255),b
  6013  001124  0100               	movlb	0	; () banked
  6014  001126  0E9B               	movlw	low timer0_int_handler@msgtype
  6015  001128  0100               	movlb	0	; () banked
  6016  00112A  6F93               	movwf	(?i2_FromMainHigh_recvmsg+1)& (0+255),b
  6017  00112C  0100               	movlb	0	; () banked
  6018  00112E  0E00               	movlw	high timer0_int_handler@val
  6019  001130  0100               	movlb	0	; () banked
  6020  001132  0100               	movlb	0	; () banked
  6021  001134  6F96               	movwf	(?i2_FromMainHigh_recvmsg+4)& (0+255),b
  6022  001136  0100               	movlb	0	; () banked
  6023  001138  0E9D               	movlw	low timer0_int_handler@val
  6024  00113A  0100               	movlb	0	; () banked
  6025  00113C  6F95               	movwf	(?i2_FromMainHigh_recvmsg+3)& (0+255),b
  6026  00113E  EC42  F00C         	call	i2_FromMainHigh_recvmsg	;wreg free
  6027  001142  0100               	movlb	0	; () banked
  6028  001144  0100               	movlb	0	; () banked
  6029  001146  6F99               	movwf	timer0_int_handler@length& (0+255),b
  6030  001148  0100               	movlb	0	; () banked
  6031  00114A  6B9A               	clrf	(timer0_int_handler@length+1)& (0+255),b
  6032  00114C  0100               	movlb	0	; () banked
  6033  00114E  BF99               	btfsc	timer0_int_handler@length& (0+255),7,b
  6034  001150  079A               	decf	(timer0_int_handler@length+1)& (0+255),f,b
  6035                           
  6036                           ; BSR set to: 0
  6037                           ;user_interrupts.c: 29: if (length == sizeof (val)) {
  6038  001152  0100               	movlb	0	; () banked
  6039  001154  0100               	movlb	0	; () banked
  6040  001156  5199               	movf	timer0_int_handler@length& (0+255),w,b
  6041  001158  0A02               	xorlw	2
  6042  00115A  119A               	iorwf	(timer0_int_handler@length+1)& (0+255),w,b
  6043  00115C  A4D8               	btfss	status,2,c
  6044  00115E  0012               	return	
  6045                           
  6046                           ; BSR set to: 0
  6047                           ;user_interrupts.c: 30: ToMainHigh_sendmsg(sizeof (val), 10, (void *) &val);
  6048  001160  0100               	movlb	0	; () banked
  6049  001162  6F97               	movwf	??_timer0_int_handler& (0+255),b
  6050  001164  0E02               	movlw	2
  6051  001166  0100               	movlb	0	; () banked
  6052  001168  0100               	movlb	0	; () banked
  6053  00116A  6F8F               	movwf	?_ToMainHigh_sendmsg& (0+255),b
  6054  00116C  0100               	movlb	0	; () banked
  6055  00116E  5197               	movf	??_timer0_int_handler& (0+255),w,b
  6056  001170  0100               	movlb	0	; () banked
  6057  001172  6F98               	movwf	(??_timer0_int_handler+1)& (0+255),b
  6058  001174  0E0A               	movlw	10
  6059  001176  0100               	movlb	0	; () banked
  6060  001178  0100               	movlb	0	; () banked
  6061  00117A  6F90               	movwf	(?_ToMainHigh_sendmsg+1)& (0+255),b
  6062  00117C  0100               	movlb	0	; () banked
  6063  00117E  5198               	movf	(??_timer0_int_handler+1)& (0+255),w,b
  6064  001180  0100               	movlb	0	; () banked
  6065  001182  0E00               	movlw	high timer0_int_handler@val
  6066  001184  0100               	movlb	0	; () banked
  6067  001186  0100               	movlb	0	; () banked
  6068  001188  6F92               	movwf	(?_ToMainHigh_sendmsg+3)& (0+255),b
  6069  00118A  0100               	movlb	0	; () banked
  6070  00118C  0E9D               	movlw	low timer0_int_handler@val
  6071  00118E  0100               	movlb	0	; () banked
  6072  001190  6F91               	movwf	(?_ToMainHigh_sendmsg+2)& (0+255),b
  6073  001192  EC95  F00C         	call	_ToMainHigh_sendmsg	;wreg free
  6074  001196  0012               	return	
  6075  001198                     __end_of_timer0_int_handler:
  6076                           	opt stack 0
  6077                           pclatu	equ	0xFFB
  6078                           pclath	equ	0xFFA
  6079                           tblptru	equ	0xFF8
  6080                           tblptrh	equ	0xFF7
  6081                           tblptrl	equ	0xFF6
  6082                           tablat	equ	0xFF5
  6083                           prodh	equ	0xFF4
  6084                           prodl	equ	0xFF3
  6085                           intcon	equ	0xFF2
  6086                           postinc0	equ	0xFEE
  6087                           fsr0h	equ	0xFEA
  6088                           fsr0l	equ	0xFE9
  6089                           wreg	equ	0xFE8
  6090                           indf1	equ	0xFE7
  6091                           fsr1h	equ	0xFE2
  6092                           fsr1l	equ	0xFE1
  6093                           bsr	equ	0xFE0
  6094                           indf2	equ	0xFDF
  6095                           postinc2	equ	0xFDE
  6096                           postdec2	equ	0xFDD
  6097                           fsr2h	equ	0xFDA
  6098                           fsr2l	equ	0xFD9
  6099                           status	equ	0xFD8
  6100                           
  6101 ;; *************** function i2_FromMainHigh_recvmsg *****************
  6102 ;; Defined at:
  6103 ;;		line 183 in file "../src/messages.c"
  6104 ;; Parameters:    Size  Location     Type
  6105 ;;  FromMainHigh    1   18[BANK0 ] unsigned char 
  6106 ;;  FromMainHigh    2   19[BANK0 ] PTR unsigned char 
  6107 ;;		 -> msgtype(1), timer0_int_handler@msgtype(2), 
  6108 ;;  FromMainHigh    2   21[BANK0 ] PTR void 
  6109 ;;		 -> msgbuffer(11), timer0_int_handler@val(2), 
  6110 ;; Auto vars:     Size  Location     Type
  6111 ;;		None
  6112 ;; Return value:  Size  Location     Type
  6113 ;;                  1    wreg      char 
  6114 ;; Registers used:
  6115 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6116 ;; Tracked objects:
  6117 ;;		On entry : 0/0
  6118 ;;		On exit  : 0/0
  6119 ;;		Unchanged: 0/0
  6120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6121 ;;      Params:         0       5       0       0       0
  6122 ;;      Locals:         0       0       0       0       0
  6123 ;;      Temps:          0       0       0       0       0
  6124 ;;      Totals:         0       5       0       0       0
  6125 ;;Total ram usage:        5 bytes
  6126 ;; Hardware stack levels used:    1
  6127 ;; Hardware stack levels required when called:    2
  6128 ;; This function calls:
  6129 ;;		i2_recv_msg
  6130 ;; This function is called by:
  6131 ;;		_timer0_int_handler
  6132 ;; This function uses a non-reentrant model
  6133 ;;
  6134                           
  6135                           	psect	text44
  6136  001884                     __ptext44:
  6137                           	opt stack 0
  6138  001884                     i2_FromMainHigh_recvmsg:
  6139                           	opt stack 16
  6140                           
  6141                           ;messages.c: 189: return (recv_msg(&FromMainHigh_MQ, maxlength, msgtype, data));
  6142                           
  6143                           ;incstack = 0
  6144                           ;incstack = 0
  6145  001884  0101               	movlb	1	; () banked
  6146  001886  0E01               	movlw	high _FromMainHigh_MQ
  6147  001888  0100               	movlb	0	; () banked
  6148  00188A  0100               	movlb	0	; () banked
  6149  00188C  6F85               	movwf	(?i2_recv_msg+1)& (0+255),b
  6150  00188E  0101               	movlb	1	; () banked
  6151  001890  0E00               	movlw	low _FromMainHigh_MQ
  6152  001892  0100               	movlb	0	; () banked
  6153  001894  6F84               	movwf	?i2_recv_msg& (0+255),b
  6154  001896  C092  F086         	movff	i2FromMainHigh_recvmsg@maxlength,?i2_recv_msg+2
  6155  00189A  C093  F087         	movff	i2FromMainHigh_recvmsg@msgtype,?i2_recv_msg+3
  6156  00189E  C094  F088         	movff	i2FromMainHigh_recvmsg@msgtype+1,?i2_recv_msg+4
  6157  0018A2  C095  F089         	movff	i2FromMainHigh_recvmsg@data,?i2_recv_msg+5
  6158  0018A6  C096  F08A         	movff	i2FromMainHigh_recvmsg@data+1,?i2_recv_msg+6
  6159  0018AA  EC96  F005         	call	i2_recv_msg	;wreg free
  6160  0018AE  0012               	return	
  6161  0018B0                     __end_ofi2_FromMainHigh_recvmsg:
  6162                           	opt stack 0
  6163                           pclatu	equ	0xFFB
  6164                           pclath	equ	0xFFA
  6165                           tblptru	equ	0xFF8
  6166                           tblptrh	equ	0xFF7
  6167                           tblptrl	equ	0xFF6
  6168                           tablat	equ	0xFF5
  6169                           prodh	equ	0xFF4
  6170                           prodl	equ	0xFF3
  6171                           intcon	equ	0xFF2
  6172                           postinc0	equ	0xFEE
  6173                           fsr0h	equ	0xFEA
  6174                           fsr0l	equ	0xFE9
  6175                           wreg	equ	0xFE8
  6176                           indf1	equ	0xFE7
  6177                           fsr1h	equ	0xFE2
  6178                           fsr1l	equ	0xFE1
  6179                           bsr	equ	0xFE0
  6180                           indf2	equ	0xFDF
  6181                           postinc2	equ	0xFDE
  6182                           postdec2	equ	0xFDD
  6183                           fsr2h	equ	0xFDA
  6184                           fsr2l	equ	0xFD9
  6185                           status	equ	0xFD8
  6186                           
  6187 ;; *************** function i2_recv_msg *****************
  6188 ;; Defined at:
  6189 ;;		line 63 in file "../src/messages.c"
  6190 ;; Parameters:    Size  Location     Type
  6191 ;;  recv_msg        2    4[BANK0 ] PTR struct __msg_queue
  6192 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  6193 ;;  recv_msg        1    6[BANK0 ] unsigned char 
  6194 ;;  recv_msg        2    7[BANK0 ] PTR unsigned char 
  6195 ;;		 -> msgtype(1), timer0_int_handler@msgtype(2), main@msgtype(1), 
  6196 ;;  recv_msg        2    9[BANK0 ] PTR void 
  6197 ;;		 -> msgbuffer(11), timer0_int_handler@val(2), main@msgbuffer(11), 
  6198 ;; Auto vars:     Size  Location     Type
  6199 ;;  recv_msg        2   16[BANK0 ] PTR struct __msg
  6200 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  6201 ;;  recv_msg        2   14[BANK0 ] unsigned int 
  6202 ;;  recv_msg        1   13[BANK0 ] unsigned char 
  6203 ;; Return value:  Size  Location     Type
  6204 ;;                  1    wreg      char 
  6205 ;; Registers used:
  6206 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6207 ;; Tracked objects:
  6208 ;;		On entry : 0/0
  6209 ;;		On exit  : 0/0
  6210 ;;		Unchanged: 0/0
  6211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6212 ;;      Params:         0       7       0       0       0
  6213 ;;      Locals:         0       5       0       0       0
  6214 ;;      Temps:          0       2       0       0       0
  6215 ;;      Totals:         0      14       0       0       0
  6216 ;;Total ram usage:       14 bytes
  6217 ;; Hardware stack levels used:    1
  6218 ;; Hardware stack levels required when called:    1
  6219 ;; This function calls:
  6220 ;;		i2_memcpy
  6221 ;; This function is called by:
  6222 ;;		i2_FromMainHigh_recvmsg
  6223 ;; This function uses a non-reentrant model
  6224 ;;
  6225                           
  6226                           	psect	text45
  6227  000B2C                     __ptext45:
  6228                           	opt stack 0
  6229  000B2C                     i2_recv_msg:
  6230                           	opt stack 16
  6231                           
  6232                           ;messages.c: 64: unsigned char slot;
  6233                           ;messages.c: 68: msg *qmsg;
  6234                           ;messages.c: 69: size_t tlength;
  6235                           ;messages.c: 72: slot = qptr->cur_read_ind;
  6236                           
  6237                           ;incstack = 0
  6238                           ;incstack = 0
  6239  000B2C  0100               	movlb	0	; () banked
  6240  000B2E  EE20 F035          	lfsr	2,53
  6241  000B32  0100               	movlb	0	; () banked
  6242  000B34  5184               	movf	i2recv_msg@qptr& (0+255),w,b
  6243  000B36  26D9               	addwf	fsr2l,f,c
  6244  000B38  0100               	movlb	0	; () banked
  6245  000B3A  5185               	movf	(i2recv_msg@qptr+1)& (0+255),w,b
  6246  000B3C  22DA               	addwfc	fsr2h,f,c
  6247  000B3E  50DF               	movf	indf2,w,c
  6248  000B40  0100               	movlb	0	; () banked
  6249  000B42  0100               	movlb	0	; () banked
  6250  000B44  6F8D               	movwf	i2recv_msg@slot& (0+255),b
  6251                           
  6252                           ; BSR set to: 0
  6253                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  6254  000B46  0100               	movlb	0	; () banked
  6255  000B48  0100               	movlb	0	; () banked
  6256  000B4A  518D               	movf	i2recv_msg@slot& (0+255),w,b
  6257  000B4C  0D0D               	mullw	13
  6258  000B4E  50F3               	movf	prodl,w,c
  6259  000B50  0100               	movlb	0	; () banked
  6260  000B52  0100               	movlb	0	; () banked
  6261  000B54  2584               	addwf	i2recv_msg@qptr& (0+255),w,b
  6262  000B56  0100               	movlb	0	; () banked
  6263  000B58  0100               	movlb	0	; () banked
  6264  000B5A  6F90               	movwf	i2recv_msg@qmsg& (0+255),b
  6265  000B5C  50F4               	movf	prodh,w,c
  6266  000B5E  0100               	movlb	0	; () banked
  6267  000B60  0100               	movlb	0	; () banked
  6268  000B62  2185               	addwfc	(i2recv_msg@qptr+1)& (0+255),w,b
  6269  000B64  0100               	movlb	0	; () banked
  6270  000B66  6F91               	movwf	(i2recv_msg@qmsg+1)& (0+255),b
  6271                           
  6272                           ; BSR set to: 0
  6273                           ;messages.c: 74: if (qmsg->full == 1) {
  6274  000B68  0E01               	movlw	1
  6275  000B6A  C090  FFD9         	movff	i2recv_msg@qmsg,fsr2l
  6276  000B6E  C091  FFDA         	movff	i2recv_msg@qmsg+1,fsr2h
  6277  000B72  62DF               	cpfseq	indf2,c
  6278  000B74  D06F               	goto	i2l3446
  6279                           
  6280                           ; BSR set to: 0
  6281                           ;messages.c: 76: if (qmsg->length > maxlength) {
  6282  000B76  0100               	movlb	0	; () banked
  6283  000B78  EE20 F001          	lfsr	2,1
  6284  000B7C  0100               	movlb	0	; () banked
  6285  000B7E  5190               	movf	i2recv_msg@qmsg& (0+255),w,b
  6286  000B80  26D9               	addwf	fsr2l,f,c
  6287  000B82  0100               	movlb	0	; () banked
  6288  000B84  5191               	movf	(i2recv_msg@qmsg+1)& (0+255),w,b
  6289  000B86  22DA               	addwfc	fsr2h,f,c
  6290  000B88  50DF               	movf	indf2,w,c
  6291  000B8A  0100               	movlb	0	; () banked
  6292  000B8C  0100               	movlb	0	; () banked
  6293  000B8E  6186               	cpfslt	i2recv_msg@maxlength& (0+255),b
  6294  000B90  D002               	goto	i2l3430
  6295                           
  6296                           ; BSR set to: 0
  6297                           ;messages.c: 77: return (-3);
  6298  000B92  0EFD               	movlw	253
  6299  000B94  0012               	return	
  6300  000B96                     i2l3430:
  6301                           
  6302                           ; BSR set to: 0
  6303                           ;messages.c: 78: }
  6304                           ;messages.c: 80: tlength = qmsg->length;
  6305  000B96  0100               	movlb	0	; () banked
  6306  000B98  EE20 F001          	lfsr	2,1
  6307  000B9C  0100               	movlb	0	; () banked
  6308  000B9E  5190               	movf	i2recv_msg@qmsg& (0+255),w,b
  6309  000BA0  26D9               	addwf	fsr2l,f,c
  6310  000BA2  0100               	movlb	0	; () banked
  6311  000BA4  5191               	movf	(i2recv_msg@qmsg+1)& (0+255),w,b
  6312  000BA6  22DA               	addwfc	fsr2h,f,c
  6313  000BA8  50DF               	movf	indf2,w,c
  6314  000BAA  0100               	movlb	0	; () banked
  6315  000BAC  6F8B               	movwf	??i2_recv_msg& (0+255),b
  6316  000BAE  0100               	movlb	0	; () banked
  6317  000BB0  518B               	movf	??i2_recv_msg& (0+255),w,b
  6318  000BB2  0100               	movlb	0	; () banked
  6319  000BB4  0100               	movlb	0	; () banked
  6320  000BB6  6F8E               	movwf	i2recv_msg@tlength& (0+255),b
  6321  000BB8  0100               	movlb	0	; () banked
  6322  000BBA  6B8F               	clrf	(i2recv_msg@tlength+1)& (0+255),b
  6323                           
  6324                           ; BSR set to: 0
  6325                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  6326  000BBC  C089  F030         	movff	i2recv_msg@data,?i2_memcpy
  6327  000BC0  C08A  F031         	movff	i2recv_msg@data+1,?i2_memcpy+1
  6328  000BC4  0E03               	movlw	3
  6329  000BC6  0100               	movlb	0	; () banked
  6330  000BC8  0100               	movlb	0	; () banked
  6331  000BCA  2590               	addwf	i2recv_msg@qmsg& (0+255),w,b
  6332  000BCC  0100               	movlb	0	; () banked
  6333  000BCE  6F8B               	movwf	??i2_recv_msg& (0+255),b
  6334  000BD0  0E00               	movlw	0
  6335  000BD2  0100               	movlb	0	; () banked
  6336  000BD4  0100               	movlb	0	; () banked
  6337  000BD6  2191               	addwfc	(i2recv_msg@qmsg+1)& (0+255),w,b
  6338  000BD8  0100               	movlb	0	; () banked
  6339  000BDA  6F8C               	movwf	(??i2_recv_msg+1)& (0+255),b
  6340  000BDC  C08B  F032         	movff	??i2_recv_msg,?i2_memcpy+2
  6341  000BE0  C08C  F033         	movff	??i2_recv_msg+1,?i2_memcpy+3
  6342  000BE4  C08E  F034         	movff	i2recv_msg@tlength,?i2_memcpy+4
  6343  000BE8  C08F  F035         	movff	i2recv_msg@tlength+1,?i2_memcpy+5
  6344  000BEC  ECCC  F00A         	call	i2_memcpy	;wreg free
  6345                           
  6346                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  6347  000BF0  0100               	movlb	0	; () banked
  6348  000BF2  EE20 F035          	lfsr	2,53
  6349  000BF6  0100               	movlb	0	; () banked
  6350  000BF8  5184               	movf	i2recv_msg@qptr& (0+255),w,b
  6351  000BFA  26D9               	addwf	fsr2l,f,c
  6352  000BFC  0100               	movlb	0	; () banked
  6353  000BFE  5185               	movf	(i2recv_msg@qptr+1)& (0+255),w,b
  6354  000C00  22DA               	addwfc	fsr2h,f,c
  6355  000C02  0100               	movlb	0	; () banked
  6356  000C04  EE10 F035          	lfsr	1,53
  6357  000C08  0100               	movlb	0	; () banked
  6358  000C0A  5184               	movf	i2recv_msg@qptr& (0+255),w,b
  6359  000C0C  26E1               	addwf	fsr1l,f,c
  6360  000C0E  0100               	movlb	0	; () banked
  6361  000C10  5185               	movf	(i2recv_msg@qptr+1)& (0+255),w,b
  6362  000C12  22E2               	addwfc	fsr1h,f,c
  6363  000C14  50E7               	movf	indf1,w,c
  6364  000C16  0100               	movlb	0	; () banked
  6365  000C18  6F8B               	movwf	??i2_recv_msg& (0+255),b
  6366  000C1A  0100               	movlb	0	; () banked
  6367  000C1C  298B               	incf	??i2_recv_msg& (0+255),w,b
  6368  000C1E  0B03               	andlw	3
  6369  000C20  6EDF               	movwf	indf2,c
  6370                           
  6371                           ; BSR set to: 0
  6372                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  6373  000C22  0100               	movlb	0	; () banked
  6374  000C24  EE20 F002          	lfsr	2,2
  6375  000C28  0100               	movlb	0	; () banked
  6376  000C2A  5190               	movf	i2recv_msg@qmsg& (0+255),w,b
  6377  000C2C  26D9               	addwf	fsr2l,f,c
  6378  000C2E  0100               	movlb	0	; () banked
  6379  000C30  5191               	movf	(i2recv_msg@qmsg+1)& (0+255),w,b
  6380  000C32  22DA               	addwfc	fsr2h,f,c
  6381  000C34  C087  FFE1         	movff	i2recv_msg@msgtype,fsr1l
  6382  000C38  C088  FFE2         	movff	i2recv_msg@msgtype+1,fsr1h
  6383  000C3C  CFDF FFE7          	movff	indf2,indf1
  6384                           
  6385                           ; BSR set to: 0
  6386                           ;messages.c: 91: qmsg->full = 0;
  6387  000C40  C090  FFD9         	movff	i2recv_msg@qmsg,fsr2l
  6388  000C44  C091  FFDA         	movff	i2recv_msg@qmsg+1,fsr2h
  6389  000C48  0E00               	movlw	0
  6390  000C4A  6EDF               	movwf	indf2,c
  6391                           
  6392                           ; BSR set to: 0
  6393                           ;messages.c: 92: return (tlength);
  6394  000C4C  0100               	movlb	0	; () banked
  6395  000C4E  0100               	movlb	0	; () banked
  6396  000C50  518E               	movf	i2recv_msg@tlength& (0+255),w,b
  6397  000C52  0012               	return	
  6398  000C54                     i2l3446:
  6399                           
  6400                           ; BSR set to: 0
  6401                           ;messages.c: 94: return (-4);
  6402  000C54  0EFC               	movlw	252
  6403  000C56  0012               	return	
  6404  000C58                     __end_ofi2_recv_msg:
  6405                           	opt stack 0
  6406                           pclatu	equ	0xFFB
  6407                           pclath	equ	0xFFA
  6408                           tblptru	equ	0xFF8
  6409                           tblptrh	equ	0xFF7
  6410                           tblptrl	equ	0xFF6
  6411                           tablat	equ	0xFF5
  6412                           prodh	equ	0xFF4
  6413                           prodl	equ	0xFF3
  6414                           intcon	equ	0xFF2
  6415                           postinc0	equ	0xFEE
  6416                           fsr0h	equ	0xFEA
  6417                           fsr0l	equ	0xFE9
  6418                           wreg	equ	0xFE8
  6419                           indf1	equ	0xFE7
  6420                           fsr1h	equ	0xFE2
  6421                           fsr1l	equ	0xFE1
  6422                           bsr	equ	0xFE0
  6423                           indf2	equ	0xFDF
  6424                           postinc2	equ	0xFDE
  6425                           postdec2	equ	0xFDD
  6426                           fsr2h	equ	0xFDA
  6427                           fsr2l	equ	0xFD9
  6428                           status	equ	0xFD8
  6429                           
  6430 ;; *************** function _WriteTimer0 *****************
  6431 ;; Defined at:
  6432 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\pic18\plib\Timers\t0write.c"
  6433 ;; Parameters:    Size  Location     Type
  6434 ;;  timer0          2   47[COMRAM] unsigned int 
  6435 ;; Auto vars:     Size  Location     Type
  6436 ;;  timer           2   49[COMRAM] struct Timers
  6437 ;; Return value:  Size  Location     Type
  6438 ;;		None               void
  6439 ;; Registers used:
  6440 ;;		None
  6441 ;; Tracked objects:
  6442 ;;		On entry : 0/0
  6443 ;;		On exit  : 0/0
  6444 ;;		Unchanged: 0/0
  6445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6446 ;;      Params:         2       0       0       0       0
  6447 ;;      Locals:         2       0       0       0       0
  6448 ;;      Temps:          0       0       0       0       0
  6449 ;;      Totals:         4       0       0       0       0
  6450 ;;Total ram usage:        4 bytes
  6451 ;; Hardware stack levels used:    1
  6452 ;; This function calls:
  6453 ;;		Nothing
  6454 ;; This function is called by:
  6455 ;;		_timer0_int_handler
  6456 ;; This function uses a non-reentrant model
  6457 ;;
  6458                           
  6459                           	psect	text46
  6460  001A24                     __ptext46:
  6461                           	opt stack 0
  6462  001A24                     _WriteTimer0:
  6463                           	opt stack 18
  6464                           
  6465                           ; BSR set to: 0
  6466                           ;incstack = 0
  6467                           ;incstack = 0
  6468  001A24  C030  F032         	movff	WriteTimer0@timer0,WriteTimer0@timer
  6469  001A28  C031  F033         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  6470  001A2C  C033  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  6471  001A30  C032  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  6472  001A34  0012               	return	
  6473  001A36                     __end_of_WriteTimer0:
  6474                           	opt stack 0
  6475                           pclatu	equ	0xFFB
  6476                           pclath	equ	0xFFA
  6477                           tblptru	equ	0xFF8
  6478                           tblptrh	equ	0xFF7
  6479                           tblptrl	equ	0xFF6
  6480                           tablat	equ	0xFF5
  6481                           prodh	equ	0xFF4
  6482                           prodl	equ	0xFF3
  6483                           intcon	equ	0xFF2
  6484                           postinc0	equ	0xFEE
  6485                           fsr0h	equ	0xFEA
  6486                           fsr0l	equ	0xFE9
  6487                           wreg	equ	0xFE8
  6488                           indf1	equ	0xFE7
  6489                           fsr1h	equ	0xFE2
  6490                           fsr1l	equ	0xFE1
  6491                           bsr	equ	0xFE0
  6492                           indf2	equ	0xFDF
  6493                           postinc2	equ	0xFDE
  6494                           postdec2	equ	0xFDD
  6495                           fsr2h	equ	0xFDA
  6496                           fsr2l	equ	0xFD9
  6497                           status	equ	0xFD8
  6498                           
  6499 ;; *************** function _i2c_int_handler *****************
  6500 ;; Defined at:
  6501 ;;		line 103 in file "../src/my_i2c.c"
  6502 ;; Parameters:    Size  Location     Type
  6503 ;;		None
  6504 ;; Auto vars:     Size  Location     Type
  6505 ;;  error_buf       3   21[BANK0 ] unsigned char [3]
  6506 ;;  data_read       1   29[BANK0 ] unsigned char 
  6507 ;;  msg_ready       1   28[BANK0 ] unsigned char 
  6508 ;;  i2c_data        1   27[BANK0 ] unsigned char 
  6509 ;;  msg_to_send     1   26[BANK0 ] unsigned char 
  6510 ;;  overrun_erro    1   25[BANK0 ] unsigned char 
  6511 ;;  data_written    1   24[BANK0 ] unsigned char 
  6512 ;; Return value:  Size  Location     Type
  6513 ;;		None               void
  6514 ;; Registers used:
  6515 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6516 ;; Tracked objects:
  6517 ;;		On entry : 0/0
  6518 ;;		On exit  : 0/0
  6519 ;;		Unchanged: 0/0
  6520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6521 ;;      Params:         0       0       0       0       0
  6522 ;;      Locals:         0       9       0       0       0
  6523 ;;      Temps:          0       2       0       0       0
  6524 ;;      Totals:         0      11       0       0       0
  6525 ;;Total ram usage:       11 bytes
  6526 ;; Hardware stack levels used:    1
  6527 ;; Hardware stack levels required when called:    3
  6528 ;; This function calls:
  6529 ;;		_ToMainHigh_sendmsg
  6530 ;;		_handle_start
  6531 ;; This function is called by:
  6532 ;;		_InterruptHandlerHigh
  6533 ;; This function uses a non-reentrant model
  6534 ;;
  6535                           
  6536                           	psect	text47
  6537  0000CC                     __ptext47:
  6538                           	opt stack 0
  6539  0000CC                     _i2c_int_handler:
  6540                           	opt stack 16
  6541                           
  6542                           ;my_i2c.c: 104: unsigned char i2c_data;
  6543                           ;my_i2c.c: 105: unsigned char data_read = 0;
  6544                           
  6545                           ;incstack = 0
  6546                           ;incstack = 0
  6547  0000CC  0100               	movlb	0	; () banked
  6548  0000CE  6F93               	movwf	??_i2c_int_handler& (0+255),b
  6549  0000D0  0E00               	movlw	0
  6550  0000D2  0100               	movlb	0	; () banked
  6551  0000D4  0100               	movlb	0	; () banked
  6552  0000D6  6F9D               	movwf	i2c_int_handler@data_read& (0+255),b
  6553  0000D8  0100               	movlb	0	; () banked
  6554  0000DA  5193               	movf	??_i2c_int_handler& (0+255),w,b
  6555                           
  6556                           ;my_i2c.c: 106: unsigned char data_written = 0;
  6557  0000DC  0100               	movlb	0	; () banked
  6558  0000DE  6F93               	movwf	??_i2c_int_handler& (0+255),b
  6559  0000E0  0E00               	movlw	0
  6560  0000E2  0100               	movlb	0	; () banked
  6561  0000E4  0100               	movlb	0	; () banked
  6562  0000E6  6F98               	movwf	i2c_int_handler@data_written& (0+255),b
  6563  0000E8  0100               	movlb	0	; () banked
  6564  0000EA  5193               	movf	??_i2c_int_handler& (0+255),w,b
  6565                           
  6566                           ;my_i2c.c: 107: unsigned char msg_ready = 0;
  6567  0000EC  0100               	movlb	0	; () banked
  6568  0000EE  6F93               	movwf	??_i2c_int_handler& (0+255),b
  6569  0000F0  0E00               	movlw	0
  6570  0000F2  0100               	movlb	0	; () banked
  6571  0000F4  0100               	movlb	0	; () banked
  6572  0000F6  6F9C               	movwf	i2c_int_handler@msg_ready& (0+255),b
  6573  0000F8  0100               	movlb	0	; () banked
  6574  0000FA  5193               	movf	??_i2c_int_handler& (0+255),w,b
  6575                           
  6576                           ;my_i2c.c: 108: unsigned char msg_to_send = 0;
  6577  0000FC  0100               	movlb	0	; () banked
  6578  0000FE  6F93               	movwf	??_i2c_int_handler& (0+255),b
  6579  000100  0E00               	movlw	0
  6580  000102  0100               	movlb	0	; () banked
  6581  000104  0100               	movlb	0	; () banked
  6582  000106  6F9A               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  6583  000108  0100               	movlb	0	; () banked
  6584  00010A  5193               	movf	??_i2c_int_handler& (0+255),w,b
  6585                           
  6586                           ;my_i2c.c: 109: unsigned char overrun_error = 0;
  6587  00010C  0100               	movlb	0	; () banked
  6588  00010E  6F93               	movwf	??_i2c_int_handler& (0+255),b
  6589  000110  0E00               	movlw	0
  6590  000112  0100               	movlb	0	; () banked
  6591  000114  0100               	movlb	0	; () banked
  6592  000116  6F99               	movwf	i2c_int_handler@overrun_error& (0+255),b
  6593  000118  0100               	movlb	0	; () banked
  6594  00011A  5193               	movf	??_i2c_int_handler& (0+255),w,b
  6595                           
  6596                           ; BSR set to: 0
  6597                           ;my_i2c.c: 110: unsigned char error_buf[3];
  6598                           ;my_i2c.c: 113: if (SSPCON1bits.SSPOV == 1) {
  6599  00011C  ACC6               	btfss	4038,6,c	;volatile
  6600  00011E  D029               	goto	i2l2954
  6601                           
  6602                           ; BSR set to: 0
  6603                           ;my_i2c.c: 114: SSPCON1bits.SSPOV = 0;
  6604  000120  9CC6               	bcf	4038,6,c	;volatile
  6605                           
  6606                           ; BSR set to: 0
  6607                           ;my_i2c.c: 118: ic_ptr->status = 0x5;
  6608  000122  0100               	movlb	0	; () banked
  6609  000124  EE20 F00C          	lfsr	2,12
  6610  000128  0100               	movlb	0	; () banked
  6611  00012A  51D0               	movf	_ic_ptr& (0+255),w,b
  6612  00012C  26D9               	addwf	fsr2l,f,c
  6613  00012E  0100               	movlb	0	; () banked
  6614  000130  51D1               	movf	(_ic_ptr+1)& (0+255),w,b
  6615  000132  22DA               	addwfc	fsr2h,f,c
  6616  000134  0E05               	movlw	5
  6617  000136  6EDF               	movwf	indf2,c
  6618                           
  6619                           ; BSR set to: 0
  6620                           ;my_i2c.c: 119: overrun_error = 1;
  6621  000138  0100               	movlb	0	; () banked
  6622  00013A  6F93               	movwf	??_i2c_int_handler& (0+255),b
  6623  00013C  0E01               	movlw	1
  6624  00013E  0100               	movlb	0	; () banked
  6625  000140  0100               	movlb	0	; () banked
  6626  000142  6F99               	movwf	i2c_int_handler@overrun_error& (0+255),b
  6627  000144  0100               	movlb	0	; () banked
  6628  000146  5193               	movf	??_i2c_int_handler& (0+255),w,b
  6629                           
  6630                           ; BSR set to: 0
  6631                           ;my_i2c.c: 120: ic_ptr->error_count++;
  6632  000148  0100               	movlb	0	; () banked
  6633  00014A  EE20 F00E          	lfsr	2,14
  6634  00014E  0100               	movlb	0	; () banked
  6635  000150  51D0               	movf	_ic_ptr& (0+255),w,b
  6636  000152  26D9               	addwf	fsr2l,f,c
  6637  000154  0100               	movlb	0	; () banked
  6638  000156  51D1               	movf	(_ic_ptr+1)& (0+255),w,b
  6639  000158  22DA               	addwfc	fsr2h,f,c
  6640  00015A  2ADF               	incf	indf2,f,c
  6641                           
  6642                           ; BSR set to: 0
  6643                           ;my_i2c.c: 121: ic_ptr->error_code = 0x4;
  6644  00015C  0100               	movlb	0	; () banked
  6645  00015E  EE20 F00D          	lfsr	2,13
  6646  000162  0100               	movlb	0	; () banked
  6647  000164  51D0               	movf	_ic_ptr& (0+255),w,b
  6648  000166  26D9               	addwf	fsr2l,f,c
  6649  000168  0100               	movlb	0	; () banked
  6650  00016A  51D1               	movf	(_ic_ptr+1)& (0+255),w,b
  6651  00016C  22DA               	addwfc	fsr2h,f,c
  6652  00016E  0E04               	movlw	4
  6653  000170  6EDF               	movwf	indf2,c
  6654  000172                     i2l2954:
  6655                           
  6656                           ; BSR set to: 0
  6657                           ;my_i2c.c: 122: }
  6658                           ;my_i2c.c: 124: if (SSPSTATbits.BF == 1) {
  6659  000172  A0C7               	btfss	4039,0,c	;volatile
  6660  000174  D00A               	goto	i2l2960
  6661                           
  6662                           ; BSR set to: 0
  6663                           ;my_i2c.c: 125: i2c_data = SSPBUF;
  6664  000176  CFC9 F09B          	movff	4041,i2c_int_handler@i2c_data	;volatile
  6665                           
  6666                           ; BSR set to: 0
  6667                           ;my_i2c.c: 126: data_read = 1;
  6668  00017A  0100               	movlb	0	; () banked
  6669  00017C  6F93               	movwf	??_i2c_int_handler& (0+255),b
  6670  00017E  0E01               	movlw	1
  6671  000180  0100               	movlb	0	; () banked
  6672  000182  0100               	movlb	0	; () banked
  6673  000184  6F9D               	movwf	i2c_int_handler@data_read& (0+255),b
  6674  000186  0100               	movlb	0	; () banked
  6675  000188  5193               	movf	??_i2c_int_handler& (0+255),w,b
  6676  00018A                     i2l2960:
  6677                           
  6678                           ; BSR set to: 0
  6679                           ;my_i2c.c: 127: }
  6680                           ;my_i2c.c: 132: if (!overrun_error) {
  6681  00018A  0100               	movlb	0	; () banked
  6682  00018C  0100               	movlb	0	; () banked
  6683  00018E  6799               	tstfsz	i2c_int_handler@overrun_error& (0+255),b
  6684  000190  D1CD               	goto	i2l266
  6685  000192  D1B6               	goto	i2l3048
  6686  000194                     i2l268:
  6687                           
  6688                           ; BSR set to: 0
  6689                           ;my_i2c.c: 135: {
  6690                           ;my_i2c.c: 137: if (SSPSTATbits.S == 1) {
  6691  000194  A6C7               	btfss	4039,3,c	;volatile
  6692  000196  D1CA               	goto	i2l266
  6693                           
  6694                           ; BSR set to: 0
  6695                           ;my_i2c.c: 138: handle_start(data_read);
  6696  000198  C09D  F030         	movff	i2c_int_handler@data_read,?_handle_start
  6697  00019C  EC10  F008         	call	_handle_start	;wreg free
  6698                           
  6699                           ;my_i2c.c: 140: if (ic_ptr->status == 0x8) {
  6700  0001A0  0100               	movlb	0	; () banked
  6701  0001A2  EE20 F00C          	lfsr	2,12
  6702  0001A6  0100               	movlb	0	; () banked
  6703  0001A8  51D0               	movf	_ic_ptr& (0+255),w,b
  6704  0001AA  26D9               	addwf	fsr2l,f,c
  6705  0001AC  0100               	movlb	0	; () banked
  6706  0001AE  51D1               	movf	(_ic_ptr+1)& (0+255),w,b
  6707  0001B0  22DA               	addwfc	fsr2h,f,c
  6708  0001B2  0E08               	movlw	8
  6709  0001B4  62DF               	cpfseq	indf2,c
  6710  0001B6  D1BA               	goto	i2l266
  6711                           
  6712                           ; BSR set to: 0
  6713                           ;my_i2c.c: 141: data_read = 0;
  6714  0001B8  0100               	movlb	0	; () banked
  6715  0001BA  6F93               	movwf	??_i2c_int_handler& (0+255),b
  6716  0001BC  0E00               	movlw	0
  6717  0001BE  0100               	movlb	0	; () banked
  6718  0001C0  0100               	movlb	0	; () banked
  6719  0001C2  6F9D               	movwf	i2c_int_handler@data_read& (0+255),b
  6720  0001C4  0100               	movlb	0	; () banked
  6721  0001C6  5193               	movf	??_i2c_int_handler& (0+255),w,b
  6722                           
  6723                           ;my_i2c.c: 142: msg_to_send = 1;
  6724  0001C8  0100               	movlb	0	; () banked
  6725  0001CA  6F93               	movwf	??_i2c_int_handler& (0+255),b
  6726  0001CC  0E01               	movlw	1
  6727  0001CE  0100               	movlb	0	; () banked
  6728  0001D0  0100               	movlb	0	; () banked
  6729  0001D2  6F9A               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  6730  0001D4  D187               	goto	L7
  6731  0001D6                     i2l272:
  6732                           
  6733                           ; BSR set to: 0
  6734                           ;my_i2c.c: 148: {
  6735                           ;my_i2c.c: 150: if (SSPSTATbits.P == 1) {
  6736  0001D6  A8C7               	btfss	4039,4,c	;volatile
  6737  0001D8  D030               	goto	i2l2980
  6738                           
  6739                           ; BSR set to: 0
  6740                           ;my_i2c.c: 153: ic_ptr->event_count++;
  6741  0001DA  0100               	movlb	0	; () banked
  6742  0001DC  EE20 F00B          	lfsr	2,11
  6743  0001E0  0100               	movlb	0	; () banked
  6744  0001E2  51D0               	movf	_ic_ptr& (0+255),w,b
  6745  0001E4  26D9               	addwf	fsr2l,f,c
  6746  0001E6  0100               	movlb	0	; () banked
  6747  0001E8  51D1               	movf	(_ic_ptr+1)& (0+255),w,b
  6748  0001EA  22DA               	addwfc	fsr2h,f,c
  6749  0001EC  2ADF               	incf	indf2,f,c
  6750                           
  6751                           ; BSR set to: 0
  6752                           ;my_i2c.c: 154: if (data_read) {
  6753  0001EE  0100               	movlb	0	; () banked
  6754  0001F0  0100               	movlb	0	; () banked
  6755  0001F2  519D               	movf	i2c_int_handler@data_read& (0+255),w,b
  6756  0001F4  B4D8               	btfsc	status,2,c
  6757  0001F6  D179               	goto	L9
  6758                           
  6759                           ; BSR set to: 0
  6760                           ;my_i2c.c: 155: if (SSPSTATbits.D_A == 0) {
  6761  0001F8  BAC7               	btfsc	4039,5,c	;volatile
  6762  0001FA  D009               	goto	i2l2978
  6763                           
  6764                           ; BSR set to: 0
  6765                           ;my_i2c.c: 156: msg_ready = 1;
  6766  0001FC  0100               	movlb	0	; () banked
  6767  0001FE  6F93               	movwf	??_i2c_int_handler& (0+255),b
  6768  000200  0E01               	movlw	1
  6769  000202  0100               	movlb	0	; () banked
  6770  000204  0100               	movlb	0	; () banked
  6771  000206  6F9C               	movwf	i2c_int_handler@msg_ready& (0+255),b
  6772  000208  0100               	movlb	0	; () banked
  6773  00020A  5193               	movf	??_i2c_int_handler& (0+255),w,b
  6774                           
  6775                           ;my_i2c.c: 157: } else {
  6776  00020C  D16E               	goto	L9
  6777  00020E                     i2l2978:
  6778                           
  6779                           ; BSR set to: 0
  6780                           ;my_i2c.c: 158: ic_ptr->error_count++;
  6781  00020E  0100               	movlb	0	; () banked
  6782  000210  EE20 F00E          	lfsr	2,14
  6783  000214  0100               	movlb	0	; () banked
  6784  000216  51D0               	movf	_ic_ptr& (0+255),w,b
  6785  000218  26D9               	addwf	fsr2l,f,c
  6786  00021A  0100               	movlb	0	; () banked
  6787  00021C  51D1               	movf	(_ic_ptr+1)& (0+255),w,b
  6788  00021E  22DA               	addwfc	fsr2h,f,c
  6789  000220  2ADF               	incf	indf2,f,c
  6790                           
  6791                           ;my_i2c.c: 159: ic_ptr->error_code = 0x6;
  6792  000222  0100               	movlb	0	; () banked
  6793  000224  EE20 F00D          	lfsr	2,13
  6794  000228  0100               	movlb	0	; () banked
  6795  00022A  51D0               	movf	_ic_ptr& (0+255),w,b
  6796  00022C  26D9               	addwf	fsr2l,f,c
  6797  00022E  0100               	movlb	0	; () banked
  6798  000230  51D1               	movf	(_ic_ptr+1)& (0+255),w,b
  6799  000232  22DA               	addwfc	fsr2h,f,c
  6800  000234  0E06               	movlw	6
  6801  000236  6EDF               	movwf	indf2,c
  6802                           
  6803                           ; BSR set to: 0
  6804  000238  D158               	goto	L9
  6805  00023A                     i2l2980:
  6806                           
  6807                           ; BSR set to: 0
  6808  00023A  0100               	movlb	0	; () banked
  6809  00023C  0100               	movlb	0	; () banked
  6810  00023E  519D               	movf	i2c_int_handler@data_read& (0+255),w,b
  6811  000240  B4D8               	btfsc	status,2,c
  6812  000242  D174               	goto	i2l266
  6813                           
  6814                           ; BSR set to: 0
  6815                           ;my_i2c.c: 164: ic_ptr->event_count++;
  6816  000244  0100               	movlb	0	; () banked
  6817  000246  EE20 F00B          	lfsr	2,11
  6818  00024A  0100               	movlb	0	; () banked
  6819  00024C  51D0               	movf	_ic_ptr& (0+255),w,b
  6820  00024E  26D9               	addwf	fsr2l,f,c
  6821  000250  0100               	movlb	0	; () banked
  6822  000252  51D1               	movf	(_ic_ptr+1)& (0+255),w,b
  6823  000254  22DA               	addwfc	fsr2h,f,c
  6824  000256  2ADF               	incf	indf2,f,c
  6825                           
  6826                           ; BSR set to: 0
  6827                           ;my_i2c.c: 165: if (SSPSTATbits.D_A == 0) {
  6828  000258  BAC7               	btfsc	4039,5,c	;volatile
  6829  00025A  D019               	goto	i2l2996
  6830                           
  6831                           ; BSR set to: 0
  6832                           ;my_i2c.c: 166: if (SSPSTATbits.R_W == 0) {
  6833  00025C  B4C7               	btfsc	4039,2,c	;volatile
  6834  00025E  D00B               	goto	i2l2990
  6835                           
  6836                           ; BSR set to: 0
  6837                           ;my_i2c.c: 167: ic_ptr->status = 0x7;
  6838  000260  0100               	movlb	0	; () banked
  6839  000262  EE20 F00C          	lfsr	2,12
  6840  000266  0100               	movlb	0	; () banked
  6841  000268  51D0               	movf	_ic_ptr& (0+255),w,b
  6842  00026A  26D9               	addwf	fsr2l,f,c
  6843  00026C  0100               	movlb	0	; () banked
  6844  00026E  51D1               	movf	(_ic_ptr+1)& (0+255),w,b
  6845  000270  22DA               	addwfc	fsr2h,f,c
  6846  000272  0E07               	movlw	7
  6847  000274  D076               	goto	L6
  6848  000276                     i2l2990:
  6849                           
  6850                           ; BSR set to: 0
  6851                           ;my_i2c.c: 169: ic_ptr->status = 0x8;
  6852  000276  0100               	movlb	0	; () banked
  6853  000278  EE20 F00C          	lfsr	2,12
  6854  00027C  0100               	movlb	0	; () banked
  6855  00027E  51D0               	movf	_ic_ptr& (0+255),w,b
  6856  000280  26D9               	addwf	fsr2l,f,c
  6857  000282  0100               	movlb	0	; () banked
  6858  000284  51D1               	movf	(_ic_ptr+1)& (0+255),w,b
  6859  000286  22DA               	addwfc	fsr2h,f,c
  6860  000288  0E08               	movlw	8
  6861  00028A  6EDF               	movwf	indf2,c
  6862  00028C  D11D               	goto	L10
  6863  00028E                     i2l2996:
  6864                           
  6865                           ; BSR set to: 0
  6866                           ;my_i2c.c: 175: ic_ptr->error_count++;
  6867  00028E  0100               	movlb	0	; () banked
  6868  000290  EE20 F00E          	lfsr	2,14
  6869  000294  0100               	movlb	0	; () banked
  6870  000296  51D0               	movf	_ic_ptr& (0+255),w,b
  6871  000298  26D9               	addwf	fsr2l,f,c
  6872  00029A  0100               	movlb	0	; () banked
  6873  00029C  51D1               	movf	(_ic_ptr+1)& (0+255),w,b
  6874  00029E  22DA               	addwfc	fsr2h,f,c
  6875  0002A0  2ADF               	incf	indf2,f,c
  6876                           
  6877                           ;my_i2c.c: 176: ic_ptr->status = 0x5;
  6878  0002A2  0100               	movlb	0	; () banked
  6879  0002A4  EE20 F00C          	lfsr	2,12
  6880  0002A8  0100               	movlb	0	; () banked
  6881  0002AA  51D0               	movf	_ic_ptr& (0+255),w,b
  6882  0002AC  26D9               	addwf	fsr2l,f,c
  6883  0002AE  0100               	movlb	0	; () banked
  6884  0002B0  51D1               	movf	(_ic_ptr+1)& (0+255),w,b
  6885  0002B2  22DA               	addwfc	fsr2h,f,c
  6886  0002B4  0E05               	movlw	5
  6887  0002B6  6EDF               	movwf	indf2,c
  6888                           
  6889                           ;my_i2c.c: 177: ic_ptr->error_code = 0x6;
  6890  0002B8  0100               	movlb	0	; () banked
  6891  0002BA  EE20 F00D          	lfsr	2,13
  6892  0002BE  0100               	movlb	0	; () banked
  6893  0002C0  51D0               	movf	_ic_ptr& (0+255),w,b
  6894  0002C2  26D9               	addwf	fsr2l,f,c
  6895  0002C4  0100               	movlb	0	; () banked
  6896  0002C6  51D1               	movf	(_ic_ptr+1)& (0+255),w,b
  6897  0002C8  22DA               	addwfc	fsr2h,f,c
  6898  0002CA  0E06               	movlw	6
  6899  0002CC  D04A               	goto	L6
  6900  0002CE                     i2l2998:
  6901                           
  6902                           ; BSR set to: 0
  6903                           ;my_i2c.c: 183: {
  6904                           ;my_i2c.c: 184: if (ic_ptr->outbufind < ic_ptr->outbuflen) {
  6905  0002CE  0100               	movlb	0	; () banked
  6906  0002D0  EE20 F01A          	lfsr	2,26
  6907  0002D4  0100               	movlb	0	; () banked
  6908  0002D6  51D0               	movf	_ic_ptr& (0+255),w,b
  6909  0002D8  26D9               	addwf	fsr2l,f,c
  6910  0002DA  0100               	movlb	0	; () banked
  6911  0002DC  51D1               	movf	(_ic_ptr+1)& (0+255),w,b
  6912  0002DE  22DA               	addwfc	fsr2h,f,c
  6913  0002E0  50DF               	movf	indf2,w,c
  6914  0002E2  0100               	movlb	0	; () banked
  6915  0002E4  6F93               	movwf	??_i2c_int_handler& (0+255),b
  6916  0002E6  0100               	movlb	0	; () banked
  6917  0002E8  EE20 F019          	lfsr	2,25
  6918  0002EC  0100               	movlb	0	; () banked
  6919  0002EE  51D0               	movf	_ic_ptr& (0+255),w,b
  6920  0002F0  26D9               	addwf	fsr2l,f,c
  6921  0002F2  0100               	movlb	0	; () banked
  6922  0002F4  51D1               	movf	(_ic_ptr+1)& (0+255),w,b
  6923  0002F6  22DA               	addwfc	fsr2h,f,c
  6924  0002F8  50DF               	movf	indf2,w,c
  6925  0002FA  0100               	movlb	0	; () banked
  6926  0002FC  5D93               	subwf	??_i2c_int_handler& (0+255),w,b
  6927  0002FE  B0D8               	btfsc	status,0,c
  6928  000300  D0F4               	goto	L9
  6929                           
  6930                           ; BSR set to: 0
  6931                           ;my_i2c.c: 185: SSPBUF = ic_ptr->outbuffer[ic_ptr->outbufind];
  6932  000302  0100               	movlb	0	; () banked
  6933  000304  EE20 F01A          	lfsr	2,26
  6934  000308  0100               	movlb	0	; () banked
  6935  00030A  51D0               	movf	_ic_ptr& (0+255),w,b
  6936  00030C  26D9               	addwf	fsr2l,f,c
  6937  00030E  0100               	movlb	0	; () banked
  6938  000310  51D1               	movf	(_ic_ptr+1)& (0+255),w,b
  6939  000312  22DA               	addwfc	fsr2h,f,c
  6940  000314  50DF               	movf	indf2,w,c
  6941  000316  0100               	movlb	0	; () banked
  6942  000318  6F93               	movwf	??_i2c_int_handler& (0+255),b
  6943  00031A  0100               	movlb	0	; () banked
  6944  00031C  5193               	movf	??_i2c_int_handler& (0+255),w,b
  6945  00031E  0D01               	mullw	1
  6946  000320  0E0F               	movlw	15
  6947  000322  26F3               	addwf	prodl,f,c
  6948  000324  0E00               	movlw	0
  6949  000326  22F4               	addwfc	prodh,f,c
  6950  000328  50F3               	movf	prodl,w,c
  6951  00032A  0100               	movlb	0	; () banked
  6952  00032C  0100               	movlb	0	; () banked
  6953  00032E  25D0               	addwf	_ic_ptr& (0+255),w,b
  6954  000330  6ED9               	movwf	fsr2l,c
  6955  000332  50F4               	movf	prodh,w,c
  6956  000334  0100               	movlb	0	; () banked
  6957  000336  0100               	movlb	0	; () banked
  6958  000338  21D1               	addwfc	(_ic_ptr+1)& (0+255),w,b
  6959  00033A  6EDA               	movwf	fsr2h,c
  6960  00033C  50DF               	movf	indf2,w,c
  6961  00033E  6EC9               	movwf	4041,c	;volatile
  6962                           
  6963                           ; BSR set to: 0
  6964                           ;my_i2c.c: 186: ic_ptr->outbufind++;
  6965  000340  0100               	movlb	0	; () banked
  6966  000342  EE20 F01A          	lfsr	2,26
  6967  000346  0100               	movlb	0	; () banked
  6968  000348  51D0               	movf	_ic_ptr& (0+255),w,b
  6969  00034A  26D9               	addwf	fsr2l,f,c
  6970  00034C  0100               	movlb	0	; () banked
  6971  00034E  51D1               	movf	(_ic_ptr+1)& (0+255),w,b
  6972  000350  22DA               	addwfc	fsr2h,f,c
  6973  000352  2ADF               	incf	indf2,f,c
  6974                           
  6975                           ; BSR set to: 0
  6976                           ;my_i2c.c: 187: data_written = 1;
  6977  000354  0100               	movlb	0	; () banked
  6978  000356  6F93               	movwf	??_i2c_int_handler& (0+255),b
  6979  000358  0E01               	movlw	1
  6980  00035A  0100               	movlb	0	; () banked
  6981  00035C  0100               	movlb	0	; () banked
  6982  00035E  6F98               	movwf	i2c_int_handler@data_written& (0+255),b
  6983  000360  D0C1               	goto	L7
  6984  000362                     L6:
  6985  000362  6EDF               	movwf	indf2,c
  6986  000364  D0E3               	goto	i2l266
  6987  000366                     i2l286:
  6988                           
  6989                           ; BSR set to: 0
  6990                           ;my_i2c.c: 195: {
  6991                           ;my_i2c.c: 197: if (SSPSTATbits.P == 1) {
  6992  000366  A8C7               	btfss	4039,4,c	;volatile
  6993  000368  D062               	goto	i2l3026
  6994                           
  6995                           ; BSR set to: 0
  6996                           ;my_i2c.c: 199: ic_ptr->event_count++;
  6997  00036A  0100               	movlb	0	; () banked
  6998  00036C  EE20 F00B          	lfsr	2,11
  6999  000370  0100               	movlb	0	; () banked
  7000  000372  51D0               	movf	_ic_ptr& (0+255),w,b
  7001  000374  26D9               	addwf	fsr2l,f,c
  7002  000376  0100               	movlb	0	; () banked
  7003  000378  51D1               	movf	(_ic_ptr+1)& (0+255),w,b
  7004  00037A  22DA               	addwfc	fsr2h,f,c
  7005  00037C  2ADF               	incf	indf2,f,c
  7006                           
  7007                           ; BSR set to: 0
  7008                           ;my_i2c.c: 200: if (data_read) {
  7009  00037E  0100               	movlb	0	; () banked
  7010  000380  0100               	movlb	0	; () banked
  7011  000382  519D               	movf	i2c_int_handler@data_read& (0+255),w,b
  7012  000384  B4D8               	btfsc	status,2,c
  7013  000386  D04A               	goto	i2l3022
  7014                           
  7015                           ; BSR set to: 0
  7016                           ;my_i2c.c: 201: if (SSPSTATbits.D_A == 1) {
  7017  000388  AAC7               	btfss	4039,5,c	;volatile
  7018  00038A  D027               	goto	i2l3020
  7019                           
  7020                           ; BSR set to: 0
  7021                           ;my_i2c.c: 202: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  7022  00038C  0100               	movlb	0	; () banked
  7023  00038E  EE20 F00A          	lfsr	2,10
  7024  000392  0100               	movlb	0	; () banked
  7025  000394  51D0               	movf	_ic_ptr& (0+255),w,b
  7026  000396  26D9               	addwf	fsr2l,f,c
  7027  000398  0100               	movlb	0	; () banked
  7028  00039A  51D1               	movf	(_ic_ptr+1)& (0+255),w,b
  7029  00039C  22DA               	addwfc	fsr2h,f,c
  7030  00039E  50DF               	movf	indf2,w,c
  7031  0003A0  0100               	movlb	0	; () banked
  7032  0003A2  6F93               	movwf	??_i2c_int_handler& (0+255),b
  7033  0003A4  0100               	movlb	0	; () banked
  7034  0003A6  5193               	movf	??_i2c_int_handler& (0+255),w,b
  7035  0003A8  0D01               	mullw	1
  7036  0003AA  50F3               	movf	prodl,w,c
  7037  0003AC  0100               	movlb	0	; () banked
  7038  0003AE  0100               	movlb	0	; () banked
  7039  0003B0  25D0               	addwf	_ic_ptr& (0+255),w,b
  7040  0003B2  6ED9               	movwf	fsr2l,c
  7041  0003B4  50F4               	movf	prodh,w,c
  7042  0003B6  0100               	movlb	0	; () banked
  7043  0003B8  0100               	movlb	0	; () banked
  7044  0003BA  21D1               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7045  0003BC  6EDA               	movwf	fsr2h,c
  7046  0003BE  0100               	movlb	0	; () banked
  7047  0003C0  C09B  FFDF         	movff	i2c_int_handler@i2c_data,indf2
  7048                           
  7049                           ; BSR set to: 0
  7050                           ;my_i2c.c: 203: ic_ptr->buflen++;
  7051  0003C4  0100               	movlb	0	; () banked
  7052  0003C6  EE20 F00A          	lfsr	2,10
  7053  0003CA  0100               	movlb	0	; () banked
  7054  0003CC  51D0               	movf	_ic_ptr& (0+255),w,b
  7055  0003CE  26D9               	addwf	fsr2l,f,c
  7056  0003D0  0100               	movlb	0	; () banked
  7057  0003D2  51D1               	movf	(_ic_ptr+1)& (0+255),w,b
  7058  0003D4  22DA               	addwfc	fsr2h,f,c
  7059  0003D6  2ADF               	incf	indf2,f,c
  7060  0003D8  D021               	goto	i2l3022
  7061  0003DA                     i2l3020:
  7062                           
  7063                           ; BSR set to: 0
  7064                           ;my_i2c.c: 206: ic_ptr->error_count++;
  7065  0003DA  0100               	movlb	0	; () banked
  7066  0003DC  EE20 F00E          	lfsr	2,14
  7067  0003E0  0100               	movlb	0	; () banked
  7068  0003E2  51D0               	movf	_ic_ptr& (0+255),w,b
  7069  0003E4  26D9               	addwf	fsr2l,f,c
  7070  0003E6  0100               	movlb	0	; () banked
  7071  0003E8  51D1               	movf	(_ic_ptr+1)& (0+255),w,b
  7072  0003EA  22DA               	addwfc	fsr2h,f,c
  7073  0003EC  2ADF               	incf	indf2,f,c
  7074                           
  7075                           ;my_i2c.c: 207: ic_ptr->error_code = 0x6;
  7076  0003EE  0100               	movlb	0	; () banked
  7077  0003F0  EE20 F00D          	lfsr	2,13
  7078  0003F4  0100               	movlb	0	; () banked
  7079  0003F6  51D0               	movf	_ic_ptr& (0+255),w,b
  7080  0003F8  26D9               	addwf	fsr2l,f,c
  7081  0003FA  0100               	movlb	0	; () banked
  7082  0003FC  51D1               	movf	(_ic_ptr+1)& (0+255),w,b
  7083  0003FE  22DA               	addwfc	fsr2h,f,c
  7084  000400  0E06               	movlw	6
  7085  000402  6EDF               	movwf	indf2,c
  7086                           
  7087                           ;my_i2c.c: 208: ic_ptr->status = 0x5;
  7088  000404  0100               	movlb	0	; () banked
  7089  000406  EE20 F00C          	lfsr	2,12
  7090  00040A  0100               	movlb	0	; () banked
  7091  00040C  51D0               	movf	_ic_ptr& (0+255),w,b
  7092  00040E  26D9               	addwf	fsr2l,f,c
  7093  000410  0100               	movlb	0	; () banked
  7094  000412  51D1               	movf	(_ic_ptr+1)& (0+255),w,b
  7095  000414  22DA               	addwfc	fsr2h,f,c
  7096  000416  0E05               	movlw	5
  7097  000418  6EDF               	movwf	indf2,c
  7098  00041A  D067               	goto	L9
  7099  00041C                     i2l3022:
  7100                           
  7101                           ; BSR set to: 0
  7102                           ;my_i2c.c: 211: msg_ready = 1;
  7103  00041C  0100               	movlb	0	; () banked
  7104  00041E  6F93               	movwf	??_i2c_int_handler& (0+255),b
  7105  000420  0E01               	movlw	1
  7106  000422  0100               	movlb	0	; () banked
  7107  000424  0100               	movlb	0	; () banked
  7108  000426  6F9C               	movwf	i2c_int_handler@msg_ready& (0+255),b
  7109  000428  0100               	movlb	0	; () banked
  7110  00042A  5193               	movf	??_i2c_int_handler& (0+255),w,b
  7111                           
  7112                           ; BSR set to: 0
  7113  00042C  D05E               	goto	L9
  7114  00042E                     i2l3026:
  7115                           
  7116                           ; BSR set to: 0
  7117  00042E  0100               	movlb	0	; () banked
  7118  000430  0100               	movlb	0	; () banked
  7119  000432  519D               	movf	i2c_int_handler@data_read& (0+255),w,b
  7120  000434  B4D8               	btfsc	status,2,c
  7121  000436  D07A               	goto	i2l266
  7122                           
  7123                           ; BSR set to: 0
  7124                           ;my_i2c.c: 215: ic_ptr->event_count++;
  7125  000438  0100               	movlb	0	; () banked
  7126  00043A  EE20 F00B          	lfsr	2,11
  7127  00043E  0100               	movlb	0	; () banked
  7128  000440  51D0               	movf	_ic_ptr& (0+255),w,b
  7129  000442  26D9               	addwf	fsr2l,f,c
  7130  000444  0100               	movlb	0	; () banked
  7131  000446  51D1               	movf	(_ic_ptr+1)& (0+255),w,b
  7132  000448  22DA               	addwfc	fsr2h,f,c
  7133  00044A  2ADF               	incf	indf2,f,c
  7134                           
  7135                           ; BSR set to: 0
  7136                           ;my_i2c.c: 216: if (SSPSTATbits.D_A == 1) {
  7137  00044C  AAC7               	btfss	4039,5,c	;volatile
  7138  00044E  D027               	goto	i2l294
  7139                           
  7140                           ; BSR set to: 0
  7141                           ;my_i2c.c: 217: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  7142  000450  0100               	movlb	0	; () banked
  7143  000452  EE20 F00A          	lfsr	2,10
  7144  000456  0100               	movlb	0	; () banked
  7145  000458  51D0               	movf	_ic_ptr& (0+255),w,b
  7146  00045A  26D9               	addwf	fsr2l,f,c
  7147  00045C  0100               	movlb	0	; () banked
  7148  00045E  51D1               	movf	(_ic_ptr+1)& (0+255),w,b
  7149  000460  22DA               	addwfc	fsr2h,f,c
  7150  000462  50DF               	movf	indf2,w,c
  7151  000464  0100               	movlb	0	; () banked
  7152  000466  6F93               	movwf	??_i2c_int_handler& (0+255),b
  7153  000468  0100               	movlb	0	; () banked
  7154  00046A  5193               	movf	??_i2c_int_handler& (0+255),w,b
  7155  00046C  0D01               	mullw	1
  7156  00046E  50F3               	movf	prodl,w,c
  7157  000470  0100               	movlb	0	; () banked
  7158  000472  0100               	movlb	0	; () banked
  7159  000474  25D0               	addwf	_ic_ptr& (0+255),w,b
  7160  000476  6ED9               	movwf	fsr2l,c
  7161  000478  50F4               	movf	prodh,w,c
  7162  00047A  0100               	movlb	0	; () banked
  7163  00047C  0100               	movlb	0	; () banked
  7164  00047E  21D1               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7165  000480  6EDA               	movwf	fsr2h,c
  7166  000482  0100               	movlb	0	; () banked
  7167  000484  C09B  FFDF         	movff	i2c_int_handler@i2c_data,indf2
  7168                           
  7169                           ; BSR set to: 0
  7170                           ;my_i2c.c: 218: ic_ptr->buflen++;
  7171  000488  0100               	movlb	0	; () banked
  7172  00048A  EE20 F00A          	lfsr	2,10
  7173  00048E  0100               	movlb	0	; () banked
  7174  000490  51D0               	movf	_ic_ptr& (0+255),w,b
  7175  000492  26D9               	addwf	fsr2l,f,c
  7176  000494  0100               	movlb	0	; () banked
  7177  000496  51D1               	movf	(_ic_ptr+1)& (0+255),w,b
  7178  000498  22DA               	addwfc	fsr2h,f,c
  7179  00049A  2ADF               	incf	indf2,f,c
  7180                           
  7181                           ;my_i2c.c: 219: } else {
  7182  00049C  D047               	goto	i2l266
  7183  00049E                     i2l294:
  7184                           
  7185                           ; BSR set to: 0
  7186                           ;my_i2c.c: 220: if (SSPSTATbits.R_W == 1) {
  7187  00049E  A4C7               	btfss	4039,2,c	;volatile
  7188  0004A0  D6B6               	goto	i2l2978
  7189                           
  7190                           ; BSR set to: 0
  7191                           ;my_i2c.c: 221: ic_ptr->status = 0x8;
  7192  0004A2  0100               	movlb	0	; () banked
  7193  0004A4  EE20 F00C          	lfsr	2,12
  7194  0004A8  0100               	movlb	0	; () banked
  7195  0004AA  51D0               	movf	_ic_ptr& (0+255),w,b
  7196  0004AC  26D9               	addwf	fsr2l,f,c
  7197  0004AE  0100               	movlb	0	; () banked
  7198  0004B0  51D1               	movf	(_ic_ptr+1)& (0+255),w,b
  7199  0004B2  22DA               	addwfc	fsr2h,f,c
  7200  0004B4  0E08               	movlw	8
  7201  0004B6  6EDF               	movwf	indf2,c
  7202                           
  7203                           ; BSR set to: 0
  7204                           ;my_i2c.c: 222: msg_ready = 1;
  7205  0004B8  0100               	movlb	0	; () banked
  7206  0004BA  6F93               	movwf	??_i2c_int_handler& (0+255),b
  7207  0004BC  0E01               	movlw	1
  7208  0004BE  0100               	movlb	0	; () banked
  7209  0004C0  0100               	movlb	0	; () banked
  7210  0004C2  6F9C               	movwf	i2c_int_handler@msg_ready& (0+255),b
  7211  0004C4  0100               	movlb	0	; () banked
  7212  0004C6  5193               	movf	??_i2c_int_handler& (0+255),w,b
  7213  0004C8                     L10:
  7214                           
  7215                           ; BSR set to: 0
  7216                           ;my_i2c.c: 223: msg_to_send = 1;
  7217  0004C8  0100               	movlb	0	; () banked
  7218  0004CA  6F93               	movwf	??_i2c_int_handler& (0+255),b
  7219  0004CC  0E01               	movlw	1
  7220  0004CE  0100               	movlb	0	; () banked
  7221  0004D0  0100               	movlb	0	; () banked
  7222  0004D2  6F9A               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  7223  0004D4  0100               	movlb	0	; () banked
  7224  0004D6  5193               	movf	??_i2c_int_handler& (0+255),w,b
  7225                           
  7226                           ; BSR set to: 0
  7227                           ;my_i2c.c: 225: data_read = 0;
  7228  0004D8  0100               	movlb	0	; () banked
  7229  0004DA  6F93               	movwf	??_i2c_int_handler& (0+255),b
  7230  0004DC  0E00               	movlw	0
  7231  0004DE  0100               	movlb	0	; () banked
  7232  0004E0  0100               	movlb	0	; () banked
  7233  0004E2  6F9D               	movwf	i2c_int_handler@data_read& (0+255),b
  7234  0004E4                     L7:
  7235  0004E4  0100               	movlb	0	; () banked
  7236  0004E6  5193               	movf	??_i2c_int_handler& (0+255),w,b
  7237                           
  7238                           ;my_i2c.c: 226: } else {
  7239  0004E8  D021               	goto	i2l266
  7240  0004EA                     L9:
  7241                           
  7242                           ;my_i2c.c: 229: ic_ptr->status = 0x5;
  7243  0004EA  0100               	movlb	0	; () banked
  7244  0004EC  EE20 F00C          	lfsr	2,12
  7245  0004F0  0100               	movlb	0	; () banked
  7246  0004F2  51D0               	movf	_ic_ptr& (0+255),w,b
  7247  0004F4  26D9               	addwf	fsr2l,f,c
  7248  0004F6  0100               	movlb	0	; () banked
  7249  0004F8  51D1               	movf	(_ic_ptr+1)& (0+255),w,b
  7250  0004FA  22DA               	addwfc	fsr2h,f,c
  7251  0004FC  0E05               	movlw	5
  7252  0004FE  D731               	goto	L6
  7253  000500                     i2l3048:
  7254                           
  7255                           ; BSR set to: 0
  7256  000500  0100               	movlb	0	; () banked
  7257  000502  EE20 F00C          	lfsr	2,12
  7258  000506  0100               	movlb	0	; () banked
  7259  000508  51D0               	movf	_ic_ptr& (0+255),w,b
  7260  00050A  26D9               	addwf	fsr2l,f,c
  7261  00050C  0100               	movlb	0	; () banked
  7262  00050E  51D1               	movf	(_ic_ptr+1)& (0+255),w,b
  7263  000510  22DA               	addwfc	fsr2h,f,c
  7264  000512  50DF               	movf	indf2,w,c
  7265                           
  7266                           ; Switch size 1, requested type "space"
  7267                           ; Number of cases is 4, Range of values is 5 to 8
  7268                           ; switch strategies available:
  7269                           ; Name         Instructions Cycles
  7270                           ; simple_byte           13     7 (average)
  7271                           ;	Chosen strategy is simple_byte
  7272  000514  0A05               	xorlw	5	; case 5
  7273  000516  B4D8               	btfsc	status,2,c
  7274  000518  D63D               	goto	i2l268
  7275  00051A  0A03               	xorlw	3	; case 6
  7276  00051C  B4D8               	btfsc	status,2,c
  7277  00051E  D65B               	goto	i2l272
  7278  000520  0A01               	xorlw	1	; case 7
  7279  000522  B4D8               	btfsc	status,2,c
  7280  000524  D720               	goto	i2l286
  7281  000526  0A0F               	xorlw	15	; case 8
  7282  000528  B4D8               	btfsc	status,2,c
  7283  00052A  D6D1               	goto	i2l2998
  7284  00052C                     i2l266:
  7285                           
  7286                           ; BSR set to: 0
  7287                           ;my_i2c.c: 236: }
  7288                           ;my_i2c.c: 239: if (data_read || data_written) {
  7289  00052C  0100               	movlb	0	; () banked
  7290  00052E  0100               	movlb	0	; () banked
  7291  000530  679D               	tstfsz	i2c_int_handler@data_read& (0+255),b
  7292  000532  D005               	goto	i2l300
  7293                           
  7294                           ; BSR set to: 0
  7295  000534  0100               	movlb	0	; () banked
  7296  000536  0100               	movlb	0	; () banked
  7297  000538  5198               	movf	i2c_int_handler@data_written& (0+255),w,b
  7298  00053A  B4D8               	btfsc	status,2,c
  7299  00053C  D002               	goto	i2l3054
  7300  00053E                     i2l300:
  7301                           
  7302                           ; BSR set to: 0
  7303                           ;my_i2c.c: 241: if (SSPCON1bits.CKP == 0) {
  7304  00053E  A8C6               	btfss	4038,4,c	;volatile
  7305                           
  7306                           ; BSR set to: 0
  7307                           ;my_i2c.c: 242: SSPCON1bits.CKP = 1;
  7308  000540  88C6               	bsf	4038,4,c	;volatile
  7309  000542                     i2l3054:
  7310                           
  7311                           ; BSR set to: 0
  7312                           ;my_i2c.c: 243: }
  7313                           ;my_i2c.c: 244: }
  7314                           ;my_i2c.c: 247: if ((ic_ptr->buflen > 10 - 2) && (!msg_ready)) {
  7315  000542  0100               	movlb	0	; () banked
  7316  000544  EE20 F00A          	lfsr	2,10
  7317  000548  0100               	movlb	0	; () banked
  7318  00054A  51D0               	movf	_ic_ptr& (0+255),w,b
  7319  00054C  26D9               	addwf	fsr2l,f,c
  7320  00054E  0100               	movlb	0	; () banked
  7321  000550  51D1               	movf	(_ic_ptr+1)& (0+255),w,b
  7322  000552  22DA               	addwfc	fsr2h,f,c
  7323  000554  0E08               	movlw	8
  7324  000556  64DF               	cpfsgt	indf2,c
  7325  000558  D024               	goto	i2l3060
  7326                           
  7327                           ; BSR set to: 0
  7328  00055A  0100               	movlb	0	; () banked
  7329  00055C  0100               	movlb	0	; () banked
  7330  00055E  679C               	tstfsz	i2c_int_handler@msg_ready& (0+255),b
  7331  000560  D020               	goto	i2l3060
  7332                           
  7333                           ; BSR set to: 0
  7334                           ;my_i2c.c: 248: ic_ptr->status = 0x5;
  7335  000562  0100               	movlb	0	; () banked
  7336  000564  EE20 F00C          	lfsr	2,12
  7337  000568  0100               	movlb	0	; () banked
  7338  00056A  51D0               	movf	_ic_ptr& (0+255),w,b
  7339  00056C  26D9               	addwf	fsr2l,f,c
  7340  00056E  0100               	movlb	0	; () banked
  7341  000570  51D1               	movf	(_ic_ptr+1)& (0+255),w,b
  7342  000572  22DA               	addwfc	fsr2h,f,c
  7343  000574  0E05               	movlw	5
  7344  000576  6EDF               	movwf	indf2,c
  7345                           
  7346                           ;my_i2c.c: 249: ic_ptr->error_count++;
  7347  000578  0100               	movlb	0	; () banked
  7348  00057A  EE20 F00E          	lfsr	2,14
  7349  00057E  0100               	movlb	0	; () banked
  7350  000580  51D0               	movf	_ic_ptr& (0+255),w,b
  7351  000582  26D9               	addwf	fsr2l,f,c
  7352  000584  0100               	movlb	0	; () banked
  7353  000586  51D1               	movf	(_ic_ptr+1)& (0+255),w,b
  7354  000588  22DA               	addwfc	fsr2h,f,c
  7355  00058A  2ADF               	incf	indf2,f,c
  7356                           
  7357                           ;my_i2c.c: 250: ic_ptr->error_code = 0x7;
  7358  00058C  0100               	movlb	0	; () banked
  7359  00058E  EE20 F00D          	lfsr	2,13
  7360  000592  0100               	movlb	0	; () banked
  7361  000594  51D0               	movf	_ic_ptr& (0+255),w,b
  7362  000596  26D9               	addwf	fsr2l,f,c
  7363  000598  0100               	movlb	0	; () banked
  7364  00059A  51D1               	movf	(_ic_ptr+1)& (0+255),w,b
  7365  00059C  22DA               	addwfc	fsr2h,f,c
  7366  00059E  0E07               	movlw	7
  7367  0005A0  6EDF               	movwf	indf2,c
  7368  0005A2                     i2l3060:
  7369                           
  7370                           ; BSR set to: 0
  7371                           ;my_i2c.c: 251: }
  7372                           ;my_i2c.c: 253: if (msg_ready) {
  7373  0005A2  0100               	movlb	0	; () banked
  7374  0005A4  0100               	movlb	0	; () banked
  7375  0005A6  519C               	movf	i2c_int_handler@msg_ready& (0+255),w,b
  7376  0005A8  B4D8               	btfsc	status,2,c
  7377  0005AA  D047               	goto	i2l3068
  7378                           
  7379                           ; BSR set to: 0
  7380                           ;my_i2c.c: 254: ic_ptr->buffer[ic_ptr->buflen] = ic_ptr->event_count;
  7381  0005AC  0100               	movlb	0	; () banked
  7382  0005AE  EE20 F00B          	lfsr	2,11
  7383  0005B2  0100               	movlb	0	; () banked
  7384  0005B4  51D0               	movf	_ic_ptr& (0+255),w,b
  7385  0005B6  26D9               	addwf	fsr2l,f,c
  7386  0005B8  0100               	movlb	0	; () banked
  7387  0005BA  51D1               	movf	(_ic_ptr+1)& (0+255),w,b
  7388  0005BC  22DA               	addwfc	fsr2h,f,c
  7389  0005BE  0100               	movlb	0	; () banked
  7390  0005C0  EE10 F00A          	lfsr	1,10
  7391  0005C4  0100               	movlb	0	; () banked
  7392  0005C6  51D0               	movf	_ic_ptr& (0+255),w,b
  7393  0005C8  26E1               	addwf	fsr1l,f,c
  7394  0005CA  0100               	movlb	0	; () banked
  7395  0005CC  51D1               	movf	(_ic_ptr+1)& (0+255),w,b
  7396  0005CE  22E2               	addwfc	fsr1h,f,c
  7397  0005D0  50E7               	movf	indf1,w,c
  7398  0005D2  0100               	movlb	0	; () banked
  7399  0005D4  6F93               	movwf	??_i2c_int_handler& (0+255),b
  7400  0005D6  0100               	movlb	0	; () banked
  7401  0005D8  5193               	movf	??_i2c_int_handler& (0+255),w,b
  7402  0005DA  0D01               	mullw	1
  7403  0005DC  50F3               	movf	prodl,w,c
  7404  0005DE  0100               	movlb	0	; () banked
  7405  0005E0  0100               	movlb	0	; () banked
  7406  0005E2  25D0               	addwf	_ic_ptr& (0+255),w,b
  7407  0005E4  6EE1               	movwf	fsr1l,c
  7408  0005E6  50F4               	movf	prodh,w,c
  7409  0005E8  0100               	movlb	0	; () banked
  7410  0005EA  0100               	movlb	0	; () banked
  7411  0005EC  21D1               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7412  0005EE  6EE2               	movwf	fsr1h,c
  7413  0005F0  CFDF FFE7          	movff	indf2,indf1
  7414                           
  7415                           ; BSR set to: 0
  7416                           ;my_i2c.c: 255: ToMainHigh_sendmsg(ic_ptr->buflen + 1, 40, (void *) ic_ptr->buffer);
  7417  0005F4  0100               	movlb	0	; () banked
  7418  0005F6  EE20 F00A          	lfsr	2,10
  7419  0005FA  0100               	movlb	0	; () banked
  7420  0005FC  51D0               	movf	_ic_ptr& (0+255),w,b
  7421  0005FE  26D9               	addwf	fsr2l,f,c
  7422  000600  0100               	movlb	0	; () banked
  7423  000602  51D1               	movf	(_ic_ptr+1)& (0+255),w,b
  7424  000604  22DA               	addwfc	fsr2h,f,c
  7425  000606  50DF               	movf	indf2,w,c
  7426  000608  0100               	movlb	0	; () banked
  7427  00060A  6F93               	movwf	??_i2c_int_handler& (0+255),b
  7428  00060C  0100               	movlb	0	; () banked
  7429  00060E  2993               	incf	??_i2c_int_handler& (0+255),w,b
  7430  000610  0100               	movlb	0	; () banked
  7431  000612  0100               	movlb	0	; () banked
  7432  000614  6F8F               	movwf	?_ToMainHigh_sendmsg& (0+255),b
  7433  000616  0100               	movlb	0	; () banked
  7434  000618  6F94               	movwf	(??_i2c_int_handler+1)& (0+255),b
  7435  00061A  0E28               	movlw	40
  7436  00061C  0100               	movlb	0	; () banked
  7437  00061E  0100               	movlb	0	; () banked
  7438  000620  6F90               	movwf	(?_ToMainHigh_sendmsg+1)& (0+255),b
  7439  000622  0100               	movlb	0	; () banked
  7440  000624  5194               	movf	(??_i2c_int_handler+1)& (0+255),w,b
  7441  000626  C0D0  F091         	movff	_ic_ptr,?_ToMainHigh_sendmsg+2
  7442  00062A  C0D1  F092         	movff	_ic_ptr+1,?_ToMainHigh_sendmsg+3
  7443  00062E  EC95  F00C         	call	_ToMainHigh_sendmsg	;wreg free
  7444                           
  7445                           ;my_i2c.c: 257: ic_ptr->buflen = 0;
  7446  000632  0100               	movlb	0	; () banked
  7447  000634  EE20 F00A          	lfsr	2,10
  7448  000638  D051               	goto	L8
  7449  00063A                     i2l3068:
  7450                           
  7451                           ; BSR set to: 0
  7452  00063A  0100               	movlb	0	; () banked
  7453  00063C  EE20 F00E          	lfsr	2,14
  7454  000640  0100               	movlb	0	; () banked
  7455  000642  51D0               	movf	_ic_ptr& (0+255),w,b
  7456  000644  26D9               	addwf	fsr2l,f,c
  7457  000646  0100               	movlb	0	; () banked
  7458  000648  51D1               	movf	(_ic_ptr+1)& (0+255),w,b
  7459  00064A  22DA               	addwfc	fsr2h,f,c
  7460  00064C  50DF               	movf	indf2,w,c
  7461  00064E  B4D8               	btfsc	status,2,c
  7462  000650  D04D               	goto	i2l3076
  7463                           
  7464                           ; BSR set to: 0
  7465                           ;my_i2c.c: 259: error_buf[0] = ic_ptr->error_count;
  7466  000652  0100               	movlb	0	; () banked
  7467  000654  EE20 F00E          	lfsr	2,14
  7468  000658  0100               	movlb	0	; () banked
  7469  00065A  51D0               	movf	_ic_ptr& (0+255),w,b
  7470  00065C  26D9               	addwf	fsr2l,f,c
  7471  00065E  0100               	movlb	0	; () banked
  7472  000660  51D1               	movf	(_ic_ptr+1)& (0+255),w,b
  7473  000662  22DA               	addwfc	fsr2h,f,c
  7474  000664  50DF               	movf	indf2,w,c
  7475  000666  0100               	movlb	0	; () banked
  7476  000668  0100               	movlb	0	; () banked
  7477  00066A  6F95               	movwf	i2c_int_handler@error_buf& (0+255),b
  7478                           
  7479                           ;my_i2c.c: 260: error_buf[1] = ic_ptr->error_code;
  7480  00066C  0100               	movlb	0	; () banked
  7481  00066E  EE20 F00D          	lfsr	2,13
  7482  000672  0100               	movlb	0	; () banked
  7483  000674  51D0               	movf	_ic_ptr& (0+255),w,b
  7484  000676  26D9               	addwf	fsr2l,f,c
  7485  000678  0100               	movlb	0	; () banked
  7486  00067A  51D1               	movf	(_ic_ptr+1)& (0+255),w,b
  7487  00067C  22DA               	addwfc	fsr2h,f,c
  7488  00067E  50DF               	movf	indf2,w,c
  7489  000680  0100               	movlb	0	; () banked
  7490  000682  0100               	movlb	0	; () banked
  7491  000684  6F96               	movwf	(i2c_int_handler@error_buf+1)& (0+255),b
  7492                           
  7493                           ;my_i2c.c: 261: error_buf[2] = ic_ptr->event_count;
  7494  000686  0100               	movlb	0	; () banked
  7495  000688  EE20 F00B          	lfsr	2,11
  7496  00068C  0100               	movlb	0	; () banked
  7497  00068E  51D0               	movf	_ic_ptr& (0+255),w,b
  7498  000690  26D9               	addwf	fsr2l,f,c
  7499  000692  0100               	movlb	0	; () banked
  7500  000694  51D1               	movf	(_ic_ptr+1)& (0+255),w,b
  7501  000696  22DA               	addwfc	fsr2h,f,c
  7502  000698  50DF               	movf	indf2,w,c
  7503  00069A  0100               	movlb	0	; () banked
  7504  00069C  0100               	movlb	0	; () banked
  7505  00069E  6F97               	movwf	(i2c_int_handler@error_buf+2)& (0+255),b
  7506                           
  7507                           ; BSR set to: 0
  7508                           ;my_i2c.c: 262: ToMainHigh_sendmsg(sizeof (unsigned char) *3, 41, (void *) error_buf);
  7509  0006A0  0100               	movlb	0	; () banked
  7510  0006A2  6F93               	movwf	??_i2c_int_handler& (0+255),b
  7511  0006A4  0E03               	movlw	3
  7512  0006A6  0100               	movlb	0	; () banked
  7513  0006A8  0100               	movlb	0	; () banked
  7514  0006AA  6F8F               	movwf	?_ToMainHigh_sendmsg& (0+255),b
  7515  0006AC  0100               	movlb	0	; () banked
  7516  0006AE  5193               	movf	??_i2c_int_handler& (0+255),w,b
  7517  0006B0  0100               	movlb	0	; () banked
  7518  0006B2  6F94               	movwf	(??_i2c_int_handler+1)& (0+255),b
  7519  0006B4  0E29               	movlw	41
  7520  0006B6  0100               	movlb	0	; () banked
  7521  0006B8  0100               	movlb	0	; () banked
  7522  0006BA  6F90               	movwf	(?_ToMainHigh_sendmsg+1)& (0+255),b
  7523  0006BC  0100               	movlb	0	; () banked
  7524  0006BE  5194               	movf	(??_i2c_int_handler+1)& (0+255),w,b
  7525  0006C0  0100               	movlb	0	; () banked
  7526  0006C2  0E00               	movlw	high i2c_int_handler@error_buf
  7527  0006C4  0100               	movlb	0	; () banked
  7528  0006C6  0100               	movlb	0	; () banked
  7529  0006C8  6F92               	movwf	(?_ToMainHigh_sendmsg+3)& (0+255),b
  7530  0006CA  0100               	movlb	0	; () banked
  7531  0006CC  0E95               	movlw	low i2c_int_handler@error_buf
  7532  0006CE  0100               	movlb	0	; () banked
  7533  0006D0  6F91               	movwf	(?_ToMainHigh_sendmsg+2)& (0+255),b
  7534  0006D2  EC95  F00C         	call	_ToMainHigh_sendmsg	;wreg free
  7535                           
  7536                           ;my_i2c.c: 264: ic_ptr->error_count = 0;
  7537  0006D6  0100               	movlb	0	; () banked
  7538  0006D8  EE20 F00E          	lfsr	2,14
  7539  0006DC                     L8:
  7540  0006DC  0100               	movlb	0	; () banked
  7541  0006DE  51D0               	movf	_ic_ptr& (0+255),w,b
  7542  0006E0  26D9               	addwf	fsr2l,f,c
  7543  0006E2  0100               	movlb	0	; () banked
  7544  0006E4  51D1               	movf	(_ic_ptr+1)& (0+255),w,b
  7545  0006E6  22DA               	addwfc	fsr2h,f,c
  7546  0006E8  0E00               	movlw	0
  7547  0006EA  6EDF               	movwf	indf2,c
  7548  0006EC                     i2l3076:
  7549                           
  7550                           ; BSR set to: 0
  7551                           ;my_i2c.c: 265: }
  7552                           ;my_i2c.c: 266: if (msg_to_send) {
  7553  0006EC  0100               	movlb	0	; () banked
  7554  0006EE  0100               	movlb	0	; () banked
  7555  0006F0  519A               	movf	i2c_int_handler@msg_to_send& (0+255),w,b
  7556  0006F2  B4D8               	btfsc	status,2,c
  7557  0006F4  0012               	return	
  7558                           
  7559                           ; BSR set to: 0
  7560                           ;my_i2c.c: 268: ToMainHigh_sendmsg(0, 42, (void *) ic_ptr->buffer);
  7561  0006F6  0100               	movlb	0	; () banked
  7562  0006F8  6F93               	movwf	??_i2c_int_handler& (0+255),b
  7563  0006FA  0E00               	movlw	0
  7564  0006FC  0100               	movlb	0	; () banked
  7565  0006FE  0100               	movlb	0	; () banked
  7566  000700  6F8F               	movwf	?_ToMainHigh_sendmsg& (0+255),b
  7567  000702  0100               	movlb	0	; () banked
  7568  000704  5193               	movf	??_i2c_int_handler& (0+255),w,b
  7569  000706  0100               	movlb	0	; () banked
  7570  000708  6F94               	movwf	(??_i2c_int_handler+1)& (0+255),b
  7571  00070A  0E2A               	movlw	42
  7572  00070C  0100               	movlb	0	; () banked
  7573  00070E  0100               	movlb	0	; () banked
  7574  000710  6F90               	movwf	(?_ToMainHigh_sendmsg+1)& (0+255),b
  7575  000712  0100               	movlb	0	; () banked
  7576  000714  5194               	movf	(??_i2c_int_handler+1)& (0+255),w,b
  7577  000716  C0D0  F091         	movff	_ic_ptr,?_ToMainHigh_sendmsg+2
  7578  00071A  C0D1  F092         	movff	_ic_ptr+1,?_ToMainHigh_sendmsg+3
  7579  00071E  EC95  F00C         	call	_ToMainHigh_sendmsg	;wreg free
  7580  000722  0012               	return	
  7581  000724                     __end_of_i2c_int_handler:
  7582                           	opt stack 0
  7583                           pclatu	equ	0xFFB
  7584                           pclath	equ	0xFFA
  7585                           tblptru	equ	0xFF8
  7586                           tblptrh	equ	0xFF7
  7587                           tblptrl	equ	0xFF6
  7588                           tablat	equ	0xFF5
  7589                           prodh	equ	0xFF4
  7590                           prodl	equ	0xFF3
  7591                           intcon	equ	0xFF2
  7592                           postinc0	equ	0xFEE
  7593                           fsr0h	equ	0xFEA
  7594                           fsr0l	equ	0xFE9
  7595                           wreg	equ	0xFE8
  7596                           indf1	equ	0xFE7
  7597                           fsr1h	equ	0xFE2
  7598                           fsr1l	equ	0xFE1
  7599                           bsr	equ	0xFE0
  7600                           indf2	equ	0xFDF
  7601                           postinc2	equ	0xFDE
  7602                           postdec2	equ	0xFDD
  7603                           fsr2h	equ	0xFDA
  7604                           fsr2l	equ	0xFD9
  7605                           status	equ	0xFD8
  7606                           
  7607 ;; *************** function _handle_start *****************
  7608 ;; Defined at:
  7609 ;;		line 74 in file "../src/my_i2c.c"
  7610 ;; Parameters:    Size  Location     Type
  7611 ;;  data_read       1   47[COMRAM] unsigned char 
  7612 ;; Auto vars:     Size  Location     Type
  7613 ;;		None
  7614 ;; Return value:  Size  Location     Type
  7615 ;;		None               void
  7616 ;; Registers used:
  7617 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7618 ;; Tracked objects:
  7619 ;;		On entry : 0/0
  7620 ;;		On exit  : 0/0
  7621 ;;		Unchanged: 0/0
  7622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7623 ;;      Params:         1       0       0       0       0
  7624 ;;      Locals:         0       0       0       0       0
  7625 ;;      Temps:          0       0       0       0       0
  7626 ;;      Totals:         1       0       0       0       0
  7627 ;;Total ram usage:        1 bytes
  7628 ;; Hardware stack levels used:    1
  7629 ;; This function calls:
  7630 ;;		Nothing
  7631 ;; This function is called by:
  7632 ;;		_i2c_int_handler
  7633 ;; This function uses a non-reentrant model
  7634 ;;
  7635                           
  7636                           	psect	text48
  7637  001020                     __ptext48:
  7638                           	opt stack 0
  7639  001020                     _handle_start:
  7640                           	opt stack 18
  7641                           
  7642                           ;my_i2c.c: 75: ic_ptr->event_count = 1;
  7643                           
  7644                           ;incstack = 0
  7645                           ;incstack = 0
  7646  001020  0100               	movlb	0	; () banked
  7647  001022  EE20 F00B          	lfsr	2,11
  7648  001026  0100               	movlb	0	; () banked
  7649  001028  51D0               	movf	_ic_ptr& (0+255),w,b
  7650  00102A  26D9               	addwf	fsr2l,f,c
  7651  00102C  0100               	movlb	0	; () banked
  7652  00102E  51D1               	movf	(_ic_ptr+1)& (0+255),w,b
  7653  001030  22DA               	addwfc	fsr2h,f,c
  7654  001032  0E01               	movlw	1
  7655  001034  6EDF               	movwf	indf2,c
  7656                           
  7657                           ;my_i2c.c: 76: ic_ptr->buflen = 0;
  7658  001036  0100               	movlb	0	; () banked
  7659  001038  EE20 F00A          	lfsr	2,10
  7660  00103C  0100               	movlb	0	; () banked
  7661  00103E  51D0               	movf	_ic_ptr& (0+255),w,b
  7662  001040  26D9               	addwf	fsr2l,f,c
  7663  001042  0100               	movlb	0	; () banked
  7664  001044  51D1               	movf	(_ic_ptr+1)& (0+255),w,b
  7665  001046  22DA               	addwfc	fsr2h,f,c
  7666  001048  0E00               	movlw	0
  7667  00104A  6EDF               	movwf	indf2,c
  7668                           
  7669                           ; BSR set to: 0
  7670                           ;my_i2c.c: 78: if (data_read) {
  7671  00104C  5030               	movf	handle_start@data_read,w,c
  7672  00104E  B4D8               	btfsc	status,2,c
  7673  001050  D03D               	goto	i2l2640
  7674                           
  7675                           ; BSR set to: 0
  7676                           ;my_i2c.c: 79: if (SSPSTATbits.D_A == 1) {
  7677  001052  AAC7               	btfss	4039,5,c	;volatile
  7678  001054  D021               	goto	i2l256
  7679                           
  7680                           ; BSR set to: 0
  7681                           ;my_i2c.c: 82: ic_ptr->status = 0x5;
  7682  001056  0100               	movlb	0	; () banked
  7683  001058  EE20 F00C          	lfsr	2,12
  7684  00105C  0100               	movlb	0	; () banked
  7685  00105E  51D0               	movf	_ic_ptr& (0+255),w,b
  7686  001060  26D9               	addwf	fsr2l,f,c
  7687  001062  0100               	movlb	0	; () banked
  7688  001064  51D1               	movf	(_ic_ptr+1)& (0+255),w,b
  7689  001066  22DA               	addwfc	fsr2h,f,c
  7690  001068  0E05               	movlw	5
  7691  00106A  6EDF               	movwf	indf2,c
  7692                           
  7693                           ;my_i2c.c: 83: ic_ptr->error_count++;
  7694  00106C  0100               	movlb	0	; () banked
  7695  00106E  EE20 F00E          	lfsr	2,14
  7696  001072  0100               	movlb	0	; () banked
  7697  001074  51D0               	movf	_ic_ptr& (0+255),w,b
  7698  001076  26D9               	addwf	fsr2l,f,c
  7699  001078  0100               	movlb	0	; () banked
  7700  00107A  51D1               	movf	(_ic_ptr+1)& (0+255),w,b
  7701  00107C  22DA               	addwfc	fsr2h,f,c
  7702  00107E  2ADF               	incf	indf2,f,c
  7703                           
  7704                           ;my_i2c.c: 84: ic_ptr->error_code = 0x5;
  7705  001080  0100               	movlb	0	; () banked
  7706  001082  EE20 F00D          	lfsr	2,13
  7707  001086  0100               	movlb	0	; () banked
  7708  001088  51D0               	movf	_ic_ptr& (0+255),w,b
  7709  00108A  26D9               	addwf	fsr2l,f,c
  7710  00108C  0100               	movlb	0	; () banked
  7711  00108E  51D1               	movf	(_ic_ptr+1)& (0+255),w,b
  7712  001090  22DA               	addwfc	fsr2h,f,c
  7713  001092  0E05               	movlw	5
  7714  001094  6EDF               	movwf	indf2,c
  7715                           
  7716                           ;my_i2c.c: 85: } else {
  7717  001096  0012               	return	
  7718  001098                     i2l256:
  7719                           
  7720                           ; BSR set to: 0
  7721                           ;my_i2c.c: 86: if (SSPSTATbits.R_W == 1) {
  7722  001098  A4C7               	btfss	4039,2,c	;volatile
  7723  00109A  D00C               	goto	i2l2638
  7724                           
  7725                           ; BSR set to: 0
  7726                           ;my_i2c.c: 87: ic_ptr->status = 0x8;
  7727  00109C  0100               	movlb	0	; () banked
  7728  00109E  EE20 F00C          	lfsr	2,12
  7729  0010A2  0100               	movlb	0	; () banked
  7730  0010A4  51D0               	movf	_ic_ptr& (0+255),w,b
  7731  0010A6  26D9               	addwf	fsr2l,f,c
  7732  0010A8  0100               	movlb	0	; () banked
  7733  0010AA  51D1               	movf	(_ic_ptr+1)& (0+255),w,b
  7734  0010AC  22DA               	addwfc	fsr2h,f,c
  7735  0010AE  0E08               	movlw	8
  7736  0010B0  6EDF               	movwf	indf2,c
  7737                           
  7738                           ;my_i2c.c: 88: } else {
  7739  0010B2  0012               	return	
  7740  0010B4                     i2l2638:
  7741                           
  7742                           ; BSR set to: 0
  7743                           ;my_i2c.c: 89: ic_ptr->status = 0x7;
  7744  0010B4  0100               	movlb	0	; () banked
  7745  0010B6  EE20 F00C          	lfsr	2,12
  7746  0010BA  0100               	movlb	0	; () banked
  7747  0010BC  51D0               	movf	_ic_ptr& (0+255),w,b
  7748  0010BE  26D9               	addwf	fsr2l,f,c
  7749  0010C0  0100               	movlb	0	; () banked
  7750  0010C2  51D1               	movf	(_ic_ptr+1)& (0+255),w,b
  7751  0010C4  22DA               	addwfc	fsr2h,f,c
  7752  0010C6  0E07               	movlw	7
  7753  0010C8  6EDF               	movwf	indf2,c
  7754  0010CA  0012               	return	
  7755  0010CC                     i2l2640:
  7756                           
  7757                           ; BSR set to: 0
  7758                           ;my_i2c.c: 93: ic_ptr->status = 0x6;
  7759  0010CC  0100               	movlb	0	; () banked
  7760  0010CE  EE20 F00C          	lfsr	2,12
  7761  0010D2  0100               	movlb	0	; () banked
  7762  0010D4  51D0               	movf	_ic_ptr& (0+255),w,b
  7763  0010D6  26D9               	addwf	fsr2l,f,c
  7764  0010D8  0100               	movlb	0	; () banked
  7765  0010DA  51D1               	movf	(_ic_ptr+1)& (0+255),w,b
  7766  0010DC  22DA               	addwfc	fsr2h,f,c
  7767  0010DE  0E06               	movlw	6
  7768  0010E0  6EDF               	movwf	indf2,c
  7769  0010E2  0012               	return	
  7770  0010E4                     __end_of_handle_start:
  7771                           	opt stack 0
  7772                           pclatu	equ	0xFFB
  7773                           pclath	equ	0xFFA
  7774                           tblptru	equ	0xFF8
  7775                           tblptrh	equ	0xFF7
  7776                           tblptrl	equ	0xFF6
  7777                           tablat	equ	0xFF5
  7778                           prodh	equ	0xFF4
  7779                           prodl	equ	0xFF3
  7780                           intcon	equ	0xFF2
  7781                           postinc0	equ	0xFEE
  7782                           fsr0h	equ	0xFEA
  7783                           fsr0l	equ	0xFE9
  7784                           wreg	equ	0xFE8
  7785                           indf1	equ	0xFE7
  7786                           fsr1h	equ	0xFE2
  7787                           fsr1l	equ	0xFE1
  7788                           bsr	equ	0xFE0
  7789                           indf2	equ	0xFDF
  7790                           postinc2	equ	0xFDE
  7791                           postdec2	equ	0xFDD
  7792                           fsr2h	equ	0xFDA
  7793                           fsr2l	equ	0xFD9
  7794                           status	equ	0xFD8
  7795                           
  7796 ;; *************** function _ToMainHigh_sendmsg *****************
  7797 ;; Defined at:
  7798 ;;		line 126 in file "../src/messages.c"
  7799 ;; Parameters:    Size  Location     Type
  7800 ;;  length          1   15[BANK0 ] unsigned char 
  7801 ;;  msgtype         1   16[BANK0 ] unsigned char 
  7802 ;;  data            2   17[BANK0 ] PTR void 
  7803 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), 
  7804 ;; Auto vars:     Size  Location     Type
  7805 ;;		None
  7806 ;; Return value:  Size  Location     Type
  7807 ;;                  1    wreg      char 
  7808 ;; Registers used:
  7809 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7810 ;; Tracked objects:
  7811 ;;		On entry : 0/0
  7812 ;;		On exit  : 0/0
  7813 ;;		Unchanged: 0/0
  7814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7815 ;;      Params:         0       4       0       0       0
  7816 ;;      Locals:         0       0       0       0       0
  7817 ;;      Temps:          0       0       0       0       0
  7818 ;;      Totals:         0       4       0       0       0
  7819 ;;Total ram usage:        4 bytes
  7820 ;; Hardware stack levels used:    1
  7821 ;; Hardware stack levels required when called:    2
  7822 ;; This function calls:
  7823 ;;		i2_send_msg
  7824 ;; This function is called by:
  7825 ;;		_i2c_int_handler
  7826 ;;		_timer0_int_handler
  7827 ;; This function uses a non-reentrant model
  7828 ;;
  7829                           
  7830                           	psect	text49
  7831  00192A                     __ptext49:
  7832                           	opt stack 0
  7833  00192A                     _ToMainHigh_sendmsg:
  7834                           	opt stack 16
  7835                           
  7836                           ;messages.c: 132: return (send_msg(&ToMainHigh_MQ, length, msgtype, data));
  7837                           ;	Return value of _ToMainHigh_sendmsg is never used
  7838                           
  7839                           ; BSR set to: 0
  7840                           ;incstack = 0
  7841                           ;incstack = 0
  7842  00192A  0101               	movlb	1	; () banked
  7843  00192C  0E01               	movlw	high _ToMainHigh_MQ
  7844  00192E  0100               	movlb	0	; () banked
  7845  001930  0100               	movlb	0	; () banked
  7846  001932  6F85               	movwf	(?i2_send_msg+1)& (0+255),b
  7847  001934  0101               	movlb	1	; () banked
  7848  001936  0E6C               	movlw	low _ToMainHigh_MQ
  7849  001938  0100               	movlb	0	; () banked
  7850  00193A  6F84               	movwf	?i2_send_msg& (0+255),b
  7851  00193C  C08F  F086         	movff	ToMainHigh_sendmsg@length,?i2_send_msg+2
  7852  001940  C090  F087         	movff	ToMainHigh_sendmsg@msgtype,?i2_send_msg+3
  7853  001944  C091  F088         	movff	ToMainHigh_sendmsg@data,?i2_send_msg+4
  7854  001948  C092  F089         	movff	ToMainHigh_sendmsg@data+1,?i2_send_msg+5
  7855  00194C  EC2F  F007         	call	i2_send_msg	;wreg free
  7856  001950  0012               	return	
  7857  001952                     __end_of_ToMainHigh_sendmsg:
  7858                           	opt stack 0
  7859                           pclatu	equ	0xFFB
  7860                           pclath	equ	0xFFA
  7861                           tblptru	equ	0xFF8
  7862                           tblptrh	equ	0xFF7
  7863                           tblptrl	equ	0xFF6
  7864                           tablat	equ	0xFF5
  7865                           prodh	equ	0xFF4
  7866                           prodl	equ	0xFF3
  7867                           intcon	equ	0xFF2
  7868                           postinc0	equ	0xFEE
  7869                           fsr0h	equ	0xFEA
  7870                           fsr0l	equ	0xFE9
  7871                           wreg	equ	0xFE8
  7872                           indf1	equ	0xFE7
  7873                           fsr1h	equ	0xFE2
  7874                           fsr1l	equ	0xFE1
  7875                           bsr	equ	0xFE0
  7876                           indf2	equ	0xFDF
  7877                           postinc2	equ	0xFDE
  7878                           postdec2	equ	0xFDD
  7879                           fsr2h	equ	0xFDA
  7880                           fsr2l	equ	0xFD9
  7881                           status	equ	0xFD8
  7882                           
  7883 ;; *************** function i2_send_msg *****************
  7884 ;; Defined at:
  7885 ;;		line 24 in file "../src/messages.c"
  7886 ;; Parameters:    Size  Location     Type
  7887 ;;  send_msg        2    4[BANK0 ] PTR struct __msg_queue
  7888 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  7889 ;;  send_msg        1    6[BANK0 ] unsigned char 
  7890 ;;  send_msg        1    7[BANK0 ] unsigned char 
  7891 ;;  send_msg        2    8[BANK0 ] PTR void 
  7892 ;;		 -> timer0_int_handler@val(2), message(1), NULL(0), i2c_int_handler@error_buf(3), 
  7893 ;; Auto vars:     Size  Location     Type
  7894 ;;  send_msg        2   13[BANK0 ] PTR struct __msg
  7895 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  7896 ;;  send_msg        2   10[BANK0 ] unsigned int 
  7897 ;;  send_msg        1   12[BANK0 ] unsigned char 
  7898 ;; Return value:  Size  Location     Type
  7899 ;;                  1    wreg      char 
  7900 ;; Registers used:
  7901 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7902 ;; Tracked objects:
  7903 ;;		On entry : 0/0
  7904 ;;		On exit  : 0/0
  7905 ;;		Unchanged: 0/0
  7906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7907 ;;      Params:         0       6       0       0       0
  7908 ;;      Locals:         0       5       0       0       0
  7909 ;;      Temps:          1       0       0       0       0
  7910 ;;      Totals:         1      11       0       0       0
  7911 ;;Total ram usage:       12 bytes
  7912 ;; Hardware stack levels used:    1
  7913 ;; Hardware stack levels required when called:    1
  7914 ;; This function calls:
  7915 ;;		i2_memcpy
  7916 ;; This function is called by:
  7917 ;;		_ToMainHigh_sendmsg
  7918 ;; This function uses a non-reentrant model
  7919 ;;
  7920                           
  7921                           	psect	text50
  7922  000E5E                     __ptext50:
  7923                           	opt stack 0
  7924  000E5E                     i2_send_msg:
  7925                           	opt stack 16
  7926                           
  7927                           ;messages.c: 25: unsigned char slot;
  7928                           ;messages.c: 27: msg *qmsg;
  7929                           ;messages.c: 28: size_t tlength = length;
  7930                           
  7931                           ;incstack = 0
  7932                           ;incstack = 0
  7933  000E5E  0100               	movlb	0	; () banked
  7934  000E60  0100               	movlb	0	; () banked
  7935  000E62  C086  F08A         	movff	i2send_msg@length,i2send_msg@tlength
  7936  000E66  0100               	movlb	0	; () banked
  7937  000E68  0100               	movlb	0	; () banked
  7938  000E6A  6B8B               	clrf	(i2send_msg@tlength+1)& (0+255),b
  7939                           
  7940                           ; BSR set to: 0
  7941                           ;messages.c: 38: slot = qptr->cur_write_ind;
  7942  000E6C  0100               	movlb	0	; () banked
  7943  000E6E  EE20 F034          	lfsr	2,52
  7944  000E72  0100               	movlb	0	; () banked
  7945  000E74  5184               	movf	i2send_msg@qptr& (0+255),w,b
  7946  000E76  26D9               	addwf	fsr2l,f,c
  7947  000E78  0100               	movlb	0	; () banked
  7948  000E7A  5185               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  7949  000E7C  22DA               	addwfc	fsr2h,f,c
  7950  000E7E  50DF               	movf	indf2,w,c
  7951  000E80  0100               	movlb	0	; () banked
  7952  000E82  0100               	movlb	0	; () banked
  7953  000E84  6F8C               	movwf	i2send_msg@slot& (0+255),b
  7954                           
  7955                           ; BSR set to: 0
  7956                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  7957  000E86  0100               	movlb	0	; () banked
  7958  000E88  0100               	movlb	0	; () banked
  7959  000E8A  518C               	movf	i2send_msg@slot& (0+255),w,b
  7960  000E8C  0D0D               	mullw	13
  7961  000E8E  50F3               	movf	prodl,w,c
  7962  000E90  0100               	movlb	0	; () banked
  7963  000E92  0100               	movlb	0	; () banked
  7964  000E94  2584               	addwf	i2send_msg@qptr& (0+255),w,b
  7965  000E96  0100               	movlb	0	; () banked
  7966  000E98  0100               	movlb	0	; () banked
  7967  000E9A  6F8D               	movwf	i2send_msg@qmsg& (0+255),b
  7968  000E9C  50F4               	movf	prodh,w,c
  7969  000E9E  0100               	movlb	0	; () banked
  7970  000EA0  0100               	movlb	0	; () banked
  7971  000EA2  2185               	addwfc	(i2send_msg@qptr+1)& (0+255),w,b
  7972  000EA4  0100               	movlb	0	; () banked
  7973  000EA6  6F8E               	movwf	(i2send_msg@qmsg+1)& (0+255),b
  7974                           
  7975                           ; BSR set to: 0
  7976                           ;messages.c: 41: if (qmsg->full != 0) {
  7977  000EA8  C08D  FFD9         	movff	i2send_msg@qmsg,fsr2l
  7978  000EAC  C08E  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  7979  000EB0  50DF               	movf	indf2,w,c
  7980  000EB2  B4D8               	btfsc	status,2,c
  7981  000EB4  D002               	goto	i2l3406
  7982                           
  7983                           ; BSR set to: 0
  7984                           ;messages.c: 42: return (-1);
  7985  000EB6  0EFF               	movlw	255
  7986  000EB8  0012               	return	
  7987  000EBA                     i2l3406:
  7988                           
  7989                           ; BSR set to: 0
  7990                           ;messages.c: 43: }
  7991                           ;messages.c: 46: qmsg->length = length;
  7992  000EBA  0100               	movlb	0	; () banked
  7993  000EBC  EE20 F001          	lfsr	2,1
  7994  000EC0  0100               	movlb	0	; () banked
  7995  000EC2  518D               	movf	i2send_msg@qmsg& (0+255),w,b
  7996  000EC4  26D9               	addwf	fsr2l,f,c
  7997  000EC6  0100               	movlb	0	; () banked
  7998  000EC8  518E               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  7999  000ECA  22DA               	addwfc	fsr2h,f,c
  8000  000ECC  0100               	movlb	0	; () banked
  8001  000ECE  C086  FFDF         	movff	i2send_msg@length,indf2
  8002                           
  8003                           ;messages.c: 47: qmsg->msgtype = msgtype;
  8004  000ED2  0100               	movlb	0	; () banked
  8005  000ED4  EE20 F002          	lfsr	2,2
  8006  000ED8  0100               	movlb	0	; () banked
  8007  000EDA  518D               	movf	i2send_msg@qmsg& (0+255),w,b
  8008  000EDC  26D9               	addwf	fsr2l,f,c
  8009  000EDE  0100               	movlb	0	; () banked
  8010  000EE0  518E               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  8011  000EE2  22DA               	addwfc	fsr2h,f,c
  8012  000EE4  0100               	movlb	0	; () banked
  8013  000EE6  C087  FFDF         	movff	i2send_msg@msgtype,indf2
  8014                           
  8015                           ; BSR set to: 0
  8016                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  8017  000EEA  0E03               	movlw	3
  8018  000EEC  0100               	movlb	0	; () banked
  8019  000EEE  0100               	movlb	0	; () banked
  8020  000EF0  258D               	addwf	i2send_msg@qmsg& (0+255),w,b
  8021  000EF2  6E30               	movwf	?i2_memcpy,c
  8022  000EF4  0E00               	movlw	0
  8023  000EF6  0100               	movlb	0	; () banked
  8024  000EF8  0100               	movlb	0	; () banked
  8025  000EFA  218E               	addwfc	(i2send_msg@qmsg+1)& (0+255),w,b
  8026  000EFC  6E31               	movwf	?i2_memcpy+1,c
  8027  000EFE  C088  F032         	movff	i2send_msg@data,?i2_memcpy+2
  8028  000F02  C089  F033         	movff	i2send_msg@data+1,?i2_memcpy+3
  8029  000F06  C08A  F034         	movff	i2send_msg@tlength,?i2_memcpy+4
  8030  000F0A  C08B  F035         	movff	i2send_msg@tlength+1,?i2_memcpy+5
  8031  000F0E  ECCC  F00A         	call	i2_memcpy	;wreg free
  8032                           
  8033                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  8034  000F12  0100               	movlb	0	; () banked
  8035  000F14  EE20 F034          	lfsr	2,52
  8036  000F18  0100               	movlb	0	; () banked
  8037  000F1A  5184               	movf	i2send_msg@qptr& (0+255),w,b
  8038  000F1C  26D9               	addwf	fsr2l,f,c
  8039  000F1E  0100               	movlb	0	; () banked
  8040  000F20  5185               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  8041  000F22  22DA               	addwfc	fsr2h,f,c
  8042  000F24  0100               	movlb	0	; () banked
  8043  000F26  EE10 F034          	lfsr	1,52
  8044  000F2A  0100               	movlb	0	; () banked
  8045  000F2C  5184               	movf	i2send_msg@qptr& (0+255),w,b
  8046  000F2E  26E1               	addwf	fsr1l,f,c
  8047  000F30  0100               	movlb	0	; () banked
  8048  000F32  5185               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  8049  000F34  22E2               	addwfc	fsr1h,f,c
  8050  000F36  50E7               	movf	indf1,w,c
  8051  000F38  6E36               	movwf	??i2_send_msg& (0+255),c
  8052  000F3A  2836               	incf	??i2_send_msg,w,c
  8053  000F3C  0B03               	andlw	3
  8054  000F3E  6EDF               	movwf	indf2,c
  8055                           
  8056                           ; BSR set to: 0
  8057                           ;messages.c: 59: qmsg->full = 1;
  8058  000F40  C08D  FFD9         	movff	i2send_msg@qmsg,fsr2l
  8059  000F44  C08E  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  8060  000F48  0E01               	movlw	1
  8061  000F4A  6EDF               	movwf	indf2,c
  8062                           
  8063                           ; BSR set to: 0
  8064                           ;messages.c: 60: return (1);
  8065  000F4C  0E01               	movlw	1
  8066  000F4E  0012               	return	
  8067  000F50                     __end_ofi2_send_msg:
  8068                           	opt stack 0
  8069                           pclatu	equ	0xFFB
  8070                           pclath	equ	0xFFA
  8071                           tblptru	equ	0xFF8
  8072                           tblptrh	equ	0xFF7
  8073                           tblptrl	equ	0xFF6
  8074                           tablat	equ	0xFF5
  8075                           prodh	equ	0xFF4
  8076                           prodl	equ	0xFF3
  8077                           intcon	equ	0xFF2
  8078                           postinc0	equ	0xFEE
  8079                           fsr0h	equ	0xFEA
  8080                           fsr0l	equ	0xFE9
  8081                           wreg	equ	0xFE8
  8082                           indf1	equ	0xFE7
  8083                           fsr1h	equ	0xFE2
  8084                           fsr1l	equ	0xFE1
  8085                           bsr	equ	0xFE0
  8086                           indf2	equ	0xFDF
  8087                           postinc2	equ	0xFDE
  8088                           postdec2	equ	0xFDD
  8089                           fsr2h	equ	0xFDA
  8090                           fsr2l	equ	0xFD9
  8091                           status	equ	0xFD8
  8092                           
  8093 ;; *************** function i2_memcpy *****************
  8094 ;; Defined at:
  8095 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.20\sources\common\memcpy.c"
  8096 ;; Parameters:    Size  Location     Type
  8097 ;;  memcpy          2   47[COMRAM] PTR void 
  8098 ;;		 -> msgbuffer(11), timer0_int_handler@val(2), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  8099 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@msgbuffer(11), 
  8100 ;;  memcpy          2   49[COMRAM] PTR const void 
  8101 ;;		 -> timer0_int_handler@val(2), message(1), NULL(0), i2c_int_handler@error_buf(3), 
  8102 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  8103 ;;  memcpy          2   51[COMRAM] unsigned int 
  8104 ;; Auto vars:     Size  Location     Type
  8105 ;;  memcpy          2    2[BANK0 ] PTR const unsigned char 
  8106 ;;		 -> timer0_int_handler@val(2), message(1), NULL(0), i2c_int_handler@error_buf(3), 
  8107 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  8108 ;;  memcpy          2    0[BANK0 ] PTR unsigned char 
  8109 ;;		 -> msgbuffer(11), timer0_int_handler@val(2), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  8110 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@msgbuffer(11), 
  8111 ;; Return value:  Size  Location     Type
  8112 ;;                  2   47[COMRAM] PTR void 
  8113 ;; Registers used:
  8114 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  8115 ;; Tracked objects:
  8116 ;;		On entry : 0/0
  8117 ;;		On exit  : 0/0
  8118 ;;		Unchanged: 0/0
  8119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8120 ;;      Params:         6       0       0       0       0
  8121 ;;      Locals:         0       4       0       0       0
  8122 ;;      Temps:          0       0       0       0       0
  8123 ;;      Totals:         6       4       0       0       0
  8124 ;;Total ram usage:       10 bytes
  8125 ;; Hardware stack levels used:    1
  8126 ;; This function calls:
  8127 ;;		Nothing
  8128 ;; This function is called by:
  8129 ;;		i2_send_msg
  8130 ;;		i2_recv_msg
  8131 ;; This function uses a non-reentrant model
  8132 ;;
  8133                           
  8134                           	psect	text51
  8135  001598                     __ptext51:
  8136                           	opt stack 0
  8137  001598                     i2_memcpy:
  8138                           	opt stack 16
  8139                           
  8140                           ; BSR set to: 0
  8141                           ;incstack = 0
  8142                           ;incstack = 0
  8143  001598  C032  F082         	movff	i2memcpy@s1,i2memcpy@s
  8144  00159C  C033  F083         	movff	i2memcpy@s1+1,i2memcpy@s+1
  8145  0015A0  C030  F080         	movff	i2memcpy@d1,i2memcpy@d
  8146  0015A4  C031  F081         	movff	i2memcpy@d1+1,i2memcpy@d+1
  8147  0015A8  D012               	goto	i2l3472
  8148  0015AA                     i2l3466:
  8149  0015AA  C082  FFD9         	movff	i2memcpy@s,fsr2l
  8150  0015AE  C083  FFDA         	movff	i2memcpy@s+1,fsr2h
  8151  0015B2  C080  FFE1         	movff	i2memcpy@d,fsr1l
  8152  0015B6  C081  FFE2         	movff	i2memcpy@d+1,fsr1h
  8153  0015BA  CFDF FFE7          	movff	indf2,indf1
  8154  0015BE  0100               	movlb	0	; () banked
  8155  0015C0  0100               	movlb	0	; () banked
  8156  0015C2  4B82               	infsnz	i2memcpy@s& (0+255),f,b
  8157  0015C4  2B83               	incf	(i2memcpy@s+1)& (0+255),f,b
  8158                           
  8159                           ; BSR set to: 0
  8160  0015C6  0100               	movlb	0	; () banked
  8161  0015C8  0100               	movlb	0	; () banked
  8162  0015CA  4B80               	infsnz	i2memcpy@d& (0+255),f,b
  8163  0015CC  2B81               	incf	(i2memcpy@d+1)& (0+255),f,b
  8164  0015CE                     i2l3472:
  8165  0015CE  0634               	decf	i2memcpy@n,f,c
  8166  0015D0  A0D8               	btfss	status,0,c
  8167  0015D2  0635               	decf	i2memcpy@n+1,f,c
  8168  0015D4  2834               	incf	i2memcpy@n& (0+255),w,c
  8169  0015D6  B4D8               	btfsc	status,2,c
  8170  0015D8  2835               	incf	(i2memcpy@n+1)& (0+255),w,c
  8171  0015DA  B4D8               	btfsc	status,2,c
  8172                           
  8173                           ;	Return value of i2_memcpy is never used
  8174  0015DC  0012               	return	
  8175  0015DE  D7E5               	goto	i2l3466
  8176  0015E0                     __end_ofi2_memcpy:
  8177                           	opt stack 0
  8178  0000                     pclatu	equ	0xFFB
  8179                           pclath	equ	0xFFA
  8180                           tblptru	equ	0xFF8
  8181                           tblptrh	equ	0xFF7
  8182                           tblptrl	equ	0xFF6
  8183                           tablat	equ	0xFF5
  8184                           prodh	equ	0xFF4
  8185                           prodl	equ	0xFF3
  8186                           intcon	equ	0xFF2
  8187                           postinc0	equ	0xFEE
  8188                           fsr0h	equ	0xFEA
  8189                           fsr0l	equ	0xFE9
  8190                           wreg	equ	0xFE8
  8191                           indf1	equ	0xFE7
  8192                           fsr1h	equ	0xFE2
  8193                           fsr1l	equ	0xFE1
  8194                           bsr	equ	0xFE0
  8195                           indf2	equ	0xFDF
  8196                           postinc2	equ	0xFDE
  8197                           postdec2	equ	0xFDD
  8198                           fsr2h	equ	0xFDA
  8199                           fsr2l	equ	0xFD9
  8200                           status	equ	0xFD8
  8201                           pclatu	equ	0xFFB
  8202                           pclath	equ	0xFFA
  8203                           tblptru	equ	0xFF8
  8204                           tblptrh	equ	0xFF7
  8205                           tblptrl	equ	0xFF6
  8206                           tablat	equ	0xFF5
  8207                           prodh	equ	0xFF4
  8208                           prodl	equ	0xFF3
  8209                           intcon	equ	0xFF2
  8210                           postinc0	equ	0xFEE
  8211                           fsr0h	equ	0xFEA
  8212                           fsr0l	equ	0xFE9
  8213                           wreg	equ	0xFE8
  8214                           indf1	equ	0xFE7
  8215                           fsr1h	equ	0xFE2
  8216                           fsr1l	equ	0xFE1
  8217                           bsr	equ	0xFE0
  8218                           indf2	equ	0xFDF
  8219                           postinc2	equ	0xFDE
  8220                           postdec2	equ	0xFDD
  8221                           fsr2h	equ	0xFDA
  8222                           fsr2l	equ	0xFD9
  8223                           status	equ	0xFD8
  8224                           
  8225                           	psect	rparam
  8226  0000                     pclatu	equ	0xFFB
  8227                           pclath	equ	0xFFA
  8228                           tblptru	equ	0xFF8
  8229                           tblptrh	equ	0xFF7
  8230                           tblptrl	equ	0xFF6
  8231                           tablat	equ	0xFF5
  8232                           prodh	equ	0xFF4
  8233                           prodl	equ	0xFF3
  8234                           intcon	equ	0xFF2
  8235                           postinc0	equ	0xFEE
  8236                           fsr0h	equ	0xFEA
  8237                           fsr0l	equ	0xFE9
  8238                           wreg	equ	0xFE8
  8239                           indf1	equ	0xFE7
  8240                           fsr1h	equ	0xFE2
  8241                           fsr1l	equ	0xFE1
  8242                           bsr	equ	0xFE0
  8243                           indf2	equ	0xFDF
  8244                           postinc2	equ	0xFDE
  8245                           postdec2	equ	0xFDD
  8246                           fsr2h	equ	0xFDA
  8247                           fsr2l	equ	0xFD9
  8248                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         295
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     54      80
    BANK0           128     80      83
    BANK1           256     24     240
    BANK2           256      0      50
    BANK3           256      0       0

Pointer List with Targets:

    ?_ReadADC	int  size(2) Largest target is 0

    ?_memcpy	PTR void  size(2) Largest target is 54
		 -> msgbuffer(COMRAM[11]), timer0_int_handler@val(BANK0[2]), FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), 
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), main@msgbuffer(BANK1[11]), 

    uart_lthread@uptr	PTR struct __uart_thread_struct size(2) Largest target is 2
		 -> main@uthread_data(BANK1[2]), 

    timer1_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    timer0_lthread@tptr	PTR struct __timer0_thread_struct size(2) Largest target is 2
		 -> main@t0thread_data(BANK1[2]), 

    ?_in_high_int	int  size(2) Largest target is 0

    memcpy@d1	PTR void  size(2) Largest target is 54
		 -> msgbuffer(COMRAM[11]), timer0_int_handler@val(BANK0[2]), FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), 
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), main@msgbuffer(BANK1[11]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 54
		 -> msgbuffer(COMRAM[11]), timer0_int_handler@val(BANK0[2]), FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), 
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), main@msgbuffer(BANK1[11]), 

    memcpy@s1	PTR const void  size(2) Largest target is 54
		 -> timer0_int_handler@val(BANK0[2]), message(BANK0[1]), NULL(NULL[0]), i2c_int_handler@error_buf(BANK0[3]), 
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 54
		 -> timer0_int_handler@val(BANK0[2]), message(BANK0[1]), NULL(NULL[0]), i2c_int_handler@error_buf(BANK0[3]), 
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    uart_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    init_timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    timer0_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    timer0_lthread@msgval	PTR unsigned int  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    uc_ptr	PTR struct __uart_comm size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    start_i2c_slave_reply@msg	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ic_ptr	PTR struct __i2c_comm size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    check_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    FromMainHigh_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> msgbuffer(COMRAM[11]), timer0_int_handler@val(BANK0[2]), 

    FromMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 2
		 -> msgtype(COMRAM[1]), timer0_int_handler@msgtype(BANK0[2]), 

    FromMainHigh_sendmsg@data	PTR void  size(2) Largest target is 1
		 -> message(BANK0[1]), 

    ToMainHigh_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ToMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainHigh_sendmsg@data	PTR void  size(2) Largest target is 3
		 -> timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), i2c_int_handler@error_buf(BANK0[3]), 

    ToMainLow_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ToMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainLow_sendmsg@data	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    recv_msg@msgtype	PTR unsigned char  size(2) Largest target is 2
		 -> msgtype(COMRAM[1]), timer0_int_handler@msgtype(BANK0[2]), main@msgtype(BANK1[1]), 

    recv_msg@data	PTR void  size(2) Largest target is 11
		 -> msgbuffer(COMRAM[11]), timer0_int_handler@val(BANK0[2]), main@msgbuffer(BANK1[11]), 

    recv_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    recv_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    sp__memcpy	PTR void  size(2) Largest target is 54
		 -> msgbuffer(COMRAM[11]), timer0_int_handler@val(BANK0[2]), FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), 
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), main@msgbuffer(BANK1[11]), 

    send_msg@data	PTR void  size(2) Largest target is 3
		 -> timer0_int_handler@val(BANK0[2]), message(BANK0[1]), NULL(NULL[0]), i2c_int_handler@error_buf(BANK0[3]), 

    send_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    send_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    init_queue@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptHandlerHigh in COMRAM

    _SleepIfOkay->i2_in_low_int
    i2_in_low_int->i2_in_high_int
    _uart_rx_int_handler->_ReadUSART
    _adc_int_handler->_ReadADC
    i2_recv_msg->i2_memcpy
    _ToMainHigh_sendmsg->i2_send_msg
    i2_send_msg->i2_memcpy
    _InterruptHandlerLow->_uart_tx_int_handler
    _uart_tx_int_handler->_FromMainHigh_recvmsg
    _FromMainHigh_recvmsg->i1_recv_msg
    i1_recv_msg->i1_memcpy
    _timer1_int_handler->_ToMainLow_sendmsg
    _ToMainLow_sendmsg->i1_send_msg
    i1_send_msg->i1_memcpy

Critical Paths under _main in BANK0

    _main->_timer1_lthread
    _timer1_lthread->_FromMainHigh_sendmsg
    _FromMainHigh_sendmsg->_send_msg
    _send_msg->_memcpy
    _ToMainLow_recvmsg->_recv_msg
    _ToMainHigh_recvmsg->_recv_msg
    _recv_msg->_memcpy
    _block_on_To_msgqueues->_in_main
    _in_main->_in_low_int
    _in_low_int->_in_high_int
    _init_queues->_init_queue

Critical Paths under _InterruptHandlerHigh in BANK0

    _InterruptHandlerHigh->_timer0_int_handler
    _timer0_int_handler->i2_FromMainHigh_recvmsg
    i2_FromMainHigh_recvmsg->i2_recv_msg
    i2_recv_msg->i2_memcpy
    _i2c_int_handler->_ToMainHigh_sendmsg
    _ToMainHigh_sendmsg->i2_send_msg
    i2_send_msg->i2_memcpy

Critical Paths under _main in BANK1

    _main->_timer1_lthread

Critical Paths under _InterruptHandlerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptHandlerHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptHandlerHigh in BANK3

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                58    58      0    4167
                                             79 BANK0      1     1      0
                                              2 BANK1     22    22      0
                  _enable_interrupts
                _init_timer1_lthread
                        _init_queues
                          _OpenUSART
              _block_on_To_msgqueues
                 _ToMainHigh_recvmsg
                     _timer0_lthread
              _start_i2c_slave_reply
                  _ToMainLow_recvmsg
                     _timer1_lthread
                       _uart_lthread
 ---------------------------------------------------------------------------------
 (1) _uart_lthread                                         8     0      8     124
                                             45 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (1) _timer1_lthread                                      11     3      8     741
                                             71 BANK0      8     0      8
                                              0 BANK1      2     2      0
               _FromMainHigh_sendmsg
 ---------------------------------------------------------------------------------
 (2) _FromMainHigh_sendmsg                                 4     0      4     741
                                             67 BANK0      4     0      4
                           _send_msg
 ---------------------------------------------------------------------------------
 (3) _send_msg                                            12     6      6     648
                                             55 BANK0     12     6      6
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _ToMainLow_recvmsg                                    5     0      5     772
                                             69 BANK0      5     0      5
                           _recv_msg
 ---------------------------------------------------------------------------------
 (1) _start_i2c_slave_reply                                5     2      3      93
                                             45 BANK0      5     2      3
 ---------------------------------------------------------------------------------
 (1) _timer0_lthread                                      10     2      8      34
                                             45 BANK0     10     2      8
 ---------------------------------------------------------------------------------
 (1) _ToMainHigh_recvmsg                                   5     0      5     772
                                             69 BANK0      5     0      5
                           _recv_msg
 ---------------------------------------------------------------------------------
 (2) _recv_msg                                            14     7      7     679
                                             55 BANK0     14     7      7
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              10     4      6     174
                                             45 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (1) _block_on_To_msgqueues                                1     1      0      93
                                             51 BANK0      1     1      0
                            _in_main
                          _check_msg
                        _Delay1KTCYx
 ---------------------------------------------------------------------------------
 (2) _Delay1KTCYx                                          1     0      1      31
                                             45 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 (2) _check_msg                                            3     1      2      62
                                             45 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _in_main                                              2     0      2       0
                                             49 BANK0      2     0      2
                        _in_high_int
                         _in_low_int
 ---------------------------------------------------------------------------------
 (3) _in_low_int                                           2     0      2       0
                                             47 BANK0      2     0      2
                        _in_high_int
 ---------------------------------------------------------------------------------
 (4) _in_high_int                                          2     0      2       0
                                             45 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _OpenUSART                                            3     0      3     310
                                             45 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (1) _init_queues                                          1     1      0     192
                                             49 BANK0      1     1      0
                         _init_queue
 ---------------------------------------------------------------------------------
 (2) _init_queue                                           4     2      2     192
                                             45 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _init_timer1_lthread                                  2     0      2      31
                                             45 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _enable_interrupts                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _InterruptHandlerLow                                 17    17      0    3972
                                             30 COMRAM    17    17      0
                 _timer1_int_handler
                _uart_tx_int_handler
 ---------------------------------------------------------------------------------
 (6) _uart_tx_int_handler                                  1     1      0    2015
                                             29 COMRAM     1     1      0
               _FromMainHigh_recvmsg
                         _WriteUSART
 ---------------------------------------------------------------------------------
 (7) _WriteUSART                                           1     0      1      15
                                              0 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (7) _FromMainHigh_recvmsg                                 5     0      5    2000
                                             24 COMRAM     5     0      5
                         i1_recv_msg
 ---------------------------------------------------------------------------------
 (8) i1_recv_msg                                          14     7      7    1907
                                             10 COMRAM    14     7      7
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (6) _timer1_int_handler                                   2     2      0    1957
                                             26 COMRAM     2     2      0
                  _ToMainLow_sendmsg
                        _WriteTimer1
 ---------------------------------------------------------------------------------
 (7) _WriteTimer1                                          4     2      2      45
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _ToMainLow_sendmsg                                    4     0      4    1912
                                             22 COMRAM     4     0      4
                         i1_send_msg
 ---------------------------------------------------------------------------------
 (8) i1_send_msg                                          12     6      6    1819
                                             10 COMRAM    12     6      6
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (9) i1_memcpy                                            10     4      6     484
                                              0 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (10) _InterruptHandlerHigh                               14    14      0    7028
                                             31 BANK0     14    14      0
                    _i2c_int_handler
                 _timer0_int_handler
                    _adc_int_handler
                _uart_rx_int_handler
                        _SleepIfOkay
 ---------------------------------------------------------------------------------
 (11) _SleepIfOkay                                         0     0      0     146
                   _enter_sleep_mode
                      i2_in_high_int
                       i2_in_low_int
                        i2_check_msg
 ---------------------------------------------------------------------------------
 (12) i2_check_msg                                         3     1      2     146
                                             47 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (12) i2_in_low_int                                        2     0      2       0
                                             49 COMRAM     2     0      2
                      i2_in_high_int
 ---------------------------------------------------------------------------------
 (13) i2_in_high_int                                       2     0      2       0
                                             47 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (12) _enter_sleep_mode                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _uart_rx_int_handler                                 2     2      0      24
                                             48 COMRAM     2     2      0
                          _ReadUSART
 ---------------------------------------------------------------------------------
 (12) _ReadUSART                                           1     1      0      23
                                             47 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) _adc_int_handler                                     0     0      0       0
                            _ReadADC
                        _CloseTimer1
 ---------------------------------------------------------------------------------
 (12) _CloseTimer1                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _ReadADC                                             2     0      2       0
                                             47 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (11) _timer0_int_handler                                  8     8      0    4343
                                             23 BANK0      8     8      0
                 _ToMainHigh_sendmsg
                        _WriteTimer0
             i2_FromMainHigh_recvmsg
 ---------------------------------------------------------------------------------
 (12) i2_FromMainHigh_recvmsg                              5     0      5    2171
                                             18 BANK0      5     0      5
                         i2_recv_msg
 ---------------------------------------------------------------------------------
 (13) i2_recv_msg                                         14     7      7    1907
                                              4 BANK0     14     7      7
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (12) _WriteTimer0                                         4     2      2      68
                                             47 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (11) _i2c_int_handler                                    11    11      0    2515
                                             19 BANK0     11    11      0
                 _ToMainHigh_sendmsg
                       _handle_start
 ---------------------------------------------------------------------------------
 (12) _handle_start                                        1     0      1      22
                                             47 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (12) _ToMainHigh_sendmsg                                  4     0      4    1912
                                             15 BANK0      4     0      4
                         i2_send_msg
 ---------------------------------------------------------------------------------
 (13) i2_send_msg                                         12     6      6    1819
                                             53 COMRAM     1     1      0
                                              4 BANK0     11     5      6
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (14) i2_memcpy                                           10     4      6     484
                                             47 COMRAM     6     0      6
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _enable_interrupts
   _init_timer1_lthread
   _init_queues
     _init_queue
   _OpenUSART
   _block_on_To_msgqueues
     _in_main
       _in_high_int
       _in_low_int
         _in_high_int
     _check_msg
     _Delay1KTCYx
   _ToMainHigh_recvmsg
     _recv_msg
       _memcpy
   _timer0_lthread
   _start_i2c_slave_reply
   _ToMainLow_recvmsg
     _recv_msg
       _memcpy
   _timer1_lthread
     _FromMainHigh_sendmsg
       _send_msg
         _memcpy
   _uart_lthread

 _InterruptHandlerLow (ROOT)
   _timer1_int_handler
     _ToMainLow_sendmsg
       i1_send_msg
         i1_memcpy
     _WriteTimer1
   _uart_tx_int_handler
     _FromMainHigh_recvmsg
       i1_recv_msg
         i1_memcpy
     _WriteUSART

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3FF      0       0      13        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0      32       8       19.5%
BITBANK1           100      0       0      10        0.0%
BANK1              100     18      F0       6       93.8%
BITBANK0            80      0       0       4        0.0%
BANK0               80     50      53       5       64.8%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     36      50       1       63.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0      22       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1C5       9        0.0%
DATA                 0      0     1E7       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.20 build 52243 
Symbol Table                                                                                   Wed Oct 09 22:47:48 2013

               main@uthread_data 01E5         _MQ_Main_Willing_to_block 0041  
                    _SSPSTATbits 000FC7              _uart_rx_int_handler 1728  
      __end_of_ToMainLow_recvmsg 1858                               bsr 000FE0  
      __end_of_ToMainLow_sendmsg 19BE                     __CFG_CP0$OFF 000000  
              i2recv_msg@msgtype 0087                i2recv_msg@tlength 008E  
                            l100 0824                              l460 13B6  
                            l462 13CA                              l463 13CC  
                            l466 13EA                              l706 19DC  
                            l467 13EC                              l468 13FA  
                            l469 13FC             __size_of_WriteTimer0 0012  
           __size_of_WriteTimer1 0012                   _FromMainLow_MQ 0136  
                            wreg 000FE8                     __CFG_IESO$ON 000000  
                   ?_in_high_int 00AD              i2recv_msg@maxlength 0086  
                           l3140 08B0                             l3124 07D6  
                           l3116 078A                             l3134 0876  
                           l3142 08C8                             l3126 082A  
                           l3232 1210                             l3224 11E4  
                           l3216 11B8                             l3312 150E  
                           l3160 09E6                             l3136 088E  
                           l3154 094A                             l3146 08E4  
                           l3332 0A6A                             l3244 0C70  
                           l3156 0998                             l3148 0902  
                           l3318 1532                             l3280 1464  
                           l3248 0CF4                             l3348 0B28  
                           l2912 165A                             l3298 0DBE  
           ?_uart_rx_int_handler 0001                             l2890 15F4  
                           l2898 1616                             _LATB 000F8A  
                           u2480 122C                             u2486 122E  
                           u2727 19DE                             i1l53 006C  
                           i1l54 0082                             i1l55 0082  
                           i2l50 1360                             i2l46 132E  
                           i2l47 133E                             i2l48 134E  
                           i2l49 135C     __size_of_uart_tx_int_handler 0028  
                _FromMainHigh_MQ 0100                    __CFG_FCMEN$ON 000000  
         ?_block_on_To_msgqueues 0001                       i1_recv_msg 0F50  
                           _main 0724                             _test 003D  
                           fsr0h 000FEA                             fsr1h 000FE2  
                           fsr0l 000FE9                             fsr2h 000FDA  
                           indf1 000FE7                             fsr1l 000FE1  
                           indf2 000FDF                             fsr2l 000FD9  
                    main@msgtype 01EE                       i1_send_msg 1248  
                           pclat 000FFA                      i2_check_msg 1978  
                           prodh 000FF4                             prodl 000FF3  
          handle_start@data_read 0030                             start 00C8  
                     i2_recv_msg 0B2C                    __CFG_FOSC2$ON 000000  
               ?_adc_int_handler 0001                       i2_send_msg 0E5E  
            __end_of_CloseTimer1 1A7A        ToMainHigh_recvmsg@msgtype 00C6  
                __end_of_ReadADC 1A66                   send_msg@length 00B9  
    __size_of_timer0_int_handler 00B4                      _Delay1KTCYx 19DC  
                          ?_main 0001                       i1memcpy@d1 0001  
                          i2l300 053E                            i1l493 1A40  
                          i2l256 1098                            i2l272 01D6  
                          i2l266 052C                            i2l268 0194  
                          i2l294 049E                            i2l286 0366  
                          i2l480 19CC                       i1memcpy@s1 0003  
    FromMainHigh_recvmsg@msgtype 001A                            _RCREG 000FAE  
                          _RCSTA 000FAB                            _TMR0H 000FD7  
                          _TMR1H 000FCF                            _TMR0L 000FD6  
                          _TMR1L 000FCE                            _SPBRG 000FAF  
                          _TRISB 000F93                            _TXREG 000FAD  
                          _TXSTA 000FAC                       i2memcpy@d1 0030  
                     i2memcpy@s1 0032                     ?_init_queues 0001  
      __size_of_enter_sleep_mode 0006                  __end_of_in_main 166A  
          ??_uart_rx_int_handler 0031       ToMainLow_recvmsg@maxlength 00C5  
        timer0_lthread@msgbuffer 00B3  __size_ofi2_FromMainHigh_recvmsg 002C  
                          tablat 000FF5                     main@test_var 01EA  
                          status 000FD8                 __end_ofi1_memcpy 16EA  
               __end_ofi2_memcpy 15E0                   WriteUSART@data 0001  
                __initialization 1762                     __end_of_main 0A00  
    __size_of_timer1_int_handler 002A       __size_of_ToMainLow_recvmsg 002C  
     __size_of_ToMainLow_sendmsg 0022    __size_of_FromMainHigh_recvmsg 0026  
          __size_ofi2_in_low_int 002E    __size_of_FromMainHigh_sendmsg 0028  
                         ??_main 00CF                  send_msg@msgtype 00BA  
                  __activetblptr 000002                  send_msg@tlength 00BE  
           __end_of_handle_start 10E4                           _ADRESH 000FC4  
                         _ADRESL 000FC3                           i1l3510 0F94  
                         i1l3462 16D8                           i1l3526 101C  
                         i1l3550 0064                           i1l3456 16BC  
                         i1l3552 0066                           i2l1322 17F0  
                         i1l3554 006C                           i2l3020 03DA  
                         i1l3556 0074                           i1l3548 005C  
                         i2l3022 041C                           i1l3486 1280  
                         i1l3558 007C                           i2l3026 042E  
                         i2l2322 1550                           i2l3060 05A2  
                         i2l3054 0542                           i2l3048 0500  
                         i2l3076 06EC                           i2l3068 063A  
                         i2l3406 0EBA                           i2l3430 0B96  
                         i2l2702 1822                   __CFG_WDTEN$OFF 000000  
                         i2l2640 10CC                           i2l2638 10B4  
                         i2l3446 0C54                           i2l3472 15CE  
                         i2l2920 1328                           i2l3466 15AA  
                         i2l2930 1346                           i2l2922 132E  
                         i2l2932 1348                           i2l2924 1336  
                         i2l2916 131E                           i2l2694 180C  
                         i2l2934 134E                           i2l2926 1338  
                         i2l2918 1326                           i2l2960 018A  
                         i2l2936 1356                           i2l2928 133E  
                         i2l2954 0172                           i2l2938 135C  
                         i2l2980 023A                           i2l2990 0276  
                         i2l2978 020E                           i2l2996 028E  
                         i2l2998 02CE                    ??_SleepIfOkay 0034  
             __size_of_ReadUSART 001E                           _OSCCON 000FD3  
                    _CloseTimer1 1A74                           _SPBRGH 000FB0  
                    ?i1_recv_msg 000B                           _SSPADD 000FC8  
                         _SSPBUF 000FC9   __size_of_start_i2c_slave_reply 010A  
                    ?i1_send_msg 000B                        ??_ReadADC 0032  
  __end_of_start_i2c_slave_reply 0D62               timer0_lthread@tptr 00AD  
                    ?i2_recv_msg 0084                     i2_in_low_int 17FE  
                    ?i2_send_msg 0084                   __CFG_XINST$OFF 000000  
             __size_of_OpenUSART 0082                  _i2c_int_handler 00CC  
                         _ic_ptr 00D0                    main@msgbuffer 01DA  
         i2_FromMainHigh_recvmsg 1884                           _length 003B  
                         _memcpy 14FC                           clear_0 1768  
                         clear_1 1774                           clear_2 1788  
                         _uc_ptr 003F                 __end_of_recv_msg 0B2C  
    start_i2c_slave_reply@length 00AD                        ??_in_main 00B3  
               __end_of_send_msg 0E5E            timer0_int_handler@val 009D  
        i2c_int_handler@i2c_data 009B                           tblptrh 000FF7  
                         tblptrl 000FF6                           tblptru 000FF8  
                    init_queue@i 00B0         ToMainLow_recvmsg@msgtype 00C6  
           __size_of_in_high_int 0012                  __CFG_FOSC$HSPLL 000000  
                     __accesstop 0080          __end_of__initialization 178E  
     __end_of_ToMainHigh_recvmsg 1884       __end_of_ToMainHigh_sendmsg 1952  
    __end_of_init_timer1_lthread 1A12              __end_of_SleepIfOkay 1598  
                     _WriteUSART 1A36                   __pcstackCOMRAM 0001  
         __size_ofi2_in_high_int 000C               __size_of_check_msg 0036  
            _uart_tx_int_handler 1902                __end_of_ReadUSART 19DC  
      timer0_int_handler@msgtype 009B              __size_ofi1_recv_msg 00D0  
            __size_ofi1_send_msg 00AA                        ?i1_memcpy 0001  
  __size_of_InterruptHandlerHigh 1392      __end_of_InterruptHandlerLow 00C8  
                      ?i2_memcpy 0030                    _ToMainHigh_MQ 016C  
            __size_ofi2_recv_msg 012C                 _enter_sleep_mode 1A6E  
            __size_ofi2_send_msg 00F2             timer1_lthread@length 00CB  
                  ReadUSART@data 0030                __end_of_OpenUSART 141C  
                  check_msg@qptr 00AD          ??_block_on_To_msgqueues 00B3  
           __size_of_init_queues 0066                       __pbssBANK0 00D0  
                     __pbssBANK1 0100                       __pbssBANK2 0200  
           ?_uart_tx_int_handler 0001          __end_of_i2c_int_handler 0724  
                   ?i2_check_msg 0030               timer1_lthread@tptr 00C7  
              recv_msg@maxlength 00B9                  recv_msg@msgtype 00BA  
                recv_msg@tlength 00C1            __size_of_handle_start 00C4  
                   ?_Delay1KTCYx 00AD                 WriteTimer0@timer 0032  
                        ?_memcpy 00AD                 WriteTimer1@timer 0003  
                  ??_WriteTimer0 0032                    ??_WriteTimer1 0003  
        __size_of_timer0_lthread 000A          __size_of_timer1_lthread 0040  
                     ??i1_memcpy 0007                       ??i2_memcpy 0036  
               i1send_msg@length 000D                    i2_in_high_int 1A46  
                        _SSPCON1 000FC6                          _SSPCON2 000FC5  
                        _SSPSTAT 000FC7            ??_uart_tx_int_handler 001E  
              __end_of_check_msg 17CE                      _SleepIfOkay 154A  
                        _ReadADC 1A5C                        ?_recv_msg 00B7  
                     _in_low_int 15E0                     _handle_start 1020  
                        __Hparam 0000                        ?_send_msg 00B7  
                        __Lparam 0000       __end_of_timer0_int_handler 1198  
                    ?_WriteUSART 0001                  __CFG_STVREN$OFF 000000  
                        __pcinit 1762                  __size_of_memcpy 004E  
       __size_of_adc_int_handler 0030                       _init_queue 141C  
                        __ramtop 0400                          __ptext0 0724  
                        __ptext1 16EA                          __ptext2 166A  
                        __ptext3 18DA                          __ptext4 0D62  
                        __ptext5 182C                          __ptext6 0C58  
                        __ptext7 1A52                          __ptext8 1858  
                        __ptext9 0A00                          _in_main 1626  
                      _T1CONbits 000FCD      __end_of_uart_rx_int_handler 1762  
                        _message 00D2              __end_of_WriteTimer0 1A36  
            __end_of_WriteTimer1 1A24                   ?i2_in_high_int 0030  
                        _msgtype 0050                   __pintcode_body 12F2  
   __end_of_FromMainHigh_recvmsg 1978             end_of_initialization 178E  
        timer1_lthread@msgbuffer 00CD     __end_of_FromMainHigh_sendmsg 1902  
     FromMainHigh_sendmsg@length 00C3                          memcpy@d 00B3  
                   ?_CloseTimer1 0001                          memcpy@n 00B1  
                        memcpy@s 00B5                     ??i1_recv_msg 0012  
    i2c_int_handler@data_written 0098                    __Lmediumconst 0000  
                        int_func 12F2                     ??i1_send_msg 0011  
                  ?_uart_lthread 00AD                 ?_i2c_int_handler 0001  
                   ??i2_recv_msg 008B                       ??_recv_msg 00BE  
                   ??i2_send_msg 0036                       ??_send_msg 00BD  
        ?i2_FromMainHigh_recvmsg 0092       __end_of_timer1_int_handler 18DA  
                      _RCSTAbits 000FAB                          postdec2 000FDD  
                        postinc0 000FEE                          postinc2 000FDE  
      ToMainHigh_sendmsg@msgtype 0090                       _testbuffer 0200  
             __end_ofi1_recv_msg 1020       i2FromMainHigh_recvmsg@data 0095  
                 _last_reg_recvd 0043               __end_ofi1_send_msg 12F2  
    FromMainHigh_sendmsg@msgtype 00C4                        _TRISCbits 000F94  
             __end_ofi2_recv_msg 0C58               __end_ofi2_send_msg 0F50  
            __size_of_WriteUSART 0010    FromMainHigh_recvmsg@maxlength 0019  
i2FromMainHigh_recvmsg@maxlength 0092                   ??_uart_lthread 00B5  
                      _TXSTAbits 000FAC                       main@length 01EF  
 __end_ofi2_FromMainHigh_recvmsg 18B0                      ?_in_low_int 00AF  
          timer0_lthread@msgtype 00AF            _start_i2c_slave_reply 0C58  
           __size_ofi2_check_msg 0024         __end_of_enter_sleep_mode 1A74  
             _ToMainHigh_recvmsg 1858                        i1memcpy@d 0007  
             _ToMainHigh_sendmsg 192A                        i1memcpy@n 0005  
                      i1memcpy@s 0009                   _timer0_lthread 1A52  
                    ?_init_queue 00AD                        i2memcpy@d 0080  
                    _WriteTimer0 1A24                      _WriteTimer1 1A12  
                      i2memcpy@n 0034                        i2memcpy@s 0082  
                 _timer1_lthread 166A                   __end_of_memcpy 154A  
              _enable_interrupts 1A66             __size_of_Delay1KTCYx 0012  
            ?_ToMainHigh_recvmsg 00C5                  ??i2_in_high_int 0032  
       i2c_int_handler@data_read 009D              ?_ToMainHigh_sendmsg 008F  
             ?_enable_interrupts 0001              start_initialization 1762  
                  ??_in_high_int 00AF                        _ReadUSART 19BE  
              ??_adc_int_handler 0032                __size_ofi1_memcpy 0040  
              __size_ofi2_memcpy 0048              ??_enable_interrupts 00AD  
 __size_of_block_on_To_msgqueues 00B0    __end_of_block_on_To_msgqueues 1248  
                      _OpenUSART 139A     __end_of_InterruptHandlerHigh 139A  
           ??_ToMainHigh_recvmsg 00CA             ??_ToMainHigh_sendmsg 0037  
         __end_of_timer0_lthread 1A5C         i2c_int_handler@error_buf 0095  
         __end_of_timer1_lthread 16AA        __end_of_enable_interrupts 1A6E  
                       ??_memcpy 00B3            timer1_lthread@msgtype 00C9  
           _FromMainHigh_recvmsg 1952             uart_rx_int_handler@x 0031  
           _FromMainHigh_sendmsg 18DA     __size_of_init_timer1_lthread 0012  
       i2c_int_handler@msg_ready 009C                      __pbssCOMRAM 0037  
                     ?_ReadUSART 0001                    ??_init_queues 00B1  
                  __pcstackBANK0 0080                    __pcstackBANK1 01D8  
            __size_of_in_low_int 0046         start_i2c_slave_reply@msg 00AE  
            __CFG_CCP2MX$DEFAULT 000000                  Delay1KTCYx@unit 00AD  
       ToMainLow_sendmsg@msgtype 0018     __size_of_InterruptHandlerLow 00B0  
            __end_of_in_high_int 1A00                       ?_OpenUSART 00AD  
                   ?_SleepIfOkay 0001            ToMainLow_recvmsg@data 00C8  
                   _ToMainLow_MQ 01A2              __size_of_init_queue 007A  
                       ?_ReadADC 0030                        _check_msg 1798  
           __size_of_CloseTimer1 0006           ?_start_i2c_slave_reply 00AD  
                   recv_msg@data 00BC                     ??_WriteUSART 0002  
                   recv_msg@qmsg 00C3                     recv_msg@slot 00C0  
                   recv_msg@qptr 00B7                __size_of_recv_msg 012C  
                      __pintcode 0008                __size_of_send_msg 00FC  
                ?_timer0_lthread 00AD            ?_FromMainHigh_recvmsg 0019  
                ?_timer1_lthread 00C7            ?_FromMainHigh_sendmsg 00C3  
                    __pintcodelo 0018           ToMainHigh_recvmsg@data 00C8  
           __end_of_uart_lthread 1728       i2c_int_handler@msg_to_send 009A  
                       ?_in_main 00B1                WriteTimer0@timer0 0030  
             _timer0_int_handler 10E4                WriteTimer1@timer1 0001  
    __end_of_uart_tx_int_handler 192A              uart_lthread@msgtype 00AF  
                       _ADCValue 0037            ToMainLow_sendmsg@data 0019  
            i1recv_msg@maxlength 000D              ?_timer0_int_handler 0001  
             __end_of_WriteUSART 1A46                 uart_lthread@uptr 00AD  
            __end_of_init_queues 14FC                         _LATBbits 000F8A  
                i2check_msg@qptr 0030                       ?_check_msg 00AD  
                       _IPR1bits 000F9F                         _PIE1bits 000F9D  
                      _msgbuffer 0045                    ?i2_in_low_int 0032  
                       i1u270_20 0074                         i1u270_21 0072  
                       i1u271_20 007C                         i1u271_21 007A  
                       i2u200_40 1326                         i2u200_41 1324  
                       i2u201_40 1336                         i2u201_41 1334  
                       i2u202_40 1346                         i2u202_41 1344  
                       i2u203_40 1356                         i2u203_41 1354  
                       i1u269_20 0064                         i1u269_21 0062  
                       i2u230_40 10EC                         i2u230_46 10EE  
                       _PIR1bits 000F9E           ToMainHigh_sendmsg@data 0091  
                       _RCONbits 000FD0                 __CFG_WDTPS$32768 000000  
                 i1recv_msg@data 0010             ??_timer0_int_handler 0097  
                 i1recv_msg@qmsg 0017                   i1recv_msg@slot 0014  
                 i1recv_msg@qptr 000B       __size_of_enable_interrupts 0008  
              i1send_msg@msgtype 000E                i1send_msg@tlength 0012  
           timer0_lthread@length 00B1               _timer1_int_handler 18B0  
                       i1_memcpy 16AA             _InterruptHandlerHigh 0008  
                    ??_ReadUSART 0030                         i2_memcpy 1598  
           timer0_lthread@msgval 00B5         FromMainHigh_recvmsg@data 001C  
                    _in_high_int 19EE                     send_msg@data 00BB  
                   send_msg@qmsg 00C1                     send_msg@slot 00C0  
                   send_msg@qptr 00B7            uart_lthread@msgbuffer 00B3  
            ?_timer1_int_handler 0001     __size_of_uart_rx_int_handler 003A  
                    ??_OpenUSART 00B0                  OpenUSART@config 00AD  
                 ??i2_in_low_int 0034                     ??_in_low_int 00B1  
               __size_of_ReadADC 000A                         __Hrparam 0000  
                       __Lrparam 0000                ?_enter_sleep_mode 0001  
         ??_FromMainHigh_recvmsg 001E           ??_FromMainHigh_sendmsg 00C7  
           ??_timer1_int_handler 001B                  _adc_int_handler 17CE  
       __size_of_i2c_int_handler 0658               ??_enter_sleep_mode 0030  
                   ??_init_queue 00AF                     ?_WriteTimer0 0030  
                   ?_WriteTimer1 0001         FromMainHigh_sendmsg@data 00C5  
        ToMainLow_sendmsg@length 0017                main@t0thread_data 01E7  
          ?_InterruptHandlerHigh 0001                 __size_of_in_main 0044  
              i2send_msg@msgtype 0087      ToMainHigh_recvmsg@maxlength 00C5  
              i2send_msg@tlength 008A          init_timer1_lthread@tptr 00AD  
                    _init_queues 1496               __end_of_in_low_int 1626  
                       __ptext10 14FC                         __ptext11 1198  
                       __ptext20 1A00                         __ptext12 19DC  
                       __ptext21 1A66                         __ptext13 1798  
                       __ptext30 1248                         __ptext14 1626  
                       __ptext31 16AA                         __ptext23 1902  
                       __ptext15 15E0                         __ptext40 17CE  
                       __ptext24 1A36                         __ptext16 19EE  
                       __ptext41 1A74                         __ptext33 154A  
                       __ptext25 1952                         __ptext17 139A  
                       __ptext50 0E5E                         __ptext42 1A5C  
                       __ptext34 1978                         __ptext26 0F50  
                       __ptext18 1496                         __ptext51 1598  
                       __ptext43 10E4                         __ptext35 17FE  
                       __ptext27 18B0                         __ptext19 141C  
                       __ptext44 1884                         __ptext36 1A46  
                       __ptext28 1A12                         __ptext45 0B2C  
                       __ptext37 1A6E                         __ptext29 199C  
                       __ptext46 1A24                         __ptext38 1728  
                       __ptext47 00CC                         __ptext39 19BE  
                       __ptext48 1020                         __ptext49 192A  
                 i1send_msg@data 000F                   i1send_msg@qmsg 0015  
                 i1send_msg@slot 0014                   i1send_msg@qptr 000B  
             uart_lthread@length 00B1         timer0_int_handler@length 0099  
                       _counter2 0039              _init_timer1_lthread 1A00  
                  __size_of_main 02DC                    ??i2_check_msg 0032  
                       _message4 0044                main@t1thread_data 01EC  
                    ??_check_msg 00AF               __end_of_init_queue 1496  
           __size_of_SleepIfOkay 004E                         _recv_msg 0A00  
                       _send_msg 0D62                   init_queue@qptr 00AD  
          __size_of_uart_lthread 003E                   i2recv_msg@data 0089  
                 i2recv_msg@qmsg 0090                    ??_Delay1KTCYx 00AE  
                 i2recv_msg@slot 008D                   i2recv_msg@qptr 0084  
            _InterruptHandlerLow 0018             ?_init_timer1_lthread 00AD  
                    _OSCTUNEbits 000F9B                       _INTCONbits 000FF2  
                 OpenUSART@spbrg 00AE                         memcpy@d1 00AD  
                       memcpy@s1 00AF            __end_ofi2_in_high_int 1A52  
   i2c_int_handler@overrun_error 0099                 i2send_msg@length 0086  
                       intlevel1 0000                         intlevel2 0000  
           ?_InterruptHandlerLow 0001          ??_start_i2c_slave_reply 00B0  
                   _uart_lthread 16EA            _block_on_To_msgqueues 1198  
                  ?_handle_start 0030                 ??_timer0_lthread 00B5  
    __size_of_ToMainHigh_recvmsg 002C          __end_of_adc_int_handler 17FE  
    __size_of_ToMainHigh_sendmsg 0028                       _OSCCONbits 000FD3  
               ??_timer1_lthread 01D8                i1recv_msg@msgtype 000E  
              i1recv_msg@tlength 0015         ToMainHigh_sendmsg@length 008F  
            __end_ofi2_check_msg 199C    i2FromMainHigh_recvmsg@msgtype 0093  
          ??_init_timer1_lthread 00AF           ??_InterruptHandlerHigh 009F  
              _ToMainLow_recvmsg 182C                _ToMainLow_sendmsg 199C  
             main@last_reg_recvd 01E9             __end_ofi2_in_low_int 182C  
             ?_ToMainLow_recvmsg 00C5              __end_of_Delay1KTCYx 19EE  
              ??_i2c_int_handler 0093               ?_ToMainLow_sendmsg 0017  
                    _SSPCON1bits 000FC6                      _SSPCON2bits 000FC5  
                 i2send_msg@data 0088            ??_InterruptHandlerLow 001F  
       ??i2_FromMainHigh_recvmsg 0036              ??_ToMainLow_recvmsg 00CA  
                 i2send_msg@qmsg 008D                   i2send_msg@slot 008C  
                 i2send_msg@qptr 0084              ??_ToMainLow_sendmsg 001B  
                  ??_CloseTimer1 0030                   ??_handle_start 0031  
                   _USART_Status 0042  
